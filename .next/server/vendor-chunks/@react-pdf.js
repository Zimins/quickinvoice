"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-pdf";
exports.ids = ["vendor-chunks/@react-pdf"];
exports.modules = {

/***/ "(ssr)/./node_modules/@react-pdf/fns/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@react-pdf/fns/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adjust: () => (/* binding */ adjust),\n/* harmony export */   asyncCompose: () => (/* binding */ asyncCompose),\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   castArray: () => (/* binding */ castArray),\n/* harmony export */   compose: () => (/* binding */ compose),\n/* harmony export */   dropLast: () => (/* binding */ dropLast),\n/* harmony export */   evolve: () => (/* binding */ evolve),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   isNil: () => (/* binding */ isNil),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   mapValues: () => (/* binding */ mapValues),\n/* harmony export */   matchPercent: () => (/* binding */ matchPercent),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   parseFloat: () => (/* binding */ parseFloat$1),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   repeat: () => (/* binding */ repeat),\n/* harmony export */   reverse: () => (/* binding */ reverse),\n/* harmony export */   upperFirst: () => (/* binding */ upperFirst),\n/* harmony export */   without: () => (/* binding */ without)\n/* harmony export */ });\n/**\n * Applies a function to the value at the given index of an array\n *\n * @param index\n * @param fn\n * @param collection\n * @returns Copy of the array with the element at the given index replaced with the result of the function application.\n */\nconst adjust = (index, fn, collection) => {\n    if (index >= 0 && index >= collection.length)\n        return collection;\n    if (index < 0 && Math.abs(index) > collection.length)\n        return collection;\n    const i = index < 0 ? collection.length + index : index;\n    return Object.assign([], collection, { [i]: fn(collection[i]) });\n};\n\n/* eslint-disable no-await-in-loop */\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param fns - Functions\n * @returns Composed function\n */\nconst asyncCompose = (...fns) => async (value, ...args) => {\n    let result = value;\n    const reversedFns = fns.slice().reverse();\n    for (let i = 0; i < reversedFns.length; i += 1) {\n        const fn = reversedFns[i];\n        result = await fn(result, ...args);\n    }\n    return result;\n};\n\n/**\n * Capitalize first letter of each word\n *\n * @param value - Any string\n * @returns Capitalized string\n */\nconst capitalize = (value) => {\n    if (!value)\n        return value;\n    return value.replace(/(^|\\s)\\S/g, (l) => l.toUpperCase());\n};\n\n/**\n * Casts value to array\n *\n * @template T - The type of the value.\n * @param value - The value to cast into an array.\n * @returns An array containing the given value.\n */\nconst castArray = (value) => {\n    return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Performs right-to-left function composition\n *\n * @param fns - Functions\n * @returns Composed function\n */\nconst compose = (...fns) => (value, ...args) => {\n    let result = value;\n    const reversedFns = fns.slice().reverse();\n    for (let i = 0; i < reversedFns.length; i += 1) {\n        const fn = reversedFns[i];\n        result = fn(result, ...args);\n    }\n    return result;\n};\n\n/**\n * Drops the last element from an array.\n *\n * @template T\n * @param  array - The array to drop the last element from\n * @returns - The new array with the last element dropped\n */\nconst dropLast = (array) => array.slice(0, array.length - 1);\n\n/**\n * Applies a set of transformations to an object and returns a new object with the transformed values.\n *\n * @template T\n * @param transformations - The transformations to apply.\n * @param object - The object to transform.\n * @returns The transformed object.\n */\nfunction evolve(transformations, object) {\n    const result = {};\n    const keys = Object.keys(object);\n    for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        const transformation = transformations[key];\n        if (typeof transformation === 'function') {\n            result[key] = transformation(object[key]);\n        }\n        else {\n            result[key] = object[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Checks if a value is null or undefined.\n *\n * @template T - The type of the value.\n * @param value - The value to check\n * @returns True if the value is null or undefined, false otherwise\n */\nconst isNil = (value) => value === null || value === undefined;\n\n/**\n * Retrieves the value at a given path from an object.\n *\n * @param target - The object to retrieve the value from.\n * @param path - The path of the value to retrieve.\n * @param defaultValue - The default value to return if the path does not exist.\n * @returns The value at the given path, or the default value if the path does not exist.\n */\nconst get = (target, path, defaultValue) => {\n    if (isNil(target))\n        return defaultValue;\n    const _path = castArray(path);\n    let result = target;\n    for (let i = 0; i < _path.length; i += 1) {\n        if (isNil(result))\n            return undefined;\n        result = result[_path[i]];\n    }\n    return isNil(result) ? defaultValue : result;\n};\n\nfunction last(value) {\n    return value === '' ? '' : value[value.length - 1];\n}\n\n/**\n * Maps over the values of an object and applies a function to each value.\n *\n * @param object - The object to map over\n * @param fn - The function to apply to each value\n * @returns A new object with the mapped values\n */\nconst mapValues = (object, fn) => {\n    const entries = Object.entries(object);\n    const acc = {};\n    return entries.reduce((acc, [key, value], index) => {\n        acc[key] = fn(value, key, index);\n        return acc;\n    }, acc);\n};\n\nconst isPercent = (value) => /((-)?\\d+\\.?\\d*)%/g.exec(`${value}`);\n/**\n * Get percentage value of input\n *\n * @param value\n * @returns Percent value (if matches)\n */\nconst matchPercent = (value) => {\n    const match = isPercent(value);\n    if (match) {\n        const f = parseFloat(match[1]);\n        const percent = f / 100;\n        return { percent, value: f };\n    }\n    return null;\n};\n\n/**\n * Creates a new object by omitting specified keys from the original object.\n *\n * @param keys - The key or keys to omit\n * @param object - The original object\n * @returns The new object without the omitted keys\n */\nconst omit = (keys, object) => {\n    const _keys = castArray(keys);\n    const copy = Object.assign({}, object);\n    _keys.forEach((key) => {\n        delete copy[key];\n    });\n    return copy;\n};\n\n/**\n * Picks the specified keys from an object and returns a new object with only those keys.\n *\n * @param keys - The keys to pick from the object\n * @param object - The object to pick the keys from\n * @returns A new object with only the picked keys\n */\nconst pick = (keys, obj) => {\n    const result = {};\n    for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        if (key in obj)\n            result[key] = obj[key];\n    }\n    return result;\n};\n\n/**\n * Repeats an element a specified number of times.\n *\n * @template T\n * @param element - Element to be repeated\n * @param length - Number of times to repeat element\n * @returns Repeated elements\n */\nconst repeat = (element, length = 0) => {\n    const result = new Array(length);\n    for (let i = 0; i < length; i += 1) {\n        result[i] = element;\n    }\n    return result;\n};\n\n/**\n * Reverses the list\n *\n * @template T\n * @param list - List to be reversed\n * @returns Reversed list\n */\nconst reverse = (list) => Array.prototype.slice.call(list, 0).reverse();\n\n/**\n * Capitalize first letter of string\n *\n * @param value - String\n * @returns Capitalized string\n */\nconst upperFirst = (value) => {\n    if (!value)\n        return value;\n    return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\n/**\n * Returns a new array with all the values from the original array that are not present in the keys array.\n *\n * @param keys - The keys to pick from the object\n * @param array - Array to filter the values from\n * @returns A new array with without the omitted values\n */\nconst without = (keys, array) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += 1) {\n        const value = array[i];\n        if (!keys.includes(value))\n            result.push(value);\n    }\n    return result;\n};\n\n/**\n * Parse a string or number to a float\n *\n * @param value - String or number\n * @returns Parsed float\n */\nconst parseFloat$1 = (value) => {\n    return typeof value === 'string' ? Number.parseFloat(value) : value;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/fns/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/font/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@react-pdf/font/lib/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FontStore)\n/* harmony export */ });\n/* harmony import */ var is_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-url */ \"(ssr)/./node_modules/is-url/index.js\");\n/* harmony import */ var fontkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fontkit */ \"(ssr)/./node_modules/fontkit/dist/module.mjs\");\n/* harmony import */ var _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-pdf/pdfkit */ \"(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js\");\n\n\n\n\n// @ts-expect-error ts being silly\nconst STANDARD_FONTS = [\n    'Courier',\n    'Courier-Bold',\n    'Courier-Oblique',\n    'Courier-BoldOblique',\n    'Helvetica',\n    'Helvetica-Bold',\n    'Helvetica-Oblique',\n    'Helvetica-BoldOblique',\n    'Times-Roman',\n    'Times-Bold',\n    'Times-Italic',\n    'Times-BoldItalic',\n];\nclass StandardFont {\n    name;\n    src;\n    fullName;\n    familyName;\n    subfamilyName;\n    postscriptName;\n    copyright;\n    version;\n    underlinePosition;\n    underlineThickness;\n    italicAngle;\n    bbox;\n    'OS/2';\n    hhea;\n    numGlyphs;\n    characterSet;\n    availableFeatures;\n    type;\n    constructor(src) {\n        this.name = src;\n        this.fullName = src;\n        this.familyName = src;\n        this.subfamilyName = src;\n        this.type = 'STANDARD';\n        this.postscriptName = src;\n        this.availableFeatures = [];\n        this.copyright = '';\n        this.version = 1;\n        this.underlinePosition = -100;\n        this.underlineThickness = 50;\n        this.italicAngle = 0;\n        this.bbox = {};\n        this['OS/2'] = {};\n        this.hhea = {};\n        this.numGlyphs = 0;\n        this.characterSet = [];\n        this.src = _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_2__.PDFFont.open(null, src);\n    }\n    encode(str) {\n        return this.src.encode(str);\n    }\n    layout(str) {\n        const [encoded, positions] = this.encode(str);\n        const glyphs = encoded.map((g, i) => {\n            const glyph = this.getGlyph(parseInt(g, 16));\n            glyph.advanceWidth = positions[i].advanceWidth;\n            return glyph;\n        });\n        const advanceWidth = positions.reduce((acc, p) => acc + p.advanceWidth, 0);\n        return {\n            positions,\n            stringIndices: positions.map((_, i) => i),\n            glyphs,\n            script: 'latin',\n            language: 'dflt',\n            direction: 'ltr',\n            features: {},\n            advanceWidth,\n            advanceHeight: 0,\n            bbox: undefined,\n        };\n    }\n    glyphForCodePoint(codePoint) {\n        const glyph = this.getGlyph(codePoint);\n        glyph.advanceWidth = 400;\n        return glyph;\n    }\n    getGlyph(id) {\n        return {\n            id,\n            codePoints: [id],\n            isLigature: false,\n            name: this.src.font.characterToGlyph(id),\n            _font: this.src,\n            // @ts-expect-error assign proper value\n            advanceWidth: undefined,\n        };\n    }\n    hasGlyphForCodePoint(codePoint) {\n        return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n    }\n    // Based on empirical observation\n    get ascent() {\n        return 900;\n    }\n    // Based on empirical observation\n    get capHeight() {\n        switch (this.name) {\n            case 'Times-Roman':\n            case 'Times-Bold':\n            case 'Times-Italic':\n            case 'Times-BoldItalic':\n                return 650;\n            case 'Courier':\n            case 'Courier-Bold':\n            case 'Courier-Oblique':\n            case 'Courier-BoldOblique':\n                return 550;\n            default:\n                return 690;\n        }\n    }\n    // Based on empirical observation\n    get xHeight() {\n        switch (this.name) {\n            case 'Times-Roman':\n            case 'Times-Bold':\n            case 'Times-Italic':\n            case 'Times-BoldItalic':\n                return 440;\n            case 'Courier':\n            case 'Courier-Bold':\n            case 'Courier-Oblique':\n            case 'Courier-BoldOblique':\n                return 390;\n            default:\n                return 490;\n        }\n    }\n    // Based on empirical observation\n    get descent() {\n        switch (this.name) {\n            case 'Times-Roman':\n            case 'Times-Bold':\n            case 'Times-Italic':\n            case 'Times-BoldItalic':\n                return -220;\n            case 'Courier':\n            case 'Courier-Bold':\n            case 'Courier-Oblique':\n            case 'Courier-BoldOblique':\n                return -230;\n            default:\n                return -200;\n        }\n    }\n    get lineGap() {\n        return 0;\n    }\n    get unitsPerEm() {\n        return 1000;\n    }\n    stringsForGlyph() {\n        throw new Error('Method not implemented.');\n    }\n    glyphsForString() {\n        throw new Error('Method not implemented.');\n    }\n    widthOfGlyph() {\n        throw new Error('Method not implemented.');\n    }\n    getAvailableFeatures() {\n        throw new Error('Method not implemented.');\n    }\n    createSubset() {\n        throw new Error('Method not implemented.');\n    }\n    getVariation() {\n        throw new Error('Method not implemented.');\n    }\n    getFont() {\n        throw new Error('Method not implemented.');\n    }\n    getName() {\n        throw new Error('Method not implemented.');\n    }\n    setDefaultLanguage() {\n        throw new Error('Method not implemented.');\n    }\n}\n\nconst fetchFont = async (src, options) => {\n    const response = await fetch(src, options);\n    const data = await response.arrayBuffer();\n    return new Uint8Array(data);\n};\nconst isDataUrl = (dataUrl) => {\n    const header = dataUrl.split(',')[0];\n    const hasDataPrefix = header.substring(0, 5) === 'data:';\n    const hasBase64Prefix = header.split(';')[1] === 'base64';\n    return hasDataPrefix && hasBase64Prefix;\n};\nclass FontSource {\n    src;\n    fontFamily;\n    fontStyle;\n    fontWeight;\n    data;\n    options;\n    loadResultPromise;\n    constructor(src, fontFamily, fontStyle, fontWeight, options) {\n        this.src = src;\n        this.fontFamily = fontFamily;\n        this.fontStyle = fontStyle || 'normal';\n        this.fontWeight = fontWeight || 400;\n        this.data = null;\n        this.options = options || {};\n        this.loadResultPromise = null;\n    }\n    async _load() {\n        const { postscriptName } = this.options;\n        let data = null;\n        if (STANDARD_FONTS.includes(this.src)) {\n            data = new StandardFont(this.src);\n        }\n        else if (isDataUrl(this.src)) {\n            const raw = this.src.split(',')[1];\n            const uint8Array = new Uint8Array(atob(raw)\n                .split('')\n                .map((c) => c.charCodeAt(0)));\n            data = fontkit__WEBPACK_IMPORTED_MODULE_1__.create(uint8Array, postscriptName);\n        }\n        else if (is_url__WEBPACK_IMPORTED_MODULE_0__(this.src)) {\n            const { headers, body, method = 'GET' } = this.options;\n            const buffer = await fetchFont(this.src, { method, body, headers });\n            data = fontkit__WEBPACK_IMPORTED_MODULE_1__.create(buffer, postscriptName);\n        }\n        else {\n            data = await fontkit__WEBPACK_IMPORTED_MODULE_1__.open(this.src, postscriptName);\n        }\n        if (data && 'fonts' in data) {\n            throw new Error('Font collection is not supported');\n        }\n        this.data = data;\n    }\n    async load() {\n        if (this.loadResultPromise === null) {\n            this.loadResultPromise = this._load();\n        }\n        return this.loadResultPromise;\n    }\n}\n\nconst FONT_WEIGHTS = {\n    thin: 100,\n    hairline: 100,\n    ultralight: 200,\n    extralight: 200,\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    demibold: 600,\n    bold: 700,\n    ultrabold: 800,\n    extrabold: 800,\n    heavy: 900,\n    black: 900,\n};\nconst resolveFontWeight = (value) => {\n    return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\nclass FontFamily {\n    family;\n    sources;\n    static create(family) {\n        return new FontFamily(family);\n    }\n    constructor(family) {\n        this.family = family;\n        this.sources = [];\n    }\n    register({ src, fontWeight, fontStyle, ...options }) {\n        const numericFontWeight = fontWeight\n            ? resolveFontWeight(fontWeight)\n            : undefined;\n        this.sources.push(new FontSource(src, this.family, fontStyle, numericFontWeight, options));\n    }\n    resolve(descriptor) {\n        const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n        const styleSources = this.sources.filter((s) => s.fontStyle === fontStyle);\n        const exactFit = styleSources.find((s) => s.fontWeight === fontWeight);\n        if (exactFit)\n            return exactFit;\n        // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        let font = null;\n        const numericFontWeight = resolveFontWeight(fontWeight);\n        if (numericFontWeight >= 400 && numericFontWeight <= 500) {\n            const leftOffset = styleSources.filter((s) => s.fontWeight <= numericFontWeight);\n            const rightOffset = styleSources.filter((s) => s.fontWeight > 500);\n            const fit = styleSources.filter((s) => s.fontWeight >= numericFontWeight && s.fontWeight < 500);\n            font = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n        }\n        const lt = styleSources\n            .filter((s) => s.fontWeight < numericFontWeight)\n            .sort(sortByFontWeight);\n        const gt = styleSources\n            .filter((s) => s.fontWeight > numericFontWeight)\n            .sort(sortByFontWeight);\n        if (numericFontWeight < 400) {\n            font = lt[lt.length - 1] || gt[0];\n        }\n        if (numericFontWeight > 500) {\n            font = gt[0] || lt[lt.length - 1];\n        }\n        if (!font) {\n            throw new Error(`Could not resolve font for ${this.family}, fontWeight ${fontWeight}, fontStyle ${fontStyle}`);\n        }\n        return font;\n    }\n}\n\nclass FontStore {\n    fontFamilies = {};\n    emojiSource = null;\n    constructor() {\n        this.register({\n            family: 'Helvetica',\n            fonts: [\n                { src: 'Helvetica', fontStyle: 'normal', fontWeight: 400 },\n                { src: 'Helvetica-Bold', fontStyle: 'normal', fontWeight: 700 },\n                { src: 'Helvetica-Oblique', fontStyle: 'italic', fontWeight: 400 },\n                { src: 'Helvetica-BoldOblique', fontStyle: 'italic', fontWeight: 700 },\n            ],\n        });\n        this.register({\n            family: 'Courier',\n            fonts: [\n                { src: 'Courier', fontStyle: 'normal', fontWeight: 400 },\n                { src: 'Courier-Bold', fontStyle: 'normal', fontWeight: 700 },\n                { src: 'Courier-Oblique', fontStyle: 'italic', fontWeight: 400 },\n                { src: 'Courier-BoldOblique', fontStyle: 'italic', fontWeight: 700 },\n            ],\n        });\n        this.register({\n            family: 'Times-Roman',\n            fonts: [\n                { src: 'Times-Roman', fontStyle: 'normal', fontWeight: 400 },\n                { src: 'Times-Bold', fontStyle: 'normal', fontWeight: 700 },\n                { src: 'Times-Italic', fontStyle: 'italic', fontWeight: 400 },\n                { src: 'Times-BoldItalic', fontStyle: 'italic', fontWeight: 700 },\n            ],\n        });\n        // For backwards compatibility\n        this.register({\n            family: 'Helvetica-Bold',\n            src: 'Helvetica-Bold',\n        });\n        this.register({\n            family: 'Helvetica-Oblique',\n            src: 'Helvetica-Oblique',\n        });\n        this.register({\n            family: 'Helvetica-BoldOblique',\n            src: 'Helvetica-BoldOblique',\n        });\n        this.register({\n            family: 'Courier-Bold',\n            src: 'Courier-Bold',\n        });\n        this.register({\n            family: 'Courier-Oblique',\n            src: 'Courier-Oblique',\n        });\n        this.register({\n            family: 'Courier-BoldOblique',\n            src: 'Courier-BoldOblique',\n        });\n        this.register({\n            family: 'Times-Bold',\n            src: 'Times-Bold',\n        });\n        this.register({\n            family: 'Times-Italic',\n            src: 'Times-Italic',\n        });\n        this.register({\n            family: 'Times-BoldItalic',\n            src: 'Times-BoldItalic',\n        });\n        // Load default fonts\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'normal',\n            fontWeight: 400,\n        });\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'normal',\n            fontWeight: 700,\n        });\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'italic',\n            fontWeight: 400,\n        });\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'italic',\n            fontWeight: 700,\n        });\n    }\n    hyphenationCallback = null;\n    register = (data) => {\n        const { family } = data;\n        if (!this.fontFamilies[family]) {\n            this.fontFamilies[family] = FontFamily.create(family);\n        }\n        // Bulk loading\n        if ('fonts' in data) {\n            for (let i = 0; i < data.fonts.length; i += 1) {\n                const { src, fontStyle, fontWeight, ...options } = data.fonts[i];\n                this.fontFamilies[family].register({\n                    src,\n                    fontStyle,\n                    fontWeight,\n                    ...options,\n                });\n            }\n        }\n        else {\n            const { src, fontStyle, fontWeight, ...options } = data;\n            this.fontFamilies[family].register({\n                src,\n                fontStyle,\n                fontWeight,\n                ...options,\n            });\n        }\n    };\n    registerEmojiSource = (emojiSource) => {\n        this.emojiSource = emojiSource;\n    };\n    registerHyphenationCallback = (callback) => {\n        this.hyphenationCallback = callback;\n    };\n    getFont = (descriptor) => {\n        const { fontFamily } = descriptor;\n        if (!this.fontFamilies[fontFamily]) {\n            throw new Error(`Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`);\n        }\n        return this.fontFamilies[fontFamily].resolve(descriptor);\n    };\n    load = async (descriptor) => {\n        const font = this.getFont(descriptor);\n        if (font)\n            await font.load();\n    };\n    reset = () => {\n        const keys = Object.keys(this.fontFamilies);\n        for (let i = 0; i < keys.length; i += 1) {\n            const key = keys[i];\n            for (let j = 0; j < this.fontFamilies[key].sources.length; j++) {\n                const fontSource = this.fontFamilies[key].sources[j];\n                fontSource.data = null;\n            }\n        }\n    };\n    clear = () => {\n        this.fontFamilies = {};\n    };\n    getRegisteredFonts = () => this.fontFamilies;\n    getEmojiSource = () => this.emojiSource;\n    getHyphenationCallback = () => this.hyphenationCallback;\n    getRegisteredFontFamilies = () => Object.keys(this.fontFamilies);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/font/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/image/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@react-pdf/image/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ resolveImage)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-pdf/png-js */ \"(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js\");\n/* harmony import */ var jay_peg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jay-peg */ \"(ssr)/./node_modules/jay-peg/src/index.js\");\n\n\n\n\n\n\nclass PNG {\n    data;\n    width;\n    height;\n    format;\n    constructor(data) {\n        const png = new _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](data);\n        this.data = data;\n        this.width = png.width;\n        this.height = png.height;\n        this.format = 'png';\n    }\n    static isValid(data) {\n        try {\n            return !!new PNG(data);\n        }\n        catch {\n            return false;\n        }\n    }\n}\n\nclass JPEG {\n    data;\n    width;\n    height;\n    format;\n    constructor(data) {\n        this.data = data;\n        this.format = 'jpeg';\n        this.width = 0;\n        this.height = 0;\n        if (data.readUInt16BE(0) !== 0xffd8) {\n            throw new Error('SOI not found in JPEG');\n        }\n        const markers = jay_peg__WEBPACK_IMPORTED_MODULE_4__[\"default\"].decode(this.data);\n        let orientation;\n        for (let i = 0; i < markers.length; i += 1) {\n            const marker = markers[i];\n            if (marker.name === 'EXIF' && marker.entries.orientation) {\n                orientation = marker.entries.orientation;\n            }\n            if (marker.name === 'SOF') {\n                this.width ||= marker.width;\n                this.height ||= marker.height;\n            }\n        }\n        if (orientation > 4) {\n            [this.width, this.height] = [this.height, this.width];\n        }\n    }\n    static isValid(data) {\n        return data && Buffer.isBuffer(data) && data.readUInt16BE(0) === 0xffd8;\n    }\n}\n\nconst createCache = ({ limit = 100 } = {}) => {\n    let cache = {};\n    let keys = [];\n    return {\n        get: (key) => (key ? cache[key] : null),\n        set: (key, value) => {\n            keys.push(key);\n            if (keys.length > limit) {\n                delete cache[keys.shift()];\n            }\n            cache[key] = value;\n        },\n        reset: () => {\n            cache = {};\n            keys = [];\n        },\n        length: () => keys.length,\n    };\n};\n\nconst IMAGE_CACHE = createCache({ limit: 30 });\nconst isBuffer = Buffer.isBuffer;\nconst isBlob = (src) => {\n    return typeof Blob !== 'undefined' && src instanceof Blob;\n};\nconst isDataImageSrc = (src) => {\n    return 'data' in src;\n};\nconst isBase64Src = (imageSrc) => 'uri' in imageSrc &&\n    /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(imageSrc.uri);\nconst getAbsoluteLocalPath = (src) => {\n    const { protocol, auth, host, port, hostname, path: pathname, } = url__WEBPACK_IMPORTED_MODULE_1__.parse(src);\n    const absolutePath = pathname ? path__WEBPACK_IMPORTED_MODULE_2__.resolve(pathname) : undefined;\n    if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n        return undefined;\n    }\n    return absolutePath;\n};\nconst fetchLocalFile = (src) => new Promise((resolve, reject) => {\n    try {\n        if (false) {}\n        const absolutePath = getAbsoluteLocalPath(src.uri);\n        if (!absolutePath) {\n            reject(new Error(`Cannot fetch non-local path: ${src}`));\n            return;\n        }\n        fs__WEBPACK_IMPORTED_MODULE_0__.readFile(absolutePath, (err, data) => err ? reject(err) : resolve(data));\n    }\n    catch (err) {\n        reject(err);\n    }\n});\nconst fetchRemoteFile = async (src) => {\n    const { method = 'GET', headers, body, credentials } = src;\n    const response = await fetch(src.uri, {\n        method,\n        headers,\n        body,\n        credentials,\n    });\n    const buffer = await response.arrayBuffer();\n    return Buffer.from(buffer);\n};\nconst isValidFormat = (format) => {\n    const lower = format.toLowerCase();\n    return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\nconst guessFormat = (buffer) => {\n    let format;\n    if (JPEG.isValid(buffer)) {\n        format = 'jpg';\n    }\n    else if (PNG.isValid(buffer)) {\n        format = 'png';\n    }\n    return format;\n};\nfunction getImage(body, format) {\n    switch (format.toLowerCase()) {\n        case 'jpg':\n        case 'jpeg':\n            return new JPEG(body);\n        case 'png':\n            return new PNG(body);\n        default:\n            return null;\n    }\n}\nconst resolveBase64Image = async ({ uri }) => {\n    const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n    if (!match)\n        throw new Error(`Invalid base64 image: ${uri}`);\n    const format = match[1];\n    const data = match[2];\n    if (!isValidFormat(format))\n        throw new Error(`Base64 image invalid format: ${format}`);\n    return getImage(Buffer.from(data, 'base64'), format);\n};\nconst resolveImageFromData = async (src) => {\n    if (src.data && src.format) {\n        return getImage(src.data, src.format);\n    }\n    throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\nconst resolveBufferImage = async (buffer) => {\n    const format = guessFormat(buffer);\n    if (format) {\n        return getImage(buffer, format);\n    }\n    return null;\n};\nconst resolveBlobImage = async (blob) => {\n    const { type } = blob;\n    if (!type || type === 'application/octet-stream') {\n        const arrayBuffer = await blob.arrayBuffer();\n        const buffer = Buffer.from(arrayBuffer);\n        return resolveBufferImage(buffer);\n    }\n    if (!type.startsWith('image/')) {\n        throw new Error(`Invalid blob type: ${type}`);\n    }\n    const format = type.replace('image/', '');\n    if (!isValidFormat(format)) {\n        throw new Error(`Invalid blob type: ${type}`);\n    }\n    const buffer = await blob.arrayBuffer();\n    return getImage(Buffer.from(buffer), format);\n};\nconst getImageFormat = (body) => {\n    const isPng = body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n    const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n    let extension = '';\n    if (isPng) {\n        extension = 'png';\n    }\n    else if (isJpg) {\n        extension = 'jpg';\n    }\n    else {\n        throw new Error('Not valid image extension');\n    }\n    return extension;\n};\nconst resolveImageFromUrl = async (src) => {\n    const data = getAbsoluteLocalPath(src.uri)\n        ? await fetchLocalFile(src)\n        : await fetchRemoteFile(src);\n    const format = getImageFormat(data);\n    return getImage(data, format);\n};\nconst getCacheKey = (src) => {\n    if (isBlob(src) || isBuffer(src))\n        return null;\n    if (isDataImageSrc(src))\n        return src.data.toString();\n    return src.uri;\n};\nconst resolveImage = (src, { cache = true } = {}) => {\n    let image;\n    const cacheKey = getCacheKey(src);\n    if (isBlob(src)) {\n        image = resolveBlobImage(src);\n    }\n    else if (isBuffer(src)) {\n        image = resolveBufferImage(src);\n    }\n    else if (cache && IMAGE_CACHE.get(cacheKey)) {\n        return IMAGE_CACHE.get(cacheKey);\n    }\n    else if (isBase64Src(src)) {\n        image = resolveBase64Image(src);\n    }\n    else if (isDataImageSrc(src)) {\n        image = resolveImageFromData(src);\n    }\n    else {\n        image = resolveImageFromUrl(src);\n    }\n    if (!image) {\n        throw new Error('Cannot resolve image');\n    }\n    if (cache && cacheKey) {\n        IMAGE_CACHE.set(cacheKey, image);\n    }\n    return image;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9pbWFnZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9CO0FBQ0U7QUFDRTtBQUNhO0FBQ1Q7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5REFBSTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtDQUFLO0FBQzdCO0FBQ0Esd0JBQXdCLG9CQUFvQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixjQUFjLElBQUk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQSxrQ0FBa0MsV0FBVztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0EsWUFBWSx3REFBd0QsRUFBRSxzQ0FBUztBQUMvRSxvQ0FBb0MseUNBQVk7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLEtBQUssRUFBRSxFQUFDO0FBQ3BCO0FBQ0E7QUFDQSw2REFBNkQsSUFBSTtBQUNqRTtBQUNBO0FBQ0EsUUFBUSx3Q0FBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLFlBQVksNkNBQTZDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsS0FBSztBQUN6Qyw0Q0FBNEM7QUFDNUM7QUFDQSxpREFBaUQsSUFBSTtBQUNyRDtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsT0FBTztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsb0JBQW9CO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsS0FBSztBQUNuRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsS0FBSztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixlQUFlLElBQUk7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW1DIiwic291cmNlcyI6WyIvVXNlcnMvemltaW4vd2ViRGV2L3F1aWNraW52b2ljZS9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9pbWFnZS9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCB1cmwgZnJvbSAndXJsJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IF9QTkcgZnJvbSAnQHJlYWN0LXBkZi9wbmctanMnO1xuaW1wb3J0IF9KUEVHIGZyb20gJ2pheS1wZWcnO1xuXG5jbGFzcyBQTkcge1xuICAgIGRhdGE7XG4gICAgd2lkdGg7XG4gICAgaGVpZ2h0O1xuICAgIGZvcm1hdDtcbiAgICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgICAgIGNvbnN0IHBuZyA9IG5ldyBfUE5HKGRhdGEpO1xuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICB0aGlzLndpZHRoID0gcG5nLndpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IHBuZy5oZWlnaHQ7XG4gICAgICAgIHRoaXMuZm9ybWF0ID0gJ3BuZyc7XG4gICAgfVxuICAgIHN0YXRpYyBpc1ZhbGlkKGRhdGEpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiAhIW5ldyBQTkcoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5jbGFzcyBKUEVHIHtcbiAgICBkYXRhO1xuICAgIHdpZHRoO1xuICAgIGhlaWdodDtcbiAgICBmb3JtYXQ7XG4gICAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICB0aGlzLmZvcm1hdCA9ICdqcGVnJztcbiAgICAgICAgdGhpcy53aWR0aCA9IDA7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gMDtcbiAgICAgICAgaWYgKGRhdGEucmVhZFVJbnQxNkJFKDApICE9PSAweGZmZDgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU09JIG5vdCBmb3VuZCBpbiBKUEVHJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWFya2VycyA9IF9KUEVHLmRlY29kZSh0aGlzLmRhdGEpO1xuICAgICAgICBsZXQgb3JpZW50YXRpb247XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWFya2Vycy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgY29uc3QgbWFya2VyID0gbWFya2Vyc1tpXTtcbiAgICAgICAgICAgIGlmIChtYXJrZXIubmFtZSA9PT0gJ0VYSUYnICYmIG1hcmtlci5lbnRyaWVzLm9yaWVudGF0aW9uKSB7XG4gICAgICAgICAgICAgICAgb3JpZW50YXRpb24gPSBtYXJrZXIuZW50cmllcy5vcmllbnRhdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtYXJrZXIubmFtZSA9PT0gJ1NPRicpIHtcbiAgICAgICAgICAgICAgICB0aGlzLndpZHRoIHx8PSBtYXJrZXIud2lkdGg7XG4gICAgICAgICAgICAgICAgdGhpcy5oZWlnaHQgfHw9IG1hcmtlci5oZWlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9yaWVudGF0aW9uID4gNCkge1xuICAgICAgICAgICAgW3RoaXMud2lkdGgsIHRoaXMuaGVpZ2h0XSA9IFt0aGlzLmhlaWdodCwgdGhpcy53aWR0aF07XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGlzVmFsaWQoZGF0YSkge1xuICAgICAgICByZXR1cm4gZGF0YSAmJiBCdWZmZXIuaXNCdWZmZXIoZGF0YSkgJiYgZGF0YS5yZWFkVUludDE2QkUoMCkgPT09IDB4ZmZkODtcbiAgICB9XG59XG5cbmNvbnN0IGNyZWF0ZUNhY2hlID0gKHsgbGltaXQgPSAxMDAgfSA9IHt9KSA9PiB7XG4gICAgbGV0IGNhY2hlID0ge307XG4gICAgbGV0IGtleXMgPSBbXTtcbiAgICByZXR1cm4ge1xuICAgICAgICBnZXQ6IChrZXkpID0+IChrZXkgPyBjYWNoZVtrZXldIDogbnVsbCksXG4gICAgICAgIHNldDogKGtleSwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIGtleXMucHVzaChrZXkpO1xuICAgICAgICAgICAgaWYgKGtleXMubGVuZ3RoID4gbGltaXQpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgY2FjaGVba2V5cy5zaGlmdCgpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhY2hlW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVzZXQ6ICgpID0+IHtcbiAgICAgICAgICAgIGNhY2hlID0ge307XG4gICAgICAgICAgICBrZXlzID0gW107XG4gICAgICAgIH0sXG4gICAgICAgIGxlbmd0aDogKCkgPT4ga2V5cy5sZW5ndGgsXG4gICAgfTtcbn07XG5cbmNvbnN0IElNQUdFX0NBQ0hFID0gY3JlYXRlQ2FjaGUoeyBsaW1pdDogMzAgfSk7XG5jb25zdCBpc0J1ZmZlciA9IEJ1ZmZlci5pc0J1ZmZlcjtcbmNvbnN0IGlzQmxvYiA9IChzcmMpID0+IHtcbiAgICByZXR1cm4gdHlwZW9mIEJsb2IgIT09ICd1bmRlZmluZWQnICYmIHNyYyBpbnN0YW5jZW9mIEJsb2I7XG59O1xuY29uc3QgaXNEYXRhSW1hZ2VTcmMgPSAoc3JjKSA9PiB7XG4gICAgcmV0dXJuICdkYXRhJyBpbiBzcmM7XG59O1xuY29uc3QgaXNCYXNlNjRTcmMgPSAoaW1hZ2VTcmMpID0+ICd1cmknIGluIGltYWdlU3JjICYmXG4gICAgL15kYXRhOmltYWdlXFwvW2EtekEtWl0qO2Jhc2U2NCxbXlwiXSovZy50ZXN0KGltYWdlU3JjLnVyaSk7XG5jb25zdCBnZXRBYnNvbHV0ZUxvY2FsUGF0aCA9IChzcmMpID0+IHtcbiAgICBjb25zdCB7IHByb3RvY29sLCBhdXRoLCBob3N0LCBwb3J0LCBob3N0bmFtZSwgcGF0aDogcGF0aG5hbWUsIH0gPSB1cmwucGFyc2Uoc3JjKTtcbiAgICBjb25zdCBhYnNvbHV0ZVBhdGggPSBwYXRobmFtZSA/IHBhdGgucmVzb2x2ZShwYXRobmFtZSkgOiB1bmRlZmluZWQ7XG4gICAgaWYgKChwcm90b2NvbCAmJiBwcm90b2NvbCAhPT0gJ2ZpbGU6JykgfHwgYXV0aCB8fCBob3N0IHx8IHBvcnQgfHwgaG9zdG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGFic29sdXRlUGF0aDtcbn07XG5jb25zdCBmZXRjaExvY2FsRmlsZSA9IChzcmMpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBpZiAoZmFsc2UpIDtcbiAgICAgICAgY29uc3QgYWJzb2x1dGVQYXRoID0gZ2V0QWJzb2x1dGVMb2NhbFBhdGgoc3JjLnVyaSk7XG4gICAgICAgIGlmICghYWJzb2x1dGVQYXRoKSB7XG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBDYW5ub3QgZmV0Y2ggbm9uLWxvY2FsIHBhdGg6ICR7c3JjfWApKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmcy5yZWFkRmlsZShhYnNvbHV0ZVBhdGgsIChlcnIsIGRhdGEpID0+IGVyciA/IHJlamVjdChlcnIpIDogcmVzb2x2ZShkYXRhKSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgcmVqZWN0KGVycik7XG4gICAgfVxufSk7XG5jb25zdCBmZXRjaFJlbW90ZUZpbGUgPSBhc3luYyAoc3JjKSA9PiB7XG4gICAgY29uc3QgeyBtZXRob2QgPSAnR0VUJywgaGVhZGVycywgYm9keSwgY3JlZGVudGlhbHMgfSA9IHNyYztcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHNyYy51cmksIHtcbiAgICAgICAgbWV0aG9kLFxuICAgICAgICBoZWFkZXJzLFxuICAgICAgICBib2R5LFxuICAgICAgICBjcmVkZW50aWFscyxcbiAgICB9KTtcbiAgICBjb25zdCBidWZmZXIgPSBhd2FpdCByZXNwb25zZS5hcnJheUJ1ZmZlcigpO1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShidWZmZXIpO1xufTtcbmNvbnN0IGlzVmFsaWRGb3JtYXQgPSAoZm9ybWF0KSA9PiB7XG4gICAgY29uc3QgbG93ZXIgPSBmb3JtYXQudG9Mb3dlckNhc2UoKTtcbiAgICByZXR1cm4gbG93ZXIgPT09ICdqcGcnIHx8IGxvd2VyID09PSAnanBlZycgfHwgbG93ZXIgPT09ICdwbmcnO1xufTtcbmNvbnN0IGd1ZXNzRm9ybWF0ID0gKGJ1ZmZlcikgPT4ge1xuICAgIGxldCBmb3JtYXQ7XG4gICAgaWYgKEpQRUcuaXNWYWxpZChidWZmZXIpKSB7XG4gICAgICAgIGZvcm1hdCA9ICdqcGcnO1xuICAgIH1cbiAgICBlbHNlIGlmIChQTkcuaXNWYWxpZChidWZmZXIpKSB7XG4gICAgICAgIGZvcm1hdCA9ICdwbmcnO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0O1xufTtcbmZ1bmN0aW9uIGdldEltYWdlKGJvZHksIGZvcm1hdCkge1xuICAgIHN3aXRjaCAoZm9ybWF0LnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgY2FzZSAnanBnJzpcbiAgICAgICAgY2FzZSAnanBlZyc6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEpQRUcoYm9keSk7XG4gICAgICAgIGNhc2UgJ3BuZyc6XG4gICAgICAgICAgICByZXR1cm4gbmV3IFBORyhib2R5KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbmNvbnN0IHJlc29sdmVCYXNlNjRJbWFnZSA9IGFzeW5jICh7IHVyaSB9KSA9PiB7XG4gICAgY29uc3QgbWF0Y2ggPSAvXmRhdGE6aW1hZ2VcXC8oW2EtekEtWl0qKTtiYXNlNjQsKFteXCJdKikvZy5leGVjKHVyaSk7XG4gICAgaWYgKCFtYXRjaClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGJhc2U2NCBpbWFnZTogJHt1cml9YCk7XG4gICAgY29uc3QgZm9ybWF0ID0gbWF0Y2hbMV07XG4gICAgY29uc3QgZGF0YSA9IG1hdGNoWzJdO1xuICAgIGlmICghaXNWYWxpZEZvcm1hdChmb3JtYXQpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEJhc2U2NCBpbWFnZSBpbnZhbGlkIGZvcm1hdDogJHtmb3JtYXR9YCk7XG4gICAgcmV0dXJuIGdldEltYWdlKEJ1ZmZlci5mcm9tKGRhdGEsICdiYXNlNjQnKSwgZm9ybWF0KTtcbn07XG5jb25zdCByZXNvbHZlSW1hZ2VGcm9tRGF0YSA9IGFzeW5jIChzcmMpID0+IHtcbiAgICBpZiAoc3JjLmRhdGEgJiYgc3JjLmZvcm1hdCkge1xuICAgICAgICByZXR1cm4gZ2V0SW1hZ2Uoc3JjLmRhdGEsIHNyYy5mb3JtYXQpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgZGF0YSBnaXZlbiBmb3IgbG9jYWwgZmlsZTogJHtKU09OLnN0cmluZ2lmeShzcmMpfWApO1xufTtcbmNvbnN0IHJlc29sdmVCdWZmZXJJbWFnZSA9IGFzeW5jIChidWZmZXIpID0+IHtcbiAgICBjb25zdCBmb3JtYXQgPSBndWVzc0Zvcm1hdChidWZmZXIpO1xuICAgIGlmIChmb3JtYXQpIHtcbiAgICAgICAgcmV0dXJuIGdldEltYWdlKGJ1ZmZlciwgZm9ybWF0KTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59O1xuY29uc3QgcmVzb2x2ZUJsb2JJbWFnZSA9IGFzeW5jIChibG9iKSA9PiB7XG4gICAgY29uc3QgeyB0eXBlIH0gPSBibG9iO1xuICAgIGlmICghdHlwZSB8fCB0eXBlID09PSAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJykge1xuICAgICAgICBjb25zdCBhcnJheUJ1ZmZlciA9IGF3YWl0IGJsb2IuYXJyYXlCdWZmZXIoKTtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmZyb20oYXJyYXlCdWZmZXIpO1xuICAgICAgICByZXR1cm4gcmVzb2x2ZUJ1ZmZlckltYWdlKGJ1ZmZlcik7XG4gICAgfVxuICAgIGlmICghdHlwZS5zdGFydHNXaXRoKCdpbWFnZS8nKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYmxvYiB0eXBlOiAke3R5cGV9YCk7XG4gICAgfVxuICAgIGNvbnN0IGZvcm1hdCA9IHR5cGUucmVwbGFjZSgnaW1hZ2UvJywgJycpO1xuICAgIGlmICghaXNWYWxpZEZvcm1hdChmb3JtYXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBibG9iIHR5cGU6ICR7dHlwZX1gKTtcbiAgICB9XG4gICAgY29uc3QgYnVmZmVyID0gYXdhaXQgYmxvYi5hcnJheUJ1ZmZlcigpO1xuICAgIHJldHVybiBnZXRJbWFnZShCdWZmZXIuZnJvbShidWZmZXIpLCBmb3JtYXQpO1xufTtcbmNvbnN0IGdldEltYWdlRm9ybWF0ID0gKGJvZHkpID0+IHtcbiAgICBjb25zdCBpc1BuZyA9IGJvZHlbMF0gPT09IDEzNyAmJlxuICAgICAgICBib2R5WzFdID09PSA4MCAmJlxuICAgICAgICBib2R5WzJdID09PSA3OCAmJlxuICAgICAgICBib2R5WzNdID09PSA3MSAmJlxuICAgICAgICBib2R5WzRdID09PSAxMyAmJlxuICAgICAgICBib2R5WzVdID09PSAxMCAmJlxuICAgICAgICBib2R5WzZdID09PSAyNiAmJlxuICAgICAgICBib2R5WzddID09PSAxMDtcbiAgICBjb25zdCBpc0pwZyA9IGJvZHlbMF0gPT09IDI1NSAmJiBib2R5WzFdID09PSAyMTYgJiYgYm9keVsyXSA9PT0gMjU1O1xuICAgIGxldCBleHRlbnNpb24gPSAnJztcbiAgICBpZiAoaXNQbmcpIHtcbiAgICAgICAgZXh0ZW5zaW9uID0gJ3BuZyc7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzSnBnKSB7XG4gICAgICAgIGV4dGVuc2lvbiA9ICdqcGcnO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgdmFsaWQgaW1hZ2UgZXh0ZW5zaW9uJyk7XG4gICAgfVxuICAgIHJldHVybiBleHRlbnNpb247XG59O1xuY29uc3QgcmVzb2x2ZUltYWdlRnJvbVVybCA9IGFzeW5jIChzcmMpID0+IHtcbiAgICBjb25zdCBkYXRhID0gZ2V0QWJzb2x1dGVMb2NhbFBhdGgoc3JjLnVyaSlcbiAgICAgICAgPyBhd2FpdCBmZXRjaExvY2FsRmlsZShzcmMpXG4gICAgICAgIDogYXdhaXQgZmV0Y2hSZW1vdGVGaWxlKHNyYyk7XG4gICAgY29uc3QgZm9ybWF0ID0gZ2V0SW1hZ2VGb3JtYXQoZGF0YSk7XG4gICAgcmV0dXJuIGdldEltYWdlKGRhdGEsIGZvcm1hdCk7XG59O1xuY29uc3QgZ2V0Q2FjaGVLZXkgPSAoc3JjKSA9PiB7XG4gICAgaWYgKGlzQmxvYihzcmMpIHx8IGlzQnVmZmVyKHNyYykpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGlmIChpc0RhdGFJbWFnZVNyYyhzcmMpKVxuICAgICAgICByZXR1cm4gc3JjLmRhdGEudG9TdHJpbmcoKTtcbiAgICByZXR1cm4gc3JjLnVyaTtcbn07XG5jb25zdCByZXNvbHZlSW1hZ2UgPSAoc3JjLCB7IGNhY2hlID0gdHJ1ZSB9ID0ge30pID0+IHtcbiAgICBsZXQgaW1hZ2U7XG4gICAgY29uc3QgY2FjaGVLZXkgPSBnZXRDYWNoZUtleShzcmMpO1xuICAgIGlmIChpc0Jsb2Ioc3JjKSkge1xuICAgICAgICBpbWFnZSA9IHJlc29sdmVCbG9iSW1hZ2Uoc3JjKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNCdWZmZXIoc3JjKSkge1xuICAgICAgICBpbWFnZSA9IHJlc29sdmVCdWZmZXJJbWFnZShzcmMpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjYWNoZSAmJiBJTUFHRV9DQUNIRS5nZXQoY2FjaGVLZXkpKSB7XG4gICAgICAgIHJldHVybiBJTUFHRV9DQUNIRS5nZXQoY2FjaGVLZXkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0Jhc2U2NFNyYyhzcmMpKSB7XG4gICAgICAgIGltYWdlID0gcmVzb2x2ZUJhc2U2NEltYWdlKHNyYyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzRGF0YUltYWdlU3JjKHNyYykpIHtcbiAgICAgICAgaW1hZ2UgPSByZXNvbHZlSW1hZ2VGcm9tRGF0YShzcmMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaW1hZ2UgPSByZXNvbHZlSW1hZ2VGcm9tVXJsKHNyYyk7XG4gICAgfVxuICAgIGlmICghaW1hZ2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgcmVzb2x2ZSBpbWFnZScpO1xuICAgIH1cbiAgICBpZiAoY2FjaGUgJiYgY2FjaGVLZXkpIHtcbiAgICAgICAgSU1BR0VfQ0FDSEUuc2V0KGNhY2hlS2V5LCBpbWFnZSk7XG4gICAgfVxuICAgIHJldHVybiBpbWFnZTtcbn07XG5cbmV4cG9ydCB7IHJlc29sdmVJbWFnZSBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/image/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/layout/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@react-pdf/layout/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ layout)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-pdf/primitives */ \"(ssr)/./node_modules/@react-pdf/primitives/lib/index.js\");\n/* harmony import */ var _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-pdf/stylesheet */ \"(ssr)/./node_modules/@react-pdf/stylesheet/lib/index.js\");\n/* harmony import */ var _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-pdf/textkit */ \"(ssr)/./node_modules/@react-pdf/textkit/lib/textkit.js\");\n/* harmony import */ var yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! yoga-layout/load */ \"(ssr)/./node_modules/yoga-layout/dist/src/load.js\");\n/* harmony import */ var emoji_regex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! emoji-regex */ \"(ssr)/./node_modules/emoji-regex/index.mjs\");\n/* harmony import */ var _react_pdf_image__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-pdf/image */ \"(ssr)/./node_modules/@react-pdf/image/lib/index.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Apply transformation to text string\n *\n * @param {string} text\n * @param {string} transformation type\n * @returns {string} transformed text\n */\nconst transformText = (text, transformation) => {\n    switch (transformation) {\n        case 'uppercase':\n            return text.toUpperCase();\n        case 'lowercase':\n            return text.toLowerCase();\n        case 'capitalize':\n            return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.capitalize)(text);\n        case 'upperfirst':\n            return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.upperFirst)(text);\n        default:\n            return text;\n    }\n};\n\nconst isTspan = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Tspan;\nconst isTextInstance$4 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance;\nconst engines$1 = {\n    bidi: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.bidi,\n    linebreaker: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.linebreaker,\n    justification: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.justification,\n    textDecoration: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.textDecoration,\n    scriptItemizer: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.scriptItemizer,\n    wordHyphenation: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.wordHyphenation,\n    fontSubstitution: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.fontSubstitution,\n};\nconst engine$1 = (0,_react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(engines$1);\nconst getFragments$1 = (fontStore, instance) => {\n    if (!instance)\n        return [{ string: '' }];\n    const fragments = [];\n    const { fill = 'black', fontFamily = 'Helvetica', fontWeight, fontStyle, fontSize = 18, textDecorationColor, textDecorationStyle, textTransform, opacity, } = instance.props;\n    const _textDecoration = instance.props.textDecoration;\n    const fontFamilies = typeof fontFamily === 'string' ? [fontFamily] : [...(fontFamily || [])];\n    // Fallback font\n    fontFamilies.push('Helvetica');\n    const font = fontFamilies.map((fontFamilyName) => {\n        const opts = { fontFamily: fontFamilyName, fontWeight, fontStyle };\n        const obj = fontStore.getFont(opts);\n        return obj?.data;\n    });\n    const attributes = {\n        font,\n        opacity,\n        fontSize,\n        color: fill,\n        underlineStyle: textDecorationStyle,\n        underline: _textDecoration === 'underline' ||\n            _textDecoration === 'underline line-through' ||\n            _textDecoration === 'line-through underline',\n        underlineColor: textDecorationColor || fill,\n        strike: _textDecoration === 'line-through' ||\n            _textDecoration === 'underline line-through' ||\n            _textDecoration === 'line-through underline',\n        strikeStyle: textDecorationStyle,\n        strikeColor: textDecorationColor || fill,\n    };\n    for (let i = 0; i < instance.children.length; i += 1) {\n        const child = instance.children[i];\n        if (isTextInstance$4(child)) {\n            fragments.push({\n                string: transformText(child.value, textTransform),\n                attributes,\n            });\n        }\n        else if (child) {\n            fragments.push(...getFragments$1(fontStore, child));\n        }\n    }\n    return fragments;\n};\nconst getAttributedString$1 = (fontStore, instance) => (0,_react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.fromFragments)(getFragments$1(fontStore, instance));\nconst AlmostInfinity = 999999999999;\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\nconst layoutTspan = (fontStore) => (node, xOffset) => {\n    const attributedString = getAttributedString$1(fontStore, node);\n    const x = node.props.x === undefined ? xOffset : node.props.x;\n    const y = node.props?.y || 0;\n    const container = { x, y, width: AlmostInfinity, height: AlmostInfinity };\n    const hyphenationCallback = node.props.hyphenationCallback ||\n        fontStore?.getHyphenationCallback() ||\n        null;\n    const layoutOptions = { hyphenationCallback, shrinkWhitespaceFactor };\n    const lines = engine$1(attributedString, container, layoutOptions).flat();\n    return Object.assign({}, node, { lines });\n};\n// Consecutive TSpan elements should be joined with a space\nconst joinTSpanLines = (node) => {\n    const children = node.children.map((child, index) => {\n        if (!isTspan(child))\n            return child;\n        const textInstance = child.children[0];\n        if (child.props.x === undefined &&\n            index < node.children.length - 1 &&\n            textInstance?.value) {\n            return Object.assign({}, child, {\n                children: [{ ...textInstance, value: `${textInstance.value} ` }],\n            });\n        }\n        return child;\n    }, []);\n    return Object.assign({}, node, { children });\n};\nconst layoutText$1 = (fontStore, node) => {\n    if (!node.children)\n        return node;\n    let currentXOffset = node.props?.x || 0;\n    const layoutFn = layoutTspan(fontStore);\n    const joinedNode = joinTSpanLines(node);\n    const children = joinedNode.children.map((child) => {\n        const childWithLayout = layoutFn(child, currentXOffset);\n        currentXOffset += childWithLayout.lines[0].xAdvance;\n        return childWithLayout;\n    });\n    return Object.assign({}, node, { children });\n};\n\nconst isDefs = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Defs;\nconst getDefs = (node) => {\n    const children = node.children || [];\n    const defs = children.find(isDefs);\n    const values = defs?.children || [];\n    return values.reduce((acc, value) => {\n        const id = value.props?.id;\n        if (id)\n            acc[id] = value;\n        return acc;\n    }, {});\n};\n\nconst isNotDefs = (node) => node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Defs;\nconst detachDefs = (node) => {\n    if (!node.children)\n        return node;\n    const children = node.children.filter(isNotDefs);\n    return Object.assign({}, node, { children });\n};\nconst URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\nconst replaceDef = (defs, value) => {\n    if (!value)\n        return undefined;\n    if (!URL_REGEX.test(value))\n        return value;\n    const match = value.match(URL_REGEX);\n    return defs[match[1]];\n};\nconst parseNodeDefs = (defs) => (node) => {\n    const props = node.props;\n    const fill = `fill` in props ? replaceDef(defs, props?.fill) : undefined;\n    const clipPath = `clipPath` in props\n        ? replaceDef(defs, props?.clipPath)\n        : undefined;\n    const newProps = Object.assign({}, node.props, { fill, clipPath });\n    const children = node.children\n        ? node.children.map(parseNodeDefs(defs))\n        : undefined;\n    return Object.assign({}, node, { props: newProps, children });\n};\nconst parseDefs = (root) => {\n    if (!root.children)\n        return root;\n    const defs = getDefs(root);\n    const children = root.children.map(parseNodeDefs(defs));\n    return Object.assign({}, root, { children });\n};\nconst replaceDefs = (node) => {\n    return detachDefs(parseDefs(node));\n};\n\nconst parseViewbox = (value) => {\n    if (!value)\n        return null;\n    if (typeof value !== 'string')\n        return value;\n    const values = value.split(/[,\\s]+/).map(_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat);\n    if (values.length !== 4)\n        return null;\n    return { minX: values[0], minY: values[1], maxX: values[2], maxY: values[3] };\n};\n\nconst getContainer$1 = (node) => {\n    const viewbox = parseViewbox(node.props.viewBox);\n    if (viewbox) {\n        return { width: viewbox.maxX, height: viewbox.maxY };\n    }\n    if (node.props.width && node.props.height) {\n        return {\n            width: (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat)(node.props.width),\n            height: (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat)(node.props.height),\n        };\n    }\n    return { width: 0, height: 0 };\n};\n\nconst BASE_SVG_INHERITED_PROPS = [\n    'x',\n    'y',\n    'clipPath',\n    'clipRule',\n    'opacity',\n    'fill',\n    'fillOpacity',\n    'fillRule',\n    'stroke',\n    'strokeLinecap',\n    'strokeLinejoin',\n    'strokeOpacity',\n    'strokeWidth',\n    'textAnchor',\n    'dominantBaseline',\n    'color',\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontWeight',\n    'letterSpacing',\n    'opacity',\n    'textDecoration',\n    'lineHeight',\n    'textAlign',\n    'visibility',\n    'wordSpacing',\n];\n// Do not inherit \"x\" for <tspan> elements from <text> parent\nconst TEXT_SVG_INHERITED_PROPS = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.without)(['x'], BASE_SVG_INHERITED_PROPS);\nconst SVG_INHERITED_PROPS = {\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text]: TEXT_SVG_INHERITED_PROPS,\n};\nconst getInheritProps = (node) => {\n    const props = node.props || {};\n    const svgInheritedProps = SVG_INHERITED_PROPS[node.type] ?? BASE_SVG_INHERITED_PROPS;\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.pick)(svgInheritedProps, props);\n};\nconst inheritProps = (node) => {\n    if (!node.children)\n        return node;\n    const inheritedProps = getInheritProps(node);\n    const children = node.children.map((child) => {\n        const props = Object.assign({}, inheritedProps, child.props || {});\n        const newChild = Object.assign({}, child, { props });\n        return inheritProps(newChild);\n    });\n    return Object.assign({}, node, { children });\n};\n\nconst parseAspectRatio = (value) => {\n    if (typeof value !== 'string')\n        return value;\n    const match = value\n        .replace(/[\\s\\r\\t\\n]+/gm, ' ')\n        .replace(/^defer\\s/, '')\n        .split(' ');\n    const align = (match[0] || 'xMidYMid');\n    const meetOrSlice = (match[1] ||\n        'meet');\n    return { align, meetOrSlice };\n};\n\nconst STYLE_PROPS = [\n    'width',\n    'height',\n    'color',\n    'stroke',\n    'strokeWidth',\n    'opacity',\n    'fillOpacity',\n    'strokeOpacity',\n    'fill',\n    'fillRule',\n    'clipPath',\n    'offset',\n    'transform',\n    'strokeLinejoin',\n    'strokeLinecap',\n    'strokeDasharray',\n    'gradientUnits',\n    'gradientTransform',\n];\nconst VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nconst HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\nconst isSvg$3 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg;\nconst isText$5 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text;\nconst isTextInstance$3 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance;\nconst transformPercent = (container) => (props) => (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.mapValues)(props, (value, key) => {\n    const match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n    if (match && VERTICAL_PROPS.includes(key)) {\n        return match.percent * container.height;\n    }\n    if (match && HORIZONTAL_PROPS.includes(key)) {\n        return match.percent * container.width;\n    }\n    return value;\n});\nconst parsePercent = (value) => {\n    const match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n    return match ? match.percent : (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat)(value);\n};\nconst parseTransform = (container) => (value) => {\n    return (0,_react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(container, { transform: value }).transform;\n};\nconst parseProps = (container) => (node) => {\n    let props = transformPercent(container)(node.props);\n    props = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n        x: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        x1: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        x2: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        y: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        y1: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        y2: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        r: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        rx: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        ry: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        cx: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        cy: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        width: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        height: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        offset: parsePercent,\n        fill: _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.transformColor,\n        opacity: parsePercent,\n        stroke: _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.transformColor,\n        stopOpacity: parsePercent,\n        stopColor: _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.transformColor,\n        transform: parseTransform(container),\n        gradientTransform: parseTransform(container),\n    }, props);\n    return Object.assign({}, node, { props });\n};\nconst mergeStyles$1 = (node) => {\n    const style = node.style || {};\n    const props = Object.assign({}, style, node.props);\n    return Object.assign({}, node, { props });\n};\nconst removeNoneValues = (node) => {\n    const removeNone = (value) => (value === 'none' ? null : value);\n    const props = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.mapValues)(node.props, removeNone);\n    return Object.assign({}, node, { props });\n};\nconst pickStyleProps = (node) => {\n    const props = node.props || {};\n    const styleProps = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.pick)(STYLE_PROPS, props);\n    const style = Object.assign({}, styleProps, node.style || {});\n    return Object.assign({}, node, { style });\n};\nconst parseSvgProps = (node) => {\n    const props = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n        width: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        height: _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat,\n        viewBox: parseViewbox,\n        preserveAspectRatio: parseAspectRatio,\n    }, node.props);\n    return Object.assign({}, node, { props });\n};\nconst wrapBetweenTspan = (node) => ({\n    type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Tspan,\n    props: {},\n    style: {},\n    children: [node],\n});\nconst addMissingTspan = (node) => {\n    if (!isText$5(node))\n        return node;\n    if (!node.children)\n        return node;\n    const resolveChild = (child) => isTextInstance$3(child) ? wrapBetweenTspan(child) : child;\n    const children = node.children.map(resolveChild);\n    return Object.assign({}, node, { children });\n};\nconst parseText = (fontStore) => (node) => {\n    if (isText$5(node))\n        return layoutText$1(fontStore, node);\n    if (!node.children)\n        return node;\n    const children = node.children.map(parseText(fontStore));\n    return Object.assign({}, node, { children });\n};\nconst resolveSvgNode = (container) => (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(parseProps(container), addMissingTspan, removeNoneValues, mergeStyles$1);\nconst resolveChildren = (container) => (node) => {\n    if (!node.children)\n        return node;\n    const resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveChildren(container), resolveSvgNode(container));\n    const children = node.children.map(resolveChild);\n    return Object.assign({}, node, { children });\n};\nconst buildXLinksIndex = (node) => {\n    const idIndex = {};\n    const listToExplore = node.children?.slice(0) || [];\n    while (listToExplore.length > 0) {\n        const child = listToExplore.shift();\n        if (child.props && 'id' in child.props) {\n            idIndex[child.props.id] = child;\n        }\n        if (child.children)\n            listToExplore.push(...child.children);\n    }\n    return idIndex;\n};\nconst replaceXLinks = (node, idIndex) => {\n    if (node.props && 'xlinkHref' in node.props) {\n        const linkedNode = idIndex[node.props.xlinkHref.replace(/^#/, '')];\n        // No node to extend from\n        if (!linkedNode)\n            return node;\n        const newProps = Object.assign({}, linkedNode.props, node.props);\n        delete newProps.xlinkHref;\n        return Object.assign({}, linkedNode, { props: newProps });\n    }\n    const children = node.children?.map((child) => replaceXLinks(child, idIndex));\n    return Object.assign({}, node, { children });\n};\nconst resolveXLinks = (node) => {\n    const idIndex = buildXLinksIndex(node);\n    return replaceXLinks(node, idIndex);\n};\nconst resolveSvgRoot = (node, fontStore) => {\n    const container = getContainer$1(node);\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(replaceDefs, parseText(fontStore), parseSvgProps, pickStyleProps, inheritProps, resolveChildren(container), resolveXLinks)(node);\n};\n/**\n * Pre-process SVG nodes so they can be rendered in the next steps\n *\n * @param node - Root node\n * @param fontStore - Font store\n * @returns Root node\n */\nconst resolveSvg = (node, fontStore) => {\n    if (!('children' in node))\n        return node;\n    const resolveChild = (child) => resolveSvg(child, fontStore);\n    const root = isSvg$3(node) ? resolveSvgRoot(node, fontStore) : node;\n    const children = root.children?.map(resolveChild);\n    return Object.assign({}, root, { children });\n};\n\nlet instancePromise;\nconst loadYoga = async () => {\n    // Yoga WASM binaries must be asynchronously compiled and loaded\n    // to prevent Event emitter memory leak warnings, Yoga must be loaded only once\n    const instance = await (instancePromise ??= (0,yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.loadYoga)());\n    const config = instance.Config.create();\n    config.setPointScaleFactor(0);\n    const node = { create: () => instance.Node.createWithConfig(config) };\n    return { node };\n};\n\nconst resolveYoga = async (root) => {\n    const yoga = await loadYoga();\n    return Object.assign({}, root, { yoga });\n};\n\nconst getZIndex = (node) => node.style.zIndex;\nconst shouldSort = (node) => node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Document && node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg;\nconst sortZIndex = (a, b) => {\n    const za = getZIndex(a);\n    const zb = getZIndex(b);\n    if (!za && !zb)\n        return 0;\n    if (!za)\n        return 1;\n    if (!zb)\n        return -1;\n    return zb - za;\n};\n/**\n * Sort children by zIndex value\n *\n * @param node\n * @returns Node\n */\nconst resolveNodeZIndex = (node) => {\n    if (!node.children)\n        return node;\n    const sortedChildren = shouldSort(node)\n        ? node.children.sort(sortZIndex)\n        : node.children;\n    const children = sortedChildren.map(resolveNodeZIndex);\n    return Object.assign({}, node, { children });\n};\n/**\n * Sort children by zIndex value\n *\n * @param node\n * @returns Node\n */\nconst resolveZIndex = (root) => resolveNodeZIndex(root);\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = (0,emoji_regex__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n/**\n * When an emoji as no variations, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst removeVariationSelectors = (x) => x !== '️';\nconst getCodePoints = (string, withVariationSelectors = false) => Array.from(string)\n    .filter(withVariationSelectors ? () => true : removeVariationSelectors)\n    .map((char) => char.codePointAt(0).toString(16))\n    .join('-');\nconst buildEmojiUrl = (emoji, source) => {\n    if ('builder' in source) {\n        return source.builder(getCodePoints(emoji, source.withVariationSelectors));\n    }\n    const { url, format = 'png', withVariationSelectors } = source;\n    return `${url}${getCodePoints(emoji, withVariationSelectors)}.${format}`;\n};\nconst fetchEmojis = (string, source) => {\n    if (!source)\n        return [];\n    const promises = [];\n    Array.from(string.matchAll(regex)).forEach((match) => {\n        const emoji = match[0];\n        if (!emojis[emoji] || emojis[emoji].loading) {\n            const emojiUrl = buildEmojiUrl(emoji, source);\n            emojis[emoji] = { loading: true };\n            promises.push((0,_react_pdf_image__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({ uri: emojiUrl }).then((image) => {\n                emojis[emoji].loading = false;\n                emojis[emoji].data = image.data;\n            }));\n        }\n    });\n    return promises;\n};\nconst embedEmojis = (fragments) => {\n    const result = [];\n    for (let i = 0; i < fragments.length; i += 1) {\n        const fragment = fragments[i];\n        let lastIndex = 0;\n        Array.from(fragment.string.matchAll(regex)).forEach((match) => {\n            const { index } = match;\n            const emoji = match[0];\n            const emojiSize = fragment.attributes.fontSize;\n            const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n            // If emoji image was found, we create a new fragment with the\n            // correct attachment and object substitution character;\n            if (emojis[emoji] && emojis[emoji].data) {\n                result.push({\n                    string: chunk.replace(match[0], String.fromCharCode(0xfffc)),\n                    attributes: {\n                        ...fragment.attributes,\n                        attachment: {\n                            width: emojiSize,\n                            height: emojiSize,\n                            yOffset: Math.floor(emojiSize * 0.1),\n                            image: emojis[emoji].data,\n                        },\n                    },\n                });\n            }\n            else {\n                // If no emoji data, we try to use emojis in the font\n                result.push({\n                    string: chunk,\n                    attributes: fragment.attributes,\n                });\n            }\n            lastIndex = index + emoji.length;\n        });\n        if (lastIndex < fragment.string.length) {\n            result.push({\n                string: fragment.string.slice(lastIndex),\n                attributes: fragment.attributes,\n            });\n        }\n    }\n    return result;\n};\n\n/**\n * Get image source\n *\n * @param node - Image node\n * @returns Image src\n */\nconst getSource = (node) => {\n    if (node.props.src)\n        return node.props.src;\n    if (node.props.source)\n        return node.props.source;\n};\n\n/**\n * Resolves `src` to `@react-pdf/image` interface.\n *\n * Also it handles factories and async sources.\n *\n * @param src\n * @returns Resolved src\n */\nconst resolveSource = async (src) => {\n    const source = typeof src === 'function' ? await src() : await src;\n    return typeof source === 'string' ? { uri: source } : source;\n};\n\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param node\n */\nconst fetchImage = async (node) => {\n    const src = getSource(node);\n    const { cache } = node.props;\n    if (!src) {\n        console.warn(false, 'Image should receive either a \"src\" or \"source\" prop');\n        return;\n    }\n    try {\n        const source = await resolveSource(src);\n        if (!source) {\n            throw new Error(`Image's \"src\" or \"source\" prop returned ${source}`);\n        }\n        node.image = await (0,_react_pdf_image__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(source, { cache });\n        if (Buffer.isBuffer(source) || source instanceof Blob)\n            return;\n        node.image.key = 'data' in source ? source.data.toString() : source.uri;\n    }\n    catch (e) {\n        console.warn(e.message);\n    }\n};\n\nconst isImage$2 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image;\n/**\n * Get all asset promises that need to be resolved\n *\n * @param fontStore - Font store\n * @param node - Root node\n * @returns Asset promises\n */\nconst fetchAssets = (fontStore, node) => {\n    const promises = [];\n    const listToExplore = node.children?.slice(0) || [];\n    const emojiSource = fontStore ? fontStore.getEmojiSource() : null;\n    while (listToExplore.length > 0) {\n        const n = listToExplore.shift();\n        if (isImage$2(n)) {\n            promises.push(fetchImage(n));\n        }\n        if (fontStore && n.style?.fontFamily) {\n            const fontFamilies = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.castArray)(n.style.fontFamily);\n            promises.push(...fontFamilies.map((fontFamily) => fontStore.load({\n                fontFamily,\n                fontStyle: n.style.fontStyle,\n                fontWeight: n.style.fontWeight,\n            })));\n        }\n        if (typeof n === 'string') {\n            promises.push(...fetchEmojis(n, emojiSource));\n        }\n        if ('value' in n && typeof n.value === 'string') {\n            promises.push(...fetchEmojis(n.value, emojiSource));\n        }\n        if (n.children) {\n            n.children.forEach((childNode) => {\n                listToExplore.push(childNode);\n            });\n        }\n    }\n    return promises;\n};\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param node root node\n * @param fontStore font store\n * @returns Root node\n */\nconst resolveAssets = async (node, fontStore) => {\n    const promises = fetchAssets(fontStore, node);\n    await Promise.all(promises);\n    return node;\n};\n\nconst isLink$1 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Link;\nconst DEFAULT_LINK_STYLES = {\n    color: 'blue',\n    textDecoration: 'underline',\n};\n/**\n * Computes styles using stylesheet\n *\n * @param container\n * @param node - Document node\n * @returns Computed styles\n */\nconst computeStyle = (container, node) => {\n    let baseStyle = [node.style];\n    if (isLink$1(node)) {\n        baseStyle = Array.isArray(node.style)\n            ? [DEFAULT_LINK_STYLES, ...node.style]\n            : [DEFAULT_LINK_STYLES, node.style];\n    }\n    return (0,_react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(container, baseStyle);\n};\n/**\n * Resolves node styles\n *\n * @param container\n * @returns Resolve node styles\n */\nconst resolveNodeStyles = (container) => (node) => {\n    const style = computeStyle(container, node);\n    if (!node.children)\n        return Object.assign({}, node, { style });\n    const children = node.children.map(resolveNodeStyles(container));\n    return Object.assign({}, node, { style, children });\n};\n/**\n * Resolves page styles\n *\n * @param page Document page\n * @returns Document page with resolved styles\n */\nconst resolvePageStyles = (page) => {\n    const dpi = page.props?.dpi || 72;\n    const style = page.style;\n    const width = page.box?.width || style.width;\n    const height = page.box?.height || style.height;\n    const orientation = page.props?.orientation || 'portrait';\n    const remBase = style?.fontSize || 18;\n    const container = { width, height, orientation, dpi, remBase };\n    return resolveNodeStyles(container)(page);\n};\n/**\n * Resolves document styles\n *\n * @param root - Document root\n * @returns Document root with resolved styles\n */\nconst resolveStyles = (root) => {\n    if (!root.children)\n        return root;\n    const children = root.children.map(resolvePageStyles);\n    return Object.assign({}, root, { children });\n};\n\nconst getTransformStyle = (s) => (node) => (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(node.style?.[s]) ? '50%' : node.style?.[s] ?? null;\n/**\n * Get node origin\n *\n * @param node\n * @returns {{ left?: number, top?: number }} node origin\n */\nconst getOrigin = (node) => {\n    if (!node.box)\n        return null;\n    const { left, top, width, height } = node.box;\n    const transformOriginX = getTransformStyle('transformOriginX')(node);\n    const transformOriginY = getTransformStyle('transformOriginY')(node);\n    const percentX = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(transformOriginX);\n    const percentY = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(transformOriginY);\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(offsetX) || typeof offsetX === 'string')\n        throw new Error(`Invalid origin offsetX: ${offsetX}`);\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(offsetY) || typeof offsetY === 'string')\n        throw new Error(`Invalid origin offsetY: ${offsetY}`);\n    return { left: left + offsetX, top: top + offsetY };\n};\n\n/**\n * Resolve node origin\n *\n * @param node\n * @returns Node with origin attribute\n */\nconst resolveNodeOrigin = (node) => {\n    const origin = getOrigin(node);\n    const newNode = Object.assign({}, node, { origin });\n    if (!node.children)\n        return newNode;\n    const children = node.children.map(resolveNodeOrigin);\n    return Object.assign({}, newNode, { children });\n};\n/**\n * Resolve document origins\n *\n * @param root - Document root\n * @returns Document root\n */\nconst resolveOrigin = (root) => {\n    if (!root.children)\n        return root;\n    const children = root.children.map(resolveNodeOrigin);\n    return Object.assign({}, root, { children });\n};\n\nconst getBookmarkValue = (bookmark) => {\n    return typeof bookmark === 'string'\n        ? { title: bookmark, fit: false, expanded: false }\n        : bookmark;\n};\nconst resolveBookmarks = (node) => {\n    let refs = 0;\n    const children = (node.children || []).slice(0);\n    const listToExplore = children.map((value) => ({\n        value,\n        parent: null,\n    }));\n    while (listToExplore.length > 0) {\n        const element = listToExplore.shift();\n        if (!element)\n            break;\n        const child = element.value;\n        let parent = element.parent;\n        if (child.props && 'bookmark' in child.props) {\n            const bookmark = getBookmarkValue(child.props.bookmark);\n            const ref = refs++;\n            const newHierarchy = { ref, parent: parent?.ref, ...bookmark };\n            child.props.bookmark = newHierarchy;\n            parent = newHierarchy;\n        }\n        if (child.children) {\n            child.children.forEach((childNode) => {\n                listToExplore.push({ value: childNode, parent });\n            });\n        }\n    }\n    return node;\n};\n\nconst VALID_ORIENTATIONS = ['portrait', 'landscape'];\n/**\n * Get page orientation. Defaults to portrait\n *\n * @param page - Page object\n * @returns Page orientation\n */\nconst getOrientation = (page) => {\n    const value = page.props?.orientation || 'portrait';\n    return VALID_ORIENTATIONS.includes(value) ? value : 'portrait';\n};\n\n/**\n * Return true if page is landscape\n *\n * @param page - Page instance\n * @returns Is page landscape\n */\nconst isLandscape = (page) => getOrientation(page) === 'landscape';\n\n// Page sizes for 72dpi. 72dpi is used internally by pdfkit.\nconst PAGE_SIZES = {\n    '4A0': [4767.87, 6740.79],\n    '2A0': [3370.39, 4767.87],\n    A0: [2383.94, 3370.39],\n    A1: [1683.78, 2383.94],\n    A2: [1190.55, 1683.78],\n    A3: [841.89, 1190.55],\n    A4: [595.28, 841.89],\n    A5: [419.53, 595.28],\n    A6: [297.64, 419.53],\n    A7: [209.76, 297.64],\n    A8: [147.4, 209.76],\n    A9: [104.88, 147.4],\n    A10: [73.7, 104.88],\n    B0: [2834.65, 4008.19],\n    B1: [2004.09, 2834.65],\n    B2: [1417.32, 2004.09],\n    B3: [1000.63, 1417.32],\n    B4: [708.66, 1000.63],\n    B5: [498.9, 708.66],\n    B6: [354.33, 498.9],\n    B7: [249.45, 354.33],\n    B8: [175.75, 249.45],\n    B9: [124.72, 175.75],\n    B10: [87.87, 124.72],\n    C0: [2599.37, 3676.54],\n    C1: [1836.85, 2599.37],\n    C2: [1298.27, 1836.85],\n    C3: [918.43, 1298.27],\n    C4: [649.13, 918.43],\n    C5: [459.21, 649.13],\n    C6: [323.15, 459.21],\n    C7: [229.61, 323.15],\n    C8: [161.57, 229.61],\n    C9: [113.39, 161.57],\n    C10: [79.37, 113.39],\n    RA0: [2437.8, 3458.27],\n    RA1: [1729.13, 2437.8],\n    RA2: [1218.9, 1729.13],\n    RA3: [864.57, 1218.9],\n    RA4: [609.45, 864.57],\n    SRA0: [2551.18, 3628.35],\n    SRA1: [1814.17, 2551.18],\n    SRA2: [1275.59, 1814.17],\n    SRA3: [907.09, 1275.59],\n    SRA4: [637.8, 907.09],\n    EXECUTIVE: [521.86, 756.0],\n    FOLIO: [612.0, 936.0],\n    LEGAL: [612.0, 1008.0],\n    LETTER: [612.0, 792.0],\n    TABLOID: [792.0, 1224.0],\n    ID1: [153, 243],\n};\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param value - Scalar value\n * @returns Parsed value\n */\nconst parseValue = (value) => {\n    if (typeof value === 'number')\n        return { value, unit: undefined };\n    const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|px)?$/g.exec(value);\n    return match\n        ? { value: parseFloat(match[1]), unit: match[2] || 'pt' }\n        : { value, unit: undefined };\n};\n/**\n * Transform given scalar value to 72dpi equivalent of size\n *\n * @param value - Styles value\n * @param inputDpi - User defined dpi\n * @returns Transformed value\n */\nconst transformUnit = (value, inputDpi) => {\n    if (!value)\n        return 0;\n    const scalar = parseValue(value);\n    const outputDpi = 72;\n    const mmFactor = (1 / 25.4) * outputDpi;\n    const cmFactor = (1 / 2.54) * outputDpi;\n    if (typeof scalar.value === 'string')\n        throw new Error(`Invalid page size: ${value}`);\n    switch (scalar.unit) {\n        case 'in':\n            return scalar.value * outputDpi;\n        case 'mm':\n            return scalar.value * mmFactor;\n        case 'cm':\n            return scalar.value * cmFactor;\n        case 'px':\n            return Math.round(scalar.value * (outputDpi / inputDpi));\n        default:\n            return scalar.value;\n    }\n};\nconst transformUnits = ({ width, height }, dpi) => ({\n    width: transformUnit(width, dpi),\n    height: transformUnit(height, dpi),\n});\n/**\n * Transforms array into size object\n *\n * @param v - Values array\n * @returns Size object with width and height\n */\nconst toSizeObject = (v) => ({\n    width: v[0],\n    height: v[1],\n});\n/**\n * Flip size object\n *\n * @param v - Size object\n * @returns Flipped size object\n */\nconst flipSizeObject = (v) => ({\n    width: v.height,\n    height: v.width,\n});\n/**\n * Returns size object from a given string\n *\n * @param v - Page size string\n * @returns Size object with width and height\n */\nconst getStringSize = (v) => {\n    return toSizeObject(PAGE_SIZES[v.toUpperCase()]);\n};\n/**\n * Returns size object from a single number\n *\n * @param n - Page size number\n * @returns Size object with width and height\n */\nconst getNumberSize = (n) => toSizeObject([n, n]);\n/**\n * Return page size in an object { width, height }\n *\n * @param page - Page node\n * @returns Size object with width and height\n */\nconst getSize = (page) => {\n    const value = page.props?.size || 'A4';\n    const dpi = page.props?.dpi || 72;\n    let size;\n    if (typeof value === 'string') {\n        size = getStringSize(value);\n    }\n    else if (Array.isArray(value)) {\n        size = transformUnits(toSizeObject(value), dpi);\n    }\n    else if (typeof value === 'number') {\n        size = transformUnits(getNumberSize(value), dpi);\n    }\n    else {\n        size = transformUnits(value, dpi);\n    }\n    return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\n/**\n * Resolves page size\n *\n * @param page\n * @returns Page with resolved size in style attribute\n */\nconst resolvePageSize = (page) => {\n    const size = getSize(page);\n    const style = (0,_react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.flatten)(page.style || {});\n    return { ...page, style: { ...style, ...size } };\n};\n/**\n * Resolves page sizes\n *\n * @param root  -Document root\n * @returns Document root with resolved page sizes\n */\nconst resolvePageSizes = (root) => {\n    if (!root.children)\n        return root;\n    const children = root.children.map(resolvePageSize);\n    return Object.assign({}, root, { children });\n};\n\nconst isFixed = (node) => {\n    if (!node.props)\n        return false;\n    return 'fixed' in node.props ? node.props.fixed === true : false;\n};\n\n/**\n * Get line index at given height\n *\n * @param node\n * @param height\n */\nconst lineIndexAtHeight = (node, height) => {\n    let y = 0;\n    if (!node.lines)\n        return 0;\n    for (let i = 0; i < node.lines.length; i += 1) {\n        const line = node.lines[i];\n        if (y + line.box.height > height)\n            return i;\n        y += line.box.height;\n    }\n    return node.lines.length;\n};\n\n/**\n * Get height for given text line index\n *\n * @param node\n * @param index\n */\nconst heightAtLineIndex = (node, index) => {\n    let counter = 0;\n    if (!node.lines)\n        return counter;\n    for (let i = 0; i < index; i += 1) {\n        const line = node.lines[i];\n        if (!line)\n            break;\n        counter += line.box.height;\n    }\n    return counter;\n};\n\nconst getLineBreak = (node, height) => {\n    const top = node.box?.top || 0;\n    const widows = node.props.widows || 2;\n    const orphans = node.props.orphans || 2;\n    const linesQuantity = node.lines.length;\n    const slicedLine = lineIndexAtHeight(node, height - top);\n    if (slicedLine === 0) {\n        return 0;\n    }\n    if (linesQuantity < orphans) {\n        return linesQuantity;\n    }\n    if (slicedLine < orphans || linesQuantity < orphans + widows) {\n        return 0;\n    }\n    if (linesQuantity === orphans + widows) {\n        return orphans;\n    }\n    if (linesQuantity - slicedLine < widows) {\n        return linesQuantity - widows;\n    }\n    return slicedLine;\n};\n// Also receives contentArea in case it's needed\nconst splitText = (node, height) => {\n    const slicedLineIndex = getLineBreak(node, height);\n    const currentHeight = heightAtLineIndex(node, slicedLineIndex);\n    const nextHeight = node.box.height - currentHeight;\n    const current = Object.assign({}, node, {\n        box: {\n            ...node.box,\n            height: currentHeight,\n            borderBottomWidth: 0,\n        },\n        style: {\n            ...node.style,\n            marginBottom: 0,\n            paddingBottom: 0,\n            borderBottomWidth: 0,\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0,\n        },\n        lines: node.lines.slice(0, slicedLineIndex),\n    });\n    const next = Object.assign({}, node, {\n        box: {\n            ...node.box,\n            top: 0,\n            height: nextHeight,\n            borderTopWidth: 0,\n        },\n        style: {\n            ...node.style,\n            marginTop: 0,\n            paddingTop: 0,\n            borderTopWidth: 0,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0,\n        },\n        lines: node.lines.slice(slicedLineIndex),\n    });\n    return [current, next];\n};\n\nconst getTop$1 = (node) => node.box?.top || 0;\nconst hasFixedHeight = (node) => !(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(node.style?.height);\nconst splitNode = (node, height) => {\n    if (!node)\n        return [null, null];\n    const nodeTop = getTop$1(node);\n    const current = Object.assign({}, node, {\n        box: {\n            ...node.box,\n            borderBottomWidth: 0,\n        },\n        style: {\n            ...node.style,\n            marginBottom: 0,\n            paddingBottom: 0,\n            borderBottomWidth: 0,\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0,\n        },\n    });\n    current.style.height = height - nodeTop;\n    const nextHeight = hasFixedHeight(node)\n        ? node.box.height - (height - nodeTop)\n        : null;\n    const next = Object.assign({}, node, {\n        box: {\n            ...node.box,\n            top: 0,\n            borderTopWidth: 0,\n        },\n        style: {\n            ...node.style,\n            marginTop: 0,\n            paddingTop: 0,\n            borderTopWidth: 0,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0,\n        },\n    });\n    if (nextHeight) {\n        next.style.height = nextHeight;\n    }\n    return [current, next];\n};\n\nconst NON_WRAP_TYPES = [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg, _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Note, _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image, _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Canvas];\nconst getWrap = (node) => {\n    if (NON_WRAP_TYPES.includes(node.type))\n        return false;\n    if (!node.props)\n        return true;\n    return 'wrap' in node.props ? node.props.wrap : true;\n};\n\nconst getComputedPadding = (node, edge) => {\n    const { yogaNode } = node;\n    return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n/**\n * Get Yoga computed paddings. Zero otherwise\n *\n * @param  node\n * @returns paddings\n */\nconst getPadding = (node) => {\n    const { style, box } = node;\n    const paddingTop = getComputedPadding(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Top) ||\n        box?.paddingTop ||\n        style?.paddingTop ||\n        0;\n    const paddingRight = getComputedPadding(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Right) ||\n        box?.paddingRight ||\n        style?.paddingRight ||\n        0;\n    const paddingBottom = getComputedPadding(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Bottom) ||\n        box?.paddingBottom ||\n        style?.paddingBottom ||\n        0;\n    const paddingLeft = getComputedPadding(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Left) ||\n        box?.paddingLeft ||\n        style?.paddingLeft ||\n        0;\n    return { paddingTop, paddingRight, paddingBottom, paddingLeft };\n};\n\nconst getWrapArea = (page) => {\n    const height = page.style?.height;\n    const { paddingBottom } = getPadding(page);\n    return height - paddingBottom;\n};\n\nconst getContentArea = (page) => {\n    const height = page.style?.height;\n    const { paddingTop, paddingBottom } = getPadding(page);\n    return height - paddingBottom - paddingTop;\n};\n\nconst isString = (value) => typeof value === 'string';\nconst isNumber = (value) => typeof value === 'number';\nconst isBoolean = (value) => typeof value === 'boolean';\nconst isFragment = (value) => value && value.type === Symbol.for('react.fragment');\n/**\n * Transforms a react element instance to internal element format.\n *\n * Can return multiple instances in the case of arrays or fragments.\n *\n * @param element - React element\n * @returns Parsed React elements\n */\nconst createInstances = (element) => {\n    if (!element)\n        return [];\n    if (Array.isArray(element)) {\n        return element.reduce((acc, el) => acc.concat(createInstances(el)), []);\n    }\n    if (isBoolean(element)) {\n        return [];\n    }\n    if (isString(element) || isNumber(element)) {\n        return [{ type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance, value: `${element}` }];\n    }\n    if (isFragment(element)) {\n        // @ts-expect-error figure out why this is complains\n        return createInstances(element.props.children);\n    }\n    if (!isString(element.type)) {\n        // @ts-expect-error figure out why this is complains\n        return createInstances(element.type(element.props));\n    }\n    const { type, props: { style = {}, children, ...props }, } = element;\n    const nextChildren = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.castArray)(children).reduce((acc, child) => acc.concat(createInstances(child)), []);\n    return [\n        {\n            type,\n            style,\n            props,\n            children: nextChildren,\n        },\n    ];\n};\n\nconst getBreak = (node) => 'break' in node.props ? node.props.break : false;\nconst getMinPresenceAhead = (node) => 'minPresenceAhead' in node.props ? node.props.minPresenceAhead : 0;\nconst getFurthestEnd = (elements) => Math.max(...elements.map((node) => node.box.top + node.box.height));\nconst getEndOfMinPresenceAhead = (child) => {\n    return (child.box.top +\n        child.box.height +\n        child.box.marginBottom +\n        getMinPresenceAhead(child));\n};\nconst getEndOfPresence = (child, futureElements) => {\n    const afterMinPresenceAhead = getEndOfMinPresenceAhead(child);\n    const endOfFurthestFutureElement = getFurthestEnd(futureElements.filter((node) => !('fixed' in node.props)));\n    return Math.min(afterMinPresenceAhead, endOfFurthestFutureElement);\n};\nconst shouldBreak = (child, futureElements, height) => {\n    if ('fixed' in child.props)\n        return false;\n    const shouldSplit = height < child.box.top + child.box.height;\n    const canWrap = getWrap(child);\n    // Calculate the y coordinate where the desired presence of the child ends\n    const endOfPresence = getEndOfPresence(child, futureElements);\n    // If the child is already at the top of the page, breaking won't improve its presence\n    // (as long as react-pdf does not support breaking into differently sized containers)\n    const breakingImprovesPresence = child.box.top > child.box.marginTop;\n    return (getBreak(child) ||\n        (shouldSplit && !canWrap) ||\n        (!shouldSplit && endOfPresence > height && breakingImprovesPresence));\n};\n\nconst IGNORABLE_CODEPOINTS = [\n    8232, // LINE_SEPARATOR\n    8233, // PARAGRAPH_SEPARATOR\n];\nconst buildSubsetForFont = (font) => IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font &&\n        font.hasGlyphForCodePoint &&\n        font.hasGlyphForCodePoint(codePoint)) {\n        return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n}, []);\nconst ignoreChars = (fragments) => fragments.map((fragment) => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font[0]);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n    return {\n        string: fragment.string.replace(subsetRegex, ''),\n        attributes: fragment.attributes,\n    };\n});\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\nconst isImage$1 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image;\nconst isTextInstance$2 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance;\n/**\n * Get textkit fragments of given node object\n *\n * @param fontStore - Font store\n * @param instance - Node\n * @param parentLink - Parent link\n * @param level - Fragment level\n * @returns Text fragments\n */\nconst getFragments = (fontStore, instance, parentLink = null, level = 0) => {\n    if (!instance)\n        return [{ string: '' }];\n    let fragments = [];\n    const { color = 'black', direction = 'ltr', fontFamily = 'Helvetica', fontWeight, fontStyle, fontSize = 18, textAlign, lineHeight, textDecoration, textDecorationColor, textDecorationStyle, textTransform, letterSpacing, textIndent, opacity, verticalAlign, } = instance.style;\n    const fontFamilies = typeof fontFamily === 'string' ? [fontFamily] : [...(fontFamily || [])];\n    // Fallback font\n    fontFamilies.push('Helvetica');\n    const font = fontFamilies.map((fontFamilyName) => {\n        const opts = { fontFamily: fontFamilyName, fontWeight, fontStyle };\n        const obj = fontStore.getFont(opts);\n        return obj?.data;\n    });\n    // Don't pass main background color to textkit. Will be rendered by the render package instead\n    const backgroundColor = level === 0 ? null : instance.style.backgroundColor;\n    const attributes = {\n        font,\n        color,\n        opacity,\n        fontSize,\n        lineHeight,\n        direction,\n        verticalAlign,\n        backgroundColor,\n        indent: textIndent,\n        characterSpacing: letterSpacing,\n        strikeStyle: textDecorationStyle,\n        underlineStyle: textDecorationStyle,\n        underline: textDecoration === 'underline' ||\n            textDecoration === 'underline line-through' ||\n            textDecoration === 'line-through underline',\n        strike: textDecoration === 'line-through' ||\n            textDecoration === 'underline line-through' ||\n            textDecoration === 'line-through underline',\n        strikeColor: textDecorationColor || color,\n        underlineColor: textDecorationColor || color,\n        // @ts-expect-error allow this props access\n        link: parentLink || instance.props?.src || instance.props?.href,\n        align: textAlign || (direction === 'rtl' ? 'right' : 'left'),\n    };\n    for (let i = 0; i < instance.children.length; i += 1) {\n        const child = instance.children[i];\n        if (isImage$1(child)) {\n            fragments.push({\n                string: String.fromCharCode(0xfffc),\n                attributes: {\n                    ...attributes,\n                    attachment: {\n                        width: (child.style.width || fontSize),\n                        height: (child.style.height || fontSize),\n                        image: child.image.data,\n                    },\n                },\n            });\n        }\n        else if (isTextInstance$2(child)) {\n            fragments.push({\n                string: transformText(child.value, textTransform),\n                attributes,\n            });\n        }\n        else if (child) {\n            fragments.push(...getFragments(fontStore, child, attributes.link, level + 1));\n        }\n    }\n    for (let i = 0; i < PREPROCESSORS.length; i += 1) {\n        const preprocessor = PREPROCESSORS[i];\n        fragments = preprocessor(fragments);\n    }\n    return fragments;\n};\n/**\n * Get textkit attributed string from text node\n *\n * @param fontStore - Font store\n * @param instance Node\n * @returns Attributed string\n */\nconst getAttributedString = (fontStore, instance) => {\n    const fragments = getFragments(fontStore, instance);\n    return (0,_react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.fromFragments)(fragments);\n};\n\nconst engines = {\n    bidi: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.bidi,\n    linebreaker: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.linebreaker,\n    justification: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.justification,\n    textDecoration: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.textDecoration,\n    scriptItemizer: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.scriptItemizer,\n    wordHyphenation: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.wordHyphenation,\n    fontSubstitution: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.fontSubstitution,\n};\nconst engine = (0,_react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(engines);\nconst getMaxLines = (node) => node.style?.maxLines;\nconst getTextOverflow = (node) => node.style?.textOverflow;\n/**\n * Get layout container for specific text node\n *\n * @param {number} width\n * @param {number} height\n * @param {Object} node\n * @returns {Object} layout container\n */\nconst getContainer = (width, height, node) => {\n    const maxLines = getMaxLines(node);\n    const textOverflow = getTextOverflow(node);\n    return {\n        x: 0,\n        y: 0,\n        width,\n        maxLines,\n        height: height || Infinity,\n        truncateMode: textOverflow,\n    };\n};\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nconst getLayoutOptions = (fontStore, node) => ({\n    hyphenationPenalty: node.props.hyphenationPenalty,\n    shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n    hyphenationCallback: node.props.hyphenationCallback ||\n        fontStore?.getHyphenationCallback() ||\n        null,\n});\n/**\n * Get text lines for given node\n *\n * @param node - Node\n * @param width - Container width\n * @param height - Container height\n * @param fontStore - Font store\n * @returns Layout lines\n */\nconst layoutText = (node, width, height, fontStore) => {\n    const attributedString = getAttributedString(fontStore, node);\n    const container = getContainer(width, height, node);\n    const options = getLayoutOptions(fontStore, node);\n    const lines = engine(attributedString, container, options);\n    return lines.reduce((acc, line) => [...acc, ...line], []);\n};\n\nconst isSvg$2 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg;\nconst isText$4 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text;\nconst shouldIterate = (node) => !isSvg$2(node) && !isText$4(node);\nconst shouldLayoutText = (node) => isText$4(node) && !node.lines;\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param node\n * @returns Layout node\n */\nconst resolveTextLayout = (node, fontStore) => {\n    if (shouldLayoutText(node)) {\n        const width = node.box.width - (node.box.paddingRight + node.box.paddingLeft);\n        const height = node.box.height - (node.box.paddingTop + node.box.paddingBottom);\n        node.lines = layoutText(node, width, height, fontStore);\n    }\n    if (shouldIterate(node)) {\n        if (!node.children)\n            return node;\n        const mapChild = (child) => resolveTextLayout(child, fontStore);\n        const children = node.children.map(mapChild);\n        return Object.assign({}, node, { children });\n    }\n    return node;\n};\n\nconst BASE_INHERITABLE_PROPERTIES = [\n    'color',\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontWeight',\n    'letterSpacing',\n    'opacity',\n    'textDecoration',\n    'textTransform',\n    'lineHeight',\n    'textAlign',\n    'visibility',\n    'wordSpacing',\n];\nconst TEXT_INHERITABLE_PROPERTIES = [\n    ...BASE_INHERITABLE_PROPERTIES,\n    'backgroundColor',\n];\nconst isType$2 = (type) => (node) => node.type === type;\nconst isSvg$1 = isType$2(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg);\nconst isText$3 = isType$2(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text);\n// Merge style values\nconst mergeValues = (styleName, value, inheritedValue) => {\n    switch (styleName) {\n        case 'textDecoration': {\n            // merge not none and not false textDecoration values to one rule\n            return [inheritedValue, value].filter((v) => v && v !== 'none').join(' ');\n        }\n        default:\n            return value;\n    }\n};\n// Merge inherited and node styles\nconst merge = (inheritedStyles, style) => {\n    const mergedStyles = { ...inheritedStyles };\n    Object.entries(style).forEach(([styleName, value]) => {\n        mergedStyles[styleName] = mergeValues(styleName, value, inheritedStyles[styleName]);\n    });\n    return mergedStyles;\n};\n/**\n * Merges styles with node\n *\n * @param inheritedStyles - Style object\n * @returns Merge styles function\n */\nconst mergeStyles = (inheritedStyles) => (node) => {\n    const style = merge(inheritedStyles, node.style || {});\n    return Object.assign({}, node, { style });\n};\n/**\n * Inherit style values from the root to the leafs\n *\n * @param node - Document root\n * @returns Document root with inheritance\n *\n */\nconst resolveInheritance = (node) => {\n    if (isSvg$1(node))\n        return node;\n    if (!('children' in node))\n        return node;\n    const inheritableProperties = isText$3(node)\n        ? TEXT_INHERITABLE_PROPERTIES\n        : BASE_INHERITABLE_PROPERTIES;\n    const inheritStyles = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.pick)(inheritableProperties, node.style || {});\n    const resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveInheritance, mergeStyles(inheritStyles));\n    const children = node.children.map(resolveChild);\n    return Object.assign({}, node, { children });\n};\n\nconst getComputedMargin = (node, edge) => {\n    const { yogaNode } = node;\n    return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param node\n * @returns Margins\n */\nconst getMargin = (node) => {\n    const { style, box } = node;\n    const marginTop = getComputedMargin(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Top) ||\n        box?.marginTop ||\n        style?.marginTop ||\n        0;\n    const marginRight = getComputedMargin(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Right) ||\n        box?.marginRight ||\n        style?.marginRight ||\n        0;\n    const marginBottom = getComputedMargin(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Bottom) ||\n        box?.marginBottom ||\n        style?.marginBottom ||\n        0;\n    const marginLeft = getComputedMargin(node, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Left) ||\n        box?.marginLeft ||\n        style?.marginLeft ||\n        0;\n    return { marginTop, marginRight, marginBottom, marginLeft };\n};\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param node\n * @returns Position\n */\nconst getPosition = (node) => {\n    const { yogaNode } = node;\n    return {\n        top: yogaNode?.getComputedTop() || 0,\n        right: yogaNode?.getComputedRight() || 0,\n        bottom: yogaNode?.getComputedBottom() || 0,\n        left: yogaNode?.getComputedLeft() || 0,\n    };\n};\n\nconst DEFAULT_DIMENSION = {\n    width: 0,\n    height: 0,\n};\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param node\n * @returns Dimensions\n */\nconst getDimension = (node) => {\n    const { yogaNode } = node;\n    if (!yogaNode)\n        return DEFAULT_DIMENSION;\n    return {\n        width: yogaNode.getComputedWidth(),\n        height: yogaNode.getComputedHeight(),\n    };\n};\n\nconst getComputedBorder = (yogaNode, edge) => (yogaNode ? yogaNode.getComputedBorder(edge) : 0);\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param node\n * @returns Border widths\n */\nconst getBorderWidth = (node) => {\n    const { yogaNode } = node;\n    return {\n        borderTopWidth: getComputedBorder(yogaNode, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Top),\n        borderRightWidth: getComputedBorder(yogaNode, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Right),\n        borderBottomWidth: getComputedBorder(yogaNode, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Bottom),\n        borderLeftWidth: getComputedBorder(yogaNode, yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Left),\n    };\n};\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param value - Display\n * @returns Node instance wrapper\n */\nconst setDisplay = (value) => (node) => {\n    const { yogaNode } = node;\n    if (yogaNode) {\n        yogaNode.setDisplay(value === 'none' ? yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Display.None : yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Display.Flex);\n    }\n    return node;\n};\n\nconst OVERFLOW = {\n    hidden: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Overflow.Hidden,\n    scroll: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Overflow.Scroll,\n};\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param value - Overflow value\n * @returns Node instance wrapper\n */\nconst setOverflow = (value) => (node) => {\n    const { yogaNode } = node;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n        const overflow = OVERFLOW[value] || yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Overflow.Visible;\n        yogaNode.setOverflow(overflow);\n    }\n    return node;\n};\n\nconst FLEX_WRAP = {\n    wrap: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Wrap.Wrap,\n    'wrap-reverse': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Wrap.WrapReverse,\n};\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param value - Flex wrap value\n * @returns Node instance wrapper\n */\nconst setFlexWrap = (value) => (node) => {\n    const { yogaNode } = node;\n    if (yogaNode) {\n        const flexWrap = FLEX_WRAP[value] || yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Wrap.NoWrap;\n        yogaNode.setFlexWrap(flexWrap);\n    }\n    return node;\n};\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param attr - Property\n * @param edge - Edge\n * @returns Node instance wrapper\n */\nconst setYogaValue = (attr, edge) => (value) => (node) => {\n    const { yogaNode } = node;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n        const hasEdge = !(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(edge);\n        const fixedMethod = `set${(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.upperFirst)(attr)}`;\n        const autoMethod = `${fixedMethod}Auto`;\n        const percentMethod = `${fixedMethod}Percent`;\n        const percent = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n        if (percent && !yogaNode[percentMethod]) {\n            throw new Error(`You can't pass percentage values to ${attr} property`);\n        }\n        if (percent) {\n            if (hasEdge) {\n                yogaNode[percentMethod]?.(edge, percent.value);\n            }\n            else {\n                yogaNode[percentMethod]?.(percent.value);\n            }\n        }\n        else if (value === 'auto') {\n            if (hasEdge) {\n                yogaNode[autoMethod]?.(edge);\n            }\n            else {\n                yogaNode[autoMethod]?.();\n            }\n        }\n        else if (hasEdge) {\n            yogaNode[fixedMethod]?.(edge, value);\n        }\n        else {\n            yogaNode[fixedMethod]?.(value);\n        }\n    }\n    return node;\n};\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param  value - Flex grow value\n * @returns Node instance wrapper\n */\nconst setFlexGrow = (value) => (node) => {\n    return setYogaValue('flexGrow')(value || 0)(node);\n};\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param flex - Basis value\n * @param node - Node instance\n * @returns Node instance\n */\nconst setFlexBasis = setYogaValue('flexBasis');\n\nconst ALIGN = {\n    'flex-start': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.FlexStart,\n    center: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.Center,\n    'flex-end': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.FlexEnd,\n    stretch: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.Stretch,\n    baseline: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.Baseline,\n    'space-between': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.SpaceBetween,\n    'space-around': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.SpaceAround,\n    'space-evenly': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.SpaceEvenly,\n};\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param attr - Specific align property\n * @param value - Specific align value\n * @param node - Node\n * @returns Node\n */\nconst setAlign = (attr) => (value) => (node) => {\n    const { yogaNode } = node;\n    const defaultValue = attr === 'items' ? yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.Stretch : yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Align.Auto;\n    if (yogaNode) {\n        const align = ALIGN[value] || defaultValue;\n        yogaNode[`setAlign${(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.upperFirst)(attr)}`](align);\n    }\n    return node;\n};\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param align - Value\n * @param node - Node instance\n * @returns Node instance\n */\nconst setAlignSelf = setAlign('self');\n\n/**\n * Set align items attribute to node's Yoga instance\n *\n * @param align - Value\n * @param node - Node instance\n * @returns Node instance\n */\nconst setAlignItems = setAlign('items');\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param value - Flex shrink value\n * @returns Node instance wrapper\n */\nconst setFlexShrink = (value) => (node) => {\n    return setYogaValue('flexShrink')(value || 1)(node);\n};\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param value - Ratio\n * @returns Node instance\n */\nconst setAspectRatio = (value) => (node) => {\n    const { yogaNode } = node;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n        yogaNode.setAspectRatio(value);\n    }\n    return node;\n};\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param align - Value\n * @param node - Instance\n * @returns Node instance\n */\nconst setAlignContent = setAlign('content');\n\nconst POSITION = {\n    absolute: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.PositionType.Absolute,\n    relative: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.PositionType.Relative,\n    static: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.PositionType.Static,\n};\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param value - Position position type\n * @returns Node instance\n */\nconst setPositionType = (value) => (node) => {\n    const { yogaNode } = node;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n        yogaNode.setPositionType(POSITION[value]);\n    }\n    return node;\n};\n\nconst FLEX_DIRECTIONS = {\n    row: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.FlexDirection.Row,\n    'row-reverse': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.FlexDirection.RowReverse,\n    'column-reverse': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.FlexDirection.ColumnReverse,\n};\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param value - Flex direction value\n * @returns Node instance wrapper\n */\nconst setFlexDirection = (value) => (node) => {\n    const { yogaNode } = node;\n    if (yogaNode) {\n        const flexDirection = FLEX_DIRECTIONS[value] || yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.FlexDirection.Column;\n        yogaNode.setFlexDirection(flexDirection);\n    }\n    return node;\n};\n\nconst JUSTIFY_CONTENT = {\n    center: yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Justify.Center,\n    'flex-end': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Justify.FlexEnd,\n    'space-between': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Justify.SpaceBetween,\n    'space-around': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Justify.SpaceAround,\n    'space-evenly': yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Justify.SpaceEvenly,\n};\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param value - Justify content value\n * @returns Node instance wrapper\n */\nconst setJustifyContent = (value) => (node) => {\n    const { yogaNode } = node;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n        const justifyContent = JUSTIFY_CONTENT[value] || yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Justify.FlexStart;\n        yogaNode.setJustifyContent(justifyContent);\n    }\n    return node;\n};\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param margin - Margin top\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMarginTop = setYogaValue('margin', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Top);\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param margin - Margin right\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMarginRight = setYogaValue('margin', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Right);\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param margin - Margin bottom\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMarginBottom = setYogaValue('margin', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Bottom);\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param margin - Margin left\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMarginLeft = setYogaValue('margin', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Left);\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param padding - Padding top\n * @param node - Node instance\n * @returns Node instance\n */\nconst setPaddingTop = setYogaValue('padding', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Top);\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param padding - Padding right\n * @param node - Node instance\n * @returns Node instance\n */\nconst setPaddingRight = setYogaValue('padding', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Right);\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param padding - Padding bottom\n * @param node Node instance\n * @returns Node instance\n */\nconst setPaddingBottom = setYogaValue('padding', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Bottom);\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param padding - Padding left\n * @param node - Node instance\n * @returns Node instance\n */\nconst setPaddingLeft = setYogaValue('padding', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Left);\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param border - Border top width\n * @param node - Node instance\n * @returns Node instance\n */\nconst setBorderTop = setYogaValue('border', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Top);\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param border - Border right width\n * @param node - Node instance\n * @returns Node instance\n */\nconst setBorderRight = setYogaValue('border', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Right);\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param border - Border bottom width\n * @param node - Node instance\n * @returns Node instance\n */\nconst setBorderBottom = setYogaValue('border', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Bottom);\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param border - Border left width\n * @param node - Node instance\n * @returns Node instance\n */\nconst setBorderLeft = setYogaValue('border', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Left);\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param position - Position top\n * @param node - Node instance\n * @returns Node instance\n */\nconst setPositionTop = setYogaValue('position', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Top);\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param position - Position right\n * @param node - Node instance\n * @returns Node instance\n */\nconst setPositionRight = setYogaValue('position', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Right);\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param position - Position bottom\n * @param node - Node instance\n * @returns Node instance\n */\nconst setPositionBottom = setYogaValue('position', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Bottom);\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param position - Position left\n * @param node - Node instance\n * @returns Node instance\n */\nconst setPositionLeft = setYogaValue('position', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Edge.Left);\n\n/**\n * Set width to node's Yoga instance\n *\n * @param width - Width\n * @param node - Node instance\n * @returns Node instance\n */\nconst setWidth = setYogaValue('width');\n/**\n * Set min width to node's Yoga instance\n *\n * @param min - Width\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMinWidth = setYogaValue('minWidth');\n/**\n * Set max width to node's Yoga instance\n *\n * @param max - Width\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMaxWidth = setYogaValue('maxWidth');\n/**\n * Set height to node's Yoga instance\n *\n * @param height - Height\n * @param node - Node instance\n * @returns Node instance\n */\nconst setHeight = setYogaValue('height');\n/**\n * Set min height to node's Yoga instance\n *\n * @param min - Height\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMinHeight = setYogaValue('minHeight');\n/**\n * Set max height to node's Yoga instance\n *\n * @param max - Height\n * @param node - Node instance\n * @returns Node instance\n */\nconst setMaxHeight = setYogaValue('maxHeight');\n\n/**\n * Set rowGap value to node's Yoga instance\n *\n * @param value - Gap value\n * @returns Node instance wrapper\n */\nconst setRowGap = setYogaValue('gap', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Gutter.Row);\n/**\n * Set columnGap value to node's Yoga instance\n *\n * @param value - Gap value\n * @returns Node instance wrapper\n */\nconst setColumnGap = setYogaValue('gap', yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.Gutter.Column);\n\nconst getAspectRatio = (viewbox) => {\n    if (!viewbox)\n        return null;\n    if (typeof viewbox === 'string')\n        return null;\n    return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n/**\n * Yoga svg measure function\n *\n * @param page\n * @param node\n * @returns Measure svg\n */\nconst measureCanvas$1 = (page, node) => (width, widthMode, height, heightMode) => {\n    const aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n    if (widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Exactly ||\n        widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.AtMost) {\n        return { width, height: width / aspectRatio };\n    }\n    if (heightMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Exactly) {\n        return { width: height * aspectRatio };\n    }\n    return {};\n};\n\n/**\n * Get lines width (if any)\n *\n * @param node\n * @returns Lines width\n */\nconst linesWidth = (node) => {\n    if (!node.lines)\n        return 0;\n    return Math.max(0, ...node.lines.map((line) => line.xAdvance));\n};\n\n/**\n * Get lines height (if any)\n *\n * @param node\n * @returns Lines height\n */\nconst linesHeight = (node) => {\n    if (!node.lines)\n        return -1;\n    return node.lines.reduce((acc, line) => acc + line.box.height, 0);\n};\n\nconst ALIGNMENT_FACTORS = { center: 0.5, right: 1 };\n/**\n * Yoga text measure function\n *\n * @param page\n * @param node\n * @param fontStore\n * @returns {MeasureText} measure text function\n */\nconst measureText = (page, node, fontStore) => (width, widthMode, height) => {\n    if (widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Exactly) {\n        if (!node.lines)\n            node.lines = layoutText(node, width, height, fontStore);\n        return { height: linesHeight(node) };\n    }\n    if (widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.AtMost) {\n        const alignFactor = ALIGNMENT_FACTORS[node.style?.textAlign] || 0;\n        if (!node.lines) {\n            node.lines = layoutText(node, width, height, fontStore);\n            node.alignOffset = (width - linesWidth(node)) * alignFactor; // Compensate align in variable width containers\n        }\n        return {\n            height: linesHeight(node),\n            width: Math.min(width, linesWidth(node)),\n        };\n    }\n    return {};\n};\n\n/**\n * Get image ratio\n *\n * @param node - Image node\n * @returns Image ratio\n */\nconst getRatio = (node) => {\n    return node.image?.data ? node.image.width / node.image.height : 1;\n};\n\n/**\n * Checks if page has auto height\n *\n * @param page\n * @returns Is page height auto\n */\nconst isHeightAuto = (page) => (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(page.box?.height);\n\nconst SAFETY_HEIGHT$1 = 10;\n/**\n * Yoga image measure function\n *\n * @param page - Page\n * @param node - Node\n * @returns Measure image\n */\nconst measureImage = (page, node) => (width, widthMode, height, heightMode) => {\n    const imageRatio = getRatio(node);\n    const imageMargin = getMargin(node);\n    const pagePadding = getPadding(page);\n    // TODO: Check image percentage margins\n    const pageArea = isHeightAuto(page)\n        ? Infinity\n        : (page.box?.height || 0) -\n            pagePadding.paddingTop -\n            pagePadding.paddingBottom -\n            imageMargin.marginTop -\n            imageMargin.marginBottom -\n            SAFETY_HEIGHT$1;\n    // Skip measure if image data not present yet\n    if (!node.image)\n        return { width: 0, height: 0 };\n    if (widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Exactly &&\n        heightMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Undefined) {\n        const scaledHeight = width / imageRatio;\n        return { height: Math.min(pageArea, scaledHeight) };\n    }\n    if (heightMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Exactly &&\n        (widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.AtMost ||\n            widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Undefined)) {\n        return { width: Math.min(height * imageRatio, width) };\n    }\n    if (widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.Exactly &&\n        heightMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.AtMost) {\n        const scaledHeight = width / imageRatio;\n        return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n    if (widthMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.AtMost &&\n        heightMode === yoga_layout_load__WEBPACK_IMPORTED_MODULE_4__.MeasureMode.AtMost) {\n        if (imageRatio > 1) {\n            return {\n                width,\n                height: Math.min(width / imageRatio, height),\n            };\n        }\n        return {\n            height,\n            width: Math.min(height * imageRatio, width),\n        };\n    }\n    return { height, width };\n};\n\nconst SAFETY_HEIGHT = 10;\nconst getMax = (values) => Math.max(-Infinity, ...values);\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nconst measureCtx = () => {\n    const ctx = {};\n    const points = [];\n    const nil = () => ctx;\n    const addPoint = (x, y) => points.push([x, y]);\n    const moveTo = (x, y) => {\n        addPoint(x, y);\n        return ctx;\n    };\n    const rect = (x, y, w, h) => {\n        addPoint(x, y);\n        addPoint(x + w, y);\n        addPoint(x, y + h);\n        addPoint(x + w, y + h);\n        return ctx;\n    };\n    const ellipse = (x, y, rx, ry) => {\n        ry = ry || rx;\n        addPoint(x - rx, y - ry);\n        addPoint(x + rx, y - ry);\n        addPoint(x + rx, y + ry);\n        addPoint(x - rx, y + ry);\n        return ctx;\n    };\n    const polygon = (...pts) => {\n        points.push(...pts);\n        return ctx;\n    };\n    // Change dimensions\n    ctx.rect = rect;\n    ctx.moveTo = moveTo;\n    ctx.lineTo = moveTo;\n    ctx.circle = ellipse;\n    ctx.polygon = polygon;\n    ctx.ellipse = ellipse;\n    ctx.roundedRect = rect;\n    // To be implemented\n    ctx.text = nil;\n    ctx.path = nil;\n    ctx.lineWidth = nil;\n    ctx.bezierCurveTo = nil;\n    ctx.quadraticCurveTo = nil;\n    ctx.scale = nil;\n    ctx.rotate = nil;\n    ctx.translate = nil;\n    // These don't change dimensions\n    ctx.dash = nil;\n    ctx.clip = nil;\n    ctx.save = nil;\n    ctx.fill = nil;\n    ctx.font = nil;\n    ctx.stroke = nil;\n    ctx.lineCap = nil;\n    ctx.opacity = nil;\n    ctx.restore = nil;\n    ctx.lineJoin = nil;\n    ctx.fontSize = nil;\n    ctx.fillColor = nil;\n    ctx.miterLimit = nil;\n    ctx.strokeColor = nil;\n    ctx.fillOpacity = nil;\n    ctx.strokeOpacity = nil;\n    ctx.linearGradient = nil;\n    ctx.radialGradient = nil;\n    ctx.getWidth = () => getMax(points.map((p) => p[0]));\n    ctx.getHeight = () => getMax(points.map((p) => p[1]));\n    return ctx;\n};\n/**\n * @typedef {Function} MeasureCanvas\n * @returns {{ width: number, height: number }} canvas width and height\n */\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @returns {MeasureCanvas} measure canvas\n */\nconst measureCanvas = (page, node) => () => {\n    const imageMargin = getMargin(node);\n    const pagePadding = getPadding(page);\n    // TODO: Check image percentage margins\n    const pageArea = isHeightAuto(page)\n        ? Infinity\n        : (page.box?.height || 0) -\n            pagePadding.paddingTop -\n            pagePadding.paddingBottom -\n            imageMargin.marginTop -\n            imageMargin.marginBottom -\n            SAFETY_HEIGHT;\n    const ctx = measureCtx();\n    node.props.paint(ctx);\n    const width = ctx.getWidth();\n    const height = Math.min(pageArea, ctx.getHeight());\n    return { width, height };\n};\n\nconst isType$1 = (type) => (node) => node.type === type;\nconst isSvg = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg);\nconst isText$2 = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text);\nconst isNote = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Note);\nconst isPage = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Page);\nconst isImage = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image);\nconst isCanvas = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Canvas);\nconst isTextInstance$1 = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance);\nconst setNodeHeight = (node) => {\n    const value = isPage(node) ? node.box?.height : node.style?.height;\n    return setHeight(value);\n};\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param node\n */\nconst setYogaValues = (node) => {\n    (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(setNodeHeight(node), setWidth(node.style.width), setMinWidth(node.style.minWidth), setMaxWidth(node.style.maxWidth), setMinHeight(node.style.minHeight), setMaxHeight(node.style.maxHeight), setMarginTop(node.style.marginTop), setMarginRight(node.style.marginRight), setMarginBottom(node.style.marginBottom), setMarginLeft(node.style.marginLeft), setPaddingTop(node.style.paddingTop), setPaddingRight(node.style.paddingRight), setPaddingBottom(node.style.paddingBottom), setPaddingLeft(node.style.paddingLeft), setPositionType(node.style.position), setPositionTop(node.style.top), setPositionRight(node.style.right), setPositionBottom(node.style.bottom), setPositionLeft(node.style.left), setBorderTop(node.style.borderTopWidth), setBorderRight(node.style.borderRightWidth), setBorderBottom(node.style.borderBottomWidth), setBorderLeft(node.style.borderLeftWidth), setDisplay(node.style.display), setFlexDirection(node.style.flexDirection), setAlignSelf(node.style.alignSelf), setAlignContent(node.style.alignContent), setAlignItems(node.style.alignItems), setJustifyContent(node.style.justifyContent), setFlexWrap(node.style.flexWrap), setOverflow(node.style.overflow), setAspectRatio(node.style.aspectRatio), setFlexBasis(node.style.flexBasis), setFlexGrow(node.style.flexGrow), setFlexShrink(node.style.flexShrink), setRowGap(node.style.rowGap), setColumnGap(node.style.columnGap))(node);\n};\n/**\n * Inserts child into parent' yoga node\n *\n * @param parent parent\n * @returns Insert yoga nodes\n */\nconst insertYogaNodes = (parent) => (child) => {\n    parent.insertChild(child.yogaNode, parent.getChildCount());\n    return child;\n};\nconst setMeasureFunc = (node, page, fontStore) => {\n    const { yogaNode } = node;\n    if (isText$2(node)) {\n        yogaNode.setMeasureFunc(measureText(page, node, fontStore));\n    }\n    if (isImage(node)) {\n        yogaNode.setMeasureFunc(measureImage(page, node));\n    }\n    if (isCanvas(node)) {\n        yogaNode.setMeasureFunc(measureCanvas(page, node));\n    }\n    if (isSvg(node)) {\n        yogaNode.setMeasureFunc(measureCanvas$1(page, node));\n    }\n    return node;\n};\nconst isLayoutElement = (node) => !isText$2(node) && !isNote(node) && !isSvg(node);\n/**\n * @typedef {Function} CreateYogaNodes\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @returns Create yoga nodes\n */\nconst createYogaNodes = (page, fontStore, yoga) => (node) => {\n    const yogaNode = yoga.node.create();\n    const result = Object.assign({}, node, { yogaNode });\n    setYogaValues(result);\n    if (isLayoutElement(node) && node.children) {\n        const resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore, yoga));\n        result.children = node.children.map(resolveChild);\n    }\n    setMeasureFunc(result, page, fontStore);\n    return result;\n};\n/**\n * Performs yoga calculation\n *\n * @param page - Page node\n * @returns Page node\n */\nconst calculateLayout = (page) => {\n    page.yogaNode.calculateLayout();\n    return page;\n};\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param node\n * @returns Node with box data\n */\nconst persistDimensions = (node) => {\n    if (isTextInstance$1(node))\n        return node;\n    const box = Object.assign(getPadding(node), getMargin(node), getBorderWidth(node), getPosition(node), getDimension(node));\n    const newNode = Object.assign({}, node, { box });\n    if (!node.children)\n        return newNode;\n    const children = node.children.map(persistDimensions);\n    return Object.assign({}, newNode, { children });\n};\n/**\n * Removes yoga node from document tree\n *\n * @param node\n * @returns Node without yoga node\n */\nconst destroyYogaNodes = (node) => {\n    const newNode = Object.assign({}, node);\n    delete newNode.yogaNode;\n    if (!node.children)\n        return newNode;\n    const children = node.children.map(destroyYogaNodes);\n    return Object.assign({}, newNode, { children });\n};\n/**\n * Free yoga node from document tree\n *\n * @param node\n * @returns Node without yoga node\n */\nconst freeYogaNodes = (node) => {\n    if (node.yogaNode)\n        node.yogaNode.freeRecursive();\n    return node;\n};\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param page - Object\n * @returns Page object with correct 'box' layout attributes\n */\nconst resolvePageDimensions = (page, fontStore, yoga) => {\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(page))\n        return null;\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore, yoga))(page);\n};\n/**\n * Calculates root object layout using Yoga.\n *\n * @param node - Root object\n * @param fontStore - Font store\n * @returns Root object with correct 'box' layout attributes\n */\nconst resolveDimensions = (node, fontStore) => {\n    if (!node.children)\n        return node;\n    const resolveChild = (child) => resolvePageDimensions(child, fontStore, node.yoga);\n    const children = node.children.map(resolveChild);\n    return Object.assign({}, node, { children });\n};\n\nconst isText$1 = (node) => node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text;\n// Prevent splitting elements by low decimal numbers\nconst SAFETY_THRESHOLD = 0.001;\nconst assingChildren = (children, node) => Object.assign({}, node, { children });\nconst getTop = (node) => node.box?.top || 0;\nconst allFixed = (nodes) => nodes.every(isFixed);\nconst isDynamic = (node) => node.props && 'render' in node.props;\nconst relayoutPage = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveTextLayout, resolvePageDimensions, resolveInheritance, resolvePageStyles);\nconst warnUnavailableSpace = (node) => {\n    console.warn(`Node of type ${node.type} can't wrap between pages and it's bigger than available page height`);\n};\nconst splitNodes = (height, contentArea, nodes) => {\n    const currentChildren = [];\n    const nextChildren = [];\n    for (let i = 0; i < nodes.length; i += 1) {\n        const child = nodes[i];\n        const futureNodes = nodes.slice(i + 1);\n        const futureFixedNodes = futureNodes.filter(isFixed);\n        const nodeTop = getTop(child);\n        const nodeHeight = child.box.height;\n        const isOutside = height <= nodeTop;\n        const shouldBreak$1 = shouldBreak(child, futureNodes, height);\n        const shouldSplit = height + SAFETY_THRESHOLD < nodeTop + nodeHeight;\n        const canWrap = getWrap(child);\n        const fitsInsidePage = nodeHeight <= contentArea;\n        if (isFixed(child)) {\n            nextChildren.push(child);\n            currentChildren.push(child);\n            continue;\n        }\n        if (isOutside) {\n            const box = Object.assign({}, child.box, { top: child.box.top - height });\n            const next = Object.assign({}, child, { box });\n            nextChildren.push(next);\n            continue;\n        }\n        if (!fitsInsidePage && !canWrap) {\n            currentChildren.push(child);\n            nextChildren.push(...futureNodes);\n            warnUnavailableSpace(child);\n            break;\n        }\n        if (shouldBreak$1) {\n            const box = Object.assign({}, child.box, { top: child.box.top - height });\n            const props = Object.assign({}, child.props, {\n                wrap: true,\n                break: false,\n            });\n            const next = Object.assign({}, child, { box, props });\n            currentChildren.push(...futureFixedNodes);\n            nextChildren.push(next, ...futureNodes);\n            break;\n        }\n        if (shouldSplit) {\n            const [currentChild, nextChild] = split(child, height, contentArea);\n            // All children are moved to the next page, it doesn't make sense to show the parent on the current page\n            if (child.children.length > 0 && currentChild.children.length === 0) {\n                // But if the current page is empty then we can just include the parent on the current page\n                if (currentChildren.length === 0) {\n                    currentChildren.push(child, ...futureFixedNodes);\n                    nextChildren.push(...futureNodes);\n                }\n                else {\n                    const box = Object.assign({}, child.box, {\n                        top: child.box.top - height,\n                    });\n                    const next = Object.assign({}, child, { box });\n                    currentChildren.push(...futureFixedNodes);\n                    nextChildren.push(next, ...futureNodes);\n                }\n                break;\n            }\n            if (currentChild)\n                currentChildren.push(currentChild);\n            if (nextChild)\n                nextChildren.push(nextChild);\n            continue;\n        }\n        currentChildren.push(child);\n    }\n    return [currentChildren, nextChildren];\n};\nconst splitChildren = (height, contentArea, node) => {\n    const children = node.children || [];\n    const availableHeight = height - getTop(node);\n    return splitNodes(availableHeight, contentArea, children);\n};\nconst splitView = (node, height, contentArea) => {\n    const [currentNode, nextNode] = splitNode(node, height);\n    const [currentChilds, nextChildren] = splitChildren(height, contentArea, node);\n    return [\n        assingChildren(currentChilds, currentNode),\n        assingChildren(nextChildren, nextNode),\n    ];\n};\nconst split = (node, height, contentArea) => isText$1(node) ? splitText(node, height) : splitView(node, height, contentArea);\nconst shouldResolveDynamicNodes = (node) => {\n    const children = node.children || [];\n    return isDynamic(node) || children.some(shouldResolveDynamicNodes);\n};\nconst resolveDynamicNodes = (props, node) => {\n    const isNodeDynamic = isDynamic(node);\n    // Call render prop on dynamic nodes and append result to children\n    const resolveChildren = (children = []) => {\n        if (isNodeDynamic) {\n            const res = node.props.render(props);\n            return (createInstances(res)\n                .filter(Boolean)\n                // @ts-expect-error rework dynamic nodes. conflicting types\n                .map((n) => resolveDynamicNodes(props, n)));\n        }\n        return children.map((c) => resolveDynamicNodes(props, c));\n    };\n    // We reset dynamic text box so it can be computed again later on\n    const resetHeight = isNodeDynamic && isText$1(node);\n    const box = resetHeight ? { ...node.box, height: 0 } : node.box;\n    const children = resolveChildren(node.children);\n    // @ts-expect-error handle text here specifically\n    const lines = isNodeDynamic ? null : node.lines;\n    return Object.assign({}, node, { box, lines, children });\n};\nconst resolveDynamicPage = (props, page, fontStore, yoga) => {\n    if (shouldResolveDynamicNodes(page)) {\n        const resolvedPage = resolveDynamicNodes(props, page);\n        return relayoutPage(resolvedPage, fontStore, yoga);\n    }\n    return page;\n};\nconst splitPage = (page, pageNumber, fontStore, yoga) => {\n    const wrapArea = getWrapArea(page);\n    const contentArea = getContentArea(page);\n    const dynamicPage = resolveDynamicPage({ pageNumber }, page, fontStore, yoga);\n    const height = page.style.height;\n    const [currentChilds, nextChilds] = splitNodes(wrapArea, contentArea, dynamicPage.children);\n    const relayout = (node) => \n    // @ts-expect-error rework pagination\n    relayoutPage(node, fontStore, yoga);\n    const currentBox = { ...page.box, height };\n    const currentPage = relayout(Object.assign({}, page, { box: currentBox, children: currentChilds }));\n    if (nextChilds.length === 0 || allFixed(nextChilds))\n        return [currentPage, null];\n    const nextBox = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.omit)('height', page.box);\n    const nextProps = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.omit)('bookmark', page.props);\n    const nextPage = relayout(Object.assign({}, page, {\n        props: nextProps,\n        box: nextBox,\n        children: nextChilds,\n    }));\n    return [currentPage, nextPage];\n};\nconst resolvePageIndices = (fontStore, yoga, page, pageNumber, pages) => {\n    const totalPages = pages.length;\n    const props = {\n        totalPages,\n        pageNumber: pageNumber + 1,\n        subPageNumber: page.subPageNumber + 1,\n        subPageTotalPages: page.subPageTotalPages,\n    };\n    return resolveDynamicPage(props, page, fontStore, yoga);\n};\nconst assocSubPageData = (subpages) => {\n    return subpages.map((page, i) => ({\n        ...page,\n        subPageNumber: i,\n        subPageTotalPages: subpages.length,\n    }));\n};\nconst dissocSubPageData = (page) => {\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.omit)(['subPageNumber', 'subPageTotalPages'], page);\n};\nconst paginate = (page, pageNumber, fontStore, yoga) => {\n    if (!page)\n        return [];\n    if (page.props?.wrap === false)\n        return [page];\n    let splittedPage = splitPage(page, pageNumber, fontStore, yoga);\n    const pages = [splittedPage[0]];\n    let nextPage = splittedPage[1];\n    while (nextPage !== null) {\n        splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore, yoga);\n        pages.push(splittedPage[0]);\n        nextPage = splittedPage[1];\n    }\n    return pages;\n};\n/**\n * Performs pagination. This is the step responsible of breaking the whole document\n * into pages following pagiation rules, such as `fixed`, `break` and dynamic nodes.\n *\n * @param root - Document node\n * @param fontStore - Font store\n * @returns Layout node\n */\nconst resolvePagination = (root, fontStore) => {\n    let pages = [];\n    let pageNumber = 1;\n    for (let i = 0; i < root.children.length; i += 1) {\n        const page = root.children[i];\n        let subpages = paginate(page, pageNumber, fontStore, root.yoga);\n        subpages = assocSubPageData(subpages);\n        pageNumber += subpages.length;\n        pages = pages.concat(subpages);\n    }\n    pages = pages.map((...args) => dissocSubPageData(resolvePageIndices(fontStore, root.yoga, ...args)));\n    return assingChildren(pages, root);\n};\n\n/**\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param container - Page container\n * @returns Resolve page horizontal padding\n */\nconst resolvePageHorizontalPadding = (container) => (value) => {\n    const match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n    const width = container.width;\n    return match ? match.percent * width : value;\n};\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param container - Page container\n * @returns Resolve page vertical padding\n */\nconst resolvePageVerticalPadding = (container) => (value) => {\n    const match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n    const height = container.height;\n    return match ? match.percent * height : value;\n};\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param page\n * @returns Page with fixed paddings\n */\nconst resolvePagePaddings = (page) => {\n    const container = page.style;\n    const style = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n        paddingTop: resolvePageVerticalPadding(container),\n        paddingLeft: resolvePageHorizontalPadding(container),\n        paddingRight: resolvePageHorizontalPadding(container),\n        paddingBottom: resolvePageVerticalPadding(container),\n    }, page.style);\n    return Object.assign({}, page, { style });\n};\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param root - Document root\n * @returns Document root with translated page paddings\n */\nconst resolvePagesPaddings = (root) => {\n    if (!root.children)\n        return root;\n    const children = root.children.map(resolvePagePaddings);\n    return Object.assign({}, root, { children });\n};\n\nconst resolveRadius = (box) => (value) => {\n    if (!value)\n        return undefined;\n    const match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n    return match ? match.percent * Math.min(box.width, box.height) : value;\n};\n/**\n * Transforms percent border radius into fixed values\n *\n * @param node\n * @returns Node\n */\nconst resolvePercentRadius = (node) => {\n    const style = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n        borderTopLeftRadius: resolveRadius(node.box),\n        borderTopRightRadius: resolveRadius(node.box),\n        borderBottomRightRadius: resolveRadius(node.box),\n        borderBottomLeftRadius: resolveRadius(node.box),\n    }, node.style || {});\n    const newNode = Object.assign({}, node, { style });\n    if (!node.children)\n        return newNode;\n    const children = node.children.map(resolvePercentRadius);\n    return Object.assign({}, newNode, { children });\n};\n\n/**\n * Transform percent height into fixed\n *\n * @param height\n * @returns Height\n */\nconst transformHeight = (pageArea, height) => {\n    const match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(height);\n    return match ? match.percent * pageArea : height;\n};\n/**\n * Get page area (height minus paddings)\n *\n * @param page\n * @returns Page area\n */\nconst getPageArea = (page) => {\n    const pageHeight = page.style.height;\n    const pagePaddingTop = (page.style?.paddingTop || 0);\n    const pagePaddingBottom = (page.style?.paddingBottom || 0);\n    return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n/**\n * Transform node percent height to fixed\n *\n * @param page\n * @param node\n * @returns Transformed node\n */\nconst resolveNodePercentHeight = (page, node) => {\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(page.style?.height))\n        return node;\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(node.style?.height))\n        return node;\n    const pageArea = getPageArea(page);\n    const height = transformHeight(pageArea, node.style.height);\n    const style = Object.assign({}, node.style, { height });\n    return Object.assign({}, node, { style });\n};\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param page\n * @returns Transformed page\n */\nconst resolvePagePercentHeight = (page) => {\n    if (!page.children)\n        return page;\n    const resolveChild = (child) => resolveNodePercentHeight(page, child);\n    const children = page.children.map(resolveChild);\n    return Object.assign({}, page, { children });\n};\n/**\n * Transform all page immediate children with percent height to fixed.\n * This is needed for computing correct dimensions on pre-pagination layout.\n *\n * @param root - Document root\n * @returns Transformed document root\n */\nconst resolvePercentHeight = (root) => {\n    if (!root.children)\n        return root;\n    const children = root.children.map(resolvePagePercentHeight);\n    return Object.assign({}, root, { children });\n};\n\nconst isType = (type) => (node) => node.type === type;\nconst isLink = isType(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Link);\nconst isText = isType(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text);\nconst isTextInstance = isType(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance);\n/**\n * Checks if node has render prop\n *\n * @param node\n * @returns Has render prop?\n */\nconst hasRenderProp = (node) => 'render' in node.props;\n/**\n * Checks if node is text type (Text or TextInstance)\n *\n * @param node\n * @returns Are all children text instances?\n */\nconst isTextType = (node) => isText(node) || isTextInstance(node);\n/**\n * Checks if is tet link that needs to be wrapped in Text\n *\n * @param node\n * @returns Are all children text instances?\n */\nconst isTextLink = (node) => {\n    const children = node.children || [];\n    // Text string inside a Link\n    if (children.every(isTextInstance))\n        return true;\n    // Text node inside a Link\n    if (children.every(isText))\n        return false;\n    return children.every(isTextType);\n};\n/**\n * Wraps node children inside Text node\n *\n * @param node\n * @returns Node with intermediate Text child\n */\nconst wrapText = (node) => {\n    const textElement = {\n        type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text,\n        props: {},\n        style: {},\n        box: {},\n        children: node.children,\n    };\n    return Object.assign({}, node, { children: [textElement] });\n};\nconst transformLink = (node) => {\n    if (!isLink(node))\n        return node;\n    // If has render prop substitute the instance by a Text, that will\n    // ultimately render the inline Link via the textkit PDF renderer.\n    if (hasRenderProp(node))\n        return Object.assign({}, node, { type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text });\n    // If is a text link (either contains Text or TextInstance), wrap it\n    // inside a Text element so styles are applied correctly\n    if (isTextLink(node))\n        return wrapText(node);\n    return node;\n};\n/**\n * Transforms Link layout to correctly render text and dynamic rendered links\n *\n * @param node\n * @returns Node with link substitution\n */\nconst resolveLinkSubstitution = (node) => {\n    if (!node.children)\n        return node;\n    const resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(transformLink, resolveLinkSubstitution);\n    const children = node.children.map(resolveChild);\n    return Object.assign({}, node, { children });\n};\n\nconst layout = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.asyncCompose)(resolveZIndex, resolveOrigin, resolveAssets, resolvePagination, resolveTextLayout, resolvePercentRadius, resolveDimensions, resolveSvg, resolveAssets, resolveInheritance, resolvePercentHeight, resolvePagesPaddings, resolveStyles, resolveLinkSubstitution, resolveBookmarks, resolvePageSizes, resolveYoga);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/layout/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js":
/*!******************************************************!*\
  !*** ./node_modules/@react-pdf/pdfkit/lib/pdfkit.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmbeddedFont: () => (/* binding */ EmbeddedFont),\n/* harmony export */   PDFFont: () => (/* binding */ PDFFont),\n/* harmony export */   StandardFont: () => (/* binding */ StandardFont),\n/* harmony export */   \"default\": () => (/* binding */ PDFDocument)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var crypto_js_md5_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto-js/md5.js */ \"(ssr)/./node_modules/crypto-js/md5.js\");\n/* harmony import */ var fontkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fontkit */ \"(ssr)/./node_modules/fontkit/dist/module.mjs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var linebreak__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! linebreak */ \"(ssr)/./node_modules/linebreak/dist/module.mjs\");\n/* harmony import */ var jay_peg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jay-peg */ \"(ssr)/./node_modules/jay-peg/src/index.js\");\n/* harmony import */ var _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @react-pdf/png-js */ \"(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! crypto-js */ \"(ssr)/./node_modules/crypto-js/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n/*\nPDFReference - represents a reference to another object in the PDF object heirarchy\nBy Devon Govett\n*/\n\nclass PDFReference extends stream__WEBPACK_IMPORTED_MODULE_0__.Writable {\n  constructor(document, id, data) {\n    super({\n      decodeStrings: false\n    });\n    this.finalize = this.finalize.bind(this);\n    this.document = document;\n    this.id = id;\n    if (data == null) {\n      data = {};\n    }\n    this.data = data;\n    this.gen = 0;\n    this.deflate = null;\n    this.compress = this.document.compress && !this.data.Filter;\n    this.uncompressedLength = 0;\n    this.chunks = [];\n  }\n  initDeflate() {\n    this.data.Filter = 'FlateDecode';\n    this.deflate = zlib__WEBPACK_IMPORTED_MODULE_1__.createDeflate();\n    this.deflate.on('data', chunk => {\n      this.chunks.push(chunk);\n      return this.data.Length += chunk.length;\n    });\n    return this.deflate.on('end', this.finalize);\n  }\n  _write(chunk, encoding, callback) {\n    if (!(chunk instanceof Uint8Array)) {\n      chunk = Buffer.from(chunk + '\\n', 'binary');\n    }\n    this.uncompressedLength += chunk.length;\n    if (this.data.Length == null) {\n      this.data.Length = 0;\n    }\n    if (this.compress) {\n      if (!this.deflate) {\n        this.initDeflate();\n      }\n      this.deflate.write(chunk);\n    } else {\n      this.chunks.push(chunk);\n      this.data.Length += chunk.length;\n    }\n    return callback();\n  }\n  end() {\n    super.end(...arguments);\n    if (this.deflate) {\n      return this.deflate.end();\n    }\n    return this.finalize();\n  }\n  finalize() {\n    this.offset = this.document._offset;\n    this.document._write(`${this.id} ${this.gen} obj`);\n    this.document._write(PDFObject.convert(this.data));\n    if (this.chunks.length) {\n      this.document._write('stream');\n      for (let chunk of Array.from(this.chunks)) {\n        this.document._write(chunk);\n      }\n      this.chunks.length = 0; // free up memory\n      this.document._write('\\nendstream');\n    }\n    this.document._write('endobj');\n    return this.document._refEnd(this);\n  }\n  toString() {\n    return `${this.id} ${this.gen} R`;\n  }\n}\n\n/*\nPDFTree - abstract base class for name and number tree objects\n*/\n\nclass PDFTree {\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._items = {};\n    // disable /Limits output for this tree\n    this.limits = typeof options.limits === 'boolean' ? options.limits : true;\n  }\n  add(key, val) {\n    return this._items[key] = val;\n  }\n  get(key) {\n    return this._items[key];\n  }\n  toString() {\n    // Needs to be sorted by key\n    const sortedKeys = Object.keys(this._items).sort((a, b) => this._compareKeys(a, b));\n    const out = ['<<'];\n    if (this.limits && sortedKeys.length > 1) {\n      const first = sortedKeys[0],\n        last = sortedKeys[sortedKeys.length - 1];\n      out.push(`  /Limits ${PDFObject.convert([this._dataForKey(first), this._dataForKey(last)])}`);\n    }\n    out.push(`  /${this._keysName()} [`);\n    for (let key of sortedKeys) {\n      out.push(`    ${PDFObject.convert(this._dataForKey(key))} ${PDFObject.convert(this._items[key])}`);\n    }\n    out.push(']');\n    out.push('>>');\n    return out.join('\\n');\n  }\n  _compareKeys( /*a, b*/\n  ) {\n    throw new Error('Must be implemented by subclasses');\n  }\n  _keysName() {\n    throw new Error('Must be implemented by subclasses');\n  }\n  _dataForKey( /*k*/\n  ) {\n    throw new Error('Must be implemented by subclasses');\n  }\n}\n\n/*\nPDFNameTree - represents a name tree object\n*/\n\nclass PDFNameTree extends PDFTree {\n  _compareKeys(a, b) {\n    return a.localeCompare(b);\n  }\n  _keysName() {\n    return 'Names';\n  }\n  _dataForKey(k) {\n    return new String(k);\n  }\n}\n\n/*\nPDFObject - converts JavaScript types into their corresponding PDF types.\nBy Devon Govett\n*/\n\nconst pad = (str, length) => (Array(length + 1).join('0') + str).slice(-length);\nconst escapableRe = /[\\n\\r\\t\\b\\f()\\\\]/g;\nconst escapable = {\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\\\': '\\\\\\\\',\n  '(': '\\\\(',\n  ')': '\\\\)'\n};\n\n// Convert little endian UTF-16 to big endian\nconst swapBytes = function (buff) {\n  const l = buff.length;\n  if (l & 0x01) {\n    throw new Error('Buffer length must be even');\n  } else {\n    for (let i = 0, end = l - 1; i < end; i += 2) {\n      const a = buff[i];\n      buff[i] = buff[i + 1];\n      buff[i + 1] = a;\n    }\n  }\n  return buff;\n};\nclass PDFObject {\n  static convert(object) {\n    // String literals are converted to the PDF name type\n    if (typeof object === 'string') {\n      return `/${object}`;\n    }\n\n    // String objects are converted to PDF strings (UTF-16)\n    if (object instanceof String) {\n      let string = object;\n      // Detect if this is a unicode string\n      let isUnicode = false;\n      for (let i = 0, end = string.length; i < end; i++) {\n        if (string.charCodeAt(i) > 0x7f) {\n          isUnicode = true;\n          break;\n        }\n      }\n\n      // If so, encode it as big endian UTF-16\n      if (isUnicode) {\n        string = swapBytes(Buffer.from(`\\ufeff${string}`, 'utf16le')).toString('binary');\n      }\n\n      // Escape characters as required by the spec\n      string = string.replace(escapableRe, c => escapable[c]);\n      return `(${string})`;\n\n      // Buffers are converted to PDF hex strings\n    }\n    if (Buffer.isBuffer(object)) {\n      return `<${object.toString('hex')}>`;\n    }\n    if (object instanceof PDFReference || object instanceof PDFNameTree) {\n      return object.toString();\n    }\n    if (object instanceof Date) {\n      return `(D:${pad(object.getUTCFullYear(), 4)}` + pad(object.getUTCMonth() + 1, 2) + pad(object.getUTCDate(), 2) + pad(object.getUTCHours(), 2) + pad(object.getUTCMinutes(), 2) + pad(object.getUTCSeconds(), 2) + 'Z)';\n    }\n    if (Array.isArray(object)) {\n      const items = Array.from(object).map(e => PDFObject.convert(e)).join(' ');\n      return `[${items}]`;\n    }\n    if ({}.toString.call(object) === '[object Object]') {\n      const out = ['<<'];\n      for (let key in object) {\n        const val = object[key];\n        out.push(`/${key} ${PDFObject.convert(val)}`);\n      }\n      out.push('>>');\n      return out.join('\\n');\n    }\n    if (typeof object === 'number') {\n      return PDFObject.number(object);\n    }\n    return `${object}`;\n  }\n  static number(n) {\n    if (n > -1e21 && n < 1e21) {\n      return Math.round(n * 1e6) / 1e6;\n    }\n    throw new Error(`unsupported number: ${n}`);\n  }\n}\n\n/*\nPDFPage - represents a single page in the PDF document\nBy Devon Govett\n*/\n\n/**\n * @type {SideDefinition<Size>}\n */\nconst DEFAULT_MARGINS = {\n  top: 72,\n  left: 72,\n  bottom: 72,\n  right: 72\n};\nconst SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0]\n};\nclass PDFPage {\n  constructor(document, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.document = document;\n    this._options = options;\n    this.size = options.size || 'letter';\n    this.layout = options.layout || 'portrait';\n    this.userUnit = options.userUnit || 1.0;\n\n    // process margins\n    if (typeof options.margin === 'number') {\n      this.margins = {\n        top: options.margin,\n        left: options.margin,\n        bottom: options.margin,\n        right: options.margin\n      };\n\n      // default to 1 inch margins\n    } else {\n      this.margins = options.margins || DEFAULT_MARGINS;\n    }\n\n    // calculate page dimensions\n    const dimensions = Array.isArray(this.size) ? this.size : SIZES[this.size.toUpperCase()];\n    this.width = dimensions[this.layout === 'portrait' ? 0 : 1];\n    this.height = dimensions[this.layout === 'portrait' ? 1 : 0];\n    this.content = this.document.ref();\n    if (options.font) document.font(options.font, options.fontFamily);\n    if (options.fontSize) document.fontSize(options.fontSize);\n\n    // Initialize the Font, XObject, and ExtGState dictionaries\n    this.resources = this.document.ref({\n      ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI']\n    });\n\n    // The page dictionary\n    this.dictionary = this.document.ref({\n      Type: 'Page',\n      Parent: this.document._root.data.Pages,\n      MediaBox: [0, 0, this.width, this.height],\n      Contents: this.content,\n      Resources: this.resources,\n      UserUnit: this.userUnit\n    });\n    this.markings = [];\n  }\n\n  // Lazily create these objects\n  get fonts() {\n    const data = this.resources.data;\n    return data.Font != null ? data.Font : data.Font = {};\n  }\n  get xobjects() {\n    const data = this.resources.data;\n    return data.XObject != null ? data.XObject : data.XObject = {};\n  }\n  get ext_gstates() {\n    const data = this.resources.data;\n    return data.ExtGState != null ? data.ExtGState : data.ExtGState = {};\n  }\n  get patterns() {\n    const data = this.resources.data;\n    return data.Pattern != null ? data.Pattern : data.Pattern = {};\n  }\n  get colorSpaces() {\n    const data = this.resources.data;\n    return data.ColorSpace || (data.ColorSpace = {});\n  }\n  get annotations() {\n    const data = this.dictionary.data;\n    return data.Annots != null ? data.Annots : data.Annots = [];\n  }\n  get structParentTreeKey() {\n    const data = this.dictionary.data;\n    return data.StructParents != null ? data.StructParents : data.StructParents = this.document.createStructParentTreeNextKey();\n  }\n  maxY() {\n    return this.height - this.margins.bottom;\n  }\n  write(chunk) {\n    return this.content.write(chunk);\n  }\n\n  // Set tab order if document is tagged for accessibility.\n  _setTabOrder() {\n    if (!this.dictionary.Tabs && this.document.hasMarkInfoDictionary()) {\n      this.dictionary.data.Tabs = 'S';\n    }\n  }\n  end() {\n    this._setTabOrder();\n    this.dictionary.end();\n    this.resources.data.ColorSpace = this.resources.data.ColorSpace || {};\n    for (let color of Object.values(this.document.spotColors)) {\n      this.resources.data.ColorSpace[color.id] = color;\n    }\n    this.resources.end();\n    return this.content.end();\n  }\n}\n\n/*\n   PDFSecurity - represents PDF security settings\n   By Yang Liu <hi@zesik.com>\n */\n\nconst wordArrayToBuffer = wordArray => {\n  const byteArray = [];\n  for (let i = 0; i < wordArray.sigBytes; i++) {\n    byteArray.push(wordArray.words[Math.floor(i / 4)] >> 8 * (3 - i % 4) & 0xff);\n  }\n  return Buffer.from(byteArray);\n};\nclass PDFSecurity {\n  static generateFileID(info) {\n    if (info === void 0) {\n      info = {};\n    }\n    let infoStr = `${info.CreationDate.getTime()}\\n`;\n    for (let key in info) {\n      if (!info.hasOwnProperty(key)) continue;\n      infoStr += `${key}: ${info[key].valueOf()}\\n`;\n    }\n    return wordArrayToBuffer(crypto_js_md5_js__WEBPACK_IMPORTED_MODULE_2__(infoStr));\n  }\n}\n\nconst {\n  number: number$2\n} = PDFObject;\nlet PDFGradient$1 = class PDFGradient {\n  constructor(doc) {\n    this.doc = doc;\n    this.stops = [];\n    this.embedded = false;\n    this.transform = [1, 0, 0, 1, 0, 0];\n  }\n  stop(pos, color, opacity) {\n    if (opacity == null) {\n      opacity = 1;\n    }\n    color = this.doc._normalizeColor(color);\n    if (this.stops.length === 0) {\n      if (color.length === 3) {\n        this._colorSpace = 'DeviceRGB';\n      } else if (color.length === 4) {\n        this._colorSpace = 'DeviceCMYK';\n      } else if (color.length === 1) {\n        this._colorSpace = 'DeviceGray';\n      } else {\n        throw new Error('Unknown color space');\n      }\n    } else if (this._colorSpace === 'DeviceRGB' && color.length !== 3 || this._colorSpace === 'DeviceCMYK' && color.length !== 4 || this._colorSpace === 'DeviceGray' && color.length !== 1) {\n      throw new Error('All gradient stops must use the same color space');\n    }\n    opacity = Math.max(0, Math.min(1, opacity));\n    this.stops.push([pos, color, opacity]);\n    return this;\n  }\n  setTransform(m11, m12, m21, m22, dx, dy) {\n    this.transform = [m11, m12, m21, m22, dx, dy];\n    return this;\n  }\n  embed(m) {\n    let fn;\n    const stopsLength = this.stops.length;\n    if (stopsLength === 0) {\n      return;\n    }\n    this.embedded = true;\n    this.matrix = m;\n\n    // if the last stop comes before 100%, add a copy at 100%\n    const last = this.stops[stopsLength - 1];\n    if (last[0] < 1) {\n      this.stops.push([1, last[1], last[2]]);\n    }\n    const bounds = [];\n    const encode = [];\n    const stops = [];\n    for (let i = 0; i < stopsLength - 1; i++) {\n      encode.push(0, 1);\n      if (i + 2 !== stopsLength) {\n        bounds.push(this.stops[i + 1][0]);\n      }\n      fn = this.doc.ref({\n        FunctionType: 2,\n        Domain: [0, 1],\n        C0: this.stops[i + 0][1],\n        C1: this.stops[i + 1][1],\n        N: 1\n      });\n      stops.push(fn);\n      fn.end();\n    }\n\n    // if there are only two stops, we don't need a stitching function\n    if (stopsLength === 1) {\n      fn = stops[0];\n    } else {\n      fn = this.doc.ref({\n        FunctionType: 3,\n        // stitching function\n        Domain: [0, 1],\n        Functions: stops,\n        Bounds: bounds,\n        Encode: encode\n      });\n      fn.end();\n    }\n    this.id = `Sh${++this.doc._gradCount}`;\n    const shader = this.shader(fn);\n    shader.end();\n    const pattern = this.doc.ref({\n      Type: 'Pattern',\n      PatternType: 2,\n      Shading: shader,\n      Matrix: this.matrix.map(number$2)\n    });\n    pattern.end();\n    if (this.stops.some(stop => stop[2] < 1)) {\n      let grad = this.opacityGradient();\n      grad._colorSpace = 'DeviceGray';\n      for (let stop of this.stops) {\n        grad.stop(stop[0], [stop[2]]);\n      }\n      grad = grad.embed(this.matrix);\n      const pageBBox = [0, 0, this.doc.page.width, this.doc.page.height];\n      const form = this.doc.ref({\n        Type: 'XObject',\n        Subtype: 'Form',\n        FormType: 1,\n        BBox: pageBBox,\n        Group: {\n          Type: 'Group',\n          S: 'Transparency',\n          CS: 'DeviceGray'\n        },\n        Resources: {\n          ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n          Pattern: {\n            Sh1: grad\n          }\n        }\n      });\n      form.write('/Pattern cs /Sh1 scn');\n      form.end(`${pageBBox.join(' ')} re f`);\n      const gstate = this.doc.ref({\n        Type: 'ExtGState',\n        SMask: {\n          Type: 'Mask',\n          S: 'Luminosity',\n          G: form\n        }\n      });\n      gstate.end();\n      const opacityPattern = this.doc.ref({\n        Type: 'Pattern',\n        PatternType: 1,\n        PaintType: 1,\n        TilingType: 2,\n        BBox: pageBBox,\n        XStep: pageBBox[2],\n        YStep: pageBBox[3],\n        Resources: {\n          ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n          Pattern: {\n            Sh1: pattern\n          },\n          ExtGState: {\n            Gs1: gstate\n          }\n        }\n      });\n      opacityPattern.write('/Gs1 gs /Pattern cs /Sh1 scn');\n      opacityPattern.end(`${pageBBox.join(' ')} re f`);\n      this.doc.page.patterns[this.id] = opacityPattern;\n    } else {\n      this.doc.page.patterns[this.id] = pattern;\n    }\n    return pattern;\n  }\n  apply(stroke) {\n    // apply gradient transform to existing document ctm\n    const [m0, m1, m2, m3, m4, m5] = this.doc._ctm;\n    const [m11, m12, m21, m22, dx, dy] = this.transform;\n    const m = [m0 * m11 + m2 * m12, m1 * m11 + m3 * m12, m0 * m21 + m2 * m22, m1 * m21 + m3 * m22, m0 * dx + m2 * dy + m4, m1 * dx + m3 * dy + m5];\n    if (!this.embedded || m.join(' ') !== this.matrix.join(' ')) {\n      this.embed(m);\n    }\n    this.doc._setColorSpace('Pattern', stroke);\n    const op = stroke ? 'SCN' : 'scn';\n    return this.doc.addContent(`/${this.id} ${op}`);\n  }\n};\nlet PDFLinearGradient$1 = class PDFLinearGradient extends PDFGradient$1 {\n  constructor(doc, x1, y1, x2, y2) {\n    super(doc);\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n  }\n  shader(fn) {\n    return this.doc.ref({\n      ShadingType: 2,\n      ColorSpace: this._colorSpace,\n      Coords: [this.x1, this.y1, this.x2, this.y2],\n      Function: fn,\n      Extend: [true, true]\n    });\n  }\n  opacityGradient() {\n    return new PDFLinearGradient(this.doc, this.x1, this.y1, this.x2, this.y2);\n  }\n};\nlet PDFRadialGradient$1 = class PDFRadialGradient extends PDFGradient$1 {\n  constructor(doc, x1, y1, r1, x2, y2, r2) {\n    super(doc);\n    this.doc = doc;\n    this.x1 = x1;\n    this.y1 = y1;\n    this.r1 = r1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.r2 = r2;\n  }\n  shader(fn) {\n    return this.doc.ref({\n      ShadingType: 3,\n      ColorSpace: this._colorSpace,\n      Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],\n      Function: fn,\n      Extend: [true, true]\n    });\n  }\n  opacityGradient() {\n    return new PDFRadialGradient(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);\n  }\n};\nvar Gradient = {\n  PDFGradient: PDFGradient$1,\n  PDFLinearGradient: PDFLinearGradient$1,\n  PDFRadialGradient: PDFRadialGradient$1\n};\n\n/*\nPDF tiling pattern support. Uncolored only.\n */\n\nconst underlyingColorSpaces = ['DeviceCMYK', 'DeviceRGB'];\nlet PDFTilingPattern$1 = class PDFTilingPattern {\n  constructor(doc, bBox, xStep, yStep, stream) {\n    this.doc = doc;\n    this.bBox = bBox;\n    this.xStep = xStep;\n    this.yStep = yStep;\n    this.stream = stream;\n  }\n  createPattern() {\n    // no resources needed for our current usage\n    // required entry\n    const resources = this.doc.ref();\n    resources.end();\n    // apply default transform matrix (flipped in the default doc._ctm)\n    // see document.js & gradient.js\n    const [m0, m1, m2, m3, m4, m5] = this.doc._ctm;\n    const [m11, m12, m21, m22, dx, dy] = [1, 0, 0, 1, 0, 0];\n    const m = [m0 * m11 + m2 * m12, m1 * m11 + m3 * m12, m0 * m21 + m2 * m22, m1 * m21 + m3 * m22, m0 * dx + m2 * dy + m4, m1 * dx + m3 * dy + m5];\n    const pattern = this.doc.ref({\n      Type: 'Pattern',\n      PatternType: 1,\n      // tiling\n      PaintType: 2,\n      // 1-colored, 2-uncolored\n      TilingType: 2,\n      // 2-no distortion\n      BBox: this.bBox,\n      XStep: this.xStep,\n      YStep: this.yStep,\n      Matrix: m.map(v => +v.toFixed(5)),\n      Resources: resources\n    });\n    pattern.end(this.stream);\n    return pattern;\n  }\n  embedPatternColorSpaces() {\n    // map each pattern to an underlying color space\n    // and embed on each page\n    underlyingColorSpaces.forEach(csName => {\n      const csId = this.getPatternColorSpaceId(csName);\n      if (this.doc.page.colorSpaces[csId]) return;\n      const cs = this.doc.ref(['Pattern', csName]);\n      cs.end();\n      this.doc.page.colorSpaces[csId] = cs;\n    });\n  }\n  getPatternColorSpaceId(underlyingColorspace) {\n    return `CsP${underlyingColorspace}`;\n  }\n  embed() {\n    if (!this.id) {\n      this.doc._patternCount = this.doc._patternCount + 1;\n      this.id = 'P' + this.doc._patternCount;\n      this.pattern = this.createPattern();\n    }\n\n    // patterns are embedded in each page\n    if (!this.doc.page.patterns[this.id]) {\n      this.doc.page.patterns[this.id] = this.pattern;\n    }\n  }\n  apply(stroke, patternColor) {\n    // do any embedding/creating that might be needed\n    this.embedPatternColorSpaces();\n    this.embed();\n    const normalizedColor = this.doc._normalizeColor(patternColor);\n    if (!normalizedColor) throw Error(`invalid pattern color. (value: ${patternColor})`);\n\n    // select one of the pattern color spaces\n    const csId = this.getPatternColorSpaceId(this.doc._getColorSpace(normalizedColor));\n    this.doc._setColorSpace(csId, stroke);\n\n    // stroke/fill using the pattern and color (in the above underlying color space)\n    const op = stroke ? 'SCN' : 'scn';\n    return this.doc.addContent(`${normalizedColor.join(' ')} /${this.id} ${op}`);\n  }\n};\nvar pattern = {\n  PDFTilingPattern: PDFTilingPattern$1\n};\n\nclass SpotColor {\n  constructor(doc, name, C, M, Y, K) {\n    this.id = 'CS' + Object.keys(doc.spotColors).length;\n    this.name = name;\n    this.values = [C, M, Y, K];\n    this.ref = doc.ref(['Separation', this.name, 'DeviceCMYK', {\n      Range: [0, 1, 0, 1, 0, 1, 0, 1],\n      C0: [0, 0, 0, 0],\n      C1: this.values.map(value => value / 100),\n      FunctionType: 2,\n      Domain: [0, 1],\n      N: 1\n    }]);\n    this.ref.end();\n  }\n  toString() {\n    return `${this.ref.id} 0 R`;\n  }\n}\n\nconst {\n  PDFGradient,\n  PDFLinearGradient,\n  PDFRadialGradient\n} = Gradient;\nconst {\n  PDFTilingPattern\n} = pattern;\nvar ColorMixin = {\n  initColor() {\n    this.spotColors = {};\n    // The opacity dictionaries\n    this._opacityRegistry = {};\n    this._opacityCount = 0;\n    this._patternCount = 0;\n    return this._gradCount = 0;\n  },\n  _normalizeColor(color) {\n    if (typeof color === 'string') {\n      if (color.charAt(0) === '#') {\n        if (color.length === 4) {\n          color = color.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, '#$1$1$2$2$3$3');\n        }\n        const hex = parseInt(color.slice(1), 16);\n        color = [hex >> 16, hex >> 8 & 0xff, hex & 0xff];\n      } else if (namedColors[color]) {\n        color = namedColors[color];\n      } else if (this.spotColors[color]) {\n        return this.spotColors[color];\n      }\n    }\n    if (Array.isArray(color)) {\n      // RGB\n      if (color.length === 3) {\n        color = color.map(part => part / 255);\n        // CMYK\n      } else if (color.length === 4) {\n        color = color.map(part => part / 100);\n      }\n      return color;\n    }\n    return null;\n  },\n  _setColor(color, stroke) {\n    if (color instanceof PDFGradient) {\n      color.apply(stroke);\n      return true;\n      // see if tiling pattern, decode & apply it it\n    } else if (Array.isArray(color) && color[0] instanceof PDFTilingPattern) {\n      color[0].apply(stroke, color[1]);\n      return true;\n    }\n    // any other case should be a normal color and not a pattern\n    return this._setColorCore(color, stroke);\n  },\n  _setColorCore(color, stroke) {\n    color = this._normalizeColor(color);\n    if (!color) {\n      return false;\n    }\n    const op = stroke ? 'SCN' : 'scn';\n    const space = this._getColorSpace(color);\n    this._setColorSpace(space, stroke);\n    if (color instanceof SpotColor) {\n      this.page.colorSpaces[color.id] = color.ref;\n      this.addContent(`1 ${op}`);\n    } else {\n      this.addContent(`${color.join(' ')} ${op}`);\n    }\n    return true;\n  },\n  _setColorSpace(space, stroke) {\n    const op = stroke ? 'CS' : 'cs';\n    return this.addContent(`/${space} ${op}`);\n  },\n  _getColorSpace(color) {\n    if (color instanceof SpotColor) {\n      return color.id;\n    }\n    return color.length === 4 ? 'DeviceCMYK' : 'DeviceRGB';\n  },\n  fillColor(color, opacity) {\n    const set = this._setColor(color, false);\n    if (set) {\n      this.fillOpacity(opacity);\n    }\n\n    // save this for text wrapper, which needs to reset\n    // the fill color on new pages\n    this._fillColor = [color, opacity];\n    return this;\n  },\n  strokeColor(color, opacity) {\n    const set = this._setColor(color, true);\n    if (set) {\n      this.strokeOpacity(opacity);\n    }\n    return this;\n  },\n  opacity(opacity) {\n    this._doOpacity(opacity, opacity);\n    return this;\n  },\n  fillOpacity(opacity) {\n    this._doOpacity(opacity, null);\n    return this;\n  },\n  strokeOpacity(opacity) {\n    this._doOpacity(null, opacity);\n    return this;\n  },\n  _doOpacity(fillOpacity, strokeOpacity) {\n    let dictionary, name;\n    if (fillOpacity == null && strokeOpacity == null) {\n      return;\n    }\n    if (fillOpacity != null) {\n      fillOpacity = Math.max(0, Math.min(1, fillOpacity));\n    }\n    if (strokeOpacity != null) {\n      strokeOpacity = Math.max(0, Math.min(1, strokeOpacity));\n    }\n    const key = `${fillOpacity}_${strokeOpacity}`;\n    if (this._opacityRegistry[key]) {\n      [dictionary, name] = this._opacityRegistry[key];\n    } else {\n      dictionary = {\n        Type: 'ExtGState'\n      };\n      if (fillOpacity != null) {\n        dictionary.ca = fillOpacity;\n      }\n      if (strokeOpacity != null) {\n        dictionary.CA = strokeOpacity;\n      }\n      dictionary = this.ref(dictionary);\n      dictionary.end();\n      const id = ++this._opacityCount;\n      name = `Gs${id}`;\n      this._opacityRegistry[key] = [dictionary, name];\n    }\n    this.page.ext_gstates[name] = dictionary;\n    return this.addContent(`/${name} gs`);\n  },\n  linearGradient(x1, y1, x2, y2) {\n    return new PDFLinearGradient(this, x1, y1, x2, y2);\n  },\n  radialGradient(x1, y1, r1, x2, y2, r2) {\n    return new PDFRadialGradient(this, x1, y1, r1, x2, y2, r2);\n  },\n  pattern(bbox, xStep, yStep, stream) {\n    return new PDFTilingPattern(this, bbox, xStep, yStep, stream);\n  },\n  addSpotColor(name, C, M, Y, K) {\n    const color = new SpotColor(this, name, C, M, Y, K);\n    this.spotColors[name] = color;\n    return this;\n  }\n};\nvar namedColors = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  grey: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\n\nlet cx;\nlet cy;\nlet px;\nlet py;\nlet sx;\nlet sy;\ncx = cy = px = py = sx = sy = 0;\n\n// parseDataPath copy pasted from svgo\n// https://github.com/svg/svgo/blob/e4918ccdd1a2b5831defe0f00c1286744b479448/lib/path.js\n\n/**\n * @typedef {'M' | 'm' | 'Z' | 'z' | 'L' | 'l' | 'H' | 'h' | 'V' | 'v' | 'C' | 'c' | 'S' | 's' | 'Q' | 'q' | 'T' | 't' | 'A' | 'a'} PathDataCommand\n */\n\n/**\n * @typedef {Object} PathDataItem\n * @property {PathDataCommand} command\n * @property {number[]} args\n */\n\nconst argsCountPerCommand = {\n  M: 2,\n  m: 2,\n  Z: 0,\n  z: 0,\n  L: 2,\n  l: 2,\n  H: 1,\n  h: 1,\n  V: 1,\n  v: 1,\n  C: 6,\n  c: 6,\n  S: 4,\n  s: 4,\n  Q: 4,\n  q: 4,\n  T: 2,\n  t: 2,\n  A: 7,\n  a: 7\n};\n\n/**\n * @type {(c: string) => c is PathDataCommand}\n */\nconst isCommand = c => {\n  return c in argsCountPerCommand;\n};\n\n/**\n * @type {(c: string) => boolean}\n */\nconst isWsp = c => {\n  const codePoint = c.codePointAt(0);\n  return codePoint === 0x20 || codePoint === 0x9 || codePoint === 0xd || codePoint === 0xa;\n};\n\n/**\n * @type {(c: string) => boolean}\n */\nconst isDigit = c => {\n  const codePoint = c.codePointAt(0);\n  if (codePoint == null) {\n    return false;\n  }\n  return 48 <= codePoint && codePoint <= 57;\n};\n\n/**\n * @typedef {'none' | 'sign' | 'whole' | 'decimal_point' | 'decimal' | 'e' | 'exponent_sign' | 'exponent'} ReadNumberState\n */\n\n/**\n * @type {(string: string, cursor: number) => [number, number | null]}\n */\nconst readNumber = (string, cursor) => {\n  let i = cursor;\n  let value = '';\n  let state = /** @type {ReadNumberState} */'none';\n  for (; i < string.length; i += 1) {\n    const c = string[i];\n    if (c === '+' || c === '-') {\n      if (state === 'none') {\n        state = 'sign';\n        value += c;\n        continue;\n      }\n      if (state === 'e') {\n        state = 'exponent_sign';\n        value += c;\n        continue;\n      }\n    }\n    if (isDigit(c)) {\n      if (state === 'none' || state === 'sign' || state === 'whole') {\n        state = 'whole';\n        value += c;\n        continue;\n      }\n      if (state === 'decimal_point' || state === 'decimal') {\n        state = 'decimal';\n        value += c;\n        continue;\n      }\n      if (state === 'e' || state === 'exponent_sign' || state === 'exponent') {\n        state = 'exponent';\n        value += c;\n        continue;\n      }\n    }\n    if (c === '.') {\n      if (state === 'none' || state === 'sign' || state === 'whole') {\n        state = 'decimal_point';\n        value += c;\n        continue;\n      }\n    }\n    if (c === 'E' || c === 'e') {\n      if (state === 'whole' || state === 'decimal_point' || state === 'decimal') {\n        state = 'e';\n        value += c;\n        continue;\n      }\n    }\n    break;\n  }\n  const number = Number.parseFloat(value);\n  if (Number.isNaN(number)) {\n    return [cursor, null];\n  }\n  // step back to delegate iteration to parent loop\n  return [i - 1, number];\n};\n\n/**\n * @type {(string: string) => Array<PathDataItem>}\n */\nconst parsePathData = string => {\n  /**\n   * @type {Array<PathDataItem>}\n   */\n  const pathData = [];\n  /**\n   * @type {null | PathDataCommand}\n   */\n  let command = null;\n  let args = /** @type {number[]} */[];\n  let argsCount = 0;\n  let canHaveComma = false;\n  let hadComma = false;\n  for (let i = 0; i < string.length; i += 1) {\n    const c = string.charAt(i);\n    if (isWsp(c)) {\n      continue;\n    }\n    // allow comma only between arguments\n    if (canHaveComma && c === ',') {\n      if (hadComma) {\n        break;\n      }\n      hadComma = true;\n      continue;\n    }\n    if (isCommand(c)) {\n      if (hadComma) {\n        return pathData;\n      }\n      if (command == null) {\n        // moveto should be leading command\n        if (c !== 'M' && c !== 'm') {\n          return pathData;\n        }\n      } else {\n        // stop if previous command arguments are not flushed\n        if (args.length !== 0) {\n          return pathData;\n        }\n      }\n      command = c;\n      args = [];\n      argsCount = argsCountPerCommand[command];\n      canHaveComma = false;\n      // flush command without arguments\n      if (argsCount === 0) {\n        pathData.push({\n          command,\n          args\n        });\n      }\n      continue;\n    }\n    // avoid parsing arguments if no command detected\n    if (command == null) {\n      return pathData;\n    }\n    // read next argument\n    let newCursor = i;\n    let number = null;\n    if (command === 'A' || command === 'a') {\n      const position = args.length;\n      if (position === 0 || position === 1) {\n        // allow only positive number without sign as first two arguments\n        if (c !== '+' && c !== '-') {\n          [newCursor, number] = readNumber(string, i);\n        }\n      }\n      if (position === 2 || position === 5 || position === 6) {\n        [newCursor, number] = readNumber(string, i);\n      }\n      if (position === 3 || position === 4) {\n        // read flags\n        if (c === '0') {\n          number = 0;\n        }\n        if (c === '1') {\n          number = 1;\n        }\n      }\n    } else {\n      [newCursor, number] = readNumber(string, i);\n    }\n    if (number == null) {\n      return pathData;\n    }\n    args.push(number);\n    canHaveComma = true;\n    hadComma = false;\n    i = newCursor;\n    // flush arguments when necessary count is reached\n    if (args.length === argsCount) {\n      pathData.push({\n        command,\n        args\n      });\n      // subsequent moveto coordinates are threated as implicit lineto commands\n      if (command === 'M') {\n        command = 'L';\n      }\n      if (command === 'm') {\n        command = 'l';\n      }\n      args = [];\n    }\n  }\n  return pathData;\n};\nconst apply = function (commands, doc) {\n  // current point, control point, and subpath starting point\n  cx = cy = px = py = sx = sy = 0;\n\n  // run the commands\n  for (let i = 0; i < commands.length; i++) {\n    const {\n      command,\n      args\n    } = commands[i];\n    if (typeof runners[command] === 'function') {\n      runners[command](doc, args);\n    }\n  }\n};\nconst runners = {\n  M(doc, a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return doc.moveTo(cx, cy);\n  },\n  m(doc, a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return doc.moveTo(cx, cy);\n  },\n  C(doc, a) {\n    cx = a[4];\n    cy = a[5];\n    px = a[2];\n    py = a[3];\n    return doc.bezierCurveTo(...a);\n  },\n  c(doc, a) {\n    doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n    px = cx + a[2];\n    py = cy + a[3];\n    cx += a[4];\n    return cy += a[5];\n  },\n  S(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    }\n    doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    return cy = a[3];\n  },\n  s(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    }\n    doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    return cy += a[3];\n  },\n  Q(doc, a) {\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n  },\n  q(doc, a) {\n    doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    return cy += a[3];\n  },\n  T(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    doc.quadraticCurveTo(px, py, a[0], a[1]);\n    px = cx - (px - cx);\n    py = cy - (py - cy);\n    cx = a[0];\n    return cy = a[1];\n  },\n  t(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);\n    cx += a[0];\n    return cy += a[1];\n  },\n  A(doc, a) {\n    solveArc(doc, cx, cy, a);\n    cx = a[5];\n    return cy = a[6];\n  },\n  a(doc, a) {\n    a[5] += cx;\n    a[6] += cy;\n    solveArc(doc, cx, cy, a);\n    cx = a[5];\n    return cy = a[6];\n  },\n  L(doc, a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n  l(doc, a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n  H(doc, a) {\n    cx = a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n  h(doc, a) {\n    cx += a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n  V(doc, a) {\n    cy = a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n  v(doc, a) {\n    cy += a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n  Z(doc) {\n    doc.closePath();\n    cx = sx;\n    return cy = sy;\n  },\n  z(doc) {\n    doc.closePath();\n    cx = sx;\n    return cy = sy;\n  }\n};\nconst solveArc = function (doc, x, y, coords) {\n  const [rx, ry, rot, large, sweep, ex, ey] = coords;\n  const segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (let seg of segs) {\n    const bez = segmentToBezier(...seg);\n    doc.bezierCurveTo(...bez);\n  }\n};\n\n// from Inkscape svgtopdf, thanks!\nconst arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  const th = rotateX * (Math.PI / 180);\n  const sin_th = Math.sin(th);\n  const cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  let pl = px * px / (rx * rx) + py * py / (ry * ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n  const a00 = cos_th / rx;\n  const a01 = sin_th / rx;\n  const a10 = -sin_th / ry;\n  const a11 = cos_th / ry;\n  const x0 = a00 * ox + a01 * oy;\n  const y0 = a10 * ox + a11 * oy;\n  const x1 = a00 * x + a01 * y;\n  const y1 = a10 * x + a11 * y;\n  const d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n  let sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) {\n    sfactor_sq = 0;\n  }\n  let sfactor = Math.sqrt(sfactor_sq);\n  if (sweep === large) {\n    sfactor = -sfactor;\n  }\n  const xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n  const yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n  const th0 = Math.atan2(y0 - yc, x0 - xc);\n  const th1 = Math.atan2(y1 - yc, x1 - xc);\n  let th_arc = th1 - th0;\n  if (th_arc < 0 && sweep === 1) {\n    th_arc += 2 * Math.PI;\n  } else if (th_arc > 0 && sweep === 0) {\n    th_arc -= 2 * Math.PI;\n  }\n  const segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  const result = [];\n  for (let i = 0; i < segments; i++) {\n    const th2 = th0 + i * th_arc / segments;\n    const th3 = th0 + (i + 1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n  return result;\n};\nconst segmentToBezier = function (cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  const a00 = cos_th * rx;\n  const a01 = -sin_th * ry;\n  const a10 = sin_th * rx;\n  const a11 = cos_th * ry;\n  const th_half = 0.5 * (th1 - th0);\n  const t = 8 / 3 * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);\n  const x1 = cx + Math.cos(th0) - t * Math.sin(th0);\n  const y1 = cy + Math.sin(th0) + t * Math.cos(th0);\n  const x3 = cx + Math.cos(th1);\n  const y3 = cy + Math.sin(th1);\n  const x2 = x3 + t * Math.sin(th1);\n  const y2 = y3 - t * Math.cos(th1);\n  return [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n};\nclass SVGPath {\n  static apply(doc, path) {\n    const commands = parsePathData(path);\n    apply(commands, doc);\n  }\n}\n\nconst {\n  number: number$1\n} = PDFObject;\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar VectorMixin = {\n  initVector() {\n    this._ctm = [1, 0, 0, 1, 0, 0]; // current transformation matrix\n    return this._ctmStack = [];\n  },\n  save() {\n    this._ctmStack.push(this._ctm.slice());\n    // TODO: save/restore colorspace and styles so not setting it unnessesarily all the time?\n    return this.addContent('q');\n  },\n  restore() {\n    this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];\n    return this.addContent('Q');\n  },\n  closePath() {\n    return this.addContent('h');\n  },\n  lineWidth(w) {\n    return this.addContent(`${number$1(w)} w`);\n  },\n  _CAP_STYLES: {\n    BUTT: 0,\n    ROUND: 1,\n    SQUARE: 2\n  },\n  lineCap(c) {\n    if (typeof c === 'string') {\n      c = this._CAP_STYLES[c.toUpperCase()];\n    }\n    return this.addContent(`${c} J`);\n  },\n  _JOIN_STYLES: {\n    MITER: 0,\n    ROUND: 1,\n    BEVEL: 2\n  },\n  lineJoin(j) {\n    if (typeof j === 'string') {\n      j = this._JOIN_STYLES[j.toUpperCase()];\n    }\n    return this.addContent(`${j} j`);\n  },\n  miterLimit(m) {\n    return this.addContent(`${number$1(m)} M`);\n  },\n  dash(length, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const originalLength = length;\n    if (!Array.isArray(length)) {\n      length = [length, options.space || length];\n    }\n    const valid = length.every(x => Number.isFinite(x) && x > 0);\n    if (!valid) {\n      throw new Error(`dash(${JSON.stringify(originalLength)}, ${JSON.stringify(options)}) invalid, lengths must be numeric and greater than zero`);\n    }\n    length = length.map(number$1).join(' ');\n    return this.addContent(`[${length}] ${number$1(options.phase || 0)} d`);\n  },\n  undash() {\n    return this.addContent('[] 0 d');\n  },\n  moveTo(x, y) {\n    return this.addContent(`${number$1(x)} ${number$1(y)} m`);\n  },\n  lineTo(x, y) {\n    return this.addContent(`${number$1(x)} ${number$1(y)} l`);\n  },\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n    return this.addContent(`${number$1(cp1x)} ${number$1(cp1y)} ${number$1(cp2x)} ${number$1(cp2y)} ${number$1(x)} ${number$1(y)} c`);\n  },\n  quadraticCurveTo(cpx, cpy, x, y) {\n    return this.addContent(`${number$1(cpx)} ${number$1(cpy)} ${number$1(x)} ${number$1(y)} v`);\n  },\n  rect(x, y, w, h) {\n    return this.addContent(`${number$1(x)} ${number$1(y)} ${number$1(w)} ${number$1(h)} re`);\n  },\n  roundedRect(x, y, w, h, r) {\n    if (r == null) {\n      r = 0;\n    }\n    r = Math.min(r, 0.5 * w, 0.5 * h);\n\n    // amount to inset control points from corners (see `ellipse`)\n    const c = r * (1.0 - KAPPA);\n    this.moveTo(x + r, y);\n    this.lineTo(x + w - r, y);\n    this.bezierCurveTo(x + w - c, y, x + w, y + c, x + w, y + r);\n    this.lineTo(x + w, y + h - r);\n    this.bezierCurveTo(x + w, y + h - c, x + w - c, y + h, x + w - r, y + h);\n    this.lineTo(x + r, y + h);\n    this.bezierCurveTo(x + c, y + h, x, y + h - c, x, y + h - r);\n    this.lineTo(x, y + r);\n    this.bezierCurveTo(x, y + c, x + c, y, x + r, y);\n    return this.closePath();\n  },\n  ellipse(x, y, r1, r2) {\n    // based on http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas/2173084#2173084\n    if (r2 == null) {\n      r2 = r1;\n    }\n    x -= r1;\n    y -= r2;\n    const ox = r1 * KAPPA;\n    const oy = r2 * KAPPA;\n    const xe = x + r1 * 2;\n    const ye = y + r2 * 2;\n    const xm = x + r1;\n    const ym = y + r2;\n    this.moveTo(x, ym);\n    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n    return this.closePath();\n  },\n  circle(x, y, radius) {\n    return this.ellipse(x, y, radius);\n  },\n  arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n    if (anticlockwise == null) {\n      anticlockwise = false;\n    }\n    const TWO_PI = 2.0 * Math.PI;\n    const HALF_PI = 0.5 * Math.PI;\n    let deltaAng = endAngle - startAngle;\n    if (Math.abs(deltaAng) > TWO_PI) {\n      // draw only full circle if more than that is specified\n      deltaAng = TWO_PI;\n    } else if (deltaAng !== 0 && anticlockwise !== deltaAng < 0) {\n      // necessary to flip direction of rendering\n      const dir = anticlockwise ? -1 : 1;\n      deltaAng = dir * TWO_PI + deltaAng;\n    }\n    const numSegs = Math.ceil(Math.abs(deltaAng) / HALF_PI);\n    const segAng = deltaAng / numSegs;\n    const handleLen = segAng / HALF_PI * KAPPA * radius;\n    let curAng = startAngle;\n\n    // component distances between anchor point and control point\n    let deltaCx = -Math.sin(curAng) * handleLen;\n    let deltaCy = Math.cos(curAng) * handleLen;\n\n    // anchor point\n    let ax = x + Math.cos(curAng) * radius;\n    let ay = y + Math.sin(curAng) * radius;\n\n    // calculate and render segments\n    this.moveTo(ax, ay);\n    for (let segIdx = 0; segIdx < numSegs; segIdx++) {\n      // starting control point\n      const cp1x = ax + deltaCx;\n      const cp1y = ay + deltaCy;\n\n      // step angle\n      curAng += segAng;\n\n      // next anchor point\n      ax = x + Math.cos(curAng) * radius;\n      ay = y + Math.sin(curAng) * radius;\n\n      // next control point delta\n      deltaCx = -Math.sin(curAng) * handleLen;\n      deltaCy = Math.cos(curAng) * handleLen;\n\n      // ending control point\n      const cp2x = ax - deltaCx;\n      const cp2y = ay - deltaCy;\n\n      // render segment\n      this.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, ax, ay);\n    }\n    return this;\n  },\n  polygon() {\n    for (var _len = arguments.length, points = new Array(_len), _key = 0; _key < _len; _key++) {\n      points[_key] = arguments[_key];\n    }\n    this.moveTo(...(points.shift() || []));\n    for (let point of points) {\n      this.lineTo(...(point || []));\n    }\n    return this.closePath();\n  },\n  path(path) {\n    SVGPath.apply(this, path);\n    return this;\n  },\n  _windingRule(rule) {\n    if (/even-?odd/.test(rule)) {\n      return '*';\n    }\n    return '';\n  },\n  fill(color, rule) {\n    if (/(even-?odd)|(non-?zero)/.test(color)) {\n      rule = color;\n      color = null;\n    }\n    if (color) {\n      this.fillColor(color);\n    }\n    return this.addContent(`f${this._windingRule(rule)}`);\n  },\n  stroke(color) {\n    if (color) {\n      this.strokeColor(color);\n    }\n    return this.addContent('S');\n  },\n  fillAndStroke(fillColor, strokeColor, rule) {\n    if (strokeColor == null) {\n      strokeColor = fillColor;\n    }\n    const isFillRule = /(even-?odd)|(non-?zero)/;\n    if (isFillRule.test(fillColor)) {\n      rule = fillColor;\n      fillColor = null;\n    }\n    if (isFillRule.test(strokeColor)) {\n      rule = strokeColor;\n      strokeColor = fillColor;\n    }\n    if (fillColor) {\n      this.fillColor(fillColor);\n      this.strokeColor(strokeColor);\n    }\n    return this.addContent(`B${this._windingRule(rule)}`);\n  },\n  clip(rule) {\n    return this.addContent(`W${this._windingRule(rule)} n`);\n  },\n  transform(m11, m12, m21, m22, dx, dy) {\n    // keep track of the current transformation matrix\n    if (m11 === 1 && m12 === 0 && m21 === 0 && m22 === 1 && dx === 0 && dy === 0) {\n      // Ignore identity transforms\n      return this;\n    }\n    const m = this._ctm;\n    const [m0, m1, m2, m3, m4, m5] = m;\n    m[0] = m0 * m11 + m2 * m12;\n    m[1] = m1 * m11 + m3 * m12;\n    m[2] = m0 * m21 + m2 * m22;\n    m[3] = m1 * m21 + m3 * m22;\n    m[4] = m0 * dx + m2 * dy + m4;\n    m[5] = m1 * dx + m3 * dy + m5;\n    const values = [m11, m12, m21, m22, dx, dy].map(v => number$1(v)).join(' ');\n    return this.addContent(`${values} cm`);\n  },\n  translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  },\n  rotate(angle, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    let y;\n    const rad = angle * Math.PI / 180;\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n    let x = y = 0;\n    if (options.origin != null) {\n      [x, y] = options.origin;\n      const x1 = x * cos - y * sin;\n      const y1 = x * sin + y * cos;\n      x -= x1;\n      y -= y1;\n    }\n    return this.transform(cos, sin, -sin, cos, x, y);\n  },\n  scale(xFactor, yFactor, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    let y;\n    if (yFactor == null) {\n      yFactor = xFactor;\n    }\n    if (typeof yFactor === 'object') {\n      options = yFactor;\n      yFactor = xFactor;\n    }\n    let x = y = 0;\n    if (options.origin != null) {\n      [x, y] = options.origin;\n      x -= xFactor * x;\n      y -= yFactor * y;\n    }\n    return this.transform(xFactor, 0, 0, yFactor, x, y);\n  }\n};\n\nconst range = (left, right, inclusive) => {\n  let range = [];\n  let end = right + 1 ;\n  for (let i = left; i < end ; i++ ) {\n    range.push(i);\n  }\n  return range;\n};\n\nconst WIN_ANSI_MAP = {\n  402: 131,\n  8211: 150,\n  8212: 151,\n  8216: 145,\n  8217: 146,\n  8218: 130,\n  8220: 147,\n  8221: 148,\n  8222: 132,\n  8224: 134,\n  8225: 135,\n  8226: 149,\n  8230: 133,\n  8364: 128,\n  8240: 137,\n  8249: 139,\n  8250: 155,\n  710: 136,\n  8482: 153,\n  338: 140,\n  339: 156,\n  732: 152,\n  352: 138,\n  353: 154,\n  376: 159,\n  381: 142,\n  382: 158\n};\nconst characters = `\\\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n\nspace         exclam         quotedbl       numbersign\ndollar        percent        ampersand      quotesingle\nparenleft     parenright     asterisk       plus\ncomma         hyphen         period         slash\nzero          one            two            three\nfour          five           six            seven\neight         nine           colon          semicolon\nless          equal          greater        question\n\nat            A              B              C\nD             E              F              G\nH             I              J              K\nL             M              N              O\nP             Q              R              S\nT             U              V              W\nX             Y              Z              bracketleft\nbackslash     bracketright   asciicircum    underscore\n\ngrave         a              b              c\nd             e              f              g\nh             i              j              k\nl             m              n              o\np             q              r              s\nt             u              v              w\nx             y              z              braceleft\nbar           braceright     asciitilde     .notdef\n\nEuro          .notdef        quotesinglbase florin\nquotedblbase  ellipsis       dagger         daggerdbl\ncircumflex    perthousand    Scaron         guilsinglleft\nOE            .notdef        Zcaron         .notdef\n.notdef       quoteleft      quoteright     quotedblleft\nquotedblright bullet         endash         emdash\ntilde         trademark      scaron         guilsinglright\noe            .notdef        zcaron         ydieresis\n\nspace         exclamdown     cent           sterling\ncurrency      yen            brokenbar      section\ndieresis      copyright      ordfeminine    guillemotleft\nlogicalnot    hyphen         registered     macron\ndegree        plusminus      twosuperior    threesuperior\nacute         mu             paragraph      periodcentered\ncedilla       onesuperior    ordmasculine   guillemotright\nonequarter    onehalf        threequarters  questiondown\n\nAgrave        Aacute         Acircumflex    Atilde\nAdieresis     Aring          AE             Ccedilla\nEgrave        Eacute         Ecircumflex    Edieresis\nIgrave        Iacute         Icircumflex    Idieresis\nEth           Ntilde         Ograve         Oacute\nOcircumflex   Otilde         Odieresis      multiply\nOslash        Ugrave         Uacute         Ucircumflex\nUdieresis     Yacute         Thorn          germandbls\n\nagrave        aacute         acircumflex    atilde\nadieresis     aring          ae             ccedilla\negrave        eacute         ecircumflex    edieresis\nigrave        iacute         icircumflex    idieresis\neth           ntilde         ograve         oacute\nocircumflex   otilde         odieresis      divide\noslash        ugrave         uacute         ucircumflex\nudieresis     yacute         thorn          ydieresis\\\n`.split(/\\s+/);\nfunction parse(contents) {\n  const obj = {\n    attributes: {},\n    glyphWidths: {},\n    kernPairs: {}\n  };\n  let section = '';\n  for (let line of contents.split('\\n')) {\n    var match;\n    var a;\n    if (match = line.match(/^Start(\\w+)/)) {\n      section = match[1];\n      continue;\n    } else if (match = line.match(/^End(\\w+)/)) {\n      section = '';\n      continue;\n    }\n    switch (section) {\n      case 'FontMetrics':\n        match = line.match(/(^\\w+)\\s+(.*)/);\n        var key = match[1];\n        var value = match[2];\n        if (a = obj.attributes[key]) {\n          if (!Array.isArray(a)) {\n            a = obj.attributes[key] = [a];\n          }\n          a.push(value);\n        } else {\n          obj.attributes[key] = value;\n        }\n        break;\n      case 'CharMetrics':\n        if (!/^CH?\\s/.test(line)) {\n          continue;\n        }\n        var name = line.match(/\\bN\\s+(\\.?\\w+)\\s*;/)[1];\n        obj.glyphWidths[name] = +line.match(/\\bWX\\s+(\\d+)\\s*;/)[1];\n        break;\n      case 'KernPairs':\n        match = line.match(/^KPX\\s+(\\.?\\w+)\\s+(\\.?\\w+)\\s+(-?\\d+)/);\n        if (match) {\n          obj.kernPairs[match[1] + match[2]] = parseInt(match[3]);\n        }\n        break;\n    }\n  }\n  return obj;\n}\nclass AFMFont {\n  static open(filename) {\n    return new AFMFont(fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync(filename, 'utf8'));\n  }\n  static fromJson(json) {\n    return new AFMFont(json);\n  }\n  constructor(contents) {\n    if (typeof contents === 'string') {\n      this.contents = contents;\n      this.parse();\n    } else {\n      this.attributes = contents.attributes;\n      this.glyphWidths = contents.glyphWidths;\n      this.kernPairs = contents.kernPairs;\n    }\n    this.charWidths = range(0, 255).map(i => this.glyphWidths[characters[i]]);\n    this.bbox = Array.from(this.attributes.FontBBox.split(/\\s+/)).map(e => +e);\n    this.ascender = +(this.attributes.Ascender || 0);\n    this.descender = +(this.attributes.Descender || 0);\n    this.xHeight = +(this.attributes.XHeight || 0);\n    this.capHeight = +(this.attributes.CapHeight || 0);\n    this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);\n  }\n  parse() {\n    const parsed = parse(this.contents);\n    this.attributes = parsed.attributes;\n    this.glyphWidths = parsed.glyphWidths;\n    this.kernPairs = parsed.kernPairs;\n  }\n  encodeText(text) {\n    const res = [];\n    for (let i = 0, end = text.length, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n      let char = text.charCodeAt(i);\n      char = WIN_ANSI_MAP[char] || char;\n      res.push(char.toString(16));\n    }\n    return res;\n  }\n  glyphsForString(string) {\n    const glyphs = [];\n    for (let i = 0, end = string.length, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n      const charCode = string.charCodeAt(i);\n      glyphs.push(this.characterToGlyph(charCode));\n    }\n    return glyphs;\n  }\n  characterToGlyph(character) {\n    return characters[WIN_ANSI_MAP[character] || character] || '.notdef';\n  }\n  widthOfGlyph(glyph) {\n    return this.glyphWidths[glyph] || 0;\n  }\n  getKernPair(left, right) {\n    return this.kernPairs[left + right] || 0;\n  }\n  advancesForGlyphs(glyphs) {\n    const advances = [];\n    for (let index = 0; index < glyphs.length; index++) {\n      const left = glyphs[index];\n      const right = glyphs[index + 1];\n      advances.push(this.widthOfGlyph(left) + this.getKernPair(left, right));\n    }\n    return advances;\n  }\n}\n\nvar attributes = [\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 12:43:52 1997\",\n\t\t\t\"UniqueID 43052\",\n\t\t\t\"VMusage 37169 48194\"\n\t\t],\n\t\tFontName: \"Helvetica-Bold\",\n\t\tFullName: \"Helvetica Bold\",\n\t\tFamilyName: \"Helvetica\",\n\t\tWeight: \"Bold\",\n\t\tItalicAngle: \"0\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-170 -228 1003 962 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"718\",\n\t\tXHeight: \"532\",\n\t\tAscender: \"718\",\n\t\tDescender: \"-207\",\n\t\tStdHW: \"118\",\n\t\tStdVW: \"140\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 12:45:12 1997\",\n\t\t\t\"UniqueID 43053\",\n\t\t\t\"VMusage 14482 68586\"\n\t\t],\n\t\tFontName: \"Helvetica-BoldOblique\",\n\t\tFullName: \"Helvetica Bold Oblique\",\n\t\tFamilyName: \"Helvetica\",\n\t\tWeight: \"Bold\",\n\t\tItalicAngle: \"-12\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-174 -228 1114 962\",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"718\",\n\t\tXHeight: \"532\",\n\t\tAscender: \"718\",\n\t\tDescender: \"-207\",\n\t\tStdHW: \"118\",\n\t\tStdVW: \"140\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 12:44:31 1997\",\n\t\t\t\"UniqueID 43055\",\n\t\t\t\"VMusage 14960 69346\"\n\t\t],\n\t\tFontName: \"Helvetica-Oblique\",\n\t\tFullName: \"Helvetica Oblique\",\n\t\tFamilyName: \"Helvetica\",\n\t\tWeight: \"Medium\",\n\t\tItalicAngle: \"-12\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-170 -225 1116 931 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"718\",\n\t\tXHeight: \"523\",\n\t\tAscender: \"718\",\n\t\tDescender: \"-207\",\n\t\tStdHW: \"76\",\n\t\tStdVW: \"88\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 12:38:23 1997\",\n\t\t\t\"UniqueID 43054\",\n\t\t\t\"VMusage 37069 48094\"\n\t\t],\n\t\tFontName: \"Helvetica\",\n\t\tFullName: \"Helvetica\",\n\t\tFamilyName: \"Helvetica\",\n\t\tWeight: \"Medium\",\n\t\tItalicAngle: \"0\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-166 -225 1000 931 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"718\",\n\t\tXHeight: \"523\",\n\t\tAscender: \"718\",\n\t\tDescender: \"-207\",\n\t\tStdHW: \"76\",\n\t\tStdVW: \"88\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 12:52:56 1997\",\n\t\t\t\"UniqueID 43065\",\n\t\t\t\"VMusage 41636 52661\"\n\t\t],\n\t\tFontName: \"Times-Bold\",\n\t\tFullName: \"Times Bold\",\n\t\tFamilyName: \"Times\",\n\t\tWeight: \"Bold\",\n\t\tItalicAngle: \"0\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-168 -218 1000 935 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"676\",\n\t\tXHeight: \"461\",\n\t\tAscender: \"683\",\n\t\tDescender: \"-217\",\n\t\tStdHW: \"44\",\n\t\tStdVW: \"139\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 13:04:06 1997\",\n\t\t\t\"UniqueID 43066\",\n\t\t\t\"VMusage 45874 56899\"\n\t\t],\n\t\tFontName: \"Times-BoldItalic\",\n\t\tFullName: \"Times Bold Italic\",\n\t\tFamilyName: \"Times\",\n\t\tWeight: \"Bold\",\n\t\tItalicAngle: \"-15\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-200 -218 996 921\",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"669\",\n\t\tXHeight: \"462\",\n\t\tAscender: \"683\",\n\t\tDescender: \"-217\",\n\t\tStdHW: \"42\",\n\t\tStdVW: \"121\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 12:56:55 1997\",\n\t\t\t\"UniqueID 43067\",\n\t\t\t\"VMusage 47727 58752\"\n\t\t],\n\t\tFontName: \"Times-Italic\",\n\t\tFullName: \"Times Italic\",\n\t\tFamilyName: \"Times\",\n\t\tWeight: \"Medium\",\n\t\tItalicAngle: \"-15.5\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-169 -217 1010 883 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"653\",\n\t\tXHeight: \"441\",\n\t\tAscender: \"683\",\n\t\tDescender: \"-217\",\n\t\tStdHW: \"32\",\n\t\tStdVW: \"76\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 12:49:17 1997\",\n\t\t\t\"UniqueID 43068\",\n\t\t\t\"VMusage 43909 54934\"\n\t\t],\n\t\tFontName: \"Times-Roman\",\n\t\tFullName: \"Times Roman\",\n\t\tFamilyName: \"Times\",\n\t\tWeight: \"Roman\",\n\t\tItalicAngle: \"0\",\n\t\tIsFixedPitch: \"false\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-168 -218 1000 898 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"002.000\",\n\t\tNotice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"662\",\n\t\tXHeight: \"450\",\n\t\tAscender: \"683\",\n\t\tDescender: \"-217\",\n\t\tStdHW: \"28\",\n\t\tStdVW: \"84\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Mon Jun 23 16:28:00 1997\",\n\t\t\t\"UniqueID 43048\",\n\t\t\t\"VMusage 41139 52164\"\n\t\t],\n\t\tFontName: \"Courier-Bold\",\n\t\tFullName: \"Courier Bold\",\n\t\tFamilyName: \"Courier\",\n\t\tWeight: \"Bold\",\n\t\tItalicAngle: \"0\",\n\t\tIsFixedPitch: \"true\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-113 -250 749 801 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"003.000\",\n\t\tNotice: \"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"562\",\n\t\tXHeight: \"439\",\n\t\tAscender: \"629\",\n\t\tDescender: \"-157\",\n\t\tStdHW: \"84\",\n\t\tStdVW: \"106\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Mon Jun 23 16:28:46 1997\",\n\t\t\t\"UniqueID 43049\",\n\t\t\t\"VMusage 17529 79244\"\n\t\t],\n\t\tFontName: \"Courier-BoldOblique\",\n\t\tFullName: \"Courier Bold Oblique\",\n\t\tFamilyName: \"Courier\",\n\t\tWeight: \"Bold\",\n\t\tItalicAngle: \"-12\",\n\t\tIsFixedPitch: \"true\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-57 -250 869 801\",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"003.000\",\n\t\tNotice: \"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"562\",\n\t\tXHeight: \"439\",\n\t\tAscender: \"629\",\n\t\tDescender: \"-157\",\n\t\tStdHW: \"84\",\n\t\tStdVW: \"106\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 17:37:52 1997\",\n\t\t\t\"UniqueID 43051\",\n\t\t\t\"VMusage 16248 75829\"\n\t\t],\n\t\tFontName: \"Courier-Oblique\",\n\t\tFullName: \"Courier Oblique\",\n\t\tFamilyName: \"Courier\",\n\t\tWeight: \"Medium\",\n\t\tItalicAngle: \"-12\",\n\t\tIsFixedPitch: \"true\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-27 -250 849 805 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"003.000\",\n\t\tNotice: \"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"562\",\n\t\tXHeight: \"426\",\n\t\tAscender: \"629\",\n\t\tDescender: \"-157\",\n\t\tStdHW: \"51\",\n\t\tStdVW: \"51\"\n\t},\n\t{\n\t\tComment: [\n\t\t\t\"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\t\t\"Creation Date: Thu May  1 17:27:09 1997\",\n\t\t\t\"UniqueID 43050\",\n\t\t\t\"VMusage 39754 50779\"\n\t\t],\n\t\tFontName: \"Courier\",\n\t\tFullName: \"Courier\",\n\t\tFamilyName: \"Courier\",\n\t\tWeight: \"Medium\",\n\t\tItalicAngle: \"0\",\n\t\tIsFixedPitch: \"true\",\n\t\tCharacterSet: \"ExtendedRoman\",\n\t\tFontBBox: \"-23 -250 715 805 \",\n\t\tUnderlinePosition: \"-100\",\n\t\tUnderlineThickness: \"50\",\n\t\tVersion: \"003.000\",\n\t\tNotice: \"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n\t\tEncodingScheme: \"AdobeStandardEncoding\",\n\t\tCapHeight: \"562\",\n\t\tXHeight: \"426\",\n\t\tAscender: \"629\",\n\t\tDescender: \"-157\",\n\t\tStdHW: \"51\",\n\t\tStdVW: \"51\"\n\t}\n];\nvar glyphWidths = {\n\tspace: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\texclam: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquotedbl: [\n\t\t474,\n\t\t474,\n\t\t355,\n\t\t355,\n\t\t555,\n\t\t555,\n\t\t420,\n\t\t408,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tnumbersign: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdollar: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tpercent: [\n\t\t889,\n\t\t889,\n\t\t889,\n\t\t889,\n\t\t1000,\n\t\t833,\n\t\t833,\n\t\t833,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tampersand: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t833,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquoteright: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tparenleft: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tparenright: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tasterisk: [\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tplus: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t570,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcomma: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\thyphen: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tperiod: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tslash: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tzero: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tone: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ttwo: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tthree: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tfour: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tfive: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tsix: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tseven: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\teight: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tnine: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcolon: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tsemicolon: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tless: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t570,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tequal: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t570,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tgreater: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t570,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquestion: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tat: [\n\t\t975,\n\t\t975,\n\t\t1015,\n\t\t1015,\n\t\t930,\n\t\t832,\n\t\t920,\n\t\t921,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tA: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tB: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tC: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tD: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tE: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tF: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tG: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tH: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tI: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tJ: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t389,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tK: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t778,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tL: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tM: [\n\t\t833,\n\t\t833,\n\t\t833,\n\t\t833,\n\t\t944,\n\t\t889,\n\t\t833,\n\t\t889,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tN: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tO: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tP: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tQ: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tR: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tS: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tT: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tU: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tV: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tW: [\n\t\t944,\n\t\t944,\n\t\t944,\n\t\t944,\n\t\t1000,\n\t\t889,\n\t\t833,\n\t\t944,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tX: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tY: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t611,\n\t\t556,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tZ: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbracketleft: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t333,\n\t\t389,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbackslash: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbracketright: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t333,\n\t\t389,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tasciicircum: [\n\t\t584,\n\t\t584,\n\t\t469,\n\t\t469,\n\t\t581,\n\t\t570,\n\t\t422,\n\t\t469,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tunderscore: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquoteleft: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ta: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tb: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tc: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\td: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\te: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tf: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tg: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\th: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ti: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tj: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tk: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t556,\n\t\t500,\n\t\t444,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tl: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tm: [\n\t\t889,\n\t\t889,\n\t\t833,\n\t\t833,\n\t\t833,\n\t\t778,\n\t\t722,\n\t\t778,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tn: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\to: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tp: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tq: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tr: [\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ts: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tt: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tu: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tv: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tw: [\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tx: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ty: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tz: [\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbraceleft: [\n\t\t389,\n\t\t389,\n\t\t334,\n\t\t334,\n\t\t394,\n\t\t348,\n\t\t400,\n\t\t480,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbar: [\n\t\t280,\n\t\t280,\n\t\t260,\n\t\t260,\n\t\t220,\n\t\t220,\n\t\t275,\n\t\t200,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbraceright: [\n\t\t389,\n\t\t389,\n\t\t334,\n\t\t334,\n\t\t394,\n\t\t348,\n\t\t400,\n\t\t480,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tasciitilde: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t520,\n\t\t570,\n\t\t541,\n\t\t541,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\texclamdown: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcent: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tsterling: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tfraction: [\n\t\t167,\n\t\t167,\n\t\t167,\n\t\t167,\n\t\t167,\n\t\t167,\n\t\t167,\n\t\t167,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tyen: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tflorin: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tsection: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcurrency: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquotesingle: [\n\t\t238,\n\t\t238,\n\t\t191,\n\t\t191,\n\t\t278,\n\t\t278,\n\t\t214,\n\t\t180,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquotedblleft: [\n\t\t500,\n\t\t500,\n\t\t333,\n\t\t333,\n\t\t500,\n\t\t500,\n\t\t556,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tguillemotleft: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tguilsinglleft: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tguilsinglright: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tfi: [\n\t\t611,\n\t\t611,\n\t\t500,\n\t\t500,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tfl: [\n\t\t611,\n\t\t611,\n\t\t500,\n\t\t500,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tendash: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdagger: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdaggerdbl: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tperiodcentered: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tparagraph: [\n\t\t556,\n\t\t556,\n\t\t537,\n\t\t537,\n\t\t540,\n\t\t500,\n\t\t523,\n\t\t453,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbullet: [\n\t\t350,\n\t\t350,\n\t\t350,\n\t\t350,\n\t\t350,\n\t\t350,\n\t\t350,\n\t\t350,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquotesinglbase: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquotedblbase: [\n\t\t500,\n\t\t500,\n\t\t333,\n\t\t333,\n\t\t500,\n\t\t500,\n\t\t556,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquotedblright: [\n\t\t500,\n\t\t500,\n\t\t333,\n\t\t333,\n\t\t500,\n\t\t500,\n\t\t556,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tguillemotright: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tellipsis: [\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t889,\n\t\t1000,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tperthousand: [\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tquestiondown: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tgrave: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tacute: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcircumflex: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ttilde: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tmacron: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbreve: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdotaccent: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdieresis: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tring: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcedilla: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\thungarumlaut: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\togonek: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcaron: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\temdash: [\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t889,\n\t\t1000,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAE: [\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t944,\n\t\t889,\n\t\t889,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tordfeminine: [\n\t\t370,\n\t\t370,\n\t\t370,\n\t\t370,\n\t\t300,\n\t\t266,\n\t\t276,\n\t\t276,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tLslash: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOslash: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOE: [\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t944,\n\t\t944,\n\t\t889,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tordmasculine: [\n\t\t365,\n\t\t365,\n\t\t365,\n\t\t365,\n\t\t330,\n\t\t300,\n\t\t310,\n\t\t310,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tae: [\n\t\t889,\n\t\t889,\n\t\t889,\n\t\t889,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdotlessi: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tlslash: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\toslash: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\toe: [\n\t\t944,\n\t\t944,\n\t\t944,\n\t\t944,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tgermandbls: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tIdieresis: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\teacute: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tabreve: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tuhungarumlaut: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tecaron: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tYdieresis: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t611,\n\t\t556,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdivide: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t570,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tYacute: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t611,\n\t\t556,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAcircumflex: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\taacute: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUcircumflex: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tyacute: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tscommaaccent: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tecircumflex: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUring: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUdieresis: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\taogonek: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUacute: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tuogonek: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEdieresis: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tDcroat: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcommaaccent: [\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t250,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcopyright: [\n\t\t737,\n\t\t737,\n\t\t737,\n\t\t737,\n\t\t747,\n\t\t747,\n\t\t760,\n\t\t760,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEmacron: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tccaron: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\taring: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tNcommaaccent: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tlacute: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tagrave: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tTcommaaccent: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tCacute: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tatilde: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEdotaccent: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tscaron: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tscedilla: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tiacute: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tlozenge: [\n\t\t494,\n\t\t494,\n\t\t471,\n\t\t471,\n\t\t494,\n\t\t494,\n\t\t471,\n\t\t471,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tRcaron: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tGcommaaccent: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tucircumflex: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tacircumflex: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAmacron: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\trcaron: [\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tccedilla: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tZdotaccent: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tThorn: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOmacron: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tRacute: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tSacute: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdcaron: [\n\t\t743,\n\t\t743,\n\t\t643,\n\t\t643,\n\t\t672,\n\t\t608,\n\t\t544,\n\t\t588,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUmacron: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\turing: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tthreesuperior: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t300,\n\t\t300,\n\t\t300,\n\t\t300,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOgrave: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAgrave: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAbreve: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tmultiply: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t570,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tuacute: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tTcaron: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tpartialdiff: [\n\t\t494,\n\t\t494,\n\t\t476,\n\t\t476,\n\t\t494,\n\t\t494,\n\t\t476,\n\t\t476,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tydieresis: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tNacute: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ticircumflex: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEcircumflex: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tadieresis: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tedieresis: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tcacute: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tnacute: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tumacron: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tNcaron: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tIacute: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tplusminus: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t570,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tbrokenbar: [\n\t\t280,\n\t\t280,\n\t\t260,\n\t\t260,\n\t\t220,\n\t\t220,\n\t\t275,\n\t\t200,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tregistered: [\n\t\t737,\n\t\t737,\n\t\t737,\n\t\t737,\n\t\t747,\n\t\t747,\n\t\t760,\n\t\t760,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tGbreve: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tIdotaccent: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tsummation: [\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEgrave: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tracute: [\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tomacron: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tZacute: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tZcaron: [\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tgreaterequal: [\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEth: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tCcedilla: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tlcommaaccent: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ttcaron: [\n\t\t389,\n\t\t389,\n\t\t317,\n\t\t317,\n\t\t416,\n\t\t366,\n\t\t300,\n\t\t326,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\teogonek: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUogonek: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAacute: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAdieresis: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tegrave: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tzacute: [\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tiogonek: [\n\t\t278,\n\t\t278,\n\t\t222,\n\t\t222,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOacute: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\toacute: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tamacron: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tsacute: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t389,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tidieresis: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOcircumflex: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUgrave: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tDelta: [\n\t\t612,\n\t\t612,\n\t\t612,\n\t\t612,\n\t\t612,\n\t\t612,\n\t\t612,\n\t\t612,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tthorn: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ttwosuperior: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t300,\n\t\t300,\n\t\t300,\n\t\t300,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOdieresis: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tmu: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t576,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tigrave: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tohungarumlaut: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEogonek: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdcroat: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tthreequarters: [\n\t\t834,\n\t\t834,\n\t\t834,\n\t\t834,\n\t\t750,\n\t\t750,\n\t\t750,\n\t\t750,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tScedilla: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tlcaron: [\n\t\t400,\n\t\t400,\n\t\t299,\n\t\t299,\n\t\t394,\n\t\t382,\n\t\t300,\n\t\t344,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tKcommaaccent: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t778,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tLacute: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ttrademark: [\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t\t980,\n\t\t980,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tedotaccent: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tIgrave: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tImacron: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tLcaron: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tonehalf: [\n\t\t834,\n\t\t834,\n\t\t834,\n\t\t834,\n\t\t750,\n\t\t750,\n\t\t750,\n\t\t750,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tlessequal: [\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tocircumflex: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tntilde: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tUhungarumlaut: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEacute: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\temacron: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tgbreve: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tonequarter: [\n\t\t834,\n\t\t834,\n\t\t834,\n\t\t834,\n\t\t750,\n\t\t750,\n\t\t750,\n\t\t750,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tScaron: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tScommaaccent: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t556,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOhungarumlaut: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tdegree: [\n\t\t400,\n\t\t400,\n\t\t400,\n\t\t400,\n\t\t400,\n\t\t400,\n\t\t400,\n\t\t400,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tograve: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tCcaron: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tugrave: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tradical: [\n\t\t549,\n\t\t549,\n\t\t453,\n\t\t453,\n\t\t549,\n\t\t549,\n\t\t453,\n\t\t453,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tDcaron: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\trcommaaccent: [\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tNtilde: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\totilde: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tRcommaaccent: [\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t667,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tLcommaaccent: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t667,\n\t\t611,\n\t\t556,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAtilde: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAogonek: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tAring: [\n\t\t722,\n\t\t722,\n\t\t667,\n\t\t667,\n\t\t722,\n\t\t667,\n\t\t611,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tOtilde: [\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t778,\n\t\t722,\n\t\t722,\n\t\t722,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tzdotaccent: [\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEcaron: [\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t667,\n\t\t611,\n\t\t611,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tIogonek: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tkcommaaccent: [\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t556,\n\t\t500,\n\t\t444,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tminus: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t606,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tIcircumflex: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t389,\n\t\t389,\n\t\t333,\n\t\t333,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tncaron: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\ttcommaaccent: [\n\t\t333,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t333,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tlogicalnot: [\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t584,\n\t\t570,\n\t\t606,\n\t\t675,\n\t\t564,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\todieresis: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tudieresis: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tnotequal: [\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t549,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tgcommaaccent: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\teth: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tzcaron: [\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t444,\n\t\t389,\n\t\t389,\n\t\t444,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tncommaaccent: [\n\t\t611,\n\t\t611,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tonesuperior: [\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t333,\n\t\t300,\n\t\t300,\n\t\t300,\n\t\t300,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\timacron: [\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t278,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t],\n\tEuro: [\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t556,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t500,\n\t\t600,\n\t\t600,\n\t\t600,\n\t\t600\n\t]\n};\nvar kernPairs = {\n\tAC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tACacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tACcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tACcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tATcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tATcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAv: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAw: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAy: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAacuteC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAacuteCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAacuteCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAacuteCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAacuteG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAacuteGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAacuteGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAacuteO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAacuteT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAacuteTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAacuteTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAacuteU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAacuteV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAacuteW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAacuteY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAacuteYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAacuteYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAacuteu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacuteuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAacutev: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAacutew: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAacutey: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAacuteyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAacuteydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAbreveC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAbreveCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAbreveCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAbreveCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAbreveG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAbreveGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAbreveGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAbreveO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAbreveT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAbreveTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAbreveTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAbreveU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAbreveV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAbreveW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAbreveY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAbreveYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAbreveYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAbreveu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbreveuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAbrevev: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAbrevew: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAbrevey: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAbreveyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAbreveydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAcircumflexC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAcircumflexCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAcircumflexCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAcircumflexCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAcircumflexG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAcircumflexGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAcircumflexGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAcircumflexO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAcircumflexT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAcircumflexTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAcircumflexTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAcircumflexU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAcircumflexV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAcircumflexW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAcircumflexY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAcircumflexYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAcircumflexYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAcircumflexu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAcircumflexv: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAcircumflexw: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAcircumflexy: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAcircumflexyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAcircumflexydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAdieresisC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAdieresisCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAdieresisCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAdieresisCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAdieresisG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAdieresisGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAdieresisGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAdieresisO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAdieresisT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAdieresisTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAdieresisTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAdieresisU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAdieresisV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAdieresisW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAdieresisY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAdieresisYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAdieresisYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAdieresisu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAdieresisv: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAdieresisw: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAdieresisy: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAdieresisyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAdieresisydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAgraveC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAgraveCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAgraveCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAgraveCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAgraveG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAgraveGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAgraveGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAgraveO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAgraveT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAgraveTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAgraveTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAgraveU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAgraveV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAgraveW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAgraveY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAgraveYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAgraveYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAgraveu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgraveuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAgravev: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAgravew: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAgravey: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAgraveyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAgraveydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAmacronC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAmacronCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAmacronCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAmacronCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAmacronG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAmacronGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAmacronGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAmacronO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAmacronT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAmacronTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAmacronTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAmacronU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAmacronV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAmacronW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAmacronY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAmacronYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAmacronYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAmacronu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAmacronv: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAmacronw: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAmacrony: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAmacronyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAmacronydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAogonekC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAogonekCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAogonekCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAogonekCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAogonekG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAogonekGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAogonekGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAogonekO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAogonekT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAogonekTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAogonekTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAogonekU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAogonekV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAogonekW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAogonekY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAogonekYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAogonekYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAogoneku: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAogonekv: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAogonekw: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-52\n\t],\n\tAogoneky: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-34,\n\t\t-34,\n\t\t-55,\n\t\t-52\n\t],\n\tAogonekyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-34,\n\t\t-34,\n\t\t-55,\n\t\t-52\n\t],\n\tAogonekydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-34,\n\t\t-34,\n\t\t-55,\n\t\t-52\n\t],\n\tAringC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAringCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAringCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAringCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAringG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAringGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAringGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAringO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAringQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAringT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAringTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAringTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAringU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAringV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAringW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAringY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAringYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAringYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAringu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAringv: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAringw: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAringy: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAringyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAringydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAtildeC: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAtildeCacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAtildeCcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAtildeCcedilla: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-65,\n\t\t-30,\n\t\t-40\n\t],\n\tAtildeG: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAtildeGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAtildeGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-60,\n\t\t-35,\n\t\t-40\n\t],\n\tAtildeO: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeQ: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-45,\n\t\t-55,\n\t\t-40,\n\t\t-55\n\t],\n\tAtildeT: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAtildeTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAtildeTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-95,\n\t\t-55,\n\t\t-37,\n\t\t-111\n\t],\n\tAtildeU: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeUring: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55\n\t],\n\tAtildeV: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-145,\n\t\t-95,\n\t\t-105,\n\t\t-135\n\t],\n\tAtildeW: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-130,\n\t\t-100,\n\t\t-95,\n\t\t-90\n\t],\n\tAtildeY: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAtildeYacute: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAtildeYdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-100,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-55,\n\t\t-105\n\t],\n\tAtildeu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildeuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30,\n\t\t-20\n\t],\n\tAtildev: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-100,\n\t\t-74,\n\t\t-55,\n\t\t-74\n\t],\n\tAtildew: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-90,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAtildey: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAtildeyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tAtildeydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-92\n\t],\n\tBA: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAacute: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAbreve: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAcircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAdieresis: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAgrave: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAmacron: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAogonek: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAring: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBAtilde: [\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-35\n\t],\n\tBU: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUacute: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUcircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUdieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUgrave: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUhungarumlaut: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUmacron: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tBUring: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tDA: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAacute: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAbreve: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAogonek: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAring: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDAtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDV: [\n\t\t-40,\n\t\t-40,\n\t\t-70,\n\t\t-70,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-40\n\t],\n\tDW: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-30\n\t],\n\tDY: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDcomma: [\n\t\t-30,\n\t\t-30,\n\t\t-70,\n\t\t-70\n\t],\n\tDperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-70,\n\t\t-70,\n\t\t-20\n\t],\n\tDcaronA: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAacute: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAbreve: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAogonek: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAring: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronAtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcaronV: [\n\t\t-40,\n\t\t-40,\n\t\t-70,\n\t\t-70,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-40\n\t],\n\tDcaronW: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-30\n\t],\n\tDcaronY: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDcaronYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDcaronYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDcaroncomma: [\n\t\t-30,\n\t\t-30,\n\t\t-70,\n\t\t-70\n\t],\n\tDcaronperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-70,\n\t\t-70,\n\t\t-20\n\t],\n\tDcroatA: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAacute: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAbreve: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAogonek: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAring: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatAtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-35,\n\t\t-25,\n\t\t-35,\n\t\t-40\n\t],\n\tDcroatV: [\n\t\t-40,\n\t\t-40,\n\t\t-70,\n\t\t-70,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-40\n\t],\n\tDcroatW: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-30\n\t],\n\tDcroatY: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDcroatYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDcroatYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-90,\n\t\t-90,\n\t\t-40,\n\t\t-50,\n\t\t-40,\n\t\t-55\n\t],\n\tDcroatcomma: [\n\t\t-30,\n\t\t-30,\n\t\t-70,\n\t\t-70\n\t],\n\tDcroatperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-70,\n\t\t-70,\n\t\t-20\n\t],\n\tFA: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAacute: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAbreve: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAcircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAdieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAgrave: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAmacron: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAring: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFAtilde: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-90,\n\t\t-100,\n\t\t-115,\n\t\t-74\n\t],\n\tFa: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFaacute: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFabreve: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFacircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFadieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFagrave: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFamacron: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFaogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFaring: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFatilde: [\n\t\t-20,\n\t\t-20,\n\t\t-50,\n\t\t-50,\n\t\t-25,\n\t\t-95,\n\t\t-75,\n\t\t-15\n\t],\n\tFcomma: [\n\t\t-100,\n\t\t-100,\n\t\t-150,\n\t\t-150,\n\t\t-92,\n\t\t-129,\n\t\t-135,\n\t\t-80\n\t],\n\tFperiod: [\n\t\t-100,\n\t\t-100,\n\t\t-150,\n\t\t-150,\n\t\t-110,\n\t\t-129,\n\t\t-135,\n\t\t-80\n\t],\n\tJA: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAbreve: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAring: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJAtilde: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-25,\n\t\t-40,\n\t\t-60\n\t],\n\tJcomma: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t-25\n\t],\n\tJperiod: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-10,\n\t\t-25\n\t],\n\tJu: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJuacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJucircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJudieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJugrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJuhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJumacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJuogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJuring: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tKO: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOacute: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOcircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOdieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOgrave: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOmacron: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOslash: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKOtilde: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKe: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKeacute: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKecaron: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKecircumflex: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKedieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKedotaccent: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKegrave: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKemacron: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKeogonek: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKo: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKoacute: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKocircumflex: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKodieresis: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKograve: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKohungarumlaut: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKomacron: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKoslash: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKotilde: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKuring: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKy: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-45,\n\t\t-20,\n\t\t-40,\n\t\t-25\n\t],\n\tKyacute: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-45,\n\t\t-20,\n\t\t-40,\n\t\t-25\n\t],\n\tKydieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-45,\n\t\t-20,\n\t\t-40,\n\t\t-25\n\t],\n\tKcommaaccentO: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOacute: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOcircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOdieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOgrave: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOmacron: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOslash: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccentOtilde: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-30\n\t],\n\tKcommaaccente: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccenteacute: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccentecaron: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccentecircumflex: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccentedieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccentedotaccent: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccentegrave: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccentemacron: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccenteogonek: [\n\t\t-15,\n\t\t-15,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-35,\n\t\t-25\n\t],\n\tKcommaaccento: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentoacute: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentocircumflex: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentodieresis: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentograve: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentohungarumlaut: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentomacron: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentoslash: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentotilde: [\n\t\t-35,\n\t\t-35,\n\t\t-40,\n\t\t-40,\n\t\t-25,\n\t\t-25,\n\t\t-40,\n\t\t-35\n\t],\n\tKcommaaccentu: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccentuacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccentucircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccentudieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccentugrave: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccentuhungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccentumacron: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccentuogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccenturing: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-20,\n\t\t-40,\n\t\t-15\n\t],\n\tKcommaaccenty: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-45,\n\t\t-20,\n\t\t-40,\n\t\t-25\n\t],\n\tKcommaaccentyacute: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-45,\n\t\t-20,\n\t\t-40,\n\t\t-25\n\t],\n\tKcommaaccentydieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-45,\n\t\t-20,\n\t\t-40,\n\t\t-25\n\t],\n\tLT: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLV: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-100\n\t],\n\tLW: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-74\n\t],\n\tLY: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLYacute: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLYdieresis: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLquotedblright: [\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-20\n\t],\n\tLquoteright: [\n\t\t-140,\n\t\t-140,\n\t\t-160,\n\t\t-160,\n\t\t-110,\n\t\t-55,\n\t\t-37,\n\t\t-92\n\t],\n\tLy: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLacuteT: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLacuteTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLacuteTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLacuteV: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-100\n\t],\n\tLacuteW: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-74\n\t],\n\tLacuteY: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLacuteYacute: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLacuteYdieresis: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLacutequotedblright: [\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-20\n\t],\n\tLacutequoteright: [\n\t\t-140,\n\t\t-140,\n\t\t-160,\n\t\t-160,\n\t\t-110,\n\t\t-55,\n\t\t-37,\n\t\t-92\n\t],\n\tLacutey: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLacuteyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLacuteydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLcommaaccentT: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLcommaaccentTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLcommaaccentTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLcommaaccentV: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-100\n\t],\n\tLcommaaccentW: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-74\n\t],\n\tLcommaaccentY: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLcommaaccentYacute: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLcommaaccentYdieresis: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLcommaaccentquotedblright: [\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-20\n\t],\n\tLcommaaccentquoteright: [\n\t\t-140,\n\t\t-140,\n\t\t-160,\n\t\t-160,\n\t\t-110,\n\t\t-55,\n\t\t-37,\n\t\t-92\n\t],\n\tLcommaaccenty: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLcommaaccentyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLcommaaccentydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLslashT: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLslashTcaron: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLslashTcommaaccent: [\n\t\t-90,\n\t\t-90,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-18,\n\t\t-20,\n\t\t-92\n\t],\n\tLslashV: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-100\n\t],\n\tLslashW: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-74\n\t],\n\tLslashY: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLslashYacute: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLslashYdieresis: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-37,\n\t\t-20,\n\t\t-100\n\t],\n\tLslashquotedblright: [\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-140,\n\t\t-20\n\t],\n\tLslashquoteright: [\n\t\t-140,\n\t\t-140,\n\t\t-160,\n\t\t-160,\n\t\t-110,\n\t\t-55,\n\t\t-37,\n\t\t-92\n\t],\n\tLslashy: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLslashyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tLslashydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-55,\n\t\t-37,\n\t\t-30,\n\t\t-55\n\t],\n\tOA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOcomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOacuteA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOacuteT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOacuteTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOacuteTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOacuteV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOacuteW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOacuteX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOacuteY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOacuteYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOacuteYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOacutecomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOacuteperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOcircumflexA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOcircumflexT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOcircumflexTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOcircumflexTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOcircumflexV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOcircumflexW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOcircumflexX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOcircumflexY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOcircumflexYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOcircumflexYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOcircumflexcomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOcircumflexperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOdieresisA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOdieresisT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOdieresisTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOdieresisTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOdieresisV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOdieresisW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOdieresisX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOdieresisY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOdieresisYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOdieresisYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOdieresiscomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOdieresisperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOgraveA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOgraveT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOgraveTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOgraveTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOgraveV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOgraveW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOgraveX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOgraveY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOgraveYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOgraveYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOgravecomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOgraveperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOhungarumlautA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOhungarumlautT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOhungarumlautTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOhungarumlautTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOhungarumlautV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOhungarumlautW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOhungarumlautX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOhungarumlautY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOhungarumlautYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOhungarumlautYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOhungarumlautcomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOhungarumlautperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOmacronA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOmacronT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOmacronTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOmacronTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOmacronV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOmacronW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOmacronX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOmacronY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOmacronYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOmacronYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOmacroncomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOmacronperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOslashA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOslashT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOslashTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOslashTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOslashV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOslashW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOslashX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOslashY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOslashYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOslashYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOslashcomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOslashperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOtildeA: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAring: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-55,\n\t\t-35\n\t],\n\tOtildeT: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOtildeTcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOtildeTcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOtildeV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOtildeW: [\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35\n\t],\n\tOtildeX: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOtildeY: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOtildeYacute: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOtildeYdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-70,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50\n\t],\n\tOtildecomma: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tOtildeperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tPA: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAacute: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAbreve: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAcircumflex: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAdieresis: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAgrave: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAmacron: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAogonek: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAring: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPAtilde: [\n\t\t-100,\n\t\t-100,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-85,\n\t\t-90,\n\t\t-92\n\t],\n\tPa: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPaacute: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPabreve: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPacircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPadieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPagrave: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPamacron: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPaogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tParing: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPatilde: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-10,\n\t\t-40,\n\t\t-80,\n\t\t-15\n\t],\n\tPcomma: [\n\t\t-120,\n\t\t-120,\n\t\t-180,\n\t\t-180,\n\t\t-92,\n\t\t-129,\n\t\t-135,\n\t\t-111\n\t],\n\tPe: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPeacute: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPecaron: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPecircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPedieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPedotaccent: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPegrave: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPemacron: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPeogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-50,\n\t\t-80\n\t],\n\tPo: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPoacute: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPocircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPodieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPograve: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPohungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPomacron: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPoslash: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPotilde: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-55,\n\t\t-80\n\t],\n\tPperiod: [\n\t\t-120,\n\t\t-120,\n\t\t-180,\n\t\t-180,\n\t\t-110,\n\t\t-129,\n\t\t-135,\n\t\t-111\n\t],\n\tQU: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUacute: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUcircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUdieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUgrave: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUhungarumlaut: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUmacron: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQUring: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tQcomma: [\n\t\t20,\n\t\t20\n\t],\n\tQperiod: [\n\t\t20,\n\t\t20,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tRO: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROslash: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tROtilde: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRT: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRTcaron: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRTcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRU: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUacute: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRUring: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55,\n\t\t-18,\n\t\t-18,\n\t\t-80\n\t],\n\tRW: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-55\n\t],\n\tRY: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRYacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRYdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRacuteO: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOslash: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteOtilde: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteT: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRacuteTcaron: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRacuteTcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRacuteU: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUacute: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteUring: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRacuteV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55,\n\t\t-18,\n\t\t-18,\n\t\t-80\n\t],\n\tRacuteW: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-55\n\t],\n\tRacuteY: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRacuteYacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRacuteYdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRcaronO: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOslash: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronOtilde: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronT: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRcaronTcaron: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRcaronTcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRcaronU: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUacute: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronUring: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcaronV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55,\n\t\t-18,\n\t\t-18,\n\t\t-80\n\t],\n\tRcaronW: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-55\n\t],\n\tRcaronY: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRcaronYacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRcaronYdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRcommaaccentO: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOslash: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentOtilde: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentT: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRcommaaccentTcaron: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRcommaaccentTcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-30,\n\t\t0,\n\t\t-60\n\t],\n\tRcommaaccentU: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUacute: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentUring: [\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tRcommaaccentV: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-55,\n\t\t-18,\n\t\t-18,\n\t\t-80\n\t],\n\tRcommaaccentW: [\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-30,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-55\n\t],\n\tRcommaaccentY: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRcommaaccentYacute: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tRcommaaccentYdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-50,\n\t\t-35,\n\t\t-18,\n\t\t-18,\n\t\t-65\n\t],\n\tTA: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAacute: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAbreve: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAcircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAdieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAgrave: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAmacron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAring: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTAtilde: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTO: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTa: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTaacute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTabreve: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTacircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTadieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTagrave: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTamacron: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTaogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTaring: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTatilde: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcolon: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-50\n\t],\n\tTcomma: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-92,\n\t\t-74,\n\t\t-74\n\t],\n\tTe: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTeacute: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTecaron: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTecircumflex: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-52,\n\t\t-70\n\t],\n\tTedieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-30\n\t],\n\tTedotaccent: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTegrave: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-70\n\t],\n\tTemacron: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-30\n\t],\n\tTeogonek: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tThyphen: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-74,\n\t\t-92\n\t],\n\tTo: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tToacute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTocircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTodieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTograve: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTohungarumlaut: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTomacron: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tToslash: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTotilde: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTperiod: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-92,\n\t\t-74,\n\t\t-74\n\t],\n\tTr: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTracute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTrcommaaccent: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTsemicolon: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-74,\n\t\t-74,\n\t\t-65,\n\t\t-55\n\t],\n\tTu: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTuacute: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTucircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTudieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTugrave: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTuhungarumlaut: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTumacron: [\n\t\t-90,\n\t\t-90,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTuogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTuring: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTw: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTy: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-34,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTyacute: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-34,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTydieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-34,\n\t\t-37,\n\t\t-34,\n\t\t-80\n\t],\n\tTcaronA: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAacute: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAbreve: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAcircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAdieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAgrave: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAmacron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAring: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronAtilde: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcaronO: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcaronOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcarona: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronaacute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronabreve: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronacircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronadieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcaronagrave: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcaronamacron: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcaronaogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronaring: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronatilde: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcaroncolon: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-50\n\t],\n\tTcaroncomma: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-92,\n\t\t-74,\n\t\t-74\n\t],\n\tTcarone: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcaroneacute: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcaronecaron: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcaronecircumflex: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-52,\n\t\t-30\n\t],\n\tTcaronedieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-30\n\t],\n\tTcaronedotaccent: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcaronegrave: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-70\n\t],\n\tTcaronemacron: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-30\n\t],\n\tTcaroneogonek: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcaronhyphen: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-74,\n\t\t-92\n\t],\n\tTcarono: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronoacute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronocircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronodieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronograve: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronohungarumlaut: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronomacron: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronoslash: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronotilde: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcaronperiod: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-92,\n\t\t-74,\n\t\t-74\n\t],\n\tTcaronr: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcaronracute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcaronrcommaaccent: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcaronsemicolon: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-74,\n\t\t-74,\n\t\t-65,\n\t\t-55\n\t],\n\tTcaronu: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronuacute: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronucircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronudieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronugrave: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronuhungarumlaut: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronumacron: [\n\t\t-90,\n\t\t-90,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronuogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronuring: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcaronw: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTcarony: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-34,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTcaronyacute: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-34,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTcaronydieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-34,\n\t\t-37,\n\t\t-34,\n\t\t-80\n\t],\n\tTcommaaccentA: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAacute: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAbreve: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAcircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAdieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAgrave: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAmacron: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAring: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentAtilde: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-55,\n\t\t-50,\n\t\t-93\n\t],\n\tTcommaaccentO: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOacute: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOcircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOdieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOgrave: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOhungarumlaut: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOmacron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOslash: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccentOtilde: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-18,\n\t\t-18,\n\t\t-18,\n\t\t-18\n\t],\n\tTcommaaccenta: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentaacute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentabreve: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentacircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentadieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcommaaccentagrave: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcommaaccentamacron: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcommaaccentaogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentaring: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentatilde: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-92,\n\t\t-92,\n\t\t-40\n\t],\n\tTcommaaccentcolon: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-74,\n\t\t-74,\n\t\t-55,\n\t\t-50\n\t],\n\tTcommaaccentcomma: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-92,\n\t\t-74,\n\t\t-74\n\t],\n\tTcommaaccente: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcommaaccenteacute: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcommaaccentecaron: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcommaaccentecircumflex: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-52,\n\t\t-30\n\t],\n\tTcommaaccentedieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-30\n\t],\n\tTcommaaccentedotaccent: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcommaaccentegrave: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-30\n\t],\n\tTcommaaccentemacron: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-52,\n\t\t-52,\n\t\t-52,\n\t\t-70\n\t],\n\tTcommaaccenteogonek: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-70\n\t],\n\tTcommaaccenthyphen: [\n\t\t-120,\n\t\t-120,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-74,\n\t\t-92\n\t],\n\tTcommaaccento: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentoacute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentocircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentodieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentograve: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentohungarumlaut: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentomacron: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentoslash: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentotilde: [\n\t\t-80,\n\t\t-80,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-95,\n\t\t-92,\n\t\t-80\n\t],\n\tTcommaaccentperiod: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-92,\n\t\t-74,\n\t\t-74\n\t],\n\tTcommaaccentr: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcommaaccentracute: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcommaaccentrcommaaccent: [\n\t\t-80,\n\t\t-80,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcommaaccentsemicolon: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-74,\n\t\t-74,\n\t\t-65,\n\t\t-55\n\t],\n\tTcommaaccentu: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentuacute: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentucircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentudieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentugrave: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentuhungarumlaut: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentumacron: [\n\t\t-90,\n\t\t-90,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentuogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccenturing: [\n\t\t-90,\n\t\t-90,\n\t\t-120,\n\t\t-120,\n\t\t-92,\n\t\t-37,\n\t\t-55,\n\t\t-45\n\t],\n\tTcommaaccentw: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTcommaaccenty: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-34,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTcommaaccentyacute: [\n\t\t-60,\n\t\t-60,\n\t\t-120,\n\t\t-120,\n\t\t-34,\n\t\t-37,\n\t\t-74,\n\t\t-80\n\t],\n\tTcommaaccentydieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-34,\n\t\t-37,\n\t\t-34,\n\t\t-80\n\t],\n\tUA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUacuteA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacuteAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUacutecomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUacuteperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUcircumflexA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUcircumflexcomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUcircumflexperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUdieresisA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresisAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUdieresiscomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUdieresisperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUgraveA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgraveAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUgravecomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUgraveperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUhungarumlautA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUhungarumlautcomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUhungarumlautperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUmacronA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacronAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUmacroncomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUmacronperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUogonekA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUogonekcomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUogonekperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUringA: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAring: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringAtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-45,\n\t\t-40,\n\t\t-40\n\t],\n\tUringcomma: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tUringperiod: [\n\t\t-30,\n\t\t-30,\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t0,\n\t\t-25\n\t],\n\tVA: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAacute: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAbreve: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAcircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAdieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAgrave: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAmacron: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAring: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVAtilde: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-135,\n\t\t-85,\n\t\t-60,\n\t\t-135\n\t],\n\tVG: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\tVGbreve: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\tVGcommaaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\tVO: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOacute: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOcircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOdieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOgrave: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOhungarumlaut: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOmacron: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOslash: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVOtilde: [\n\t\t-50,\n\t\t-50,\n\t\t-40,\n\t\t-40,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-40\n\t],\n\tVa: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVaacute: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVabreve: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVacircumflex: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-71\n\t],\n\tVadieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-71\n\t],\n\tVagrave: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-71\n\t],\n\tVamacron: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-71\n\t],\n\tVaogonek: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVaring: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVatilde: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-111,\n\t\t-111,\n\t\t-71\n\t],\n\tVcolon: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-92,\n\t\t-74,\n\t\t-65,\n\t\t-74\n\t],\n\tVcomma: [\n\t\t-120,\n\t\t-120,\n\t\t-125,\n\t\t-125,\n\t\t-129,\n\t\t-129,\n\t\t-129,\n\t\t-129\n\t],\n\tVe: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVeacute: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVecaron: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-71\n\t],\n\tVecircumflex: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-71\n\t],\n\tVedieresis: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-71,\n\t\t-71,\n\t\t-71\n\t],\n\tVedotaccent: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVegrave: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-71,\n\t\t-71,\n\t\t-71\n\t],\n\tVemacron: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-71,\n\t\t-71,\n\t\t-71\n\t],\n\tVeogonek: [\n\t\t-50,\n\t\t-50,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-111\n\t],\n\tVhyphen: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-74,\n\t\t-70,\n\t\t-55,\n\t\t-100\n\t],\n\tVo: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-129\n\t],\n\tVoacute: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-129\n\t],\n\tVocircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-129\n\t],\n\tVodieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-89\n\t],\n\tVograve: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-89\n\t],\n\tVohungarumlaut: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-129\n\t],\n\tVomacron: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-89\n\t],\n\tVoslash: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-129\n\t],\n\tVotilde: [\n\t\t-90,\n\t\t-90,\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-111,\n\t\t-111,\n\t\t-89\n\t],\n\tVperiod: [\n\t\t-120,\n\t\t-120,\n\t\t-125,\n\t\t-125,\n\t\t-145,\n\t\t-129,\n\t\t-129,\n\t\t-129\n\t],\n\tVsemicolon: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-92,\n\t\t-74,\n\t\t-74,\n\t\t-74\n\t],\n\tVu: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVuacute: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVucircumflex: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVudieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVugrave: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVuhungarumlaut: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVumacron: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVuogonek: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tVuring: [\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-70,\n\t\t-92,\n\t\t-55,\n\t\t-74,\n\t\t-75\n\t],\n\tWA: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAacute: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAbreve: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAcircumflex: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAdieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAgrave: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAmacron: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAogonek: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAring: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWAtilde: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-120,\n\t\t-74,\n\t\t-60,\n\t\t-120\n\t],\n\tWO: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOcircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOdieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOgrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOmacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOslash: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWOtilde: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-15,\n\t\t-25,\n\t\t-10\n\t],\n\tWa: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWaacute: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWabreve: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWacircumflex: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWadieresis: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWagrave: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWamacron: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWaogonek: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWaring: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWatilde: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-65,\n\t\t-85,\n\t\t-92,\n\t\t-80\n\t],\n\tWcolon: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55,\n\t\t-65,\n\t\t-37\n\t],\n\tWcomma: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-92,\n\t\t-74,\n\t\t-92,\n\t\t-92\n\t],\n\tWe: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-90,\n\t\t-92,\n\t\t-80\n\t],\n\tWeacute: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-90,\n\t\t-92,\n\t\t-80\n\t],\n\tWecaron: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-90,\n\t\t-92,\n\t\t-80\n\t],\n\tWecircumflex: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-90,\n\t\t-92,\n\t\t-80\n\t],\n\tWedieresis: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-50,\n\t\t-52,\n\t\t-40\n\t],\n\tWedotaccent: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-90,\n\t\t-92,\n\t\t-80\n\t],\n\tWegrave: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-50,\n\t\t-52,\n\t\t-40\n\t],\n\tWemacron: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-50,\n\t\t-52,\n\t\t-40\n\t],\n\tWeogonek: [\n\t\t-35,\n\t\t-35,\n\t\t-30,\n\t\t-30,\n\t\t-65,\n\t\t-90,\n\t\t-92,\n\t\t-80\n\t],\n\tWhyphen: [\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-37,\n\t\t-50,\n\t\t-37,\n\t\t-65\n\t],\n\tWo: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWoacute: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWocircumflex: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWodieresis: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWograve: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWohungarumlaut: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWomacron: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWoslash: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWotilde: [\n\t\t-60,\n\t\t-60,\n\t\t-30,\n\t\t-30,\n\t\t-75,\n\t\t-80,\n\t\t-92,\n\t\t-80\n\t],\n\tWperiod: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-92,\n\t\t-74,\n\t\t-92,\n\t\t-92\n\t],\n\tWsemicolon: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55,\n\t\t-65,\n\t\t-37\n\t],\n\tWu: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWuacute: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWucircumflex: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWudieresis: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWugrave: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWuhungarumlaut: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWumacron: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWuogonek: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWuring: [\n\t\t-45,\n\t\t-45,\n\t\t-30,\n\t\t-30,\n\t\t-50,\n\t\t-55,\n\t\t-55,\n\t\t-50\n\t],\n\tWy: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-60,\n\t\t-55,\n\t\t-70,\n\t\t-73\n\t],\n\tWyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-60,\n\t\t-55,\n\t\t-70,\n\t\t-73\n\t],\n\tWydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-60,\n\t\t-55,\n\t\t-70,\n\t\t-73\n\t],\n\tYA: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAacute: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAbreve: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAcircumflex: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAgrave: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAmacron: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAogonek: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAring: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYAtilde: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYO: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOacute: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOcircumflex: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOgrave: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOhungarumlaut: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOmacron: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOslash: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYOtilde: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYa: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYaacute: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYabreve: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYacircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYadieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYagrave: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYamacron: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYaogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYaring: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYatilde: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYcolon: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-92,\n\t\t-65,\n\t\t-92\n\t],\n\tYcomma: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-129\n\t],\n\tYe: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYeacute: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYecaron: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYecircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-71,\n\t\t-92,\n\t\t-100\n\t],\n\tYedieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYedotaccent: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYegrave: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYemacron: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYeogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYo: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYoacute: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYocircumflex: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYodieresis: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYograve: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYohungarumlaut: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYomacron: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYoslash: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYotilde: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYperiod: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-74,\n\t\t-92,\n\t\t-129\n\t],\n\tYsemicolon: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-92,\n\t\t-65,\n\t\t-92\n\t],\n\tYu: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYuacute: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYucircumflex: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYudieresis: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYugrave: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYuhungarumlaut: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYumacron: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYuogonek: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYuring: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYacuteA: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAacute: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAbreve: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAcircumflex: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAgrave: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAmacron: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAogonek: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAring: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteAtilde: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYacuteO: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOacute: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOcircumflex: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOgrave: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOhungarumlaut: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOmacron: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOslash: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacuteOtilde: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYacutea: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteaacute: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteabreve: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteacircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteadieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYacuteagrave: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYacuteamacron: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYacuteaogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYacutearing: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteatilde: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYacutecolon: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-92,\n\t\t-65,\n\t\t-92\n\t],\n\tYacutecomma: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-129\n\t],\n\tYacutee: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteeacute: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteecaron: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteecircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-71,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteedieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYacuteedotaccent: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteegrave: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYacuteemacron: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYacuteeogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYacuteo: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYacuteoacute: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYacuteocircumflex: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYacuteodieresis: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYacuteograve: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYacuteohungarumlaut: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYacuteomacron: [\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-70,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYacuteoslash: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYacuteotilde: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYacuteperiod: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-74,\n\t\t-92,\n\t\t-129\n\t],\n\tYacutesemicolon: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-92,\n\t\t-65,\n\t\t-92\n\t],\n\tYacuteu: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYacuteuacute: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYacuteucircumflex: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYacuteudieresis: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYacuteugrave: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYacuteuhungarumlaut: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYacuteumacron: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYacuteuogonek: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYacuteuring: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYdieresisA: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAacute: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAbreve: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAcircumflex: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAdieresis: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAgrave: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAmacron: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAogonek: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAring: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisAtilde: [\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-110,\n\t\t-74,\n\t\t-50,\n\t\t-120\n\t],\n\tYdieresisO: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOacute: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOcircumflex: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOdieresis: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOgrave: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOhungarumlaut: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOmacron: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOslash: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisOtilde: [\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-85,\n\t\t-35,\n\t\t-25,\n\t\t-15,\n\t\t-30\n\t],\n\tYdieresisa: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisaacute: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisabreve: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisacircumflex: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisadieresis: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYdieresisagrave: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYdieresisamacron: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-60\n\t],\n\tYdieresisaogonek: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisaring: [\n\t\t-90,\n\t\t-90,\n\t\t-140,\n\t\t-140,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisatilde: [\n\t\t-90,\n\t\t-90,\n\t\t-70,\n\t\t-70,\n\t\t-85,\n\t\t-92,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresiscolon: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-92,\n\t\t-65,\n\t\t-92\n\t],\n\tYdieresiscomma: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-129\n\t],\n\tYdieresise: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresiseacute: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisecaron: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisecircumflex: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-71,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisedieresis: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYdieresisedotaccent: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresisegrave: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYdieresisemacron: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-71,\n\t\t-71,\n\t\t-52,\n\t\t-60\n\t],\n\tYdieresiseogonek: [\n\t\t-80,\n\t\t-80,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-100\n\t],\n\tYdieresiso: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYdieresisoacute: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYdieresisocircumflex: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYdieresisodieresis: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYdieresisograve: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYdieresisohungarumlaut: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYdieresisomacron: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYdieresisoslash: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-110\n\t],\n\tYdieresisotilde: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-111,\n\t\t-111,\n\t\t-92,\n\t\t-70\n\t],\n\tYdieresisperiod: [\n\t\t-100,\n\t\t-100,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-74,\n\t\t-92,\n\t\t-129\n\t],\n\tYdieresissemicolon: [\n\t\t-50,\n\t\t-50,\n\t\t-60,\n\t\t-60,\n\t\t-92,\n\t\t-92,\n\t\t-65,\n\t\t-92\n\t],\n\tYdieresisu: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYdieresisuacute: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYdieresisucircumflex: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYdieresisudieresis: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYdieresisugrave: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYdieresisuhungarumlaut: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYdieresisumacron: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-71\n\t],\n\tYdieresisuogonek: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tYdieresisuring: [\n\t\t-100,\n\t\t-100,\n\t\t-110,\n\t\t-110,\n\t\t-92,\n\t\t-92,\n\t\t-92,\n\t\t-111\n\t],\n\tag: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tagbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tagcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tav: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\taw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tay: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tayacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taacuteg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taacutegbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taacutegcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taacutev: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\taacutew: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\taacutey: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taacuteyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taacuteydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tabreveg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tabrevegbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tabrevegcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tabrevev: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tabrevew: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tabrevey: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tabreveyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tabreveydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tacircumflexg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tacircumflexgbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tacircumflexgcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tacircumflexv: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tacircumflexw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tacircumflexy: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tacircumflexyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tacircumflexydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tadieresisg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tadieresisgbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tadieresisgcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tadieresisv: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tadieresisw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tadieresisy: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tadieresisyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tadieresisydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tagraveg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tagravegbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tagravegcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tagravev: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tagravew: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tagravey: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tagraveyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tagraveydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tamacrong: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tamacrongbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tamacrongcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tamacronv: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tamacronw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tamacrony: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tamacronyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tamacronydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taogonekg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taogonekgbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taogonekgcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taogonekv: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\taogonekw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\taogoneky: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taogonekyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taogonekydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taringg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taringgbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taringgcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\taringv: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\taringw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\taringy: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taringyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\taringydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tatildeg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tatildegbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tatildegcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tatildev: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tatildew: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tatildey: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tatildeyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tatildeydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30\n\t],\n\tbl: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20\n\t],\n\tblacute: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20\n\t],\n\tblcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20\n\t],\n\tblslash: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20\n\t],\n\tbu: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbuacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbucircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbudieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbugrave: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbuhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbumacron: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbuogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tburing: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbv: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tby: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tbydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20\n\t],\n\tch: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tck: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tckcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tcl: [\n\t\t-20,\n\t\t-20\n\t],\n\tclacute: [\n\t\t-20,\n\t\t-20\n\t],\n\tclcommaaccent: [\n\t\t-20,\n\t\t-20\n\t],\n\tclslash: [\n\t\t-20,\n\t\t-20\n\t],\n\tcy: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tcyacute: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tcydieresis: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tcacuteh: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tcacutek: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tcacutekcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tcacutel: [\n\t\t-20,\n\t\t-20\n\t],\n\tcacutelacute: [\n\t\t-20,\n\t\t-20\n\t],\n\tcacutelcommaaccent: [\n\t\t-20,\n\t\t-20\n\t],\n\tcacutelslash: [\n\t\t-20,\n\t\t-20\n\t],\n\tcacutey: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tcacuteyacute: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tcacuteydieresis: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tccaronh: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tccaronk: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tccaronkcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tccaronl: [\n\t\t-20,\n\t\t-20\n\t],\n\tccaronlacute: [\n\t\t-20,\n\t\t-20\n\t],\n\tccaronlcommaaccent: [\n\t\t-20,\n\t\t-20\n\t],\n\tccaronlslash: [\n\t\t-20,\n\t\t-20\n\t],\n\tccarony: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tccaronyacute: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tccaronydieresis: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tccedillah: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tccedillak: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tccedillakcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t-10,\n\t\t-20\n\t],\n\tccedillal: [\n\t\t-20,\n\t\t-20\n\t],\n\tccedillalacute: [\n\t\t-20,\n\t\t-20\n\t],\n\tccedillalcommaaccent: [\n\t\t-20,\n\t\t-20\n\t],\n\tccedillalslash: [\n\t\t-20,\n\t\t-20\n\t],\n\tccedillay: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tccedillayacute: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tccedillaydieresis: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tcolonspace: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50\n\t],\n\tcommaquotedblright: [\n\t\t-120,\n\t\t-120,\n\t\t-100,\n\t\t-100,\n\t\t-45,\n\t\t-95,\n\t\t-140,\n\t\t-70\n\t],\n\tcommaquoteright: [\n\t\t-120,\n\t\t-120,\n\t\t-100,\n\t\t-100,\n\t\t-55,\n\t\t-95,\n\t\t-140,\n\t\t-70\n\t],\n\tcommaspace: [\n\t\t-40,\n\t\t-40\n\t],\n\tdd: [\n\t\t-10,\n\t\t-10\n\t],\n\tddcroat: [\n\t\t-10,\n\t\t-10\n\t],\n\tdv: [\n\t\t-15,\n\t\t-15\n\t],\n\tdw: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tdy: [\n\t\t-15,\n\t\t-15\n\t],\n\tdyacute: [\n\t\t-15,\n\t\t-15\n\t],\n\tdydieresis: [\n\t\t-15,\n\t\t-15\n\t],\n\tdcroatd: [\n\t\t-10,\n\t\t-10\n\t],\n\tdcroatdcroat: [\n\t\t-10,\n\t\t-10\n\t],\n\tdcroatv: [\n\t\t-15,\n\t\t-15\n\t],\n\tdcroatw: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tdcroaty: [\n\t\t-15,\n\t\t-15\n\t],\n\tdcroatyacute: [\n\t\t-15,\n\t\t-15\n\t],\n\tdcroatydieresis: [\n\t\t-15,\n\t\t-15\n\t],\n\tecomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\teperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tev: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tew: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tex: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\tey: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teacutecomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\teacuteperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\teacutev: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\teacutew: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\teacutex: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\teacutey: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teacuteyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teacuteydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tecaroncomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tecaronperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tecaronv: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tecaronw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tecaronx: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\tecarony: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tecaronyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tecaronydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tecircumflexcomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tecircumflexperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tecircumflexv: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tecircumflexw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tecircumflexx: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\tecircumflexy: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tecircumflexyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tecircumflexydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tedieresiscomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tedieresisperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tedieresisv: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tedieresisw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tedieresisx: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\tedieresisy: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tedieresisyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tedieresisydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tedotaccentcomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tedotaccentperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tedotaccentv: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tedotaccentw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tedotaccentx: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\tedotaccenty: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tedotaccentyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tedotaccentydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tegravecomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tegraveperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tegravev: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tegravew: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\tegravex: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\tegravey: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tegraveyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tegraveydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\temacroncomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\temacronperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\temacronv: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\temacronw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\temacronx: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\temacrony: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\temacronyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\temacronydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teogonekcomma: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\teogonekperiod: [\n\t\t20,\n\t\t20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\teogonekv: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\teogonekw: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-25\n\t],\n\teogonekx: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15\n\t],\n\teogoneky: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teogonekyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\teogonekydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-15\n\t],\n\tfcomma: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-10,\n\t\t-10\n\t],\n\tfe: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\tfeacute: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\tfecaron: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30\n\t],\n\tfecircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30\n\t],\n\tfedieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30\n\t],\n\tfedotaccent: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\tfegrave: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30\n\t],\n\tfemacron: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30\n\t],\n\tfeogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\tfo: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-10\n\t],\n\tfoacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-10\n\t],\n\tfocircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-10\n\t],\n\tfodieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25\n\t],\n\tfograve: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-10\n\t],\n\tfohungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-10\n\t],\n\tfomacron: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25\n\t],\n\tfoslash: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-10\n\t],\n\tfotilde: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-10\n\t],\n\tfperiod: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\tfquotedblright: [\n\t\t30,\n\t\t30,\n\t\t60,\n\t\t60,\n\t\t50\n\t],\n\tfquoteright: [\n\t\t30,\n\t\t30,\n\t\t50,\n\t\t50,\n\t\t55,\n\t\t55,\n\t\t92,\n\t\t55\n\t],\n\tge: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgeacute: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgecaron: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgecircumflex: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgedieresis: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgedotaccent: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgegrave: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgemacron: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgeogonek: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tggbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tggcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbrevee: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveeacute: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveecaron: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveecircumflex: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveedieresis: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveedotaccent: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveegrave: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveemacron: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveeogonek: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbreveg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbrevegbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbrevegcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccente: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccenteacute: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentecaron: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentecircumflex: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentedieresis: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentedotaccent: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentegrave: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentemacron: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccenteogonek: [\n\t\t10,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentg: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentgbreve: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentgcommaaccent: [\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\thy: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\thyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\thydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tko: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkoacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkocircumflex: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkodieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkograve: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkohungarumlaut: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkomacron: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkoslash: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkotilde: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccento: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentoacute: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentocircumflex: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentodieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentograve: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentohungarumlaut: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentomacron: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentoslash: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentotilde: [\n\t\t-15,\n\t\t-15,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tlw: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tly: [\n\t\t-15,\n\t\t-15\n\t],\n\tlyacute: [\n\t\t-15,\n\t\t-15\n\t],\n\tlydieresis: [\n\t\t-15,\n\t\t-15\n\t],\n\tlacutew: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tlacutey: [\n\t\t-15,\n\t\t-15\n\t],\n\tlacuteyacute: [\n\t\t-15,\n\t\t-15\n\t],\n\tlacuteydieresis: [\n\t\t-15,\n\t\t-15\n\t],\n\tlcommaaccentw: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tlcommaaccenty: [\n\t\t-15,\n\t\t-15\n\t],\n\tlcommaaccentyacute: [\n\t\t-15,\n\t\t-15\n\t],\n\tlcommaaccentydieresis: [\n\t\t-15,\n\t\t-15\n\t],\n\tlslashw: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tlslashy: [\n\t\t-15,\n\t\t-15\n\t],\n\tlslashyacute: [\n\t\t-15,\n\t\t-15\n\t],\n\tlslashydieresis: [\n\t\t-15,\n\t\t-15\n\t],\n\tmu: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmuacute: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmucircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmudieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmugrave: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmuhungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmumacron: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmuogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmuring: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10\n\t],\n\tmy: [\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-15\n\t],\n\tmyacute: [\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-15\n\t],\n\tmydieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-15,\n\t\t-15\n\t],\n\tnu: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnuacute: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnucircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnudieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnugrave: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnuhungarumlaut: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnumacron: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnuogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnuring: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnv: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tny: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tnyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tnydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tnacuteu: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteuacute: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteucircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteudieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteugrave: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteuhungarumlaut: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteumacron: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteuogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacuteuring: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tnacutev: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tnacutey: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tnacuteyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tnacuteydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tncaronu: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronuacute: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronucircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronudieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronugrave: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronuhungarumlaut: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronumacron: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronuogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronuring: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncaronv: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tncarony: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tncaronyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tncaronydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tncommaaccentu: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentuacute: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentucircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentudieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentugrave: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentuhungarumlaut: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentumacron: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentuogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccenturing: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tncommaaccentv: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tncommaaccenty: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tncommaaccentyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tncommaaccentydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tntildeu: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeuacute: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeucircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeudieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeugrave: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeuhungarumlaut: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeumacron: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeuogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildeuring: [\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tntildev: [\n\t\t-40,\n\t\t-40,\n\t\t-20,\n\t\t-20,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tntildey: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tntildeyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tntildeydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tov: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\tow: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\tox: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\toy: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toacutev: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\toacutew: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\toacutex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\toacutey: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toacuteyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toacuteydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tocircumflexv: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\tocircumflexw: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\tocircumflexx: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\tocircumflexy: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tocircumflexyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tocircumflexydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\todieresisv: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\todieresisw: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\todieresisx: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\todieresisy: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\todieresisyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\todieresisydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\togravev: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\togravew: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\togravex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\togravey: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tograveyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tograveydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tohungarumlautv: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\tohungarumlautw: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\tohungarumlautx: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\tohungarumlauty: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tohungarumlautyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tohungarumlautydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tomacronv: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\tomacronw: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\tomacronx: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\tomacrony: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tomacronyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tomacronydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toslashv: [\n\t\t-20,\n\t\t-20,\n\t\t-70,\n\t\t-70,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\toslashw: [\n\t\t-15,\n\t\t-15,\n\t\t-70,\n\t\t-70,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\toslashx: [\n\t\t-30,\n\t\t-30,\n\t\t-85,\n\t\t-85,\n\t\t0,\n\t\t-10\n\t],\n\toslashy: [\n\t\t-20,\n\t\t-20,\n\t\t-70,\n\t\t-70,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toslashyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-70,\n\t\t-70,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\toslashydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-70,\n\t\t-70,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\totildev: [\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-15,\n\t\t-10,\n\t\t-15\n\t],\n\totildew: [\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-15,\n\t\t-10,\n\t\t-25,\n\t\t0,\n\t\t-25\n\t],\n\totildex: [\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10\n\t],\n\totildey: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\totildeyacute: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\totildeydieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tpy: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tpyacute: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tpydieresis: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tperiodquotedblright: [\n\t\t-120,\n\t\t-120,\n\t\t-100,\n\t\t-100,\n\t\t-55,\n\t\t-95,\n\t\t-140,\n\t\t-70\n\t],\n\tperiodquoteright: [\n\t\t-120,\n\t\t-120,\n\t\t-100,\n\t\t-100,\n\t\t-55,\n\t\t-95,\n\t\t-140,\n\t\t-70\n\t],\n\tperiodspace: [\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-60\n\t],\n\tquotedblrightspace: [\n\t\t-80,\n\t\t-80,\n\t\t-40,\n\t\t-40\n\t],\n\tquoteleftquoteleft: [\n\t\t-46,\n\t\t-46,\n\t\t-57,\n\t\t-57,\n\t\t-63,\n\t\t-74,\n\t\t-111,\n\t\t-74\n\t],\n\tquoterightd: [\n\t\t-80,\n\t\t-80,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-15,\n\t\t-25,\n\t\t-50\n\t],\n\tquoterightdcroat: [\n\t\t-80,\n\t\t-80,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-15,\n\t\t-25,\n\t\t-50\n\t],\n\tquoterightl: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tquoterightlacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tquoterightlcommaaccent: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tquoterightlslash: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tquoterightquoteright: [\n\t\t-46,\n\t\t-46,\n\t\t-57,\n\t\t-57,\n\t\t-63,\n\t\t-74,\n\t\t-111,\n\t\t-74\n\t],\n\tquoterightr: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-15,\n\t\t-25,\n\t\t-50\n\t],\n\tquoterightracute: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-15,\n\t\t-25,\n\t\t-50\n\t],\n\tquoterightrcaron: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-15,\n\t\t-25,\n\t\t-50\n\t],\n\tquoterightrcommaaccent: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50,\n\t\t-20,\n\t\t-15,\n\t\t-25,\n\t\t-50\n\t],\n\tquoterights: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-37,\n\t\t-74,\n\t\t-40,\n\t\t-55\n\t],\n\tquoterightsacute: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-37,\n\t\t-74,\n\t\t-40,\n\t\t-55\n\t],\n\tquoterightscaron: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-37,\n\t\t-74,\n\t\t-40,\n\t\t-55\n\t],\n\tquoterightscedilla: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-37,\n\t\t-74,\n\t\t-40,\n\t\t-55\n\t],\n\tquoterightscommaaccent: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-37,\n\t\t-74,\n\t\t-40,\n\t\t-55\n\t],\n\tquoterightspace: [\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-70,\n\t\t-74,\n\t\t-74,\n\t\t-111,\n\t\t-74\n\t],\n\tquoterightv: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-15,\n\t\t-10,\n\t\t-50\n\t],\n\trc: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trccaron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trccedilla: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcomma: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-92,\n\t\t-65,\n\t\t-111,\n\t\t-40\n\t],\n\trd: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\trdcroat: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\trg: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trgbreve: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trgcommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trhyphen: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tro: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\troacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trocircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trodieresis: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trograve: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trohungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tromacron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\troslash: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trotilde: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trperiod: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-100,\n\t\t-65,\n\t\t-111,\n\t\t-55\n\t],\n\trq: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trs: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trsacute: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trscaron: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trscedilla: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trscommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trt: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\trtcommaaccent: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\trv: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\try: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\tryacute: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\trydieresis: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\tracutec: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracutecacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteccaron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteccedilla: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracutecomma: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-92,\n\t\t-65,\n\t\t-111,\n\t\t-40\n\t],\n\tracuted: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\tracutedcroat: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\tracuteg: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\tracutegbreve: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\tracutegcommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\tracutehyphen: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tracuteo: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteoacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteocircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteodieresis: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteograve: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteohungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteomacron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteoslash: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteotilde: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\tracuteperiod: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-100,\n\t\t-65,\n\t\t-111,\n\t\t-55\n\t],\n\tracuteq: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracutes: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tracutesacute: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tracutescaron: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tracutescedilla: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tracutescommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tracutet: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\tracutetcommaaccent: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\tracutev: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\tracutey: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\tracuteyacute: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\tracuteydieresis: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\trcaronc: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaroncacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronccaron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronccedilla: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaroncomma: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-92,\n\t\t-65,\n\t\t-111,\n\t\t-40\n\t],\n\trcarond: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\trcarondcroat: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\trcarong: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trcarongbreve: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trcarongcommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trcaronhyphen: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\trcarono: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronoacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronocircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronodieresis: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronograve: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronohungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronomacron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronoslash: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronotilde: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcaronperiod: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-100,\n\t\t-65,\n\t\t-111,\n\t\t-55\n\t],\n\trcaronq: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcarons: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcaronsacute: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcaronscaron: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcaronscedilla: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcaronscommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcaront: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\trcarontcommaaccent: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\trcaronv: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\trcarony: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\trcaronyacute: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\trcaronydieresis: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\trcommaaccentc: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentcacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentccaron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentccedilla: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentcomma: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-92,\n\t\t-65,\n\t\t-111,\n\t\t-40\n\t],\n\trcommaaccentd: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentdcroat: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentg: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trcommaaccentgbreve: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trcommaaccentgcommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-37,\n\t\t-18\n\t],\n\trcommaaccenthyphen: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\trcommaaccento: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentoacute: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentocircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentodieresis: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentograve: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentohungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentomacron: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentoslash: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentotilde: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-45\n\t],\n\trcommaaccentperiod: [\n\t\t-60,\n\t\t-60,\n\t\t-50,\n\t\t-50,\n\t\t-100,\n\t\t-65,\n\t\t-111,\n\t\t-55\n\t],\n\trcommaaccentq: [\n\t\t-20,\n\t\t-20,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccents: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcommaaccentsacute: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcommaaccentscaron: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcommaaccentscedilla: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcommaaccentscommaaccent: [\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\trcommaaccentt: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\trcommaaccenttcommaaccent: [\n\t\t20,\n\t\t20,\n\t\t40,\n\t\t40\n\t],\n\trcommaaccentv: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\trcommaaccenty: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\trcommaaccentyacute: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\trcommaaccentydieresis: [\n\t\t10,\n\t\t10,\n\t\t30,\n\t\t30\n\t],\n\tsw: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30\n\t],\n\tsacutew: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30\n\t],\n\tscaronw: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30\n\t],\n\tscedillaw: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30\n\t],\n\tscommaaccentw: [\n\t\t-15,\n\t\t-15,\n\t\t-30,\n\t\t-30\n\t],\n\tsemicolonspace: [\n\t\t-40,\n\t\t-40,\n\t\t-50,\n\t\t-50\n\t],\n\tspaceT: [\n\t\t-100,\n\t\t-100,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t0,\n\t\t-18,\n\t\t-18\n\t],\n\tspaceTcaron: [\n\t\t-100,\n\t\t-100,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t0,\n\t\t-18,\n\t\t-18\n\t],\n\tspaceTcommaaccent: [\n\t\t-100,\n\t\t-100,\n\t\t-50,\n\t\t-50,\n\t\t-30,\n\t\t0,\n\t\t-18,\n\t\t-18\n\t],\n\tspaceV: [\n\t\t-80,\n\t\t-80,\n\t\t-50,\n\t\t-50,\n\t\t-45,\n\t\t-70,\n\t\t-35,\n\t\t-50\n\t],\n\tspaceW: [\n\t\t-80,\n\t\t-80,\n\t\t-40,\n\t\t-40,\n\t\t-30,\n\t\t-70,\n\t\t-40,\n\t\t-30\n\t],\n\tspaceY: [\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-90,\n\t\t-55,\n\t\t-70,\n\t\t-75,\n\t\t-90\n\t],\n\tspaceYacute: [\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-90,\n\t\t-55,\n\t\t-70,\n\t\t-75,\n\t\t-90\n\t],\n\tspaceYdieresis: [\n\t\t-120,\n\t\t-120,\n\t\t-90,\n\t\t-90,\n\t\t-55,\n\t\t-70,\n\t\t-75,\n\t\t-90\n\t],\n\tspacequotedblleft: [\n\t\t-80,\n\t\t-80,\n\t\t-30,\n\t\t-30\n\t],\n\tspacequoteleft: [\n\t\t-60,\n\t\t-60,\n\t\t-60,\n\t\t-60\n\t],\n\tva: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvaacute: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvabreve: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvacircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvadieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvagrave: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvamacron: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvaogonek: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvaring: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvatilde: [\n\t\t-20,\n\t\t-20,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tvcomma: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-55,\n\t\t-37,\n\t\t-74,\n\t\t-65\n\t],\n\tvo: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvoacute: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvocircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvodieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvograve: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvohungarumlaut: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvomacron: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvoslash: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvotilde: [\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-20\n\t],\n\tvperiod: [\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-80,\n\t\t-70,\n\t\t-37,\n\t\t-74,\n\t\t-65\n\t],\n\twcomma: [\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-60,\n\t\t-55,\n\t\t-37,\n\t\t-74,\n\t\t-65\n\t],\n\two: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twoacute: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twocircumflex: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twodieresis: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twograve: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twohungarumlaut: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twomacron: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twoslash: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twotilde: [\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-10\n\t],\n\twperiod: [\n\t\t-40,\n\t\t-40,\n\t\t-60,\n\t\t-60,\n\t\t-70,\n\t\t-37,\n\t\t-74,\n\t\t-65\n\t],\n\txe: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txeacute: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txecaron: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txecircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txedieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txedotaccent: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txegrave: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txemacron: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\txeogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-15\n\t],\n\tya: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyaacute: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyabreve: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyadieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyagrave: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyamacron: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyaogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyaring: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyatilde: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tycomma: [\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-100,\n\t\t-55,\n\t\t-37,\n\t\t-55,\n\t\t-65\n\t],\n\tye: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyeacute: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyecaron: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyecircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyedieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyedotaccent: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyegrave: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyemacron: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyeogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyo: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyoacute: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyocircumflex: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyodieresis: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyograve: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyohungarumlaut: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyomacron: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyoslash: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyotilde: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\typeriod: [\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-37,\n\t\t-55,\n\t\t-65\n\t],\n\tyacutea: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteaacute: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteabreve: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteacircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteadieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteagrave: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteamacron: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteaogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacutearing: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacuteatilde: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tyacutecomma: [\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-100,\n\t\t-55,\n\t\t-37,\n\t\t-55,\n\t\t-65\n\t],\n\tyacutee: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteeacute: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteecaron: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteecircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteedieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteedotaccent: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteegrave: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteemacron: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteeogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tyacuteo: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteoacute: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteocircumflex: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteodieresis: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteograve: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteohungarumlaut: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteomacron: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteoslash: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteotilde: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tyacuteperiod: [\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-37,\n\t\t-55,\n\t\t-65\n\t],\n\tydieresisa: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisaacute: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisabreve: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisacircumflex: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisadieresis: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisagrave: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisamacron: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisaogonek: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisaring: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresisatilde: [\n\t\t-30,\n\t\t-30,\n\t\t-20,\n\t\t-20\n\t],\n\tydieresiscomma: [\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-100,\n\t\t-55,\n\t\t-37,\n\t\t-55,\n\t\t-65\n\t],\n\tydieresise: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresiseacute: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresisecaron: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresisecircumflex: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresisedieresis: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresisedotaccent: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresisegrave: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresisemacron: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresiseogonek: [\n\t\t-10,\n\t\t-10,\n\t\t-20,\n\t\t-20,\n\t\t-10\n\t],\n\tydieresiso: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisoacute: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisocircumflex: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisodieresis: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisograve: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisohungarumlaut: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisomacron: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisoslash: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisotilde: [\n\t\t-25,\n\t\t-25,\n\t\t-20,\n\t\t-20,\n\t\t-25\n\t],\n\tydieresisperiod: [\n\t\t-80,\n\t\t-80,\n\t\t-100,\n\t\t-100,\n\t\t-70,\n\t\t-37,\n\t\t-55,\n\t\t-65\n\t],\n\tze: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzeacute: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzecaron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzecircumflex: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzedieresis: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzedotaccent: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzegrave: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzemacron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzeogonek: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacutee: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteeacute: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteecaron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteecircumflex: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteedieresis: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteedotaccent: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteegrave: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteemacron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteeogonek: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcarone: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaroneacute: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronecaron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronecircumflex: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronedieresis: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronedotaccent: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronegrave: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronemacron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaroneogonek: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccente: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccenteacute: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentecaron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentecircumflex: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentedieresis: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentedotaccent: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentegrave: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentemacron: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccenteogonek: [\n\t\t10,\n\t\t10,\n\t\t-15,\n\t\t-15\n\t],\n\tBcomma: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tBperiod: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tCcomma: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tCperiod: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tCacutecomma: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tCacuteperiod: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tCcaroncomma: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tCcaronperiod: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tCcedillacomma: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tCcedillaperiod: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30\n\t],\n\tFe: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFeacute: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFecaron: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFecircumflex: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFedieresis: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFedotaccent: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFegrave: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFemacron: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFeogonek: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-100,\n\t\t-75\n\t],\n\tFo: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFoacute: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFocircumflex: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFodieresis: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFograve: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFohungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFomacron: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFoslash: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFotilde: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t-25,\n\t\t-70,\n\t\t-105,\n\t\t-15\n\t],\n\tFr: [\n\t\t0,\n\t\t0,\n\t\t-45,\n\t\t-45,\n\t\t0,\n\t\t-50,\n\t\t-55\n\t],\n\tFracute: [\n\t\t0,\n\t\t0,\n\t\t-45,\n\t\t-45,\n\t\t0,\n\t\t-50,\n\t\t-55\n\t],\n\tFrcaron: [\n\t\t0,\n\t\t0,\n\t\t-45,\n\t\t-45,\n\t\t0,\n\t\t-50,\n\t\t-55\n\t],\n\tFrcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-45,\n\t\t-45,\n\t\t0,\n\t\t-50,\n\t\t-55\n\t],\n\tJa: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJaacute: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJabreve: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJacircumflex: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJadieresis: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJagrave: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJamacron: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJaogonek: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJaring: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tJatilde: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-15,\n\t\t-40,\n\t\t-35\n\t],\n\tLcaronT: [\n\t\t0,\n\t\t0,\n\t\t-110,\n\t\t-110\n\t],\n\tLcaronTcaron: [\n\t\t0,\n\t\t0,\n\t\t-110,\n\t\t-110\n\t],\n\tLcaronTcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-110,\n\t\t-110\n\t],\n\tLcaronV: [\n\t\t0,\n\t\t0,\n\t\t-110,\n\t\t-110\n\t],\n\tLcaronW: [\n\t\t0,\n\t\t0,\n\t\t-70,\n\t\t-70\n\t],\n\tLcaronY: [\n\t\t0,\n\t\t0,\n\t\t-140,\n\t\t-140\n\t],\n\tLcaronYacute: [\n\t\t0,\n\t\t0,\n\t\t-140,\n\t\t-140\n\t],\n\tLcaronYdieresis: [\n\t\t0,\n\t\t0,\n\t\t-140,\n\t\t-140\n\t],\n\tLcaronquotedblright: [\n\t\t0,\n\t\t0,\n\t\t-140,\n\t\t-140\n\t],\n\tLcaronquoteright: [\n\t\t0,\n\t\t0,\n\t\t-160,\n\t\t-160,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-92\n\t],\n\tLcarony: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55\n\t],\n\tLcaronyacute: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55\n\t],\n\tLcaronydieresis: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55\n\t],\n\tScomma: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tSperiod: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tSacutecomma: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tSacuteperiod: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tScaroncomma: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tScaronperiod: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tScedillacomma: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tScedillaperiod: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tScommaaccentcomma: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tScommaaccentperiod: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tTrcaron: [\n\t\t0,\n\t\t0,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcaronrcaron: [\n\t\t0,\n\t\t0,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcommaaccentrcaron: [\n\t\t0,\n\t\t0,\n\t\t-120,\n\t\t-120,\n\t\t-74,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tYhyphen: [\n\t\t0,\n\t\t0,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-74,\n\t\t-111\n\t],\n\tYi: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYiacute: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYiogonek: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYacutehyphen: [\n\t\t0,\n\t\t0,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-74,\n\t\t-111\n\t],\n\tYacutei: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYacuteiacute: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYacuteiogonek: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYdieresishyphen: [\n\t\t0,\n\t\t0,\n\t\t-140,\n\t\t-140,\n\t\t-92,\n\t\t-92,\n\t\t-74,\n\t\t-111\n\t],\n\tYdieresisi: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYdieresisiacute: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tYdieresisiogonek: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-55\n\t],\n\tbb: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t-10,\n\t\t-10\n\t],\n\tbcomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tbperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40,\n\t\t-40\n\t],\n\tccomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tcacutecomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tccaroncomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tccedillacomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tfa: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfaacute: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfabreve: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfacircumflex: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfadieresis: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfagrave: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfamacron: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfaogonek: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfaring: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfatilde: [\n\t\t0,\n\t\t0,\n\t\t-30,\n\t\t-30,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfdotlessi: [\n\t\t0,\n\t\t0,\n\t\t-28,\n\t\t-28,\n\t\t-35,\n\t\t-30,\n\t\t-60,\n\t\t-50\n\t],\n\tgr: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgracute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgrcaron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgrcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgbrever: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgbreveracute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgbrevercaron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgbrevercommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgcommaaccentr: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgcommaaccentracute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgcommaaccentrcaron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tgcommaaccentrcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10\n\t],\n\tke: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkeacute: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkecaron: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkecircumflex: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkedieresis: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkedotaccent: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkegrave: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkemacron: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkeogonek: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccente: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccenteacute: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentecaron: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentecircumflex: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentedieresis: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentedotaccent: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentegrave: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccentemacron: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tkcommaaccenteogonek: [\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-20,\n\t\t-10,\n\t\t-30,\n\t\t-10,\n\t\t-10\n\t],\n\tocomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\toperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\toacutecomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\toacuteperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tocircumflexcomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tocircumflexperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\todieresiscomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\todieresisperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\togravecomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tograveperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tohungarumlautcomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tohungarumlautperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tomacroncomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tomacronperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\toslasha: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashaacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashabreve: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashacircumflex: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashadieresis: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashagrave: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashamacron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashaogonek: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslasharing: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashatilde: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashb: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashc: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashcacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashccaron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashccedilla: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashcomma: [\n\t\t0,\n\t\t0,\n\t\t-95,\n\t\t-95\n\t],\n\toslashd: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashdcroat: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashe: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslasheacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashecaron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashecircumflex: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashedieresis: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashedotaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashegrave: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashemacron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslasheogonek: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashf: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashg: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\toslashgbreve: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\toslashgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\toslashh: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashi: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashiacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashicircumflex: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashidieresis: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashigrave: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashimacron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashiogonek: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashj: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashk: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashkcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashl: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashlacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashlcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashlslash: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashm: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashn: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashnacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashncaron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashncommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashntilde: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslasho: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashoacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashocircumflex: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashodieresis: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashograve: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashohungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashomacron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashoslash: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashotilde: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashp: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashperiod: [\n\t\t0,\n\t\t0,\n\t\t-95,\n\t\t-95\n\t],\n\toslashq: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashr: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashracute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashrcaron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashrcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashs: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashsacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashscaron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashscedilla: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashscommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslasht: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashtcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashu: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashuacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashucircumflex: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashudieresis: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashugrave: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashuhungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashumacron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashuogonek: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashuring: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashz: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashzacute: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashzcaron: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\toslashzdotaccent: [\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-55\n\t],\n\totildecomma: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\totildeperiod: [\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-40\n\t],\n\tpcomma: [\n\t\t0,\n\t\t0,\n\t\t-35,\n\t\t-35\n\t],\n\tpperiod: [\n\t\t0,\n\t\t0,\n\t\t-35,\n\t\t-35\n\t],\n\tra: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\traacute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trabreve: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracircumflex: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tradieresis: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tragrave: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tramacron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\traogonek: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\traring: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tratilde: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\tri: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\triacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tricircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tridieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trigrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trimacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\triogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trk: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trkcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trl: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trlacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trlcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trlslash: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trm: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25\n\t],\n\trn: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trnacute: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trncaron: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trncommaaccent: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trntilde: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trp: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\trsemicolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\tru: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\truacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trucircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trudieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trugrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\truhungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trumacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\truogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\truring: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutea: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteaacute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteabreve: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteacircumflex: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteadieresis: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteagrave: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteamacron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteaogonek: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracutearing: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracuteatilde: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\tracutecolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\tracutei: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteiacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteicircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteidieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteigrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteimacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteiogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutekcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutel: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutelacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutelcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutelslash: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracutem: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25\n\t],\n\tracuten: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\tracutenacute: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\tracutencaron: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\tracutencommaaccent: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\tracutentilde: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\tracutep: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\tracutesemicolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\tracuteu: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteuacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteucircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteudieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteugrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteuhungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteumacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteuogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tracuteuring: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcarona: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronaacute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronabreve: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronacircumflex: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronadieresis: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronagrave: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronamacron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronaogonek: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronaring: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaronatilde: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcaroncolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\trcaroni: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaroniacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronicircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronidieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronigrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronimacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaroniogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronk: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronkcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronl: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronlacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronlcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronlslash: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronm: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25\n\t],\n\trcaronn: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcaronnacute: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcaronncaron: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcaronncommaaccent: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcaronntilde: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcaronp: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\trcaronsemicolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\trcaronu: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronuacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronucircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronudieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronugrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronuhungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronumacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronuogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcaronuring: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccenta: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentaacute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentabreve: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentacircumflex: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentadieresis: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentagrave: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentamacron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentaogonek: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentaring: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentatilde: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-15\n\t],\n\trcommaaccentcolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\trcommaaccenti: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentiacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccenticircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentidieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentigrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentimacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentiogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentk: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentkcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentl: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentlacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentlcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentlslash: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentm: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25\n\t],\n\trcommaaccentn: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcommaaccentnacute: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcommaaccentncaron: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcommaaccentncommaaccent: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcommaaccentntilde: [\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t25,\n\t\t-15\n\t],\n\trcommaaccentp: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30,\n\t\t-10\n\t],\n\trcommaaccentsemicolon: [\n\t\t0,\n\t\t0,\n\t\t30,\n\t\t30\n\t],\n\trcommaaccentu: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentuacute: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentucircumflex: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentudieresis: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentugrave: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentuhungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentumacron: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccentuogonek: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\trcommaaccenturing: [\n\t\t0,\n\t\t0,\n\t\t15,\n\t\t15\n\t],\n\tscomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tsperiod: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tsacutecomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tsacuteperiod: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tscaroncomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tscaronperiod: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tscedillacomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tscedillaperiod: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tscommaaccentcomma: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tscommaaccentperiod: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tve: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tveacute: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tvecaron: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tvecircumflex: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tvedieresis: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tvedotaccent: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tvegrave: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tvemacron: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tveogonek: [\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t-25,\n\t\t-10,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\twa: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twaacute: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twabreve: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twacircumflex: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twadieresis: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twagrave: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twamacron: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twaogonek: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twaring: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twatilde: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twe: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tweacute: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twecaron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twecircumflex: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twedieresis: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twedotaccent: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twegrave: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\twemacron: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tweogonek: [\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t-10,\n\t\t0,\n\t\t-10\n\t],\n\tzo: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzoacute: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzocircumflex: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzodieresis: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzograve: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzohungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzomacron: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzoslash: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzotilde: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteo: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteoacute: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteocircumflex: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteodieresis: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteograve: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteohungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteomacron: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteoslash: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzacuteotilde: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcarono: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronoacute: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronocircumflex: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronodieresis: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronograve: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronohungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronomacron: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronoslash: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzcaronotilde: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccento: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentoacute: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentocircumflex: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentodieresis: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentograve: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentohungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentomacron: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentoslash: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tzdotaccentotilde: [\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-15\n\t],\n\tAp: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAquoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAacutep: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAacutequoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAbrevep: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAbrevequoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAcircumflexp: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAcircumflexquoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAdieresisp: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAdieresisquoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAgravep: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAgravequoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAmacronp: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAmacronquoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAogonekp: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAogonekquoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAringp: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAringquoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tAtildep: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tAtildequoteright: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-74,\n\t\t-74,\n\t\t-37,\n\t\t-111\n\t],\n\tJe: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJeacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJecaron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJecircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJedieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJedotaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJegrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJemacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJeogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJo: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJoacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJocircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJodieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJograve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJohungarumlaut: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJomacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJoslash: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tJotilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t-40,\n\t\t-25\n\t],\n\tNA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNacuteAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcaronAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNcommaaccentAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tNtildeAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20,\n\t\t-30,\n\t\t-27,\n\t\t-35\n\t],\n\tTi: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTiacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTiogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcaroni: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcaroniacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcaroniogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcommaaccenti: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcommaaccentiacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tTcommaaccentiogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-35\n\t],\n\tVi: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-60\n\t],\n\tViacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-60\n\t],\n\tVicircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-34,\n\t\t-20\n\t],\n\tVidieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-34,\n\t\t-20\n\t],\n\tVigrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-34,\n\t\t-20\n\t],\n\tVimacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t0,\n\t\t-34,\n\t\t-20\n\t],\n\tViogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t-55,\n\t\t-74,\n\t\t-60\n\t],\n\tWi: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-40\n\t],\n\tWiacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-40\n\t],\n\tWiogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-37,\n\t\t-55,\n\t\t-40\n\t],\n\tfi: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-25,\n\t\t0,\n\t\t-20,\n\t\t-20\n\t],\n\tgperiod: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tgbreveperiod: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tgcommaaccentperiod: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-15\n\t],\n\tiv: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tiacutev: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\ticircumflexv: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tidieresisv: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tigravev: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\timacronv: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tiogonekv: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-25\n\t],\n\tky: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tkyacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tkydieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tkcommaaccenty: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tkcommaaccentyacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tkcommaaccentydieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-15,\n\t\t0,\n\t\t-10,\n\t\t-15\n\t],\n\tquotedblleftA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquotedblleftAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tquoteleftAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10,\n\t\t0,\n\t\t0,\n\t\t-80\n\t],\n\tre: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\treacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trecaron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trecircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tredieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tredotaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tregrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tremacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\treogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracutee: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteeacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteecaron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteecircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteedieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteedotaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteegrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteemacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tracuteeogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcarone: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaroneacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronecaron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronecircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronedieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronedotaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronegrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaronemacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcaroneogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccente: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccenteacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentecaron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentecircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentedieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentedotaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentegrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccentemacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\trcommaaccenteogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t0,\n\t\t-37\n\t],\n\tspaceA: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAcircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAdieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAgrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAmacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tspaceAtilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-55,\n\t\t-37,\n\t\t-18,\n\t\t-55\n\t],\n\tFi: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-45\n\t],\n\tFiacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-45\n\t],\n\tFicircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-45\n\t],\n\tFidieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-45\n\t],\n\tFigrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-45\n\t],\n\tFimacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-45\n\t],\n\tFiogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-45\n\t],\n\teb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\teacuteb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tecaronb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tecircumflexb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tedieresisb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tedotaccentb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tegraveb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\temacronb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\teogonekb: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tff: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-18,\n\t\t-18,\n\t\t-25\n\t],\n\tquoterightt: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t-30,\n\t\t-18\n\t],\n\tquoterighttcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-37,\n\t\t-30,\n\t\t-18\n\t],\n\tYicircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYidieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYigrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYimacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYacuteicircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYacuteidieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYacuteigrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYacuteimacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYdieresisicircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYdieresisidieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYdieresisigrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\tYdieresisimacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-34\n\t],\n\teg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tegbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tegcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\teacuteg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\teacutegbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\teacutegcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tecarong: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tecarongbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tecarongcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tecircumflexg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tecircumflexgbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tecircumflexgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tedieresisg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tedieresisgbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tedieresisgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tedotaccentg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tedotaccentgbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tedotaccentgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tegraveg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tegravegbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tegravegcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\temacrong: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\temacrongbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\temacrongcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\teogonekg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\teogonekgbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\teogonekgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-40,\n\t\t-15\n\t],\n\tfiogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tgcomma: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgbrevecomma: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tgcommaaccentcomma: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tog: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\togbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\togcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\toacuteg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\toacutegbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\toacutegcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tocircumflexg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tocircumflexgbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tocircumflexgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\todieresisg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\todieresisgbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\todieresisgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tograveg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\togravegbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\togravegcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tohungarumlautg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tohungarumlautgbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tohungarumlautgcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tomacrong: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tomacrongbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tomacrongcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\totildeg: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\totildegbreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\totildegcommaaccent: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-10\n\t],\n\tfiacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-20\n\t],\n\tga: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgaacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgabreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgacircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgadieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgagrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgamacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgaogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgaring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgatilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbrevea: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveaacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveabreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveacircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveadieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveagrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveamacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveaogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbrevearing: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgbreveatilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccenta: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentaacute: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentabreve: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentacircumflex: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentadieresis: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentagrave: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentamacron: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentaogonek: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentaring: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t],\n\tgcommaaccentatilde: [\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t-5\n\t]\n};\nvar data = {\n\tattributes: attributes,\n\tglyphWidths: glyphWidths,\n\tkernPairs: kernPairs\n};\n\nconst initFont = font => {\n  return [font.FontName, {\n    attributes: font,\n    glyphWidths: {},\n    kernPairs: {}\n  }];\n};\nconst expandData = data => {\n  const {\n    attributes,\n    glyphWidths,\n    kernPairs\n  } = data;\n  const fonts = attributes.map(initFont);\n  Object.keys(glyphWidths).forEach(key => {\n    glyphWidths[key].forEach((value, index) => {\n      if (value) fonts[index][1].glyphWidths[key] = value;\n    });\n  });\n  Object.keys(kernPairs).forEach(key => {\n    kernPairs[key].forEach((value, index) => {\n      if (value) fonts[index][1].kernPairs[key] = value;\n    });\n  });\n  return Object.fromEntries(fonts);\n};\n\nconst STANDARD_FONTS = expandData(data);\nconst createStandardFont = PDFFont => class StandardFont extends PDFFont {\n  constructor(document, name, id) {\n    super();\n    this.document = document;\n    this.name = name;\n    this.id = id;\n    this.font = AFMFont.fromJson(STANDARD_FONTS[this.name]);\n    this.ascender = this.font.ascender;\n    this.descender = this.font.descender;\n    this.bbox = this.font.bbox;\n    this.lineGap = this.font.lineGap;\n  }\n  embed() {\n    this.dictionary.data = {\n      Type: 'Font',\n      BaseFont: this.name,\n      Subtype: 'Type1',\n      Encoding: 'WinAnsiEncoding'\n    };\n    return this.dictionary.end();\n  }\n  encode(text) {\n    const encoded = this.font.encodeText(text);\n    const glyphs = this.font.glyphsForString(`${text}`);\n    const advances = this.font.advancesForGlyphs(glyphs);\n    const positions = [];\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      positions.push({\n        xAdvance: advances[i],\n        yAdvance: 0,\n        xOffset: 0,\n        yOffset: 0,\n        advanceWidth: this.font.widthOfGlyph(glyph)\n      });\n    }\n    return [encoded, positions];\n  }\n  encodeGlyphs(glyphs) {\n    const res = [];\n    for (let glyph of Array.from(glyphs)) {\n      res.push(`00${glyph.id.toString(16)}`.slice(-2));\n    }\n    return res;\n  }\n  widthOfString(string, size) {\n    const glyphs = this.font.glyphsForString(`${string}`);\n    const advances = this.font.advancesForGlyphs(glyphs);\n    let width = 0;\n    for (let advance of Array.from(advances)) {\n      width += advance;\n    }\n    const scale = size / 1000;\n    return width * scale;\n  }\n  static isStandardFont(name) {\n    return name in STANDARD_FONTS;\n  }\n};\n\nconst toHex = function () {\n  for (var _len = arguments.length, codePoints = new Array(_len), _key = 0; _key < _len; _key++) {\n    codePoints[_key] = arguments[_key];\n  }\n  const codes = Array.from(codePoints).map(code => `0000${code.toString(16)}`.slice(-4));\n  return codes.join('');\n};\nconst createEmbeddedFont = PDFFont => class EmbeddedFont extends PDFFont {\n  constructor(document, font, id) {\n    super();\n    this.document = document;\n    this.font = font;\n    this.id = id;\n    this.subset = this.font.createSubset();\n    this.unicode = [[0]];\n    this.widths = [this.font.getGlyph(0).advanceWidth];\n    this.name = this.font.postscriptName;\n    this.scale = 1000 / this.font.unitsPerEm;\n    this.ascender = this.font.ascent * this.scale;\n    this.descender = this.font.descent * this.scale;\n    this.xHeight = this.font.xHeight * this.scale;\n    this.capHeight = this.font.capHeight * this.scale;\n    this.lineGap = this.font.lineGap * this.scale;\n    this.bbox = this.font.bbox;\n    this.layoutCache = Object.create(null);\n  }\n  layoutRun(text, features) {\n    // passing LTR To force fontkit to not reverse the string\n    const run = this.font.layout(text, features, undefined, undefined, 'ltr');\n\n    // Normalize position values\n    for (let i = 0; i < run.positions.length; i++) {\n      const position = run.positions[i];\n      for (let key in position) {\n        position[key] *= this.scale;\n      }\n      position.advanceWidth = run.glyphs[i].advanceWidth * this.scale;\n    }\n    return run;\n  }\n  layoutCached(text) {\n    let cached;\n    if (cached = this.layoutCache[text]) {\n      return cached;\n    }\n    const run = this.layoutRun(text);\n    this.layoutCache[text] = run;\n    return run;\n  }\n  layout(text, features, onlyWidth) {\n    // Skip the cache if any user defined features are applied\n    if (onlyWidth == null) {\n      onlyWidth = false;\n    }\n    if (features) {\n      return this.layoutRun(text, features);\n    }\n    const glyphs = onlyWidth ? null : [];\n    const positions = onlyWidth ? null : [];\n    let advanceWidth = 0;\n\n    // Split the string by words to increase cache efficiency.\n    // For this purpose, spaces and tabs are a good enough delimeter.\n    let last = 0;\n    let index = 0;\n    while (index <= text.length) {\n      let needle;\n      if (index === text.length && last < index || (needle = text.charAt(index), [' ', '\\t'].includes(needle))) {\n        const run = this.layoutCached(text.slice(last, ++index));\n        if (!onlyWidth) {\n          glyphs.push(...Array.from(run.glyphs || []));\n          positions.push(...Array.from(run.positions || []));\n        }\n        advanceWidth += run.advanceWidth;\n        last = index;\n      } else {\n        index++;\n      }\n    }\n    return {\n      glyphs,\n      positions,\n      advanceWidth\n    };\n  }\n  encode(text, features) {\n    const {\n      glyphs,\n      positions\n    } = this.layout(text, features);\n    const res = [];\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      const gid = this.subset.includeGlyph(glyph.id);\n      res.push(`0000${gid.toString(16)}`.slice(-4));\n      if (this.widths[gid] == null) {\n        this.widths[gid] = glyph.advanceWidth * this.scale;\n      }\n      if (this.unicode[gid] == null) {\n        this.unicode[gid] = glyph.codePoints;\n      }\n    }\n    return [res, positions];\n  }\n  encodeGlyphs(glyphs) {\n    const res = [];\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      const gid = this.subset.includeGlyph(glyph.id);\n      res.push(`0000${gid.toString(16)}`.slice(-4));\n      if (this.widths[gid] == null) {\n        this.widths[gid] = glyph.advanceWidth * this.scale;\n      }\n      if (this.unicode[gid] == null) {\n        this.unicode[gid] = glyph.codePoints;\n      }\n    }\n    return res;\n  }\n  widthOfString(string, size, features) {\n    const width = this.layout(string, features, true).advanceWidth;\n    const scale = size / 1000;\n    return width * scale;\n  }\n  embed() {\n    const isCFF = this.subset.cff != null;\n    const fontFile = this.document.ref();\n    if (isCFF) {\n      fontFile.data.Subtype = 'CIDFontType0C';\n    }\n    fontFile.end(this.subset.encode());\n    const familyClass = ((this.font['OS/2'] != null ? this.font['OS/2'].sFamilyClass : undefined) || 0) >> 8;\n    let flags = 0;\n    if (this.font.post.isFixedPitch) {\n      flags |= 1 << 0;\n    }\n    if (1 <= familyClass && familyClass <= 7) {\n      flags |= 1 << 1;\n    }\n    flags |= 1 << 2; // assume the font uses non-latin characters\n    if (familyClass === 10) {\n      flags |= 1 << 3;\n    }\n    if (this.font.head.macStyle.italic) {\n      flags |= 1 << 6;\n    }\n\n    // generate a random tag (6 uppercase letters. 65 is the char code for 'A')\n    const tag = [0, 1, 2, 3, 4, 5].map(() => String.fromCharCode(Math.random() * 26 + 65)).join('');\n    const name = tag + '+' + this.font.postscriptName;\n    const {\n      bbox\n    } = this.font;\n    const descriptor = this.document.ref({\n      Type: 'FontDescriptor',\n      FontName: name,\n      Flags: flags,\n      FontBBox: [bbox.minX * this.scale, bbox.minY * this.scale, bbox.maxX * this.scale, bbox.maxY * this.scale],\n      ItalicAngle: this.font.italicAngle,\n      Ascent: this.ascender,\n      Descent: this.descender,\n      CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,\n      XHeight: (this.font.xHeight || 0) * this.scale,\n      StemV: 0\n    }); // not sure how to calculate this\n\n    if (isCFF) {\n      descriptor.data.FontFile3 = fontFile;\n    } else {\n      descriptor.data.FontFile2 = fontFile;\n    }\n    descriptor.end();\n    const descendantFontData = {\n      Type: 'Font',\n      Subtype: 'CIDFontType0',\n      BaseFont: name,\n      CIDSystemInfo: {\n        Registry: new String('Adobe'),\n        Ordering: new String('Identity'),\n        Supplement: 0\n      },\n      FontDescriptor: descriptor,\n      W: [0, this.widths]\n    };\n    if (!isCFF) {\n      descendantFontData.Subtype = 'CIDFontType2';\n      descendantFontData.CIDToGIDMap = 'Identity';\n    }\n    const descendantFont = this.document.ref(descendantFontData);\n    descendantFont.end();\n    this.dictionary.data = {\n      Type: 'Font',\n      Subtype: 'Type0',\n      BaseFont: name,\n      Encoding: 'Identity-H',\n      DescendantFonts: [descendantFont],\n      ToUnicode: this.toUnicodeCmap()\n    };\n    return this.dictionary.end();\n  }\n\n  // Maps the glyph ids encoded in the PDF back to unicode strings\n  // Because of ligature substitutions and the like, there may be one or more\n  // unicode characters represented by each glyph.\n  toUnicodeCmap() {\n    const cmap = this.document.ref();\n    let entries = [];\n    let unicodeMap = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange';\n    for (let [index, codePoints] of this.unicode.entries()) {\n      const encoded = [];\n      if (entries.length >= 100) {\n        unicodeMap += '\\n' + entries.length + ' beginbfchar\\n' + entries.join('\\n') + '\\nendbfchar';\n        entries = [];\n      }\n      // encode codePoints to utf16\n      for (let value of codePoints) {\n        if (value > 0xffff) {\n          value -= 0x10000;\n          encoded.push(toHex(value >>> 10 & 0x3ff | 0xd800));\n          value = 0xdc00 | value & 0x3ff;\n        }\n        encoded.push(toHex(value));\n      }\n      entries.push('<' + toHex(index) + '>' + '<' + encoded.join(' ') + '>');\n    }\n    if (entries.length) {\n      unicodeMap += '\\n' + entries.length + ' beginbfchar\\n' + entries.join('\\n') + '\\nendbfchar\\n';\n    }\n    unicodeMap += 'endcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend';\n    cmap.end(unicodeMap);\n    return cmap;\n  }\n};\n\nclass PDFFont {\n  static open(document, src, family, id) {\n    let font;\n    if (typeof src === 'string') {\n      if (StandardFont.isStandardFont(src)) {\n        return new StandardFont(document, src, id);\n      }\n      {\n        font = fontkit__WEBPACK_IMPORTED_MODULE_3__.openSync(src, family);\n      }\n    } else if (src instanceof Uint8Array) {\n      font = fontkit__WEBPACK_IMPORTED_MODULE_3__.create(src, family);\n    } else if (src instanceof ArrayBuffer) {\n      font = fontkit__WEBPACK_IMPORTED_MODULE_3__.create(new Uint8Array(src), family);\n    } else if (typeof src === 'object') {\n      font = src;\n    }\n    if (font == null) {\n      throw new Error('Not a supported font format or standard PDF font.');\n    }\n    return new EmbeddedFont(document, font, id);\n  }\n  encode() {\n    throw new Error('Must be implemented by subclasses');\n  }\n  widthOfString() {\n    throw new Error('Must be implemented by subclasses');\n  }\n  ref() {\n    return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();\n  }\n  finalize() {\n    if (this.embedded || this.dictionary == null) {\n      return;\n    }\n    this.embed();\n    return this.embedded = true;\n  }\n  embed() {\n    throw new Error('Must be implemented by subclasses');\n  }\n  lineHeight(size, includeGap) {\n    if (includeGap == null) {\n      includeGap = false;\n    }\n    const gap = includeGap ? this.lineGap : 0;\n    return (this.ascender + gap - this.descender) / 1000 * size;\n  }\n}\nconst StandardFont = createStandardFont(PDFFont);\nconst EmbeddedFont = createEmbeddedFont(PDFFont);\n\nvar FontsMixin = {\n  initFonts() {\n    // Lookup table for embedded fonts\n    this._fontFamilies = {};\n    this._fontCount = 0;\n\n    // Font state\n    this._fontSize = 12;\n    this._font = null;\n    this._registeredFonts = {};\n\n    // Set the default font\n    return this.font('Helvetica');\n  },\n  font(src, family, size) {\n    let cacheKey;\n    let font;\n    if (typeof family === 'number') {\n      size = family;\n      family = null;\n    }\n\n    // check registered fonts if src is a string\n    if (typeof src === 'string' && this._registeredFonts[src]) {\n      cacheKey = src;\n      ({\n        src,\n        family\n      } = this._registeredFonts[src]);\n    } else {\n      cacheKey = family || src;\n      if (typeof cacheKey !== 'string') {\n        cacheKey = null;\n      }\n    }\n    if (size != null) {\n      this.fontSize(size);\n    }\n\n    // fast path: check if the font is already in the PDF\n    if (font = this._fontFamilies[cacheKey]) {\n      this._font = font;\n      return this;\n    }\n\n    // load the font\n    const id = `F${++this._fontCount}`;\n    this._font = PDFFont.open(this, src, family, id);\n\n    // check for existing font familes with the same name already in the PDF\n    // useful if the font was passed as a buffer\n    if (font = this._fontFamilies[this._font.name]) {\n      this._font = font;\n      return this;\n    }\n\n    // save the font for reuse later\n    if (cacheKey) {\n      this._fontFamilies[cacheKey] = this._font;\n    }\n    if (this._font.name) {\n      this._fontFamilies[this._font.name] = this._font;\n    }\n    return this;\n  },\n  fontSize(_fontSize) {\n    this._fontSize = _fontSize;\n    return this;\n  },\n  currentLineHeight(includeGap) {\n    if (includeGap == null) {\n      includeGap = false;\n    }\n    return this._font.lineHeight(this._fontSize, includeGap);\n  },\n  registerFont(name, src, family) {\n    this._registeredFonts[name] = {\n      src,\n      family\n    };\n    return this;\n  }\n};\n\nfunction PDFNumber(n) {\n  // PDF numbers are strictly 32bit\n  // so convert this number to the nearest 32bit number\n  // @see ISO 32000-1 Annex C.2 (real numbers)\n  return Math.fround(n);\n}\n\nconst SOFT_HYPHEN = '\\u00AD';\nconst HYPHEN = '-';\nclass LineWrapper extends events__WEBPACK_IMPORTED_MODULE_5__.EventEmitter {\n  constructor(document, options) {\n    super();\n    this.document = document;\n    this.horizontalScaling = options.horizontalScaling || 100;\n    this.indent = (options.indent || 0) * this.horizontalScaling / 100;\n    this.characterSpacing = (options.characterSpacing || 0) * this.horizontalScaling / 100;\n    this.wordSpacing = (options.wordSpacing === 0) * this.horizontalScaling / 100;\n    this.columns = options.columns || 1;\n    this.columnGap = (options.columnGap != null ? options.columnGap : 18) * this.horizontalScaling / 100; // 1/4 inch\n    this.lineWidth = (options.width * this.horizontalScaling / 100 - this.columnGap * (this.columns - 1)) / this.columns;\n    this.spaceLeft = this.lineWidth;\n    this.startX = this.document.x;\n    this.startY = this.document.y;\n    this.column = 1;\n    this.ellipsis = options.ellipsis;\n    this.continuedX = 0;\n    this.features = options.features;\n\n    // calculate the maximum Y position the text can appear at\n    if (options.height != null) {\n      this.height = options.height;\n      this.maxY = PDFNumber(this.startY + options.height);\n    } else {\n      this.maxY = PDFNumber(this.document.page.maxY());\n    }\n\n    // handle paragraph indents\n    this.on('firstLine', options => {\n      // if this is the first line of the text segment, and\n      // we're continuing where we left off, indent that much\n      // otherwise use the user specified indent option\n      const indent = this.continuedX || this.indent;\n      this.document.x += indent;\n      this.lineWidth -= indent;\n\n      // if indentAllLines is set to true\n      // we're not resetting the indentation for this paragraph after the first line\n      if (options.indentAllLines) {\n        return;\n      }\n\n      // otherwise we start the next line without indent\n      return this.once('line', () => {\n        this.document.x -= indent;\n        this.lineWidth += indent;\n        if (options.continued && !this.continuedX) {\n          this.continuedX = this.indent;\n        }\n        if (!options.continued) {\n          return this.continuedX = 0;\n        }\n      });\n    });\n\n    // handle left aligning last lines of paragraphs\n    this.on('lastLine', options => {\n      const {\n        align\n      } = options;\n      if (align === 'justify') {\n        options.align = 'left';\n      }\n      this.lastLine = true;\n      return this.once('line', () => {\n        this.document.y += options.paragraphGap || 0;\n        options.align = align;\n        return this.lastLine = false;\n      });\n    });\n  }\n  wordWidth(word) {\n    return this.document.widthOfString(word, this) + this.characterSpacing + this.wordSpacing;\n  }\n  canFit(word, w) {\n    if (word[word.length - 1] != SOFT_HYPHEN) {\n      return w <= this.spaceLeft;\n    }\n    return w + this.wordWidth(HYPHEN) <= this.spaceLeft;\n  }\n  eachWord(text, fn) {\n    // setup a unicode line breaker\n    let bk;\n    const breaker = new linebreak__WEBPACK_IMPORTED_MODULE_6__[\"default\"](text);\n    let last = null;\n    const wordWidths = Object.create(null);\n    while (bk = breaker.nextBreak()) {\n      var shouldContinue;\n      let word = text.slice((last != null ? last.position : undefined) || 0, bk.position);\n      let w = wordWidths[word] != null ? wordWidths[word] : wordWidths[word] = this.wordWidth(word);\n\n      // if the word is longer than the whole line, chop it up\n      // TODO: break by grapheme clusters, not JS string characters\n      if (w > this.lineWidth + this.continuedX) {\n        // make some fake break objects\n        let lbk = last;\n        const fbk = {};\n        while (word.length) {\n          // fit as much of the word as possible into the space we have\n          var l, mightGrow;\n          if (w > this.spaceLeft) {\n            // start our check at the end of our available space - this method is faster than a loop of each character and it resolves\n            // an issue with long loops when processing massive words, such as a huge number of spaces\n            l = Math.ceil(this.spaceLeft / (w / word.length));\n            w = this.wordWidth(word.slice(0, l));\n            mightGrow = w <= this.spaceLeft && l < word.length;\n          } else {\n            l = word.length;\n          }\n          let mustShrink = w > this.spaceLeft && l > 0;\n          // shrink or grow word as necessary after our near-guess above\n          while (mustShrink || mightGrow) {\n            if (mustShrink) {\n              w = this.wordWidth(word.slice(0, --l));\n              mustShrink = w > this.spaceLeft && l > 0;\n            } else {\n              w = this.wordWidth(word.slice(0, ++l));\n              mustShrink = w > this.spaceLeft && l > 0;\n              mightGrow = w <= this.spaceLeft && l < word.length;\n            }\n          }\n\n          // check for the edge case where a single character cannot fit into a line.\n          if (l === 0 && this.spaceLeft === this.lineWidth) {\n            l = 1;\n          }\n\n          // send a required break unless this is the last piece and a linebreak is not specified\n          fbk.required = bk.required || l < word.length;\n          shouldContinue = fn(word.slice(0, l), w, fbk, lbk);\n          lbk = {\n            required: false\n          };\n\n          // get the remaining piece of the word\n          word = word.slice(l);\n          w = this.wordWidth(word);\n          if (shouldContinue === false) {\n            break;\n          }\n        }\n      } else {\n        // otherwise just emit the break as it was given to us\n        shouldContinue = fn(word, w, bk, last);\n      }\n      if (shouldContinue === false) {\n        break;\n      }\n      last = bk;\n    }\n  }\n  wrap(text, options) {\n    // override options from previous continued fragments\n    this.horizontalScaling = options.horizontalScaling || 100;\n    if (options.indent != null) {\n      this.indent = options.indent * this.horizontalScaling / 100;\n    }\n    if (options.characterSpacing != null) {\n      this.characterSpacing = options.characterSpacing * this.horizontalScaling / 100;\n    }\n    if (options.wordSpacing != null) {\n      this.wordSpacing = options.wordSpacing * this.horizontalScaling / 100;\n    }\n    if (options.ellipsis != null) {\n      this.ellipsis = options.ellipsis;\n    }\n\n    // make sure we're actually on the page\n    // and that the first line of is never by\n    // itself at the bottom of a page (orphans)\n    const nextY = this.document.y + this.document.currentLineHeight(true);\n    if (this.document.y > this.maxY || nextY > this.maxY) {\n      this.nextSection();\n    }\n    let buffer = '';\n    let textWidth = 0;\n    let wc = 0;\n    let lc = 0;\n    let {\n      y\n    } = this.document; // used to reset Y pos if options.continued (below)\n    const emitLine = () => {\n      options.textWidth = textWidth + this.wordSpacing * (wc - 1);\n      options.wordCount = wc;\n      options.lineWidth = this.lineWidth;\n      ({\n        y\n      } = this.document);\n      this.emit('line', buffer, options, this);\n      return lc++;\n    };\n    this.emit('sectionStart', options, this);\n    this.eachWord(text, (word, w, bk, last) => {\n      if (last == null || last.required) {\n        this.emit('firstLine', options, this);\n        this.spaceLeft = this.lineWidth;\n      }\n      if (this.canFit(word, w)) {\n        buffer += word;\n        textWidth += w;\n        wc++;\n      }\n      if (bk.required || !this.canFit(word, w)) {\n        // if the user specified a max height and an ellipsis, and is about to pass the\n        // max height and max columns after the next line, append the ellipsis\n        const lh = this.document.currentLineHeight(true);\n        if (this.height != null && this.ellipsis && PDFNumber(this.document.y + lh * 2) > this.maxY && this.column >= this.columns) {\n          if (this.ellipsis === true) {\n            this.ellipsis = '…';\n          } // map default ellipsis character\n          buffer = buffer.replace(/\\s+$/, '');\n          textWidth = this.wordWidth(buffer + this.ellipsis);\n\n          // remove characters from the buffer until the ellipsis fits\n          // to avoid infinite loop need to stop while-loop if buffer is empty string\n          while (buffer && textWidth > this.lineWidth) {\n            buffer = buffer.slice(0, -1).replace(/\\s+$/, '');\n            textWidth = this.wordWidth(buffer + this.ellipsis);\n          }\n          // need to add ellipsis only if there is enough space for it\n          if (textWidth <= this.lineWidth) {\n            buffer = buffer + this.ellipsis;\n          }\n          textWidth = this.wordWidth(buffer);\n        }\n        if (bk.required) {\n          if (w > this.spaceLeft) {\n            emitLine();\n            buffer = word;\n            textWidth = w;\n            wc = 1;\n          }\n          this.emit('lastLine', options, this);\n        }\n\n        // Previous entry is a soft hyphen - add visible hyphen.\n        if (buffer[buffer.length - 1] == SOFT_HYPHEN) {\n          buffer = buffer.slice(0, -1) + HYPHEN;\n          this.spaceLeft -= this.wordWidth(HYPHEN);\n        }\n        emitLine();\n\n        // if we've reached the edge of the page,\n        // continue on a new page or column\n        if (PDFNumber(this.document.y + lh) > this.maxY) {\n          const shouldContinue = this.nextSection();\n\n          // stop if we reached the maximum height\n          if (!shouldContinue) {\n            wc = 0;\n            buffer = '';\n            return false;\n          }\n        }\n\n        // reset the space left and buffer\n        if (bk.required) {\n          this.spaceLeft = this.lineWidth;\n          buffer = '';\n          textWidth = 0;\n          return wc = 0;\n        } else {\n          // reset the space left and buffer\n          this.spaceLeft = this.lineWidth - w;\n          buffer = word;\n          textWidth = w;\n          return wc = 1;\n        }\n      } else {\n        return this.spaceLeft -= w;\n      }\n    });\n    if (wc > 0) {\n      this.emit('lastLine', options, this);\n      emitLine();\n    }\n    this.emit('sectionEnd', options, this);\n\n    // if the wrap is set to be continued, save the X position\n    // to start the first line of the next segment at, and reset\n    // the y position\n    if (options.continued === true) {\n      if (lc > 1) {\n        this.continuedX = 0;\n      }\n      this.continuedX += options.textWidth || 0;\n      return this.document.y = y;\n    } else {\n      return this.document.x = this.startX;\n    }\n  }\n  nextSection(options) {\n    this.emit('sectionEnd', options, this);\n    if (++this.column > this.columns) {\n      // if a max height was specified by the user, we're done.\n      // otherwise, the default is to make a new page at the bottom.\n      if (this.height != null) {\n        return false;\n      }\n      this.document.continueOnNewPage();\n      this.column = 1;\n      this.startY = this.document.page.margins.top;\n      this.maxY = this.document.page.maxY();\n      this.document.x = this.startX;\n      if (this.document._fillColor) {\n        this.document.fillColor(...this.document._fillColor);\n      }\n      this.emit('pageBreak', options, this);\n    } else {\n      this.document.x += this.lineWidth + this.columnGap;\n      this.document.y = this.startY;\n      this.emit('columnBreak', options, this);\n    }\n    this.emit('sectionStart', options, this);\n    return true;\n  }\n}\n\nconst {\n  number\n} = PDFObject;\nvar TextMixin = {\n  initText() {\n    this._line = this._line.bind(this);\n\n    // Current coordinates\n    this.x = 0;\n    this.y = 0;\n    return this._lineGap = 0;\n  },\n  lineGap(_lineGap) {\n    this._lineGap = _lineGap;\n    return this;\n  },\n  moveDown(lines) {\n    if (lines == null) {\n      lines = 1;\n    }\n    this.y += this.currentLineHeight(true) * lines + this._lineGap;\n    return this;\n  },\n  moveUp(lines) {\n    if (lines == null) {\n      lines = 1;\n    }\n    this.y -= this.currentLineHeight(true) * lines + this._lineGap;\n    return this;\n  },\n  _text(text, x, y, options, lineCallback) {\n    options = this._initOptions(x, y, options);\n\n    // Convert text to a string\n    text = text == null ? '' : `${text}`;\n\n    // if the wordSpacing option is specified, remove multiple consecutive spaces\n    if (options.wordSpacing) {\n      text = text.replace(/\\s{2,}/g, ' ');\n    }\n    const addStructure = () => {\n      if (options.structParent) {\n        options.structParent.add(this.struct(options.structType || 'P', [this.markStructureContent(options.structType || 'P')]));\n      }\n    };\n\n    // We can save some bytes if there is no rotation\n    if (options.rotation !== 0) {\n      this.save();\n      this.rotate(-options.rotation, {\n        origin: [this.x, this.y]\n      });\n    }\n\n    // word wrapping\n    if (options.width) {\n      let wrapper = this._wrapper;\n      if (!wrapper) {\n        wrapper = new LineWrapper(this, options);\n        wrapper.on('line', lineCallback);\n        wrapper.on('firstLine', addStructure);\n      }\n      this._wrapper = options.continued ? wrapper : null;\n      this._textOptions = options.continued ? options : null;\n      wrapper.wrap(text, options);\n\n      // render paragraphs as single lines\n    } else {\n      for (let line of text.split('\\n')) {\n        addStructure();\n        lineCallback(line, options);\n      }\n    }\n\n    // Cleanup if there was a rotation\n    if (options.rotation !== 0) this.restore();\n    return this;\n  },\n  text(text, x, y, options) {\n    return this._text(text, x, y, options, this._line);\n  },\n  widthOfString(string, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const horizontalScaling = options.horizontalScaling || 100;\n    return (this._font.widthOfString(string, this._fontSize, options.features) + (options.characterSpacing || 0) * (string.length - 1)) * horizontalScaling / 100;\n  },\n  /**\n   * Compute the bounding box of a string\n   * based on what will actually be rendered by `doc.text()`\n   *\n   * @param string - The string\n   * @param x - X position of text (defaults to this.x)\n   * @param y - Y position of text (defaults to this.y)\n   * @param options - Any text options (The same you would apply to `doc.text()`)\n   * @returns {{x: number, y: number, width: number, height: number}}\n   */\n  boundsOfString(string, x, y, options) {},\n  heightOfString(text, options) {\n    const {\n      x,\n      y\n    } = this;\n    options = this._initOptions(options);\n    options.height = Infinity; // don't break pages\n\n    const lineGap = options.lineGap || this._lineGap || 0;\n    this._text(text, this.x, this.y, options, () => {\n      return this.y += this.currentLineHeight(true) + lineGap;\n    });\n    const height = this.y - y;\n    this.x = x;\n    this.y = y;\n    return height;\n  },\n  list(list, x, y, options, wrapper) {\n    options = this._initOptions(x, y, options);\n    const listType = options.listType || 'bullet';\n    const unit = Math.round(this._font.ascender / 1000 * this._fontSize);\n    const midLine = unit / 2;\n    const r = options.bulletRadius || unit / 3;\n    const indent = options.textIndent || (listType === 'bullet' ? r * 5 : unit * 2);\n    const itemIndent = options.bulletIndent || (listType === 'bullet' ? r * 8 : unit * 2);\n    let level = 1;\n    const items = [];\n    const levels = [];\n    const numbers = [];\n    var flatten = function (list) {\n      let n = 1;\n      for (let i = 0; i < list.length; i++) {\n        const item = list[i];\n        if (Array.isArray(item)) {\n          level++;\n          flatten(item);\n          level--;\n        } else {\n          items.push(item);\n          levels.push(level);\n          if (listType !== 'bullet') {\n            numbers.push(n++);\n          }\n        }\n      }\n    };\n    flatten(list);\n    const label = function (n) {\n      switch (listType) {\n        case 'numbered':\n          return `${n}.`;\n        case 'lettered':\n          var letter = String.fromCharCode((n - 1) % 26 + 65);\n          var times = Math.floor((n - 1) / 26 + 1);\n          var text = Array(times + 1).join(letter);\n          return `${text}.`;\n      }\n    };\n    const drawListItem = function (listItem, i) {\n      wrapper = new LineWrapper(this, options);\n      wrapper.on('line', this._line);\n      level = 1;\n      wrapper.once('firstLine', () => {\n        let item, itemType, labelType, bodyType;\n        if (options.structParent) {\n          if (options.structTypes) {\n            [itemType, labelType, bodyType] = options.structTypes;\n          } else {\n            [itemType, labelType, bodyType] = ['LI', 'Lbl', 'LBody'];\n          }\n        }\n        if (itemType) {\n          item = this.struct(itemType);\n          options.structParent.add(item);\n        } else if (options.structParent) {\n          item = options.structParent;\n        }\n        let l;\n        if ((l = levels[i++]) !== level) {\n          const diff = itemIndent * (l - level);\n          this.x += diff;\n          wrapper.lineWidth -= diff;\n          level = l;\n        }\n        if (item && (labelType || bodyType)) {\n          item.add(this.struct(labelType || bodyType, [this.markStructureContent(labelType || bodyType)]));\n        }\n        switch (listType) {\n          case 'bullet':\n            this.circle(this.x - indent + r, this.y + midLine, r);\n            this.fill();\n            break;\n          case 'numbered':\n          case 'lettered':\n            var text = label(numbers[i - 1]);\n            this._fragment(text, this.x - indent, this.y, options);\n            break;\n        }\n        if (item && labelType && bodyType) {\n          item.add(this.struct(bodyType, [this.markStructureContent(bodyType)]));\n        }\n        if (item && item !== options.structParent) {\n          item.end();\n        }\n      });\n      wrapper.on('sectionStart', () => {\n        const pos = indent + itemIndent * (level - 1);\n        this.x += pos;\n        return wrapper.lineWidth -= pos;\n      });\n      wrapper.on('sectionEnd', () => {\n        const pos = indent + itemIndent * (level - 1);\n        this.x -= pos;\n        return wrapper.lineWidth += pos;\n      });\n      wrapper.wrap(listItem, options);\n    };\n    for (let i = 0; i < items.length; i++) {\n      drawListItem.call(this, items[i], i);\n    }\n    return this;\n  },\n  _initOptions(x, y, options) {\n    var _options$rotation;\n    if (x === void 0) {\n      x = {};\n    }\n    if (options === void 0) {\n      options = {};\n    }\n    if (typeof x === 'object') {\n      options = x;\n      x = null;\n    }\n\n    // clone options object\n    const result = Object.assign({}, options);\n\n    // extend options with previous values for continued text\n    if (this._textOptions) {\n      for (let key in this._textOptions) {\n        const val = this._textOptions[key];\n        if (key !== 'continued') {\n          if (result[key] === undefined) {\n            result[key] = val;\n          }\n        }\n      }\n    }\n\n    // Update the current position\n    if (x != null) {\n      this.x = x;\n    }\n    if (y != null) {\n      this.y = y;\n    }\n\n    // wrap to margins if no x or y position passed\n    if (result.lineBreak !== false) {\n      if (result.width == null) {\n        result.width = this.page.width - this.x - this.page.margins.right;\n      }\n      result.width = Math.max(result.width, 0);\n    }\n    if (!result.columns) {\n      result.columns = 0;\n    }\n    if (result.columnGap == null) {\n      result.columnGap = 18;\n    } // 1/4 inch\n\n    // Normalize rotation to between 0 - 360\n    result.rotation = Number((_options$rotation = options.rotation) !== null && _options$rotation !== void 0 ? _options$rotation : 0) % 360;\n    if (result.rotation < 0) result.rotation += 360;\n    return result;\n  },\n  _line(text, options, wrapper) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._fragment(text, this.x, this.y, options);\n    const lineGap = options.lineGap || this._lineGap || 0;\n    if (!wrapper) {\n      return this.x += this.widthOfString(text, options);\n    } else {\n      return this.y += this.currentLineHeight(true) + lineGap;\n    }\n  },\n  _fragment(text, x, y, options) {\n    let dy, encoded, i, positions, textWidth, words;\n    text = `${text}`.replace(/\\n/g, '');\n    if (text.length === 0) {\n      return;\n    }\n\n    // handle options\n    const align = options.align || 'left';\n    let wordSpacing = options.wordSpacing || 0;\n    const characterSpacing = options.characterSpacing || 0;\n    const horizontalScaling = options.horizontalScaling || 100;\n\n    // text alignments\n    if (options.width) {\n      switch (align) {\n        case 'right':\n          textWidth = this.widthOfString(text.replace(/\\s+$/, ''), options);\n          x += options.lineWidth - textWidth;\n          break;\n        case 'center':\n          x += options.lineWidth / 2 - options.textWidth / 2;\n          break;\n        case 'justify':\n          // calculate the word spacing value\n          words = text.trim().split(/\\s+/);\n          textWidth = this.widthOfString(text.replace(/\\s+/g, ''), options);\n          var spaceWidth = this.widthOfString(' ') + characterSpacing;\n          wordSpacing = Math.max(0, (options.lineWidth - textWidth) / Math.max(1, words.length - 1) - spaceWidth);\n          break;\n      }\n    }\n\n    // text baseline alignments based on http://wiki.apache.org/xmlgraphics-fop/LineLayout/AlignmentHandling\n    if (typeof options.baseline === 'number') {\n      dy = -options.baseline;\n    } else {\n      switch (options.baseline) {\n        case 'svg-middle':\n          dy = 0.5 * this._font.xHeight;\n          break;\n        case 'middle':\n        case 'svg-central':\n          dy = 0.5 * (this._font.descender + this._font.ascender);\n          break;\n        case 'bottom':\n        case 'ideographic':\n          dy = this._font.descender;\n          break;\n        case 'alphabetic':\n          dy = 0;\n          break;\n        case 'mathematical':\n          dy = 0.5 * this._font.ascender;\n          break;\n        case 'hanging':\n          dy = 0.8 * this._font.ascender;\n          break;\n        case 'top':\n          dy = this._font.ascender;\n          break;\n        default:\n          dy = this._font.ascender;\n      }\n      dy = dy / 1000 * this._fontSize;\n    }\n\n    // calculate the actual rendered width of the string after word and character spacing\n    const renderedWidth = options.textWidth + wordSpacing * (options.wordCount - 1) + characterSpacing * (text.length - 1);\n\n    // create link annotations if the link option is given\n    if (options.link != null) {\n      this.link(x, y, renderedWidth, this.currentLineHeight(), options.link);\n    }\n    if (options.goTo != null) {\n      this.goTo(x, y, renderedWidth, this.currentLineHeight(), options.goTo);\n    }\n    if (options.destination != null) {\n      this.addNamedDestination(options.destination, 'XYZ', x, y, null);\n    }\n\n    // create underline\n    if (options.underline) {\n      this.save();\n      if (!options.stroke) {\n        this.strokeColor(...(this._fillColor || []));\n      }\n      const lineWidth = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);\n      this.lineWidth(lineWidth);\n      let lineY = y + this.currentLineHeight() - lineWidth;\n      this.moveTo(x, lineY);\n      this.lineTo(x + renderedWidth, lineY);\n      this.stroke();\n      this.restore();\n    }\n\n    // create strikethrough line\n    if (options.strike) {\n      this.save();\n      if (!options.stroke) {\n        this.strokeColor(...(this._fillColor || []));\n      }\n      const lineWidth = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);\n      this.lineWidth(lineWidth);\n      let lineY = y + this.currentLineHeight() / 2;\n      this.moveTo(x, lineY);\n      this.lineTo(x + renderedWidth, lineY);\n      this.stroke();\n      this.restore();\n    }\n    this.save();\n\n    // oblique (angle in degrees or boolean)\n    if (options.oblique) {\n      let skew;\n      if (typeof options.oblique === 'number') {\n        skew = -Math.tan(options.oblique * Math.PI / 180);\n      } else {\n        skew = -0.25;\n      }\n      this.transform(1, 0, 0, 1, x, y);\n      this.transform(1, 0, skew, 1, -skew * dy, 0);\n      this.transform(1, 0, 0, 1, -x, -y);\n    }\n\n    // flip coordinate system\n    this.transform(1, 0, 0, -1, 0, this.page.height);\n    y = this.page.height - y - dy;\n\n    // add current font to page if necessary\n    if (this.page.fonts[this._font.id] == null) {\n      this.page.fonts[this._font.id] = this._font.ref();\n    }\n\n    // begin the text object\n    this.addContent('BT');\n\n    // text position\n    this.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n\n    // font and font size\n    this.addContent(`/${this._font.id} ${number(this._fontSize)} Tf`);\n\n    // rendering mode\n    const mode = options.fill && options.stroke ? 2 : options.stroke ? 1 : 0;\n    if (mode) {\n      this.addContent(`${mode} Tr`);\n    }\n\n    // Character spacing\n    if (characterSpacing) {\n      this.addContent(`${number(characterSpacing)} Tc`);\n    }\n\n    // Horizontal scaling\n    if (horizontalScaling !== 100) {\n      this.addContent(`${horizontalScaling} Tz`);\n    }\n\n    // Add the actual text\n    // If we have a word spacing value, we need to encode each word separately\n    // since the normal Tw operator only works on character code 32, which isn't\n    // used for embedded fonts.\n    if (wordSpacing) {\n      words = text.trim().split(/\\s+/);\n      wordSpacing += this.widthOfString(' ') + characterSpacing;\n      wordSpacing *= 1000 / this._fontSize;\n      encoded = [];\n      positions = [];\n      for (let word of words) {\n        const [encodedWord, positionsWord] = this._font.encode(word, options.features);\n        encoded = encoded.concat(encodedWord);\n        positions = positions.concat(positionsWord);\n\n        // add the word spacing to the end of the word\n        // clone object because of cache\n        const space = {};\n        const object = positions[positions.length - 1];\n        for (let key in object) {\n          const val = object[key];\n          space[key] = val;\n        }\n        space.xAdvance += wordSpacing;\n        positions[positions.length - 1] = space;\n      }\n    } else {\n      [encoded, positions] = this._font.encode(text, options.features);\n    }\n    const scale = this._fontSize / 1000;\n    const commands = [];\n    let last = 0;\n    let hadOffset = false;\n\n    // Adds a segment of text to the TJ command buffer\n    const addSegment = cur => {\n      if (last < cur) {\n        const hex = encoded.slice(last, cur).join('');\n        const advance = positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;\n        commands.push(`<${hex}> ${number(-advance)}`);\n      }\n      return last = cur;\n    };\n\n    // Flushes the current TJ commands to the output stream\n    const flush = i => {\n      addSegment(i);\n      if (commands.length > 0) {\n        this.addContent(`[${commands.join(' ')}] TJ`);\n        return commands.length = 0;\n      }\n    };\n    for (i = 0; i < positions.length; i++) {\n      // If we have an x or y offset, we have to break out of the current TJ command\n      // so we can move the text position.\n      const pos = positions[i];\n      if (pos.xOffset || pos.yOffset) {\n        // Flush the current buffer\n        flush(i);\n\n        // Move the text position and flush just the current character\n        this.addContent(`1 0 0 1 ${number(x + pos.xOffset * scale)} ${number(y + pos.yOffset * scale)} Tm`);\n        flush(i + 1);\n        hadOffset = true;\n      } else {\n        // If the last character had an offset, reset the text position\n        if (hadOffset) {\n          this.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n          hadOffset = false;\n        }\n\n        // Group segments that don't have any advance adjustments\n        if (pos.xAdvance - pos.advanceWidth !== 0) {\n          addSegment(i + 1);\n        }\n      }\n      x += pos.xAdvance * scale;\n    }\n\n    // Flush any remaining commands\n    flush(i);\n\n    // end the text object\n    this.addContent('ET');\n\n    // restore flipped coordinate system\n    return this.restore();\n  }\n};\n\nconst COLOR_SPACE_MAP = {\n  1: 'DeviceGray',\n  3: 'DeviceRGB',\n  4: 'DeviceCMYK'\n};\nclass JPEG {\n  constructor(data, label) {\n    this.data = data;\n    this.label = label;\n    this.orientation = 1;\n    if (this.data.readUInt16BE(0) !== 0xffd8) {\n      throw 'SOI not found in JPEG';\n    }\n    const markers = jay_peg__WEBPACK_IMPORTED_MODULE_7__[\"default\"].decode(this.data);\n    for (let i = 0; i < markers.length; i += 1) {\n      const marker = markers[i];\n      if (marker.name === 'EXIF' && marker.entries.orientation) {\n        this.orientation = marker.entries.orientation;\n      }\n      if (marker.name === 'SOF') {\n        this.bits ||= marker.precision;\n        this.width ||= marker.width;\n        this.height ||= marker.height;\n        this.colorSpace ||= COLOR_SPACE_MAP[marker.numberOfComponents];\n      }\n    }\n    this.obj = null;\n  }\n  embed(document) {\n    if (this.obj) {\n      return;\n    }\n    this.obj = document.ref({\n      Type: 'XObject',\n      Subtype: 'Image',\n      BitsPerComponent: this.bits,\n      Width: this.width,\n      Height: this.height,\n      ColorSpace: this.colorSpace,\n      Filter: 'DCTDecode'\n    });\n\n    // add extra decode params for CMYK images. By swapping the\n    // min and max values from the default, we invert the colors. See\n    // section 4.8.4 of the spec.\n    if (this.colorSpace === 'DeviceCMYK') {\n      this.obj.data['Decode'] = [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0];\n    }\n    this.obj.end(this.data);\n\n    // free memory\n    return this.data = null;\n  }\n}\n\nclass PNGImage {\n  constructor(data, label) {\n    this.label = label;\n    this.image = new _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](data);\n    this.width = this.image.width;\n    this.height = this.image.height;\n    this.imgData = this.image.imgData;\n    this.obj = null;\n  }\n  embed(document) {\n    let dataDecoded = false;\n    this.document = document;\n    if (this.obj) {\n      return;\n    }\n    const hasAlphaChannel = this.image.hasAlphaChannel;\n    const isInterlaced = this.image.interlaceMethod === 1;\n    this.obj = this.document.ref({\n      Type: 'XObject',\n      Subtype: 'Image',\n      BitsPerComponent: hasAlphaChannel ? 8 : this.image.bits,\n      Width: this.width,\n      Height: this.height,\n      Filter: 'FlateDecode'\n    });\n    if (!hasAlphaChannel) {\n      const params = this.document.ref({\n        Predictor: isInterlaced ? 1 : 15,\n        Colors: this.image.colors,\n        BitsPerComponent: this.image.bits,\n        Columns: this.width\n      });\n      this.obj.data.DecodeParms = params;\n      params.end();\n    }\n    if (this.image.palette.length === 0) {\n      this.obj.data.ColorSpace = this.image.colorSpace;\n    } else {\n      // embed the color palette in the PDF as an object stream\n      const palette = this.document.ref();\n      palette.end(Buffer.from(this.image.palette));\n\n      // build the color space array for the image\n      this.obj.data.ColorSpace = ['Indexed', 'DeviceRGB', this.image.palette.length / 3 - 1, palette];\n    }\n\n    // For PNG color types 0, 2 and 3, the transparency data is stored in\n    // a dedicated PNG chunk.\n    if (this.image.transparency.grayscale != null) {\n      // Use Color Key Masking (spec section 4.8.5)\n      // An array with N elements, where N is two times the number of color components.\n      const val = this.image.transparency.grayscale;\n      this.obj.data.Mask = [val, val];\n    } else if (this.image.transparency.rgb) {\n      // Use Color Key Masking (spec section 4.8.5)\n      // An array with N elements, where N is two times the number of color components.\n      const {\n        rgb\n      } = this.image.transparency;\n      const mask = [];\n      for (let x of rgb) {\n        mask.push(x, x);\n      }\n      this.obj.data.Mask = mask;\n    } else if (this.image.transparency.indexed) {\n      // Create a transparency SMask for the image based on the data\n      // in the PLTE and tRNS sections. See below for details on SMasks.\n      dataDecoded = true;\n      return this.loadIndexedAlphaChannel();\n    } else if (hasAlphaChannel) {\n      // For PNG color types 4 and 6, the transparency data is stored as a alpha\n      // channel mixed in with the main image data. Separate this data out into an\n      // SMask object and store it separately in the PDF.\n      dataDecoded = true;\n      return this.splitAlphaChannel();\n    }\n    if (isInterlaced && !dataDecoded) {\n      return this.decodeData();\n    }\n    this.finalize();\n  }\n  finalize() {\n    if (this.alphaChannel) {\n      const sMask = this.document.ref({\n        Type: 'XObject',\n        Subtype: 'Image',\n        Height: this.height,\n        Width: this.width,\n        BitsPerComponent: 8,\n        Filter: 'FlateDecode',\n        ColorSpace: 'DeviceGray',\n        Decode: [0, 1]\n      });\n      sMask.end(this.alphaChannel);\n      this.obj.data.SMask = sMask;\n    }\n\n    // add the actual image data\n    this.obj.end(this.imgData);\n\n    // free memory\n    this.image = null;\n    return this.imgData = null;\n  }\n  splitAlphaChannel() {\n    return this.image.decodePixels(pixels => {\n      let a;\n      let p;\n      const colorCount = this.image.colors;\n      const pixelCount = this.width * this.height;\n      const imgData = Buffer.alloc(pixelCount * colorCount);\n      const alphaChannel = Buffer.alloc(pixelCount);\n      let i = p = a = 0;\n      const len = pixels.length;\n      // For 16bit images copy only most significant byte (MSB) - PNG data is always stored in network byte order (MSB first)\n      const skipByteCount = this.image.bits === 16 ? 1 : 0;\n      while (i < len) {\n        for (let colorIndex = 0; colorIndex < colorCount; colorIndex++) {\n          imgData[p++] = pixels[i++];\n          i += skipByteCount;\n        }\n        alphaChannel[a++] = pixels[i++];\n        i += skipByteCount;\n      }\n      this.imgData = zlib__WEBPACK_IMPORTED_MODULE_1__.deflateSync(imgData);\n      this.alphaChannel = zlib__WEBPACK_IMPORTED_MODULE_1__.deflateSync(alphaChannel);\n      return this.finalize();\n    });\n  }\n  loadIndexedAlphaChannel() {\n    const transparency = this.image.transparency.indexed;\n    return this.image.decodePixels(pixels => {\n      const alphaChannel = Buffer.alloc(this.width * this.height);\n      let i = 0;\n      for (let j = 0, end = pixels.length; j < end; j++) {\n        alphaChannel[i++] = transparency[pixels[j]];\n      }\n      this.alphaChannel = zlib__WEBPACK_IMPORTED_MODULE_1__.deflateSync(alphaChannel);\n      return this.finalize();\n    });\n  }\n  decodeData() {\n    this.image.decodePixels(pixels => {\n      this.imgData = zlib__WEBPACK_IMPORTED_MODULE_1__.deflateSync(pixels);\n      this.finalize();\n    });\n  }\n}\n\n/*\nPDFImage - embeds images in PDF documents\nBy Devon Govett\n*/\n\nclass PDFImage {\n  static open(src, label) {\n    let data;\n    if (Buffer.isBuffer(src)) {\n      data = src;\n    } else if (src instanceof ArrayBuffer) {\n      data = Buffer.from(new Uint8Array(src));\n    } else {\n      let match;\n      if (match = /^data:.+?;base64,(.*)$/.exec(src)) {\n        data = Buffer.from(match[1], 'base64');\n      } else {\n        data = fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync(src);\n        if (!data) {\n          return;\n        }\n      }\n    }\n    if (data[0] === 0xff && data[1] === 0xd8) {\n      return new JPEG(data, label);\n    } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {\n      return new PNGImage(data, label);\n    } else {\n      throw new Error('Unknown image format.');\n    }\n  }\n}\n\nvar ImagesMixin = {\n  initImages() {\n    this._imageRegistry = {};\n    return this._imageCount = 0;\n  },\n  image(src, x, y, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    let bh, bp, bw, image, ip, left, left1, rotateAngle, originX, originY;\n    if (typeof x === 'object') {\n      options = x;\n      x = null;\n    }\n\n    // Ignore orientation based on document options or image options\n    const ignoreOrientation = options.ignoreOrientation || options.ignoreOrientation !== false && this.options.ignoreOrientation;\n    x = (left = x != null ? x : options.x) != null ? left : this.x;\n    y = (left1 = y != null ? y : options.y) != null ? left1 : this.y;\n    if (typeof src === 'string') {\n      image = this._imageRegistry[src];\n    }\n    if (!image) {\n      if (src.width && src.height) {\n        image = src;\n      } else {\n        image = this.openImage(src);\n      }\n    }\n    if (!image.obj) {\n      image.embed(this);\n    }\n    if (this.page.xobjects[image.label] == null) {\n      this.page.xobjects[image.label] = image.obj;\n    }\n    let {\n      width,\n      height\n    } = image;\n\n    // If EXIF orientation calls for it, swap width and height\n    if (!ignoreOrientation && image.orientation > 4) {\n      [width, height] = [height, width];\n    }\n    let w = options.width || width;\n    let h = options.height || height;\n    if (options.width && !options.height) {\n      const wp = w / width;\n      w = width * wp;\n      h = height * wp;\n    } else if (options.height && !options.width) {\n      const hp = h / height;\n      w = width * hp;\n      h = height * hp;\n    } else if (options.scale) {\n      w = width * options.scale;\n      h = height * options.scale;\n    } else if (options.fit) {\n      [bw, bh] = options.fit;\n      bp = bw / bh;\n      ip = width / height;\n      if (ip > bp) {\n        w = bw;\n        h = bw / ip;\n      } else {\n        h = bh;\n        w = bh * ip;\n      }\n    } else if (options.cover) {\n      [bw, bh] = options.cover;\n      bp = bw / bh;\n      ip = width / height;\n      if (ip > bp) {\n        h = bh;\n        w = bh * ip;\n      } else {\n        w = bw;\n        h = bw / ip;\n      }\n    }\n    if (options.fit || options.cover) {\n      if (options.align === 'center') {\n        x = x + bw / 2 - w / 2;\n      } else if (options.align === 'right') {\n        x = x + bw - w;\n      }\n      if (options.valign === 'center') {\n        y = y + bh / 2 - h / 2;\n      } else if (options.valign === 'bottom') {\n        y = y + bh - h;\n      }\n    }\n    if (!ignoreOrientation) {\n      switch (image.orientation) {\n        // No orientation (need to flip image, though, because of the default transform matrix on the document)\n        default:\n        case 1:\n          h = -h;\n          y -= h;\n          rotateAngle = 0;\n          break;\n        // Flip Horizontal\n        case 2:\n          w = -w;\n          h = -h;\n          x -= w;\n          y -= h;\n          rotateAngle = 0;\n          break;\n        // Rotate 180 degrees\n        case 3:\n          originX = x;\n          originY = y;\n          h = -h;\n          x -= w;\n          rotateAngle = 180;\n          break;\n        // Flip vertical\n        case 4:\n          // Do nothing, image will be flipped\n\n          break;\n        // Flip horizontally and rotate 270 degrees CW\n        case 5:\n          originX = x;\n          originY = y;\n          [w, h] = [h, w];\n          y -= h;\n          rotateAngle = 90;\n          break;\n        // Rotate 90 degrees CW\n        case 6:\n          originX = x;\n          originY = y;\n          [w, h] = [h, w];\n          h = -h;\n          rotateAngle = 90;\n          break;\n        // Flip horizontally and rotate 90 degrees CW\n        case 7:\n          originX = x;\n          originY = y;\n          [w, h] = [h, w];\n          h = -h;\n          w = -w;\n          x -= w;\n          rotateAngle = 90;\n          break;\n        // Rotate 270 degrees CW\n        case 8:\n          originX = x;\n          originY = y;\n          [w, h] = [h, w];\n          h = -h;\n          x -= w;\n          y -= h;\n          rotateAngle = -90;\n          break;\n      }\n    } else {\n      h = -h;\n      y -= h;\n      rotateAngle = 0;\n    }\n\n    // create link annotations if the link option is given\n    if (options.link != null) {\n      this.link(x, y, w, h, options.link);\n    }\n    if (options.goTo != null) {\n      this.goTo(x, y, w, h, options.goTo);\n    }\n    if (options.destination != null) {\n      this.addNamedDestination(options.destination, 'XYZ', x, y, null);\n    }\n\n    // Set the current y position to below the image if it is in the document flow\n    if (this.y === y) {\n      this.y += h;\n    }\n    this.save();\n    if (rotateAngle) {\n      this.rotate(rotateAngle, {\n        origin: [originX, originY]\n      });\n    }\n    this.transform(w, 0, 0, h, x, y);\n    this.addContent(`/${image.label} Do`);\n    this.restore();\n    return this;\n  },\n  openImage(src) {\n    let image;\n    if (typeof src === 'string') {\n      image = this._imageRegistry[src];\n    }\n    if (!image) {\n      image = PDFImage.open(src, `I${++this._imageCount}`);\n      if (typeof src === 'string') {\n        this._imageRegistry[src] = image;\n      }\n    }\n    return image;\n  }\n};\n\nvar AnnotationsMixin = {\n  annotate(x, y, w, h, options) {\n    options.Type = 'Annot';\n    options.Rect = this._convertRect(x, y, w, h);\n    options.Border = [0, 0, 0];\n    if (options.Subtype === 'Link' && typeof options.F === 'undefined') {\n      options.F = 1 << 2; // Print Annotation Flag\n    }\n    if (options.Subtype !== 'Link') {\n      if (options.C == null) {\n        options.C = this._normalizeColor(options.color || [0, 0, 0]);\n      }\n    } // convert colors\n    delete options.color;\n    if (typeof options.Dest === 'string') {\n      options.Dest = new String(options.Dest);\n    }\n\n    // Capitalize keys\n    for (let key in options) {\n      const val = options[key];\n      options[key[0].toUpperCase() + key.slice(1)] = val;\n    }\n    const ref = this.ref(options);\n    this.page.annotations.push(ref);\n    ref.end();\n    return this;\n  },\n  note(x, y, w, h, contents, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Text';\n    options.Contents = new String(contents);\n    if (options.Name == null) {\n      options.Name = 'Comment';\n    }\n    if (options.color == null) {\n      options.color = [243, 223, 92];\n    }\n    return this.annotate(x, y, w, h, options);\n  },\n  goTo(x, y, w, h, name, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Link';\n    options.A = this.ref({\n      S: 'GoTo',\n      D: new String(name)\n    });\n    options.A.end();\n    return this.annotate(x, y, w, h, options);\n  },\n  link(x, y, w, h, url, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Link';\n    if (typeof url === 'number') {\n      // Link to a page in the document (the page must already exist)\n      const pages = this._root.data.Pages.data;\n      if (url >= 0 && url < pages.Kids.length) {\n        options.A = this.ref({\n          S: 'GoTo',\n          D: [pages.Kids[url], 'XYZ', null, null, null]\n        });\n        options.A.end();\n      } else {\n        throw new Error(`The document has no page ${url}`);\n      }\n    } else {\n      // Link to an external url\n      options.A = this.ref({\n        S: 'URI',\n        URI: new String(url)\n      });\n      options.A.end();\n    }\n    return this.annotate(x, y, w, h, options);\n  },\n  _markup(x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const [x1, y1, x2, y2] = this._convertRect(x, y, w, h);\n    options.QuadPoints = [x1, y2, x2, y2, x1, y1, x2, y1];\n    options.Contents = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n  highlight(x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Highlight';\n    if (options.color == null) {\n      options.color = [241, 238, 148];\n    }\n    return this._markup(x, y, w, h, options);\n  },\n  underline(x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Underline';\n    return this._markup(x, y, w, h, options);\n  },\n  strike(x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'StrikeOut';\n    return this._markup(x, y, w, h, options);\n  },\n  lineAnnotation(x1, y1, x2, y2, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Line';\n    options.Contents = new String();\n    options.L = [x1, this.page.height - y1, x2, this.page.height - y2];\n    return this.annotate(x1, y1, x2, y2, options);\n  },\n  rectAnnotation(x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Square';\n    options.Contents = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n  ellipseAnnotation(x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'Circle';\n    options.Contents = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n  textAnnotation(x, y, w, h, text, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.Subtype = 'FreeText';\n    options.Contents = new String(text);\n    options.DA = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n  fileAnnotation(x, y, w, h, file, options) {\n    if (file === void 0) {\n      file = {};\n    }\n    if (options === void 0) {\n      options = {};\n    }\n    // create hidden file\n    const filespec = this.file(file.src, Object.assign({\n      hidden: true\n    }, file));\n    options.Subtype = 'FileAttachment';\n    options.FS = filespec;\n\n    // add description from filespec unless description (Contents) has already been set\n    if (options.Contents) {\n      options.Contents = new String(options.Contents);\n    } else if (filespec.data.Desc) {\n      options.Contents = filespec.data.Desc;\n    }\n    return this.annotate(x, y, w, h, options);\n  },\n  _convertRect(x1, y1, w, h) {\n    // flip y1 and y2\n    let y2 = y1;\n    y1 += h;\n\n    // make x2\n    let x2 = x1 + w;\n\n    // apply current transformation matrix to points\n    const [m0, m1, m2, m3, m4, m5] = this._ctm;\n    x1 = m0 * x1 + m2 * y1 + m4;\n    y1 = m1 * x1 + m3 * y1 + m5;\n    x2 = m0 * x2 + m2 * y2 + m4;\n    y2 = m1 * x2 + m3 * y2 + m5;\n    return [x1, y1, x2, y2];\n  }\n};\n\nclass PDFOutline {\n  constructor(document, parent, title, dest, options) {\n    if (options === void 0) {\n      options = {\n        expanded: false\n      };\n    }\n    this.document = document;\n    this.options = options;\n    this.outlineData = {};\n    if (dest !== null) {\n      this.outlineData['Dest'] = [dest.dictionary, 'Fit'];\n    }\n    if (parent !== null) {\n      this.outlineData['Parent'] = parent;\n    }\n    if (title !== null) {\n      this.outlineData['Title'] = new String(title);\n    }\n    this.dictionary = this.document.ref(this.outlineData);\n    this.children = [];\n  }\n  addItem(title, options) {\n    if (options === void 0) {\n      options = {\n        expanded: false\n      };\n    }\n    const result = new PDFOutline(this.document, this.dictionary, title, this.document.page, options);\n    this.children.push(result);\n    return result;\n  }\n  endOutline() {\n    if (this.children.length > 0) {\n      if (this.options.expanded) {\n        this.outlineData.Count = this.children.length;\n      }\n      const first = this.children[0],\n        last = this.children[this.children.length - 1];\n      this.outlineData.First = first.dictionary;\n      this.outlineData.Last = last.dictionary;\n      for (let i = 0, len = this.children.length; i < len; i++) {\n        const child = this.children[i];\n        if (i > 0) {\n          child.outlineData.Prev = this.children[i - 1].dictionary;\n        }\n        if (i < this.children.length - 1) {\n          child.outlineData.Next = this.children[i + 1].dictionary;\n        }\n        child.endOutline();\n      }\n    }\n    return this.dictionary.end();\n  }\n}\n\nvar OutlineMixin = {\n  initOutline() {\n    return this.outline = new PDFOutline(this, null, null, null);\n  },\n  endOutline() {\n    this.outline.endOutline();\n    if (this.outline.children.length > 0) {\n      this._root.data.Outlines = this.outline.dictionary;\n      return this._root.data.PageMode = 'UseOutlines';\n    }\n  }\n};\n\n/*\nPDFStructureContent - a reference to a marked structure content\nBy Ben Schmidt\n*/\n\nclass PDFStructureContent {\n  constructor(pageRef, mcid) {\n    this.refs = [{\n      pageRef,\n      mcid\n    }];\n  }\n  push(structContent) {\n    structContent.refs.forEach(ref => this.refs.push(ref));\n  }\n}\n\n/*\nPDFStructureElement - represents an element in the PDF logical structure tree\nBy Ben Schmidt\n*/\n\nclass PDFStructureElement {\n  constructor(document, type, options, children) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (children === void 0) {\n      children = null;\n    }\n    this.document = document;\n    this._attached = false;\n    this._ended = false;\n    this._flushed = false;\n    this.dictionary = document.ref({\n      // Type: \"StructElem\",\n      S: type\n    });\n    const data = this.dictionary.data;\n    if (Array.isArray(options) || this._isValidChild(options)) {\n      children = options;\n      options = {};\n    }\n    if (typeof options.title !== 'undefined') {\n      data.T = new String(options.title);\n    }\n    if (typeof options.lang !== 'undefined') {\n      data.Lang = new String(options.lang);\n    }\n    if (typeof options.alt !== 'undefined') {\n      data.Alt = new String(options.alt);\n    }\n    if (typeof options.expanded !== 'undefined') {\n      data.E = new String(options.expanded);\n    }\n    if (typeof options.actual !== 'undefined') {\n      data.ActualText = new String(options.actual);\n    }\n    this._children = [];\n    if (children) {\n      if (!Array.isArray(children)) {\n        children = [children];\n      }\n      children.forEach(child => this.add(child));\n      this.end();\n    }\n  }\n  add(child) {\n    if (this._ended) {\n      throw new Error(`Cannot add child to already-ended structure element`);\n    }\n    if (!this._isValidChild(child)) {\n      throw new Error(`Invalid structure element child`);\n    }\n    if (child instanceof PDFStructureElement) {\n      child.setParent(this.dictionary);\n      if (this._attached) {\n        child.setAttached();\n      }\n    }\n    if (child instanceof PDFStructureContent) {\n      this._addContentToParentTree(child);\n    }\n    if (typeof child === 'function' && this._attached) {\n      // _contentForClosure() adds the content to the parent tree\n      child = this._contentForClosure(child);\n    }\n    this._children.push(child);\n    return this;\n  }\n  _addContentToParentTree(content) {\n    content.refs.forEach(_ref => {\n      let {\n        pageRef,\n        mcid\n      } = _ref;\n      const pageStructParents = this.document.getStructParentTree().get(pageRef.data.StructParents);\n      pageStructParents[mcid] = this.dictionary;\n    });\n  }\n  setParent(parentRef) {\n    if (this.dictionary.data.P) {\n      throw new Error(`Structure element added to more than one parent`);\n    }\n    this.dictionary.data.P = parentRef;\n    this._flush();\n  }\n  setAttached() {\n    if (this._attached) {\n      return;\n    }\n    this._children.forEach((child, index) => {\n      if (child instanceof PDFStructureElement) {\n        child.setAttached();\n      }\n      if (typeof child === 'function') {\n        this._children[index] = this._contentForClosure(child);\n      }\n    });\n    this._attached = true;\n    this._flush();\n  }\n  end() {\n    if (this._ended) {\n      return;\n    }\n    this._children.filter(child => child instanceof PDFStructureElement).forEach(child => child.end());\n    this._ended = true;\n    this._flush();\n  }\n  _isValidChild(child) {\n    return child instanceof PDFStructureElement || child instanceof PDFStructureContent || typeof child === 'function';\n  }\n  _contentForClosure(closure) {\n    const content = this.document.markStructureContent(this.dictionary.data.S);\n    closure();\n    this.document.endMarkedContent();\n    this._addContentToParentTree(content);\n    return content;\n  }\n  _isFlushable() {\n    if (!this.dictionary.data.P || !this._ended) {\n      return false;\n    }\n    return this._children.every(child => {\n      if (typeof child === 'function') {\n        return false;\n      }\n      if (child instanceof PDFStructureElement) {\n        return child._isFlushable();\n      }\n      return true;\n    });\n  }\n  _flush() {\n    if (this._flushed || !this._isFlushable()) {\n      return;\n    }\n    this.dictionary.data.K = [];\n    this._children.forEach(child => this._flushChild(child));\n    this.dictionary.end();\n\n    // free memory used by children; the dictionary itself may still be\n    // referenced by a parent structure element or root, but we can\n    // at least trim the tree here\n    this._children = [];\n    this.dictionary.data.K = null;\n    this._flushed = true;\n  }\n  _flushChild(child) {\n    if (child instanceof PDFStructureElement) {\n      this.dictionary.data.K.push(child.dictionary);\n    }\n    if (child instanceof PDFStructureContent) {\n      child.refs.forEach(_ref2 => {\n        let {\n          pageRef,\n          mcid\n        } = _ref2;\n        if (!this.dictionary.data.Pg) {\n          this.dictionary.data.Pg = pageRef;\n        }\n        if (this.dictionary.data.Pg === pageRef) {\n          this.dictionary.data.K.push(mcid);\n        } else {\n          this.dictionary.data.K.push({\n            Type: 'MCR',\n            Pg: pageRef,\n            MCID: mcid\n          });\n        }\n      });\n    }\n  }\n}\n\n/*\nPDFNumberTree - represents a number tree object\n*/\n\nclass PDFNumberTree extends PDFTree {\n  _compareKeys(a, b) {\n    return parseInt(a) - parseInt(b);\n  }\n  _keysName() {\n    return 'Nums';\n  }\n  _dataForKey(k) {\n    return parseInt(k);\n  }\n}\n\n/*\nMarkings mixin - support marked content sequences in content streams\nBy Ben Schmidt\n*/\n\nvar MarkingsMixin = {\n  initMarkings(options) {\n    this.structChildren = [];\n    if (options.tagged) {\n      this.getMarkInfoDictionary().data.Marked = true;\n      this.getStructTreeRoot();\n    }\n  },\n  markContent(tag, options) {\n    if (options === void 0) {\n      options = null;\n    }\n    if (tag === 'Artifact' || options && options.mcid) {\n      let toClose = 0;\n      this.page.markings.forEach(marking => {\n        if (toClose || marking.structContent || marking.tag === 'Artifact') {\n          toClose++;\n        }\n      });\n      while (toClose--) {\n        this.endMarkedContent();\n      }\n    }\n    if (!options) {\n      this.page.markings.push({\n        tag\n      });\n      this.addContent(`/${tag} BMC`);\n      return this;\n    }\n    this.page.markings.push({\n      tag,\n      options\n    });\n    const dictionary = {};\n    if (typeof options.mcid !== 'undefined') {\n      dictionary.MCID = options.mcid;\n    }\n    if (tag === 'Artifact') {\n      if (typeof options.type === 'string') {\n        dictionary.Type = options.type;\n      }\n      if (Array.isArray(options.bbox)) {\n        dictionary.BBox = [options.bbox[0], this.page.height - options.bbox[3], options.bbox[2], this.page.height - options.bbox[1]];\n      }\n      if (Array.isArray(options.attached) && options.attached.every(val => typeof val === 'string')) {\n        dictionary.Attached = options.attached;\n      }\n    }\n    if (tag === 'Span') {\n      if (options.lang) {\n        dictionary.Lang = new String(options.lang);\n      }\n      if (options.alt) {\n        dictionary.Alt = new String(options.alt);\n      }\n      if (options.expanded) {\n        dictionary.E = new String(options.expanded);\n      }\n      if (options.actual) {\n        dictionary.ActualText = new String(options.actual);\n      }\n    }\n    this.addContent(`/${tag} ${PDFObject.convert(dictionary)} BDC`);\n    return this;\n  },\n  markStructureContent(tag, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const pageStructParents = this.getStructParentTree().get(this.page.structParentTreeKey);\n    const mcid = pageStructParents.length;\n    pageStructParents.push(null);\n    this.markContent(tag, {\n      ...options,\n      mcid\n    });\n    const structContent = new PDFStructureContent(this.page.dictionary, mcid);\n    this.page.markings.slice(-1)[0].structContent = structContent;\n    return structContent;\n  },\n  endMarkedContent() {\n    this.page.markings.pop();\n    this.addContent('EMC');\n    return this;\n  },\n  struct(type, options, children) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (children === void 0) {\n      children = null;\n    }\n    return new PDFStructureElement(this, type, options, children);\n  },\n  addStructure(structElem) {\n    const structTreeRoot = this.getStructTreeRoot();\n    structElem.setParent(structTreeRoot);\n    structElem.setAttached();\n    this.structChildren.push(structElem);\n    if (!structTreeRoot.data.K) {\n      structTreeRoot.data.K = [];\n    }\n    structTreeRoot.data.K.push(structElem.dictionary);\n    return this;\n  },\n  initPageMarkings(pageMarkings) {\n    pageMarkings.forEach(marking => {\n      if (marking.structContent) {\n        const structContent = marking.structContent;\n        const newStructContent = this.markStructureContent(marking.tag, marking.options);\n        structContent.push(newStructContent);\n        this.page.markings.slice(-1)[0].structContent = structContent;\n      } else {\n        this.markContent(marking.tag, marking.options);\n      }\n    });\n  },\n  endPageMarkings(page) {\n    const pageMarkings = page.markings;\n    pageMarkings.forEach(() => page.write('EMC'));\n    page.markings = [];\n    return pageMarkings;\n  },\n  getMarkInfoDictionary() {\n    if (!this._root.data.MarkInfo) {\n      this._root.data.MarkInfo = this.ref({});\n    }\n    return this._root.data.MarkInfo;\n  },\n  hasMarkInfoDictionary() {\n    return !!this._root.data.MarkInfo;\n  },\n  getStructTreeRoot() {\n    if (!this._root.data.StructTreeRoot) {\n      this._root.data.StructTreeRoot = this.ref({\n        Type: 'StructTreeRoot',\n        ParentTree: new PDFNumberTree(),\n        ParentTreeNextKey: 0\n      });\n    }\n    return this._root.data.StructTreeRoot;\n  },\n  getStructParentTree() {\n    return this.getStructTreeRoot().data.ParentTree;\n  },\n  createStructParentTreeNextKey() {\n    // initialise the MarkInfo dictionary\n    this.getMarkInfoDictionary();\n    const structTreeRoot = this.getStructTreeRoot();\n    const key = structTreeRoot.data.ParentTreeNextKey++;\n    structTreeRoot.data.ParentTree.add(key, []);\n    return key;\n  },\n  endMarkings() {\n    const structTreeRoot = this._root.data.StructTreeRoot;\n    if (structTreeRoot) {\n      structTreeRoot.end();\n      this.structChildren.forEach(structElem => structElem.end());\n    }\n    if (this._root.data.MarkInfo) {\n      this._root.data.MarkInfo.end();\n    }\n  }\n};\n\nconst FIELD_FLAGS = {\n  readOnly: 1,\n  required: 2,\n  noExport: 4,\n  multiline: 0x1000,\n  password: 0x2000,\n  toggleToOffButton: 0x4000,\n  radioButton: 0x8000,\n  pushButton: 0x10000,\n  combo: 0x20000,\n  edit: 0x40000,\n  sort: 0x80000,\n  multiSelect: 0x200000,\n  noSpell: 0x400000\n};\nconst FIELD_JUSTIFY = {\n  left: 0,\n  center: 1,\n  right: 2\n};\nconst VALUE_MAP = {\n  value: 'V',\n  defaultValue: 'DV'\n};\nconst FORMAT_SPECIAL = {\n  zip: '0',\n  zipPlus4: '1',\n  zip4: '1',\n  phone: '2',\n  ssn: '3'\n};\nconst FORMAT_DEFAULT = {\n  number: {\n    nDec: 0,\n    sepComma: false,\n    negStyle: 'MinusBlack',\n    currency: '',\n    currencyPrepend: true\n  },\n  percent: {\n    nDec: 0,\n    sepComma: false\n  }\n};\nvar AcroFormMixin = {\n  /**\n   * Must call if adding AcroForms to a document. Must also call font() before\n   * this method to set the default font.\n   */\n  initForm() {\n    if (!this._font) {\n      throw new Error('Must set a font before calling initForm method');\n    }\n    this._acroform = {\n      fonts: {},\n      defaultFont: this._font.name\n    };\n    this._acroform.fonts[this._font.id] = this._font.ref();\n    let data = {\n      Fields: [],\n      NeedAppearances: true,\n      DA: new String(`/${this._font.id} 0 Tf 0 g`),\n      DR: {\n        Font: {}\n      }\n    };\n    data.DR.Font[this._font.id] = this._font.ref();\n    const AcroForm = this.ref(data);\n    this._root.data.AcroForm = AcroForm;\n    return this;\n  },\n  /**\n   * Called automatically by document.js\n   */\n  endAcroForm() {\n    if (this._root.data.AcroForm) {\n      if (!Object.keys(this._acroform.fonts).length && !this._acroform.defaultFont) {\n        throw new Error('No fonts specified for PDF form');\n      }\n      let fontDict = this._root.data.AcroForm.data.DR.Font;\n      Object.keys(this._acroform.fonts).forEach(name => {\n        fontDict[name] = this._acroform.fonts[name];\n      });\n      this._root.data.AcroForm.data.Fields.forEach(fieldRef => {\n        this._endChild(fieldRef);\n      });\n      this._root.data.AcroForm.end();\n    }\n    return this;\n  },\n  _endChild(ref) {\n    if (Array.isArray(ref.data.Kids)) {\n      ref.data.Kids.forEach(childRef => {\n        this._endChild(childRef);\n      });\n      ref.end();\n    }\n    return this;\n  },\n  /**\n   * Creates and adds a form field to the document. Form fields are intermediate\n   * nodes in a PDF form that are used to specify form name heirarchy and form\n   * value defaults.\n   * @param {string} name - field name (T attribute in field dictionary)\n   * @param {object} options  - other attributes to include in field dictionary\n   */\n  formField(name, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    let fieldDict = this._fieldDict(name, null, options);\n    let fieldRef = this.ref(fieldDict);\n    this._addToParent(fieldRef);\n    return fieldRef;\n  },\n  /**\n   * Creates and adds a Form Annotation to the document. Form annotations are\n   * called Widget annotations internally within a PDF file.\n   * @param {string} name - form field name (T attribute of widget annotation\n   * dictionary)\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   * @param {object} options\n   */\n  formAnnotation(name, type, x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    let fieldDict = this._fieldDict(name, type, options);\n    fieldDict.Subtype = 'Widget';\n    if (fieldDict.F === undefined) {\n      fieldDict.F = 4; // print the annotation\n    }\n\n    // Add Field annot to page, and get it's ref\n    this.annotate(x, y, w, h, fieldDict);\n    let annotRef = this.page.annotations[this.page.annotations.length - 1];\n    return this._addToParent(annotRef);\n  },\n  formText(name, x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return this.formAnnotation(name, 'text', x, y, w, h, options);\n  },\n  formPushButton(name, x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return this.formAnnotation(name, 'pushButton', x, y, w, h, options);\n  },\n  formCombo(name, x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return this.formAnnotation(name, 'combo', x, y, w, h, options);\n  },\n  formList(name, x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return this.formAnnotation(name, 'list', x, y, w, h, options);\n  },\n  formRadioButton(name, x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return this.formAnnotation(name, 'radioButton', x, y, w, h, options);\n  },\n  formCheckbox(name, x, y, w, h, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return this.formAnnotation(name, 'checkbox', x, y, w, h, options);\n  },\n  _addToParent(fieldRef) {\n    let parent = fieldRef.data.Parent;\n    if (parent) {\n      if (!parent.data.Kids) {\n        parent.data.Kids = [];\n      }\n      parent.data.Kids.push(fieldRef);\n    } else {\n      this._root.data.AcroForm.data.Fields.push(fieldRef);\n    }\n    return this;\n  },\n  _fieldDict(name, type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (!this._acroform) {\n      throw new Error('Call document.initForm() method before adding form elements to document');\n    }\n    let opts = Object.assign({}, options);\n    if (type !== null) {\n      opts = this._resolveType(type, options);\n    }\n    opts = this._resolveFlags(opts);\n    opts = this._resolveJustify(opts);\n    opts = this._resolveFont(opts);\n    opts = this._resolveStrings(opts);\n    opts = this._resolveColors(opts);\n    opts = this._resolveFormat(opts);\n    opts.T = new String(name);\n    if (opts.parent) {\n      opts.Parent = opts.parent;\n      delete opts.parent;\n    }\n    return opts;\n  },\n  _resolveType(type, opts) {\n    if (type === 'text') {\n      opts.FT = 'Tx';\n    } else if (type === 'pushButton') {\n      opts.FT = 'Btn';\n      opts.pushButton = true;\n    } else if (type === 'radioButton') {\n      opts.FT = 'Btn';\n      opts.radioButton = true;\n    } else if (type === 'checkbox') {\n      opts.FT = 'Btn';\n    } else if (type === 'combo') {\n      opts.FT = 'Ch';\n      opts.combo = true;\n    } else if (type === 'list') {\n      opts.FT = 'Ch';\n    } else {\n      throw new Error(`Invalid form annotation type '${type}'`);\n    }\n    return opts;\n  },\n  _resolveFormat(opts) {\n    const f = opts.format;\n    if (f && f.type) {\n      let fnKeystroke;\n      let fnFormat;\n      let params = '';\n      if (FORMAT_SPECIAL[f.type] !== undefined) {\n        fnKeystroke = `AFSpecial_Keystroke`;\n        fnFormat = `AFSpecial_Format`;\n        params = FORMAT_SPECIAL[f.type];\n      } else {\n        let format = f.type.charAt(0).toUpperCase() + f.type.slice(1);\n        fnKeystroke = `AF${format}_Keystroke`;\n        fnFormat = `AF${format}_Format`;\n        if (f.type === 'date') {\n          fnKeystroke += 'Ex';\n          params = String(f.param);\n        } else if (f.type === 'time') {\n          params = String(f.param);\n        } else if (f.type === 'number') {\n          let p = Object.assign({}, FORMAT_DEFAULT.number, f);\n          params = String([String(p.nDec), p.sepComma ? '0' : '1', '\"' + p.negStyle + '\"', 'null', '\"' + p.currency + '\"', String(p.currencyPrepend)].join(','));\n        } else if (f.type === 'percent') {\n          let p = Object.assign({}, FORMAT_DEFAULT.percent, f);\n          params = String([String(p.nDec), p.sepComma ? '0' : '1'].join(','));\n        }\n      }\n      opts.AA = opts.AA ? opts.AA : {};\n      opts.AA.K = {\n        S: 'JavaScript',\n        JS: new String(`${fnKeystroke}(${params});`)\n      };\n      opts.AA.F = {\n        S: 'JavaScript',\n        JS: new String(`${fnFormat}(${params});`)\n      };\n    }\n    delete opts.format;\n    return opts;\n  },\n  _resolveColors(opts) {\n    let color = this._normalizeColor(opts.backgroundColor);\n    if (color) {\n      if (!opts.MK) {\n        opts.MK = {};\n      }\n      opts.MK.BG = color;\n    }\n    color = this._normalizeColor(opts.borderColor);\n    if (color) {\n      if (!opts.MK) {\n        opts.MK = {};\n      }\n      opts.MK.BC = color;\n    }\n    delete opts.backgroundColor;\n    delete opts.borderColor;\n    return opts;\n  },\n  _resolveFlags(options) {\n    let result = 0;\n    Object.keys(options).forEach(key => {\n      if (FIELD_FLAGS[key]) {\n        if (options[key]) {\n          result |= FIELD_FLAGS[key];\n        }\n        delete options[key];\n      }\n    });\n    if (result !== 0) {\n      options.Ff = options.Ff ? options.Ff : 0;\n      options.Ff |= result;\n    }\n    return options;\n  },\n  _resolveJustify(options) {\n    let result = 0;\n    if (options.align !== undefined) {\n      if (typeof FIELD_JUSTIFY[options.align] === 'number') {\n        result = FIELD_JUSTIFY[options.align];\n      }\n      delete options.align;\n    }\n    if (result !== 0) {\n      options.Q = result; // default\n    }\n    return options;\n  },\n  _resolveFont(options) {\n    // add current font to document-level AcroForm dict if necessary\n    if (this._acroform.fonts[this._font.id] == null) {\n      this._acroform.fonts[this._font.id] = this._font.ref();\n    }\n\n    // add current font to field's resource dict (RD) if not the default acroform font\n    if (this._acroform.defaultFont !== this._font.name) {\n      options.DR = {\n        Font: {}\n      };\n\n      // Get the fontSize option. If not set use auto sizing\n      const fontSize = options.fontSize || 0;\n      options.DR.Font[this._font.id] = this._font.ref();\n      options.DA = new String(`/${this._font.id} ${fontSize} Tf 0 g`);\n    }\n    return options;\n  },\n  _resolveStrings(options) {\n    let select = [];\n    function appendChoices(a) {\n      if (Array.isArray(a)) {\n        for (let idx = 0; idx < a.length; idx++) {\n          if (typeof a[idx] === 'string') {\n            select.push(new String(a[idx]));\n          } else {\n            select.push(a[idx]);\n          }\n        }\n      }\n    }\n    appendChoices(options.Opt);\n    if (options.select) {\n      appendChoices(options.select);\n      delete options.select;\n    }\n    if (select.length) {\n      options.Opt = select;\n    }\n    Object.keys(VALUE_MAP).forEach(key => {\n      if (options[key] !== undefined) {\n        options[VALUE_MAP[key]] = options[key];\n        delete options[key];\n      }\n    });\n    ['V', 'DV'].forEach(key => {\n      if (typeof options[key] === 'string') {\n        options[key] = new String(options[key]);\n      }\n    });\n    if (options.MK && options.MK.CA) {\n      options.MK.CA = new String(options.MK.CA);\n    }\n    if (options.label) {\n      options.MK = options.MK ? options.MK : {};\n      options.MK.CA = new String(options.label);\n      delete options.label;\n    }\n    return options;\n  }\n};\n\nvar AttachmentsMixin = {\n  /**\n   * Embed contents of `src` in PDF\n   * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file\n   * @param {object} options\n   *  * options.name: filename to be shown in PDF, will use `src` if none set\n   *  * options.type: filetype to be shown in PDF\n   *  * options.description: description to be shown in PDF\n   *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations\n   *  * options.creationDate: override creation date\n   *  * options.modifiedDate: override modified date\n   *  * options.relationship: Relationship between the PDF document and its attached file. Can be 'Alternative', 'Data', 'Source', 'Supplement' or 'Unspecified'.\n   * @returns filespec reference\n   */\n  file(src, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    options.name = options.name || src;\n    options.relationship = options.relationship || 'Unspecified';\n    const refBody = {\n      Type: 'EmbeddedFile',\n      Params: {}\n    };\n    let data;\n    if (!src) {\n      throw new Error('No src specified');\n    }\n    if (Buffer.isBuffer(src)) {\n      data = src;\n    } else if (src instanceof ArrayBuffer) {\n      data = Buffer.from(new Uint8Array(src));\n    } else {\n      let match;\n      if (match = /^data:(.*?);base64,(.*)$/.exec(src)) {\n        if (match[1]) {\n          refBody.Subtype = match[1].replace('/', '#2F');\n        }\n        data = Buffer.from(match[2], 'base64');\n      } else {\n        data = fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync(src);\n        if (!data) {\n          throw new Error(`Could not read contents of file at filepath ${src}`);\n        }\n\n        // update CreationDate and ModDate\n        const {\n          birthtime,\n          ctime\n        } = fs__WEBPACK_IMPORTED_MODULE_4__.statSync(src);\n        refBody.Params.CreationDate = birthtime;\n        refBody.Params.ModDate = ctime;\n      }\n    }\n\n    // override creation date and modified date\n    if (options.creationDate instanceof Date) {\n      refBody.Params.CreationDate = options.creationDate;\n    }\n    if (options.modifiedDate instanceof Date) {\n      refBody.Params.ModDate = options.modifiedDate;\n    }\n    // add optional subtype\n    if (options.type) {\n      refBody.Subtype = options.type.replace('/', '#2F');\n    }\n\n    // add checksum and size information\n    const checksum = crypto_js__WEBPACK_IMPORTED_MODULE_9__.MD5(crypto_js__WEBPACK_IMPORTED_MODULE_9__.lib.WordArray.create(new Uint8Array(data)));\n    refBody.Params.CheckSum = new String(checksum);\n    refBody.Params.Size = data.byteLength;\n\n    // save some space when embedding the same file again\n    // if a file with the same name and metadata exists, reuse its reference\n    let ref;\n    if (!this._fileRegistry) this._fileRegistry = {};\n    let file = this._fileRegistry[options.name];\n    if (file && isEqual(refBody, file)) {\n      ref = file.ref;\n    } else {\n      ref = this.ref(refBody);\n      ref.end(data);\n      this._fileRegistry[options.name] = {\n        ...refBody,\n        ref\n      };\n    }\n    // add filespec for embedded file\n    const fileSpecBody = {\n      Type: 'Filespec',\n      AFRelationship: options.relationship,\n      F: new String(options.name),\n      EF: {\n        F: ref\n      },\n      UF: new String(options.name)\n    };\n    if (options.description) {\n      fileSpecBody.Desc = new String(options.description);\n    }\n    const filespec = this.ref(fileSpecBody);\n    filespec.end();\n    if (!options.hidden) {\n      this.addNamedEmbeddedFile(options.name, filespec);\n    }\n\n    // Add file to the catalogue to be PDF/A3 compliant\n    if (this._root.data.AF) {\n      this._root.data.AF.push(filespec);\n    } else {\n      this._root.data.AF = [filespec];\n    }\n    return filespec;\n  }\n};\n\n/** check two embedded file metadata objects for equality */\nfunction isEqual(a, b) {\n  return a.Subtype === b.Subtype && a.Params.CheckSum.toString() === b.Params.CheckSum.toString() && a.Params.Size === b.Params.Size && a.Params.CreationDate.getTime() === b.Params.CreationDate.getTime() && (a.Params.ModDate === undefined && b.Params.ModDate === undefined || a.Params.ModDate.getTime() === b.Params.ModDate.getTime());\n}\n\nvar PDFA = {\n  initPDFA(pSubset) {\n    if (pSubset.charAt(pSubset.length - 3) === '-') {\n      this.subset_conformance = pSubset.charAt(pSubset.length - 1).toUpperCase();\n      this.subset = parseInt(pSubset.charAt(pSubset.length - 2));\n    } else {\n      // Default to Basic conformance when user doesn't specify\n      this.subset_conformance = 'B';\n      this.subset = parseInt(pSubset.charAt(pSubset.length - 1));\n    }\n  },\n  endSubset() {\n    this._addPdfaMetadata();\n    this._addColorOutputIntent();\n  },\n  _addColorOutputIntent() {\n    const iccProfile = fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync(`${__dirname}/data/sRGB_IEC61966_2_1.icc`);\n    const colorProfileRef = this.ref({\n      Length: iccProfile.length,\n      N: 3\n    });\n    colorProfileRef.write(iccProfile);\n    colorProfileRef.end();\n    const intentRef = this.ref({\n      Type: 'OutputIntent',\n      S: 'GTS_PDFA1',\n      Info: new String('sRGB IEC61966-2.1'),\n      OutputConditionIdentifier: new String('sRGB IEC61966-2.1'),\n      DestOutputProfile: colorProfileRef\n    });\n    intentRef.end();\n    this._root.data.OutputIntents = [intentRef];\n  },\n  _getPdfaid() {\n    return `\n        <rdf:Description xmlns:pdfaid=\"http://www.aiim.org/pdfa/ns/id/\" rdf:about=\"\">\n            <pdfaid:part>${this.subset}</pdfaid:part>\n            <pdfaid:conformance>${this.subset_conformance}</pdfaid:conformance>\n        </rdf:Description>\n        `;\n  },\n  _addPdfaMetadata() {\n    this.appendXML(this._getPdfaid());\n  }\n};\n\nvar PDFUA = {\n  initPDFUA() {\n    this.subset = 1;\n  },\n  endSubset() {\n    this._addPdfuaMetadata();\n  },\n  _addPdfuaMetadata() {\n    this.appendXML(this._getPdfuaid());\n  },\n  _getPdfuaid() {\n    return `\n        <rdf:Description xmlns:pdfuaid=\"http://www.aiim.org/pdfua/ns/id/\" rdf:about=\"\">\n            <pdfuaid:part>${this.subset}</pdfuaid:part>\n        </rdf:Description>\n        `;\n  }\n};\n\nvar SubsetMixin = {\n  _importSubset(subset) {\n    Object.assign(this, subset);\n  },\n  initSubset(options) {\n    switch (options.subset) {\n      case 'PDF/A-1':\n      case 'PDF/A-1a':\n      case 'PDF/A-1b':\n      case 'PDF/A-2':\n      case 'PDF/A-2a':\n      case 'PDF/A-2b':\n      case 'PDF/A-3':\n      case 'PDF/A-3a':\n      case 'PDF/A-3b':\n        this._importSubset(PDFA);\n        this.initPDFA(options.subset);\n        break;\n      case 'PDF/UA':\n        this._importSubset(PDFUA);\n        this.initPDFUA();\n        break;\n    }\n  }\n};\n\nclass PDFMetadata {\n  constructor() {\n    this._metadata = `\n        <?xpacket begin=\"\\ufeff\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>\n            <x:xmpmeta xmlns:x=\"adobe:ns:meta/\">\n                <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n        `;\n  }\n  _closeTags() {\n    this._metadata = this._metadata.concat(`\n                </rdf:RDF>\n            </x:xmpmeta>\n        <?xpacket end=\"w\"?>\n        `);\n  }\n  append(xml, newline) {\n    if (newline === void 0) {\n      newline = true;\n    }\n    this._metadata = this._metadata.concat(xml);\n    if (newline) this._metadata = this._metadata.concat('\\n');\n  }\n  getXML() {\n    return this._metadata;\n  }\n  getLength() {\n    return this._metadata.length;\n  }\n  end() {\n    this._closeTags();\n    this._metadata = this._metadata.trim();\n  }\n}\n\nvar MetadataMixin = {\n  initMetadata() {\n    this.metadata = new PDFMetadata();\n  },\n  appendXML(xml, newline) {\n    if (newline === void 0) {\n      newline = true;\n    }\n    this.metadata.append(xml, newline);\n  },\n  _addInfo() {\n    this.appendXML(`\n        <rdf:Description rdf:about=\"\" xmlns:xmp=\"http://ns.adobe.com/xap/1.0/\">\n            <xmp:CreateDate>${this.info.CreationDate.toISOString().split('.')[0] + 'Z'}</xmp:CreateDate>\n            <xmp:CreatorTool>${this.info.Creator}</xmp:CreatorTool>\n        </rdf:Description>\n        `);\n    if (this.info.Title || this.info.Author || this.info.Subject) {\n      this.appendXML(`\n            <rdf:Description rdf:about=\"\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n            `);\n      if (this.info.Title) {\n        this.appendXML(`\n                <dc:title>\n                    <rdf:Alt>\n                        <rdf:li xml:lang=\"x-default\">${this.info.Title}</rdf:li>\n                    </rdf:Alt>\n                </dc:title>\n                `);\n      }\n      if (this.info.Author) {\n        this.appendXML(`\n                <dc:creator>\n                    <rdf:Seq>\n                        <rdf:li>${this.info.Author}</rdf:li>\n                    </rdf:Seq>\n                </dc:creator>\n                `);\n      }\n      if (this.info.Subject) {\n        this.appendXML(`\n                <dc:description>\n                    <rdf:Alt>\n                        <rdf:li xml:lang=\"x-default\">${this.info.Subject}</rdf:li>\n                    </rdf:Alt>\n                </dc:description>\n                `);\n      }\n      this.appendXML(`\n            </rdf:Description>\n            `);\n    }\n    this.appendXML(`\n        <rdf:Description rdf:about=\"\" xmlns:pdf=\"http://ns.adobe.com/pdf/1.3/\">\n            <pdf:Producer>${this.info.Creator}</pdf:Producer>`, false);\n    if (this.info.Keywords) {\n      this.appendXML(`\n            <pdf:Keywords>${this.info.Keywords}</pdf:Keywords>`, false);\n    }\n    this.appendXML(`\n        </rdf:Description>\n        `);\n  },\n  endMetadata() {\n    this._addInfo();\n    this.metadata.end();\n\n    /*\n        Metadata was introduced in PDF 1.4, so adding it to 1.3\n        will likely only take up more space.\n        */\n    if (this.version != 1.3) {\n      this.metadataRef = this.ref({\n        length: this.metadata.getLength(),\n        Type: 'Metadata',\n        Subtype: 'XML'\n      });\n      this.metadataRef.compress = false;\n      this.metadataRef.write(Buffer.from(this.metadata.getXML(), 'utf-8'));\n      this.metadataRef.end();\n      this._root.data.Metadata = this.metadataRef;\n    }\n  }\n};\n\n/*\nPDFDocument - represents an entire PDF document\nBy Devon Govett\n*/\n\nclass PDFDocument extends stream__WEBPACK_IMPORTED_MODULE_0__.Readable {\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    super(options);\n    this.options = options;\n\n    // PDF version\n    switch (options.pdfVersion) {\n      case '1.4':\n        this.version = 1.4;\n        break;\n      case '1.5':\n        this.version = 1.5;\n        break;\n      case '1.6':\n        this.version = 1.6;\n        break;\n      case '1.7':\n      case '1.7ext3':\n        this.version = 1.7;\n        break;\n      default:\n        this.version = 1.3;\n        break;\n    }\n\n    // Whether streams should be compressed\n    this.compress = this.options.compress != null ? this.options.compress : true;\n    this._pageBuffer = [];\n    this._pageBufferStart = 0;\n\n    // The PDF object store\n    this._offsets = [];\n    this._waiting = 0;\n    this._ended = false;\n    this._offset = 0;\n    const Pages = this.ref({\n      Type: 'Pages',\n      Count: 0,\n      Kids: []\n    });\n    const Names = this.ref({\n      Dests: new PDFNameTree()\n    });\n    this._root = this.ref({\n      Type: 'Catalog',\n      Pages,\n      Names\n    });\n    if (this.options.lang) {\n      this._root.data.Lang = new String(this.options.lang);\n    }\n\n    // The current page\n    this.page = null;\n\n    // Initialize mixins\n    this.initMetadata();\n    this.initColor();\n    this.initVector();\n    this.initFonts(options.font);\n    this.initText();\n    this.initImages();\n    this.initOutline();\n    this.initMarkings(options);\n    this.initSubset(options);\n\n    // Initialize the metadata\n    this.info = {\n      Producer: 'PDFKit',\n      Creator: 'PDFKit',\n      CreationDate: new Date()\n    };\n    if (this.options.info) {\n      for (let key in this.options.info) {\n        const val = this.options.info[key];\n        this.info[key] = val;\n      }\n    }\n    if (this.options.displayTitle) {\n      this._root.data.ViewerPreferences = this.ref({\n        DisplayDocTitle: true\n      });\n    }\n\n    // Generate file ID\n    this._id = PDFSecurity.generateFileID(this.info);\n\n    // Initialize security settings\n    // this._security = PDFSecurity.create(this, options);\n\n    // Write the header\n    // PDF version\n    this._write(`%PDF-${this.version}`);\n\n    // 4 binary chars, as recommended by the spec\n    this._write('%\\xFF\\xFF\\xFF\\xFF');\n\n    // Add the first page\n    if (this.options.autoFirstPage !== false) {\n      this.addPage();\n    }\n  }\n  addPage(options) {\n    if (options == null) {\n      ({\n        options\n      } = this);\n    }\n\n    // end the current page if needed\n    if (!this.options.bufferPages) {\n      this.flushPages();\n    }\n\n    // create a page object\n    this.page = new PDFPage(this, options);\n    this._pageBuffer.push(this.page);\n\n    // add the page to the object store\n    const pages = this._root.data.Pages.data;\n    pages.Kids.push(this.page.dictionary);\n    pages.Count++;\n\n    // reset x and y coordinates\n    this.x = this.page.margins.left;\n    this.y = this.page.margins.top;\n\n    // flip PDF coordinate system so that the origin is in\n    // the top left rather than the bottom left\n    this._ctm = [1, 0, 0, 1, 0, 0];\n    this.transform(1, 0, 0, -1, 0, this.page.height);\n    this.emit('pageAdded');\n    return this;\n  }\n  continueOnNewPage(options) {\n    const pageMarkings = this.endPageMarkings(this.page);\n    this.addPage(options !== null && options !== void 0 ? options : this.page._options);\n    this.initPageMarkings(pageMarkings);\n    return this;\n  }\n  bufferedPageRange() {\n    return {\n      start: this._pageBufferStart,\n      count: this._pageBuffer.length\n    };\n  }\n  switchToPage(n) {\n    let page;\n    if (!(page = this._pageBuffer[n - this._pageBufferStart])) {\n      throw new Error(`switchToPage(${n}) out of bounds, current buffer covers pages ${this._pageBufferStart} to ${this._pageBufferStart + this._pageBuffer.length - 1}`);\n    }\n    return this.page = page;\n  }\n  flushPages() {\n    // this local variable exists so we're future-proof against\n    // reentrant calls to flushPages.\n    const pages = this._pageBuffer;\n    this._pageBuffer = [];\n    this._pageBufferStart += pages.length;\n    for (let page of pages) {\n      this.endPageMarkings(page);\n      page.end();\n    }\n  }\n  addNamedDestination(name) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (args.length === 0) {\n      args = ['XYZ', null, null, null];\n    }\n    if (args[0] === 'XYZ' && args[2] !== null) {\n      args[2] = this.page.height - args[2];\n    }\n    args.unshift(this.page.dictionary);\n    this._root.data.Names.data.Dests.add(name, args);\n  }\n  addNamedEmbeddedFile(name, ref) {\n    if (!this._root.data.Names.data.EmbeddedFiles) {\n      // disabling /Limits for this tree fixes attachments not showing in Adobe Reader\n      this._root.data.Names.data.EmbeddedFiles = new PDFNameTree({\n        limits: false\n      });\n    }\n\n    // add filespec to EmbeddedFiles\n    this._root.data.Names.data.EmbeddedFiles.add(name, ref);\n  }\n  addNamedJavaScript(name, js) {\n    if (!this._root.data.Names.data.JavaScript) {\n      this._root.data.Names.data.JavaScript = new PDFNameTree();\n    }\n    let data = {\n      JS: new String(js),\n      S: 'JavaScript'\n    };\n    this._root.data.Names.data.JavaScript.add(name, data);\n  }\n  ref(data) {\n    const ref = new PDFReference(this, this._offsets.length + 1, data);\n    this._offsets.push(null); // placeholder for this object's offset once it is finalized\n    this._waiting++;\n    return ref;\n  }\n  _read() {}\n  // do nothing, but this method is required by node\n\n  _write(data) {\n    if (!Buffer.isBuffer(data)) {\n      data = Buffer.from(data + '\\n', 'binary');\n    }\n    this.push(data);\n    return this._offset += data.length;\n  }\n  addContent(data) {\n    this.page.write(data);\n    return this;\n  }\n  _refEnd(ref) {\n    this._offsets[ref.id - 1] = ref.offset;\n    if (--this._waiting === 0 && this._ended) {\n      this._finalize();\n      return this._ended = false;\n    }\n  }\n  end() {\n    this.flushPages();\n    this._info = this.ref();\n    for (let key in this.info) {\n      let val = this.info[key];\n      if (typeof val === 'string') {\n        val = new String(val);\n      }\n      let entry = this.ref(val);\n      entry.end();\n      this._info.data[key] = entry;\n    }\n    this._info.end();\n    for (let name in this._fontFamilies) {\n      const font = this._fontFamilies[name];\n      font.finalize();\n    }\n    this.endOutline();\n    this.endMarkings();\n    if (this.subset) {\n      this.endSubset();\n    }\n    this.endMetadata();\n    this._root.end();\n    this._root.data.Pages.end();\n    this._root.data.Names.end();\n    this.endAcroForm();\n    if (this._root.data.ViewerPreferences) {\n      this._root.data.ViewerPreferences.end();\n    }\n    if (this._security) {\n      this._security.end();\n    }\n    if (this._waiting === 0) {\n      return this._finalize();\n    } else {\n      return this._ended = true;\n    }\n  }\n  _finalize() {\n    // generate xref\n    const xRefOffset = this._offset;\n    this._write('xref');\n    this._write(`0 ${this._offsets.length + 1}`);\n    this._write('0000000000 65535 f ');\n    for (let offset of this._offsets) {\n      offset = `0000000000${offset}`.slice(-10);\n      this._write(offset + ' 00000 n ');\n    }\n\n    // trailer\n    const trailer = {\n      Size: this._offsets.length + 1,\n      Root: this._root,\n      Info: this._info,\n      ID: [this._id, this._id]\n    };\n    if (this._security) {\n      trailer.Encrypt = this._security.dictionary;\n    }\n    this._write('trailer');\n    this._write(PDFObject.convert(trailer));\n    this._write('startxref');\n    this._write(`${xRefOffset}`);\n    this._write('%%EOF');\n\n    // end the stream\n    return this.push(null);\n  }\n  toString() {\n    return '[object PDFDocument]';\n  }\n}\nconst mixin = methods => {\n  Object.assign(PDFDocument.prototype, methods);\n};\nmixin(MetadataMixin);\nmixin(ColorMixin);\nmixin(VectorMixin);\nmixin(FontsMixin);\nmixin(TextMixin);\nmixin(ImagesMixin);\nmixin(AnnotationsMixin);\nmixin(OutlineMixin);\nmixin(MarkingsMixin);\nmixin(AcroFormMixin);\nmixin(AttachmentsMixin);\nmixin(SubsetMixin);\nPDFDocument.LineWrapper = LineWrapper;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js":
/*!******************************************************!*\
  !*** ./node_modules/@react-pdf/png-js/lib/png-js.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PNG)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zlib */ \"zlib\");\n\n\n\nclass PNG {\n  static decode(path, fn) {\n    {\n      return fs__WEBPACK_IMPORTED_MODULE_0__.readFile(path, (err, file) => {\n        const png = new PNG(file);\n        return png.decode(pixels => fn(pixels));\n      });\n    }\n  }\n  static load(path) {\n    {\n      const file = fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(path);\n      return new PNG(file);\n    }\n  }\n  constructor(data) {\n    let i;\n    this.data = data;\n    this.pos = 8; // Skip the default header\n\n    this.palette = [];\n    this.imgData = [];\n    this.transparency = {};\n    this.text = {};\n    while (true) {\n      const chunkSize = this.readUInt32();\n      let section = '';\n      for (i = 0; i < 4; i++) {\n        section += String.fromCharCode(this.data[this.pos++]);\n      }\n      switch (section) {\n        case 'IHDR':\n          // we can grab  interesting values from here (like width, height, etc)\n          this.width = this.readUInt32();\n          this.height = this.readUInt32();\n          this.bits = this.data[this.pos++];\n          this.colorType = this.data[this.pos++];\n          this.compressionMethod = this.data[this.pos++];\n          this.filterMethod = this.data[this.pos++];\n          this.interlaceMethod = this.data[this.pos++];\n          break;\n        case 'PLTE':\n          this.palette = this.read(chunkSize);\n          break;\n        case 'IDAT':\n          for (i = 0; i < chunkSize; i++) {\n            this.imgData.push(this.data[this.pos++]);\n          }\n          break;\n        case 'tRNS':\n          // This chunk can only occur once and it must occur after the\n          // PLTE chunk and before the IDAT chunk.\n          this.transparency = {};\n          switch (this.colorType) {\n            case 3:\n              // Indexed color, RGB. Each byte in this chunk is an alpha for\n              // the palette index in the PLTE (\"palette\") chunk up until the\n              // last non-opaque entry. Set up an array, stretching over all\n              // palette entries which will be 0 (opaque) or 1 (transparent).\n              this.transparency.indexed = this.read(chunkSize);\n              var short = 255 - this.transparency.indexed.length;\n              if (short > 0) {\n                for (i = 0; i < short; i++) {\n                  this.transparency.indexed.push(255);\n                }\n              }\n              break;\n            case 0:\n              // Greyscale. Corresponding to entries in the PLTE chunk.\n              // Grey is two bytes, range 0 .. (2 ^ bit-depth) - 1\n              this.transparency.grayscale = this.read(chunkSize)[0];\n              break;\n            case 2:\n              // True color with proper alpha channel.\n              this.transparency.rgb = this.read(chunkSize);\n              break;\n          }\n          break;\n        case 'tEXt':\n          var text = this.read(chunkSize);\n          var index = text.indexOf(0);\n          var key = String.fromCharCode.apply(String, text.slice(0, index));\n          this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));\n          break;\n        case 'IEND':\n          // we've got everything we need!\n          switch (this.colorType) {\n            case 0:\n            case 3:\n            case 4:\n              this.colors = 1;\n              break;\n            case 2:\n            case 6:\n              this.colors = 3;\n              break;\n          }\n          this.hasAlphaChannel = [4, 6].includes(this.colorType);\n          var colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n          this.pixelBitlength = this.bits * colors;\n          switch (this.colors) {\n            case 1:\n              this.colorSpace = 'DeviceGray';\n              break;\n            case 3:\n              this.colorSpace = 'DeviceRGB';\n              break;\n          }\n          this.imgData = Buffer.from(this.imgData);\n          return;\n        default:\n          // unknown (or unimportant) section, skip it\n          this.pos += chunkSize;\n      }\n      this.pos += 4; // Skip the CRC\n\n      if (this.pos > this.data.length) {\n        throw new Error('Incomplete or corrupt PNG file');\n      }\n    }\n  }\n  read(bytes) {\n    const result = new Array(bytes);\n    for (let i = 0; i < bytes; i++) {\n      result[i] = this.data[this.pos++];\n    }\n    return result;\n  }\n  readUInt32() {\n    const b1 = this.data[this.pos++] << 24;\n    const b2 = this.data[this.pos++] << 16;\n    const b3 = this.data[this.pos++] << 8;\n    const b4 = this.data[this.pos++];\n    return b1 | b2 | b3 | b4;\n  }\n  readUInt16() {\n    const b1 = this.data[this.pos++] << 8;\n    const b2 = this.data[this.pos++];\n    return b1 | b2;\n  }\n  decodePixels(fn) {\n    return zlib__WEBPACK_IMPORTED_MODULE_1__.inflate(this.imgData, (err, data) => {\n      if (err) throw err;\n      var pos = 0;\n      const {\n        width,\n        height\n      } = this;\n      var pixelBytes = this.pixelBitlength / 8;\n      const pixels = Buffer.alloc(width * height * pixelBytes);\n      function pass(x0, y0, dx, dy, singlePass) {\n        if (singlePass === void 0) {\n          singlePass = false;\n        }\n        const w = Math.ceil((width - x0) / dx);\n        const h = Math.ceil((height - y0) / dy);\n        const scanlineLength = pixelBytes * w;\n        const buffer = singlePass ? pixels : Buffer.alloc(scanlineLength * h);\n        let row = 0;\n        let c = 0;\n        while (row < h && pos < data.length) {\n          var byte;\n          var col;\n          var i;\n          var left;\n          var upper;\n          switch (data[pos++]) {\n            case 0:\n              // None\n              for (i = 0; i < scanlineLength; i++) {\n                buffer[c++] = data[pos++];\n              }\n              break;\n            case 1:\n              // Sub\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                buffer[c++] = (byte + left) % 256;\n              }\n              break;\n            case 2:\n              // Up\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                col = (i - i % pixelBytes) / pixelBytes;\n                upper = row && buffer[(row - 1) * scanlineLength + col * pixelBytes + i % pixelBytes];\n                buffer[c++] = (upper + byte) % 256;\n              }\n              break;\n            case 3:\n              // Average\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                col = (i - i % pixelBytes) / pixelBytes;\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                upper = row && buffer[(row - 1) * scanlineLength + col * pixelBytes + i % pixelBytes];\n                buffer[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n              }\n              break;\n            case 4:\n              // Paeth\n              for (i = 0; i < scanlineLength; i++) {\n                var paeth;\n                var upperLeft;\n                byte = data[pos++];\n                col = (i - i % pixelBytes) / pixelBytes;\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                if (row === 0) {\n                  upper = upperLeft = 0;\n                } else {\n                  upper = buffer[(row - 1) * scanlineLength + col * pixelBytes + i % pixelBytes];\n                  upperLeft = col && buffer[(row - 1) * scanlineLength + (col - 1) * pixelBytes + i % pixelBytes];\n                }\n                const p = left + upper - upperLeft;\n                const pa = Math.abs(p - left);\n                const pb = Math.abs(p - upper);\n                const pc = Math.abs(p - upperLeft);\n                if (pa <= pb && pa <= pc) {\n                  paeth = left;\n                } else if (pb <= pc) {\n                  paeth = upper;\n                } else {\n                  paeth = upperLeft;\n                }\n                buffer[c++] = (byte + paeth) % 256;\n              }\n              break;\n            default:\n              throw new Error(`Invalid filter algorithm: ${data[pos - 1]}`);\n          }\n          if (!singlePass) {\n            let pixelsPos = ((y0 + row * dy) * width + x0) * pixelBytes;\n            let bufferPos = row * scanlineLength;\n            for (i = 0; i < w; i++) {\n              for (let j = 0; j < pixelBytes; j++) pixels[pixelsPos++] = buffer[bufferPos++];\n              pixelsPos += (dx - 1) * pixelBytes;\n            }\n          }\n          row++;\n        }\n      }\n      if (this.interlaceMethod === 1) {\n        /*\n          1 6 4 6 2 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n          3 6 4 6 3 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n        */\n        pass(0, 0, 8, 8); // 1\n        pass(4, 0, 8, 8); // 2\n        pass(0, 4, 4, 8); // 3\n        pass(2, 0, 4, 4); // 4\n        pass(0, 2, 2, 4); // 5\n        pass(1, 0, 2, 2); // 6\n        pass(0, 1, 1, 2); // 7\n      } else {\n        pass(0, 0, 1, 1, true);\n      }\n      return fn(pixels);\n    });\n  }\n  decodePalette() {\n    const {\n      palette\n    } = this;\n    const {\n      length\n    } = palette;\n    const transparency = this.transparency.indexed || [];\n    const ret = Buffer.alloc(transparency.length + length);\n    let pos = 0;\n    let c = 0;\n    for (let i = 0; i < length; i += 3) {\n      var left;\n      ret[pos++] = palette[i];\n      ret[pos++] = palette[i + 1];\n      ret[pos++] = palette[i + 2];\n      ret[pos++] = (left = transparency[c++]) != null ? left : 255;\n    }\n    return ret;\n  }\n  copyToImageData(imageData, pixels) {\n    let j;\n    var k;\n    let {\n      colors\n    } = this;\n    let palette = null;\n    let alpha = this.hasAlphaChannel;\n    if (this.palette.length) {\n      palette = this._decodedPalette || (this._decodedPalette = this.decodePalette());\n      colors = 4;\n      alpha = true;\n    }\n    const data = imageData.data || imageData;\n    const {\n      length\n    } = data;\n    const input = palette || pixels;\n    let i = j = 0;\n    if (colors === 1) {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        const v = input[k++];\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    } else {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    }\n  }\n  decode(fn) {\n    const ret = Buffer.alloc(this.width * this.height * 4);\n    return this.decodePixels(pixels => {\n      this.copyToImageData(ret, pixels);\n      return fn(ret);\n    });\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/primitives/lib/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@react-pdf/primitives/lib/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Canvas: () => (/* binding */ Canvas),\n/* harmony export */   Checkbox: () => (/* binding */ Checkbox),\n/* harmony export */   Circle: () => (/* binding */ Circle),\n/* harmony export */   ClipPath: () => (/* binding */ ClipPath),\n/* harmony export */   Defs: () => (/* binding */ Defs),\n/* harmony export */   Document: () => (/* binding */ Document),\n/* harmony export */   Ellipse: () => (/* binding */ Ellipse),\n/* harmony export */   FieldSet: () => (/* binding */ FieldSet),\n/* harmony export */   G: () => (/* binding */ G),\n/* harmony export */   Image: () => (/* binding */ Image),\n/* harmony export */   Line: () => (/* binding */ Line),\n/* harmony export */   LinearGradient: () => (/* binding */ LinearGradient),\n/* harmony export */   Link: () => (/* binding */ Link),\n/* harmony export */   List: () => (/* binding */ List),\n/* harmony export */   Note: () => (/* binding */ Note),\n/* harmony export */   Page: () => (/* binding */ Page),\n/* harmony export */   Path: () => (/* binding */ Path),\n/* harmony export */   Polygon: () => (/* binding */ Polygon),\n/* harmony export */   Polyline: () => (/* binding */ Polyline),\n/* harmony export */   RadialGradient: () => (/* binding */ RadialGradient),\n/* harmony export */   Rect: () => (/* binding */ Rect),\n/* harmony export */   Select: () => (/* binding */ Select),\n/* harmony export */   Stop: () => (/* binding */ Stop),\n/* harmony export */   Svg: () => (/* binding */ Svg),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   TextInput: () => (/* binding */ TextInput),\n/* harmony export */   TextInstance: () => (/* binding */ TextInstance),\n/* harmony export */   Tspan: () => (/* binding */ Tspan),\n/* harmony export */   View: () => (/* binding */ View)\n/* harmony export */ });\nconst G = 'G';\nconst Svg = 'SVG';\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Path = 'PATH';\nconst Rect = 'RECT';\nconst Line = 'LINE';\nconst FieldSet = 'FIELD_SET';\nconst TextInput = 'TEXT_INPUT';\nconst Select = 'SELECT';\nconst Checkbox = 'CHECKBOX';\nconst List = 'LIST';\nconst Stop = 'STOP';\nconst Defs = 'DEFS';\nconst Image = 'IMAGE';\nconst Tspan = 'TSPAN';\nconst Canvas = 'CANVAS';\nconst Circle = 'CIRCLE';\nconst Ellipse = 'ELLIPSE';\nconst Polygon = 'POLYGON';\nconst Document = 'DOCUMENT';\nconst Polyline = 'POLYLINE';\nconst ClipPath = 'CLIP_PATH';\nconst TextInstance = 'TEXT_INSTANCE';\nconst LinearGradient = 'LINEAR_GRADIENT';\nconst RadialGradient = 'RADIAL_GRADIENT';\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9wcmltaXRpdmVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVQIiwic291cmNlcyI6WyIvVXNlcnMvemltaW4vd2ViRGV2L3F1aWNraW52b2ljZS9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9wcmltaXRpdmVzL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBHID0gJ0cnO1xuY29uc3QgU3ZnID0gJ1NWRyc7XG5jb25zdCBWaWV3ID0gJ1ZJRVcnO1xuY29uc3QgVGV4dCA9ICdURVhUJztcbmNvbnN0IExpbmsgPSAnTElOSyc7XG5jb25zdCBQYWdlID0gJ1BBR0UnO1xuY29uc3QgTm90ZSA9ICdOT1RFJztcbmNvbnN0IFBhdGggPSAnUEFUSCc7XG5jb25zdCBSZWN0ID0gJ1JFQ1QnO1xuY29uc3QgTGluZSA9ICdMSU5FJztcbmNvbnN0IEZpZWxkU2V0ID0gJ0ZJRUxEX1NFVCc7XG5jb25zdCBUZXh0SW5wdXQgPSAnVEVYVF9JTlBVVCc7XG5jb25zdCBTZWxlY3QgPSAnU0VMRUNUJztcbmNvbnN0IENoZWNrYm94ID0gJ0NIRUNLQk9YJztcbmNvbnN0IExpc3QgPSAnTElTVCc7XG5jb25zdCBTdG9wID0gJ1NUT1AnO1xuY29uc3QgRGVmcyA9ICdERUZTJztcbmNvbnN0IEltYWdlID0gJ0lNQUdFJztcbmNvbnN0IFRzcGFuID0gJ1RTUEFOJztcbmNvbnN0IENhbnZhcyA9ICdDQU5WQVMnO1xuY29uc3QgQ2lyY2xlID0gJ0NJUkNMRSc7XG5jb25zdCBFbGxpcHNlID0gJ0VMTElQU0UnO1xuY29uc3QgUG9seWdvbiA9ICdQT0xZR09OJztcbmNvbnN0IERvY3VtZW50ID0gJ0RPQ1VNRU5UJztcbmNvbnN0IFBvbHlsaW5lID0gJ1BPTFlMSU5FJztcbmNvbnN0IENsaXBQYXRoID0gJ0NMSVBfUEFUSCc7XG5jb25zdCBUZXh0SW5zdGFuY2UgPSAnVEVYVF9JTlNUQU5DRSc7XG5jb25zdCBMaW5lYXJHcmFkaWVudCA9ICdMSU5FQVJfR1JBRElFTlQnO1xuY29uc3QgUmFkaWFsR3JhZGllbnQgPSAnUkFESUFMX0dSQURJRU5UJztcblxuZXhwb3J0IHsgQ2FudmFzLCBDaGVja2JveCwgQ2lyY2xlLCBDbGlwUGF0aCwgRGVmcywgRG9jdW1lbnQsIEVsbGlwc2UsIEZpZWxkU2V0LCBHLCBJbWFnZSwgTGluZSwgTGluZWFyR3JhZGllbnQsIExpbmssIExpc3QsIE5vdGUsIFBhZ2UsIFBhdGgsIFBvbHlnb24sIFBvbHlsaW5lLCBSYWRpYWxHcmFkaWVudCwgUmVjdCwgU2VsZWN0LCBTdG9wLCBTdmcsIFRleHQsIFRleHRJbnB1dCwgVGV4dEluc3RhbmNlLCBUc3BhbiwgVmlldyB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/primitives/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/reconciler/lib/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@react-pdf/reconciler/lib/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ index)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _reconciler_31_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reconciler-31.js */ \"(ssr)/./node_modules/@react-pdf/reconciler/lib/reconciler-31.js\");\n/* harmony import */ var _reconciler_23_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reconciler-23.js */ \"(ssr)/./node_modules/@react-pdf/reconciler/lib/reconciler-23.js\");\n\n\n\n\nconst isReact19 = react__WEBPACK_IMPORTED_MODULE_0__.version.startsWith('19');\nvar index = isReact19\n    ? _reconciler_31_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    : _reconciler_23_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9yZWNvbmNpbGVyL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBCO0FBQ2dDO0FBQ087O0FBRWpFLGtCQUFrQiwwQ0FBYTtBQUMvQjtBQUNBLE1BQU0seURBQXdCO0FBQzlCLE1BQU0seURBQStCOztBQUVUIiwic291cmNlcyI6WyIvVXNlcnMvemltaW4vd2ViRGV2L3F1aWNraW52b2ljZS9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9yZWNvbmNpbGVyL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNyZWF0ZVJlbmRlcmVyRm9yUmVhY3QxOSBmcm9tICcuL3JlY29uY2lsZXItMzEuanMnO1xuaW1wb3J0IGNyZWF0ZVJlbmRlcmVyRm9yUmVhY3QxOEFuZExlc3MgZnJvbSAnLi9yZWNvbmNpbGVyLTIzLmpzJztcblxuY29uc3QgaXNSZWFjdDE5ID0gUmVhY3QudmVyc2lvbi5zdGFydHNXaXRoKCcxOScpO1xudmFyIGluZGV4ID0gaXNSZWFjdDE5XG4gICAgPyBjcmVhdGVSZW5kZXJlckZvclJlYWN0MTlcbiAgICA6IGNyZWF0ZVJlbmRlcmVyRm9yUmVhY3QxOEFuZExlc3M7XG5cbmV4cG9ydCB7IGluZGV4IGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/reconciler/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/reconciler/lib/reconciler-23.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@react-pdf/reconciler/lib/reconciler-23.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var scheduler__WEBPACK_IMPORTED_MODULE_2___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ s)\n/* harmony export */ });\n/* harmony import */ var object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! object-assign */ \"(ssr)/./node_modules/object-assign/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/scheduler/index.js\");\nfunction r(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}function l(e){if(e.__esModule)return e;var t=e.default;if(\"function\"==typeof t){var n=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,\"__esModule\",{value:!0}),Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),n}var i,a={exports:{}},u=l(/*#__PURE__*/ (scheduler__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (scheduler__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(scheduler__WEBPACK_IMPORTED_MODULE_2__, 2))));(\n/** @license React v0.23.0\n * react-reconciler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ni=a).exports=function n(r){var l=object_assign__WEBPACK_IMPORTED_MODULE_0__,a=react__WEBPACK_IMPORTED_MODULE_1__,o=u;function f(e){for(var t=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+e,n=1;n<arguments.length;n++)t+=\"&args[]=\"+encodeURIComponent(arguments[n]);return\"Minified React error #\"+e+\"; visit \"+t+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var c=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;c.hasOwnProperty(\"ReactCurrentDispatcher\")||(c.ReactCurrentDispatcher={current:null}),c.hasOwnProperty(\"ReactCurrentBatchConfig\")||(c.ReactCurrentBatchConfig={suspense:null});var s=\"function\"==typeof Symbol&&Symbol.for,d=s?Symbol.for(\"react.element\"):60103,p=s?Symbol.for(\"react.portal\"):60106,m=s?Symbol.for(\"react.fragment\"):60107,h=s?Symbol.for(\"react.strict_mode\"):60108,g=s?Symbol.for(\"react.profiler\"):60114,b=s?Symbol.for(\"react.provider\"):60109,y=s?Symbol.for(\"react.context\"):60110,v=s?Symbol.for(\"react.concurrent_mode\"):60111,T=s?Symbol.for(\"react.forward_ref\"):60112,x=s?Symbol.for(\"react.suspense\"):60113,E=s?Symbol.for(\"react.suspense_list\"):60120,k=s?Symbol.for(\"react.memo\"):60115,S=s?Symbol.for(\"react.lazy\"):60116,C=\"function\"==typeof Symbol&&Symbol.iterator;function w(e){return null===e||\"object\"!=typeof e?null:\"function\"==typeof(e=C&&e[C]||e[\"@@iterator\"])?e:null}function z(e){if(null==e)return null;if(\"function\"==typeof e)return e.displayName||e.name||null;if(\"string\"==typeof e)return e;switch(e){case m:return\"Fragment\";case p:return\"Portal\";case g:return\"Profiler\";case h:return\"StrictMode\";case x:return\"Suspense\";case E:return\"SuspenseList\"}if(\"object\"==typeof e)switch(e.$$typeof){case y:return\"Context.Consumer\";case b:return\"Context.Provider\";case T:var t=e.render;return t=t.displayName||t.name||\"\",e.displayName||(\"\"!==t?\"ForwardRef(\"+t+\")\":\"ForwardRef\");case k:return z(e.type);case S:if(e=1===e._status?e._result:null)return z(e)}return null}function P(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function _(e){if(P(e)!==e)throw Error(f(188))}function N(e){var t=e.alternate;if(!t){if(null===(t=P(e)))throw Error(f(188));return t!==e?null:e}for(var n=e,r=t;;){var l=n.return;if(null===l)break;var i=l.alternate;if(null===i){if(null!==(r=l.return)){n=r;continue}break}if(l.child===i.child){for(i=l.child;i;){if(i===n)return _(l),e;if(i===r)return _(l),t;i=i.sibling}throw Error(f(188))}if(n.return!==r.return)n=l,r=i;else{for(var a=!1,u=l.child;u;){if(u===n){a=!0,n=l,r=i;break}if(u===r){a=!0,r=l,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=l;break}if(u===r){a=!0,r=i,n=l;break}u=u.sibling}if(!a)throw Error(f(189))}}if(n.alternate!==r)throw Error(f(190))}if(3!==n.tag)throw Error(f(188));return n.stateNode.current===n?e:t}function U(e){if(!(e=N(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var R=r.getPublicInstance,I=r.getRootHostContext,M=r.getChildHostContext,F=r.prepareForCommit,Q=r.resetAfterCommit,D=r.createInstance,W=r.appendInitialChild,j=r.finalizeInitialChildren,O=r.prepareUpdate,B=r.shouldSetTextContent,H=r.createTextInstance,A=null,L=null,$=r.noTimeout,q=!0,V=null,K=r.appendChild,G=r.appendChildToContainer,Y=r.commitTextUpdate,J=null,X=r.commitUpdate,Z=r.insertBefore,ee=null,te=r.removeChild,ne=r.removeChildFromContainer,re=r.resetTextContent,le=null,ie=null,ae=null,ue=null,oe=null,fe=null,ce=/^(.*)[\\\\\\/]/;function se(e){var t=\"\";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n=\"\";break e;default:var r=e._debugOwner,l=e._debugSource,i=z(e.type);n=null,r&&(n=z(r.type)),r=i,i=\"\",l?i=\" (at \"+l.fileName.replace(ce,\"\")+\":\"+l.lineNumber+\")\":n&&(i=\" (created by \"+n+\")\"),n=\"\\n    in \"+(r||\"Unknown\")+i}t+=n,e=e.return}while(e);return t}var de=[],pe=-1;function me(e){0>pe||(e.current=de[pe],de[pe]=null,pe--)}function he(e,t){pe++,de[pe]=e.current,e.current=t}var ge={},be={current:ge},ye={current:!1},ve=ge;function Te(e,t){var n=e.type.contextTypes;if(!n)return ge;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l,i={};for(l in n)i[l]=t[l];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function xe(e){return null!=(e=e.childContextTypes)}function Ee(e){me(ye),me(be)}function ke(e){me(ye),me(be)}function Se(e,t,n){if(be.current!==ge)throw Error(f(168));he(be,t),he(ye,n)}function Ce(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,\"function\"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(f(108,z(t)||\"Unknown\",i));return l({},n,{},r)}function we(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||ge,ve=be.current,he(be,t),he(ye,ye.current),!0}function ze(e,t,n){var r=e.stateNode;if(!r)throw Error(f(169));n?(t=Ce(e,t,ve),r.__reactInternalMemoizedMergedChildContext=t,me(ye),me(be),he(be,t)):me(ye),he(ye,n)}var Pe=o.unstable_runWithPriority,_e=o.unstable_scheduleCallback,Ne=o.unstable_cancelCallback,Ue=o.unstable_shouldYield,Re=o.unstable_requestPaint,Ie=o.unstable_now,Me=o.unstable_getCurrentPriorityLevel,Fe=o.unstable_ImmediatePriority,Qe=o.unstable_UserBlockingPriority,De=o.unstable_NormalPriority,We=o.unstable_LowPriority,je=o.unstable_IdlePriority,Oe={},Be=void 0!==Re?Re:function(){},He=null,Ae=null,Le=!1,$e=Ie(),qe=1e4>$e?Ie:function(){return Ie()-$e};function Ve(){switch(Me()){case Fe:return 99;case Qe:return 98;case De:return 97;case We:return 96;case je:return 95;default:throw Error(f(332))}}function Ke(e){switch(e){case 99:return Fe;case 98:return Qe;case 97:return De;case 96:return We;case 95:return je;default:throw Error(f(332))}}function Ge(e,t){return e=Ke(e),Pe(e,t)}function Ye(e,t,n){return e=Ke(e),_e(e,t,n)}function Je(e){return null===He?(He=[e],Ae=_e(Fe,Ze)):He.push(e),Oe}function Xe(){if(null!==Ae){var e=Ae;Ae=null,Ne(e)}Ze()}function Ze(){if(!Le&&null!==He){Le=!0;var e=0;try{var t=He;Ge(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),He=null}catch(t){throw null!==He&&(He=He.slice(e+1)),_e(Fe,Xe),t}finally{Le=!1}}}var et=3;function tt(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}var nt=\"function\"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},rt=Object.prototype.hasOwnProperty;function lt(e,t){if(nt(e,t))return!0;if(\"object\"!=typeof e||null===e||\"object\"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!rt.call(t,n[r])||!nt(e[n[r]],t[n[r]]))return!1;return!0}function it(e,t){if(e&&e.defaultProps)for(var n in t=l({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var at={current:null},ut=null,ot=null,ft=null;function ct(){ft=ot=ut=null}function st(e,t){var n=e.type._context;he(at,n._currentValue2),n._currentValue2=t}function dt(e){var t=at.current;me(at),(e=e.type._context)._currentValue2=t}function pt(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function mt(e,t){ut=e,ft=ot=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(On=!0),e.firstContext=null)}function ht(e,t){if(ft!==e&&!1!==t&&0!==t)if(\"number\"==typeof t&&1073741823!==t||(ft=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ot){if(null===ut)throw Error(f(308));ot=t,ut.dependencies={expirationTime:0,firstContext:t,responders:null}}else ot=ot.next=t;return e._currentValue2}var gt=!1;function bt(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function yt(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function vt(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Tt(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function xt(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,l=null;null===r&&(r=e.updateQueue=bt(e.memoizedState))}else r=e.updateQueue,l=n.updateQueue,null===r?null===l?(r=e.updateQueue=bt(e.memoizedState),l=n.updateQueue=bt(n.memoizedState)):r=e.updateQueue=yt(l):null===l&&(l=n.updateQueue=yt(r));null===l||r===l?Tt(r,t):null===r.lastUpdate||null===l.lastUpdate?(Tt(r,t),Tt(l,t)):(Tt(r,t),l.lastUpdate=t)}function Et(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=bt(e.memoizedState):kt(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function kt(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=yt(t)),t}function St(e,t,n,r,i,a){switch(n.tag){case 1:return\"function\"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-4097&e.effectTag|64;case 0:if(null==(i=\"function\"==typeof(e=n.payload)?e.call(a,r,i):e))break;return l({},r,i);case 2:gt=!0}return r}function Ct(e,t,n,r,l){gt=!1;for(var i=(t=kt(e,t)).baseState,a=null,u=0,o=t.firstUpdate,f=i;null!==o;){var c=o.expirationTime;c<l?(null===a&&(a=o,i=f),u<c&&(u=c)):(El(c,o.suspenseConfig),f=St(e,0,o,f,n,r),null!==o.callback&&(e.effectTag|=32,o.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=o:(t.lastEffect.nextEffect=o,t.lastEffect=o))),o=o.next}for(c=null,o=t.firstCapturedUpdate;null!==o;){var s=o.expirationTime;s<l?(null===c&&(c=o,null===a&&(i=f)),u<s&&(u=s)):(f=St(e,0,o,f,n,r),null!==o.callback&&(e.effectTag|=32,o.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=o:(t.lastCapturedEffect.nextEffect=o,t.lastCapturedEffect=o))),o=o.next}null===a&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===c&&(i=f),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=c,kl(u),e.expirationTime=u,e.memoizedState=f}function wt(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),zt(t.firstEffect,n),t.firstEffect=t.lastEffect=null,zt(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function zt(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;if(\"function\"!=typeof n)throw Error(f(191,n));n.call(r)}e=e.nextEffect}}var Pt=c.ReactCurrentBatchConfig,_t=(new a.Component).refs;function Nt(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:l({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Ut={isMounted:function(e){return!!(e=e._reactInternalFiber)&&P(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=cl(),l=Pt.suspense;(l=vt(r=sl(r,e,l),l)).payload=t,null!=n&&(l.callback=n),xt(e,l),dl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=cl(),l=Pt.suspense;(l=vt(r=sl(r,e,l),l)).tag=1,l.payload=t,null!=n&&(l.callback=n),xt(e,l),dl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=cl(),r=Pt.suspense;(r=vt(n=sl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),xt(e,r),dl(e,n)}};function Rt(e,t,n,r,l,i,a){return\"function\"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!(t.prototype&&t.prototype.isPureReactComponent&&lt(n,r)&&lt(l,i))}function It(e,t,n){var r=!1,l=ge,i=t.contextType;return\"object\"==typeof i&&null!==i?i=ht(i):(l=xe(t)?ve:be.current,i=(r=null!=(r=t.contextTypes))?Te(e,l):ge),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ut,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=i),t}function Mt(e,t,n,r){e=t.state,\"function\"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),\"function\"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ut.enqueueReplaceState(t,t.state,null)}function Ft(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=_t;var i=t.contextType;\"object\"==typeof i&&null!==i?l.context=ht(i):(i=xe(t)?ve:be.current,l.context=Te(e,i)),null!==(i=e.updateQueue)&&(Ct(e,i,n,l,r),l.state=e.memoizedState),\"function\"==typeof(i=t.getDerivedStateFromProps)&&(Nt(e,t,i,n),l.state=e.memoizedState),\"function\"==typeof t.getDerivedStateFromProps||\"function\"==typeof l.getSnapshotBeforeUpdate||\"function\"!=typeof l.UNSAFE_componentWillMount&&\"function\"!=typeof l.componentWillMount||(t=l.state,\"function\"==typeof l.componentWillMount&&l.componentWillMount(),\"function\"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&Ut.enqueueReplaceState(l,l.state,null),null!==(i=e.updateQueue)&&(Ct(e,i,n,l,r),l.state=e.memoizedState)),\"function\"==typeof l.componentDidMount&&(e.effectTag|=4)}var Qt=Array.isArray;function Dt(e,t,n){if(null!==(e=n.ref)&&\"function\"!=typeof e&&\"object\"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(f(309));var r=n.stateNode}if(!r)throw Error(f(147,e));var l=\"\"+e;return null!==t&&null!==t.ref&&\"function\"==typeof t.ref&&t.ref._stringRef===l?t.ref:(t=function(e){var t=r.refs;t===_t&&(t=r.refs={}),null===e?delete t[l]:t[l]=e},t._stringRef=l,t)}if(\"string\"!=typeof e)throw Error(f(284));if(!n._owner)throw Error(f(290,e))}return e}function Wt(e,t){if(\"textarea\"!==e.type)throw Error(f(31,\"[object Object]\"===Object.prototype.toString.call(t)?\"object with keys {\"+Object.keys(t).join(\", \")+\"}\":t,\"\"))}function jt(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function l(e,t,n){return(e=Al(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=ql(n,e.mode,r)).return=e,t):((t=l(t,n)).return=e,t)}function o(e,t,n,r){return null!==t&&t.elementType===n.type?((r=l(t,n.props)).ref=Dt(e,t,n),r.return=e,r):((r=Ll(n.type,n.key,n.props,null,e.mode,r)).ref=Dt(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vl(n,e.mode,r)).return=e,t):((t=l(t,n.children||[])).return=e,t)}function s(e,t,n,r,i){return null===t||7!==t.tag?((t=$l(n,e.mode,r,i)).return=e,t):((t=l(t,n)).return=e,t)}function h(e,t,n){if(\"string\"==typeof t||\"number\"==typeof t)return(t=ql(\"\"+t,e.mode,n)).return=e,t;if(\"object\"==typeof t&&null!==t){switch(t.$$typeof){case d:return(n=Ll(t.type,t.key,t.props,null,e.mode,n)).ref=Dt(e,null,t),n.return=e,n;case p:return(t=Vl(t,e.mode,n)).return=e,t}if(Qt(t)||w(t))return(t=$l(t,e.mode,n,null)).return=e,t;Wt(e,t)}return null}function g(e,t,n,r){var l=null!==t?t.key:null;if(\"string\"==typeof n||\"number\"==typeof n)return null!==l?null:u(e,t,\"\"+n,r);if(\"object\"==typeof n&&null!==n){switch(n.$$typeof){case d:return n.key===l?n.type===m?s(e,t,n.props.children,r,l):o(e,t,n,r):null;case p:return n.key===l?c(e,t,n,r):null}if(Qt(n)||w(n))return null!==l?null:s(e,t,n,r,null);Wt(e,n)}return null}function b(e,t,n,r,l){if(\"string\"==typeof r||\"number\"==typeof r)return u(t,e=e.get(n)||null,\"\"+r,l);if(\"object\"==typeof r&&null!==r){switch(r.$$typeof){case d:return e=e.get(null===r.key?n:r.key)||null,r.type===m?s(t,e,r.props.children,l,r.key):o(t,e,r,l);case p:return c(t,e=e.get(null===r.key?n:r.key)||null,r,l)}if(Qt(r)||w(r))return s(t,e=e.get(n)||null,r,l,null);Wt(t,r)}return null}function y(l,a,u,o){for(var f=null,c=null,s=a,d=a=0,p=null;null!==s&&d<u.length;d++){s.index>d?(p=s,s=null):p=s.sibling;var m=g(l,s,u[d],o);if(null===m){null===s&&(s=p);break}e&&s&&null===m.alternate&&t(l,s),a=i(m,a,d),null===c?f=m:c.sibling=m,c=m,s=p}if(d===u.length)return n(l,s),f;if(null===s){for(;d<u.length;d++)null!==(s=h(l,u[d],o))&&(a=i(s,a,d),null===c?f=s:c.sibling=s,c=s);return f}for(s=r(l,s);d<u.length;d++)null!==(p=b(s,l,d,u[d],o))&&(e&&null!==p.alternate&&s.delete(null===p.key?d:p.key),a=i(p,a,d),null===c?f=p:c.sibling=p,c=p);return e&&s.forEach((function(e){return t(l,e)})),f}function v(l,a,u,o){var c=w(u);if(\"function\"!=typeof c)throw Error(f(150));if(null==(u=c.call(u)))throw Error(f(151));for(var s=c=null,d=a,p=a=0,m=null,y=u.next();null!==d&&!y.done;p++,y=u.next()){d.index>p?(m=d,d=null):m=d.sibling;var v=g(l,d,y.value,o);if(null===v){null===d&&(d=m);break}e&&d&&null===v.alternate&&t(l,d),a=i(v,a,p),null===s?c=v:s.sibling=v,s=v,d=m}if(y.done)return n(l,d),c;if(null===d){for(;!y.done;p++,y=u.next())null!==(y=h(l,y.value,o))&&(a=i(y,a,p),null===s?c=y:s.sibling=y,s=y);return c}for(d=r(l,d);!y.done;p++,y=u.next())null!==(y=b(d,l,p,y.value,o))&&(e&&null!==y.alternate&&d.delete(null===y.key?p:y.key),a=i(y,a,p),null===s?c=y:s.sibling=y,s=y);return e&&d.forEach((function(e){return t(l,e)})),c}return function(e,r,i,u){var o=\"object\"==typeof i&&null!==i&&i.type===m&&null===i.key;o&&(i=i.props.children);var c=\"object\"==typeof i&&null!==i;if(c)switch(i.$$typeof){case d:e:{for(c=i.key,o=r;null!==o;){if(o.key===c){if(7===o.tag?i.type===m:o.elementType===i.type){n(e,o.sibling),(r=l(o,i.type===m?i.props.children:i.props)).ref=Dt(e,o,i),r.return=e,e=r;break e}n(e,o);break}t(e,o),o=o.sibling}i.type===m?((r=$l(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Ll(i.type,i.key,i.props,null,e.mode,u)).ref=Dt(e,r,i),u.return=e,e=u)}return a(e);case p:e:{for(o=i.key;null!==r;){if(r.key===o){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=l(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vl(i,e.mode,u)).return=e,e=r}return a(e)}if(\"string\"==typeof i||\"number\"==typeof i)return i=\"\"+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=l(r,i)).return=e,e=r):(n(e,r),(r=ql(i,e.mode,u)).return=e,e=r),a(e);if(Qt(i))return y(e,r,i,u);if(w(i))return v(e,r,i,u);if(c&&Wt(e,i),void 0===i&&!o)switch(e.tag){case 1:case 0:throw e=e.type,Error(f(152,e.displayName||e.name||\"Component\"))}return n(e,r)}}var Ot=jt(!0),Bt=jt(!1),Ht={},At={current:Ht},Lt={current:Ht},$t={current:Ht};function qt(e){if(e===Ht)throw Error(f(174));return e}function Vt(e,t){he($t,t),he(Lt,e),he(At,Ht),t=I(t),me(At),he(At,t)}function Kt(e){me(At),me(Lt),me($t)}function Gt(e){var t=qt($t.current),n=qt(At.current);n!==(t=M(n,e.type,t))&&(he(Lt,e),he(At,t))}function Yt(e){Lt.current===e&&(me(At),me(Lt))}var Jt={current:0};function Xt(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||oe(n)||fe(n)))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Zt(e,t){return{responder:e,props:t}}var en=c.ReactCurrentDispatcher,tn=c.ReactCurrentBatchConfig,nn=0,rn=null,ln=null,an=null,un=null,on=null,fn=null,cn=0,sn=null,dn=0,pn=!1,mn=null,hn=0;function gn(){throw Error(f(321))}function bn(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!nt(e[n],t[n]))return!1;return!0}function yn(e,t,n,r,l,i){if(nn=i,rn=t,an=null!==e?e.memoizedState:null,en.current=null===an?Dn:Wn,t=n(r,l),pn){do{pn=!1,hn+=1,an=null!==e?e.memoizedState:null,fn=un,sn=on=ln=null,en.current=Wn,t=n(r,l)}while(pn);mn=null,hn=0}if(en.current=Qn,(e=rn).memoizedState=un,e.expirationTime=cn,e.updateQueue=sn,e.effectTag|=dn,e=null!==ln&&null!==ln.next,nn=0,fn=on=un=an=ln=rn=null,cn=0,sn=null,dn=0,e)throw Error(f(300));return t}function vn(){en.current=Qn,nn=0,fn=on=un=an=ln=rn=null,cn=0,sn=null,dn=0,pn=!1,mn=null,hn=0}function Tn(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===on?un=on=e:on=on.next=e,on}function xn(){if(null!==fn)fn=(on=fn).next,an=null!==(ln=an)?ln.next:null;else{if(null===an)throw Error(f(310));var e={memoizedState:(ln=an).memoizedState,baseState:ln.baseState,queue:ln.queue,baseUpdate:ln.baseUpdate,next:null};on=null===on?un=e:on.next=e,an=ln.next}return on}function En(e,t){return\"function\"==typeof t?t(e):t}function kn(e){var t=xn(),n=t.queue;if(null===n)throw Error(f(311));if(n.lastRenderedReducer=e,0<hn){var r=n.dispatch;if(null!==mn){var l=mn.get(n);if(void 0!==l){mn.delete(n);var i=t.memoizedState;do{i=e(i,l.action),l=l.next}while(null!==l);return nt(i,t.memoizedState)||(On=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var a=t.baseUpdate;if(i=t.baseState,null!==a?(null!==r&&(r.next=null),r=a.next):r=null!==r?r.next:null,null!==r){var u=l=null,o=r,c=!1;do{var s=o.expirationTime;s<nn?(c||(c=!0,u=a,l=i),s>cn&&kl(cn=s)):(El(s,o.suspenseConfig),i=o.eagerReducer===e?o.eagerState:e(i,o.action)),a=o,o=o.next}while(null!==o&&o!==r);c||(u=a,l=i),nt(i,t.memoizedState)||(On=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=l,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function Sn(e){var t=Tn();return\"function\"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:En,lastRenderedState:e}).dispatch=Fn.bind(null,rn,e),[t.memoizedState,e]}function Cn(e){return kn(En)}function wn(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===sn?(sn={lastEffect:null}).lastEffect=e.next=e:null===(t=sn.lastEffect)?sn.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,sn.lastEffect=e),e}function zn(e,t,n,r){var l=Tn();dn|=e,l.memoizedState=wn(t,n,void 0,void 0===r?null:r)}function Pn(e,t,n,r){var l=xn();r=void 0===r?null:r;var i=void 0;if(null!==ln){var a=ln.memoizedState;if(i=a.destroy,null!==r&&bn(r,a.deps))return void wn(0,n,i,r)}dn|=e,l.memoizedState=wn(t,n,i,r)}function _n(e,t){return zn(516,192,e,t)}function Nn(e,t){return Pn(516,192,e,t)}function Un(e,t){return\"function\"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Rn(){}function In(e,t){return Tn().memoizedState=[e,void 0===t?null:t],e}function Mn(e,t){var n=xn();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&bn(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Fn(e,t,n){if(!(25>hn))throw Error(f(301));var r=e.alternate;if(e===rn||null!==r&&r===rn)if(pn=!0,e={expirationTime:nn,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===mn&&(mn=new Map),void 0===(n=mn.get(t)))mn.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var l=cl(),i=Pt.suspense;i={expirationTime:l=sl(l,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var a=t.last;if(null===a)i.next=i;else{var u=a.next;null!==u&&(i.next=u),a.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var o=t.lastRenderedState,c=r(o,n);if(i.eagerReducer=r,i.eagerState=c,nt(c,o))return}catch(e){}dl(e,l)}}var Qn={readContext:ht,useCallback:gn,useContext:gn,useEffect:gn,useImperativeHandle:gn,useLayoutEffect:gn,useMemo:gn,useReducer:gn,useRef:gn,useState:gn,useDebugValue:gn,useResponder:gn,useDeferredValue:gn,useTransition:gn},Dn={readContext:ht,useCallback:In,useContext:ht,useEffect:_n,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,zn(4,36,Un.bind(null,t,e),n)},useLayoutEffect:function(e,t){return zn(4,36,e,t)},useMemo:function(e,t){var n=Tn();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Tn();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Fn.bind(null,rn,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Tn().memoizedState=e},useState:Sn,useDebugValue:Rn,useResponder:Zt,useDeferredValue:function(e,t){var n=Sn(e),r=n[0],l=n[1];return _n((function(){o.unstable_next((function(){var n=tn.suspense;tn.suspense=void 0===t?null:t;try{l(e)}finally{tn.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=Sn(!1),n=t[0],r=t[1];return[In((function(t){r(!0),o.unstable_next((function(){var n=tn.suspense;tn.suspense=void 0===e?null:e;try{r(!1),t()}finally{tn.suspense=n}}))}),[e,n]),n]}},Wn={readContext:ht,useCallback:Mn,useContext:ht,useEffect:Nn,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Pn(4,36,Un.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Pn(4,36,e,t)},useMemo:function(e,t){var n=xn();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&bn(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:kn,useRef:function(){return xn().memoizedState},useState:Cn,useDebugValue:Rn,useResponder:Zt,useDeferredValue:function(e,t){var n=Cn(),r=n[0],l=n[1];return Nn((function(){o.unstable_next((function(){var n=tn.suspense;tn.suspense=void 0===t?null:t;try{l(e)}finally{tn.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=Cn(),n=t[0],r=t[1];return[Mn((function(t){r(!0),o.unstable_next((function(){var n=tn.suspense;tn.suspense=void 0===e?null:e;try{r(!1),t()}finally{tn.suspense=n}}))}),[e,n]),n]}},jn=c.ReactCurrentOwner,On=!1;function Bn(e,t,n,r){t.child=null===e?Bt(t,null,n,r):Ot(t,e.child,n,r)}function Hn(e,t,n,r,l){n=n.render;var i=t.ref;return mt(t,l),r=yn(e,t,n,r,i,l),null===e||On?(t.effectTag|=1,Bn(e,t,r,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),ir(e,t,l))}function An(e,t,n,r,l,i){if(null===e){var a=n.type;return\"function\"!=typeof a||Hl(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ll(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ln(e,t,a,r,l,i))}return a=e.child,l<i&&(l=a.memoizedProps,(n=null!==(n=n.compare)?n:lt)(l,r)&&e.ref===t.ref)?ir(e,t,i):(t.effectTag|=1,(e=Al(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ln(e,t,n,r,l,i){return null!==e&&lt(e.memoizedProps,r)&&e.ref===t.ref&&(On=!1,l<i)?ir(e,t,i):qn(e,t,n,r,i)}function $n(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function qn(e,t,n,r,l){var i=xe(n)?ve:be.current;return i=Te(t,i),mt(t,l),n=yn(e,t,n,r,i,l),null===e||On?(t.effectTag|=1,Bn(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),ir(e,t,l))}function Vn(e,t,n,r,l){if(xe(n)){var i=!0;we(t)}else i=!1;if(mt(t,l),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),It(t,n,r),Ft(t,n,r,l),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var o=a.context,f=n.contextType;f=\"object\"==typeof f&&null!==f?ht(f):Te(t,f=xe(n)?ve:be.current);var c=n.getDerivedStateFromProps,s=\"function\"==typeof c||\"function\"==typeof a.getSnapshotBeforeUpdate;s||\"function\"!=typeof a.UNSAFE_componentWillReceiveProps&&\"function\"!=typeof a.componentWillReceiveProps||(u!==r||o!==f)&&Mt(t,a,r,f),gt=!1;var d=t.memoizedState;o=a.state=d;var p=t.updateQueue;null!==p&&(Ct(t,p,r,a,l),o=t.memoizedState),u!==r||d!==o||ye.current||gt?(\"function\"==typeof c&&(Nt(t,n,c,r),o=t.memoizedState),(u=gt||Rt(t,n,u,r,d,o,f))?(s||\"function\"!=typeof a.UNSAFE_componentWillMount&&\"function\"!=typeof a.componentWillMount||(\"function\"==typeof a.componentWillMount&&a.componentWillMount(),\"function\"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),\"function\"==typeof a.componentDidMount&&(t.effectTag|=4)):(\"function\"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=o),a.props=r,a.state=o,a.context=f,r=u):(\"function\"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,u=t.memoizedProps,a.props=t.type===t.elementType?u:it(t.type,u),o=a.context,f=\"object\"==typeof(f=n.contextType)&&null!==f?ht(f):Te(t,f=xe(n)?ve:be.current),(s=\"function\"==typeof(c=n.getDerivedStateFromProps)||\"function\"==typeof a.getSnapshotBeforeUpdate)||\"function\"!=typeof a.UNSAFE_componentWillReceiveProps&&\"function\"!=typeof a.componentWillReceiveProps||(u!==r||o!==f)&&Mt(t,a,r,f),gt=!1,o=t.memoizedState,d=a.state=o,null!==(p=t.updateQueue)&&(Ct(t,p,r,a,l),d=t.memoizedState),u!==r||o!==d||ye.current||gt?(\"function\"==typeof c&&(Nt(t,n,c,r),d=t.memoizedState),(c=gt||Rt(t,n,u,r,o,d,f))?(s||\"function\"!=typeof a.UNSAFE_componentWillUpdate&&\"function\"!=typeof a.componentWillUpdate||(\"function\"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,f),\"function\"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,f)),\"function\"==typeof a.componentDidUpdate&&(t.effectTag|=4),\"function\"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):(\"function\"!=typeof a.componentDidUpdate||u===e.memoizedProps&&o===e.memoizedState||(t.effectTag|=4),\"function\"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&o===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=f,r=c):(\"function\"!=typeof a.componentDidUpdate||u===e.memoizedProps&&o===e.memoizedState||(t.effectTag|=4),\"function\"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&o===e.memoizedState||(t.effectTag|=256),r=!1);return Kn(e,t,n,r,i,l)}function Kn(e,t,n,r,l,i){$n(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return l&&ze(t,n,!1),ir(e,t,i);r=t.stateNode,jn.current=t;var u=a&&\"function\"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Ot(t,e.child,null,i),t.child=Ot(t,null,u,i)):Bn(e,t,u,i),t.memoizedState=r.state,l&&ze(t,n,!0),t.child}function Gn(e){var t=e.stateNode;t.pendingContext?Se(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Se(0,t.context,!1),Vt(e,t.containerInfo)}var Yn,Jn,Xn,Zn,er={dehydrated:null,retryTime:0};function tr(e,t,n){var r,l=t.mode,i=t.pendingProps,a=Jt.current,u=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(u=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),he(Jt,1&a),null===e){if(i.fallback,u){if(u=i.fallback,(i=$l(null,l,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=$l(u,l,n,null)).return=t,i.sibling=n,t.memoizedState=er,t.child=i,n}return l=i.children,t.memoizedState=null,t.child=Bt(t,null,l,n)}if(null!==e.memoizedState){if(l=(e=e.child).sibling,u){if(i=i.fallback,(n=Al(e,e.pendingProps)).return=t,0==(2&t.mode)&&(u=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=u;null!==u;)u.return=n,u=u.sibling;return(l=Al(l,i,l.expirationTime)).return=t,n.sibling=l,n.childExpirationTime=0,t.memoizedState=er,t.child=n,l}return n=Ot(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,u){if(u=i.fallback,(i=$l(null,l,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=$l(u,l,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=er,t.child=i,n}return t.memoizedState=null,t.child=Ot(t,e,i.children,n)}function nr(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),pt(e.return,t)}function rr(e,t,n,r,l,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:l,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=l,a.lastEffect=i)}function lr(e,t,n){var r=t.pendingProps,l=r.revealOrder,i=r.tail;if(Bn(e,t,r.children,n),0!=(2&(r=Jt.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&nr(e,n);else if(19===e.tag)nr(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(he(Jt,r),0==(2&t.mode))t.memoizedState=null;else switch(l){case\"forwards\":for(n=t.child,l=null;null!==n;)null!==(e=n.alternate)&&null===Xt(e)&&(l=n),n=n.sibling;null===(n=l)?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),rr(t,!1,l,n,i,t.lastEffect);break;case\"backwards\":for(n=null,l=t.child,t.child=null;null!==l;){if(null!==(e=l.alternate)&&null===Xt(e)){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}rr(t,!0,n,null,i,t.lastEffect);break;case\"together\":rr(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ir(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&kl(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(f(153));if(null!==t.child){for(n=Al(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Al(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function ar(e){e.effectTag|=4}function ur(e,t){switch(e.tailMode){case\"hidden\":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case\"collapsed\":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function or(e){switch(e.tag){case 1:xe(e.type)&&Ee();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Kt(),ke(),0!=(64&(t=e.effectTag)))throw Error(f(285));return e.effectTag=-4097&t|64,e;case 5:return Yt(e),null;case 13:return me(Jt),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return me(Jt),null;case 4:return Kt(),null;case 10:return dt(e),null;default:return null}}function fr(e,t){return{value:e,source:t,stack:se(t)}}Yn=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)W(e,n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Jn=function(){},Xn=function(e,t,n,r,l){if((e=e.memoizedProps)!==r){var i=t.stateNode,a=qt(At.current);n=O(i,n,e,r,l,a),(t.updateQueue=n)&&ar(t)}},Zn=function(e,t,n,r){n!==r&&ar(t)};var cr=\"function\"==typeof WeakSet?WeakSet:Set;function sr(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=se(n)),null!==n&&z(n.type),t=t.value,null!==e&&1===e.tag&&z(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function dr(e){var t=e.ref;if(null!==t)if(\"function\"==typeof t)try{t(null)}catch(t){Fl(e,t)}else t.current=null}function pr(e,t){switch(t.tag){case 0:case 11:case 15:mr(2,0,t);break;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:it(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(f(163))}}function mr(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var l=r.destroy;r.destroy=void 0,void 0!==l&&l()}0!=(r.tag&t)&&(l=r.create,r.destroy=l()),r=r.next}while(r!==n)}}function hr(e,t,n){switch(\"function\"==typeof jl&&jl(t),t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ge(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var l=t;try{n()}catch(e){Fl(l,e)}}e=e.next}while(e!==r)}))}break;case 1:dr(t),\"function\"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Fl(e,t)}}(t,n);break;case 5:dr(t);break;case 4:Tr(e,t,n)}}function gr(e,t,n){for(var r=t;;)if(hr(e,r,n),null===r.child||4===r.tag){if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}else r.child.return=r,r=r.child}function br(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,null!==t&&br(t)}function yr(e){return 5===e.tag||3===e.tag||4===e.tag}function vr(e){e:{for(var t=e.return;null!==t;){if(yr(t)){var n=t;break e}t=t.return}throw Error(f(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(f(161))}16&n.effectTag&&(re(t),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||yr(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var l=e;;){var i=5===l.tag||6===l.tag;if(i)i=i?l.stateNode:l.stateNode.instance,n?r?ee(t,i,n):Z(t,i,n):r?G(t,i):K(t,i);else if(4!==l.tag&&null!==l.child){l.child.return=l,l=l.child;continue}if(l===e)break;for(;null===l.sibling;){if(null===l.return||l.return===e)return;l=l.return}l.sibling.return=l.return,l=l.sibling}}function Tr(e,t,n){for(var r,l,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(f(160));switch(r=a.stateNode,a.tag){case 5:l=!1;break e;case 3:case 4:r=r.containerInfo,l=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag)gr(e,i,n),l?ne(r,i.stateNode):te(r,i.stateNode);else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,l=!0,i.child.return=i,i=i.child;continue}}else if(hr(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function xr(e,t){switch(t.tag){case 0:case 11:case 14:case 15:mr(4,8,t);break;case 1:case 3:case 12:case 17:case 20:case 21:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var l=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&X(n,i,l,e,r,t)}break;case 6:if(null===t.stateNode)throw Error(f(162));n=t.memoizedProps,Y(t.stateNode,null!==e?e.memoizedProps:n,n);break;case 13:!function(e){var t=e;if(null===e.memoizedState)var n=!1;else n=!0,t=e.child,Jr=qe();if(null!==t)e:if(e=t,q)for(t=e;;){if(5===t.tag){var r=t.stateNode;n?le(r):ae(t.stateNode,t.memoizedProps)}else if(6===t.tag)r=t.stateNode,n?ie(r):ue(r,t.memoizedProps);else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(r=t.child.sibling).return=t,t=r;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===e)break e;for(;null===t.sibling;){if(null===t.return||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}}(t),Er(t);break;case 19:Er(t);break;default:throw Error(f(163))}}function Er(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new cr),t.forEach((function(t){var r=Dl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var kr=\"function\"==typeof WeakMap?WeakMap:Map;function Sr(e,t,n){(n=vt(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){el||(el=!0,tl=r),sr(e,t)},n}function Cr(e,t,n){(n=vt(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if(\"function\"==typeof r){var l=t.value;n.payload=function(){return sr(e,t),r(l)}}var i=e.stateNode;return null!==i&&\"function\"==typeof i.componentDidCatch&&(n.callback=function(){\"function\"!=typeof r&&(null===nl?nl=new Set([this]):nl.add(this),sr(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:\"\"})}),n}var wr,zr=Math.ceil,Pr=c.ReactCurrentDispatcher,_r=c.ReactCurrentOwner,Nr=0,Ur=8,Rr=16,Ir=32,Mr=0,Fr=1,Qr=2,Dr=3,Wr=4,jr=5,Or=Nr,Br=null,Hr=null,Ar=0,Lr=Mr,$r=null,qr=1073741823,Vr=1073741823,Kr=null,Gr=0,Yr=!1,Jr=0,Xr=500,Zr=null,el=!1,tl=null,nl=null,rl=!1,ll=null,il=90,al=null,ul=0,ol=null,fl=0;function cl(){return(Or&(Rr|Ir))!==Nr?1073741821-(qe()/10|0):0!==fl?fl:fl=1073741821-(qe()/10|0)}function sl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Ve();if(0==(4&t))return 99===r?1073741823:1073741822;if((Or&Rr)!==Nr)return Ar;if(null!==n)e=tt(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=tt(e,150,100);break;case 97:case 96:e=tt(e,5e3,250);break;case 95:e=2;break;default:throw Error(f(326))}return null!==Br&&e===Ar&&--e,e}function dl(e,t){if(50<ul)throw ul=0,ol=null,Error(f(185));if(null!==(e=pl(e,t))){var n=Ve();1073741823===t?(Or&Ur)!==Nr&&(Or&(Rr|Ir))===Nr?bl(e):(hl(e),Or===Nr&&Xe()):hl(e),(4&Or)===Nr||98!==n&&99!==n||(null===al?al=new Map([[e,t]]):(void 0===(n=al.get(e))||n>t)&&al.set(e,t))}}function pl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,l=null;if(null===r&&3===e.tag)l=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){l=r.stateNode;break}r=r.return}return null!==l&&(Br===l&&(kl(t),Lr===Wr&&Yl(l,Ar)),Jl(l,t)),l}function ml(e){var t=e.lastExpiredTime;return 0!==t?t:Gl(e,t=e.firstPendingTime)?(t=e.lastPingedTime)>(e=e.nextKnownPendingLevel)?t:e:t}function hl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Je(bl.bind(null,e));else{var t=ml(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=cl();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var l=e.callbackPriority;if(e.callbackExpirationTime===t&&l>=r)return;n!==Oe&&Ne(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Je(bl.bind(null,e)):Ye(r,gl.bind(null,e),{timeout:10*(1073741821-t)-qe()}),e.callbackNode=t}}}function gl(e,t){if(fl=0,t)return Xl(e,t=cl()),hl(e),null;var n=ml(e);if(0!==n){if(t=e.callbackNode,(Or&(Rr|Ir))!==Nr)throw Error(f(327));if(Rl(),e===Br&&n===Ar||vl(e,n),null!==Hr){var r=Or;Or|=Rr;for(var l=xl();;)try{Cl();break}catch(t){Tl(e,t)}if(ct(),Or=r,Pr.current=l,Lr===Fr)throw t=$r,vl(e,n),Yl(e,n),hl(e),t;if(null===Hr)switch(l=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Lr,Br=null,r){case Mr:case Fr:throw Error(f(345));case Qr:Xl(e,2<n?2:n);break;case Dr:if(Yl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Pl(l)),1073741823===qr&&10<(l=Jr+Xr-qe())){if(Yr){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,vl(e,n);break}}if(0!==(i=ml(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=A(_l.bind(null,e),l);break}_l(e);break;case Wr:if(Yl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Pl(l)),Yr&&(0===(l=e.lastPingedTime)||l>=n)){e.lastPingedTime=n,vl(e,n);break}if(0!==(l=ml(e))&&l!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Vr?r=10*(1073741821-Vr)-qe():1073741823===qr?r=0:(r=10*(1073741821-qr)-5e3,0>(r=(l=qe())-r)&&(r=0),(n=10*(1073741821-n)-l)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*zr(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=A(_l.bind(null,e),r);break}_l(e);break;case jr:if(1073741823!==qr&&null!==Kr){i=qr;var a=Kr;if(0>=(r=0|a.busyMinDurationMs)?r=0:(l=0|a.busyDelayMs,r=(i=qe()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=l?0:l+r-i),10<r){Yl(e,n),e.timeoutHandle=A(_l.bind(null,e),r);break}}_l(e);break;default:throw Error(f(329))}if(hl(e),e.callbackNode===t)return gl.bind(null,e)}}return null}function bl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,e.finishedExpirationTime===t)_l(e);else{if((Or&(Rr|Ir))!==Nr)throw Error(f(327));if(Rl(),e===Br&&t===Ar||vl(e,t),null!==Hr){var n=Or;Or|=Rr;for(var r=xl();;)try{Sl();break}catch(t){Tl(e,t)}if(ct(),Or=n,Pr.current=r,Lr===Fr)throw n=$r,vl(e,t),Yl(e,t),hl(e),n;if(null!==Hr)throw Error(f(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Br=null,_l(e),hl(e)}}return null}function yl(e,t){if((Or&(Rr|Ir))!==Nr)throw Error(f(187));var n=Or;Or|=1;try{return Ge(99,e.bind(null,t))}finally{Or=n,Xe()}}function vl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(n!==$&&(e.timeoutHandle=$,L(n)),null!==Hr)for(n=Hr.return;null!==n;){var r=n;switch(r.tag){case 1:var l=r.type.childContextTypes;null!=l&&Ee();break;case 3:Kt(),ke();break;case 5:Yt(r);break;case 4:Kt();break;case 13:case 19:me(Jt);break;case 10:dt(r)}n=n.return}Br=e,Hr=Al(e.current,null),Ar=t,Lr=Mr,$r=null,Vr=qr=1073741823,Kr=null,Gr=0,Yr=!1}function Tl(e,t){for(;;){try{if(ct(),vn(),null===Hr||null===Hr.return)return Lr=Fr,$r=t,null;e:{var n=e,r=Hr.return,l=Hr,i=t;if(t=Ar,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==i&&\"object\"==typeof i&&\"function\"==typeof i.then){var a=i,u=0!=(1&Jt.current),o=r;do{var f;if(f=13===o.tag){var c=o.memoizedState;if(null!==c)f=null!==c.dehydrated;else{var s=o.memoizedProps;f=void 0!==s.fallback&&(!0!==s.unstable_avoidThisFallback||!u)}}if(f){var d=o.updateQueue;if(null===d){var p=new Set;p.add(a),o.updateQueue=p}else d.add(a);if(0==(2&o.mode)){if(o.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var m=vt(1073741823,null);m.tag=2,xt(l,m)}l.expirationTime=1073741823;break e}i=void 0,l=t;var h=n.pingCache;if(null===h?(h=n.pingCache=new kr,i=new Set,h.set(a,i)):void 0===(i=h.get(a))&&(i=new Set,h.set(a,i)),!i.has(l)){i.add(l);var g=Ql.bind(null,n,a,l);a.then(g,g)}o.effectTag|=4096,o.expirationTime=t;break e}o=o.return}while(null!==o);i=Error((z(l.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+se(l))}Lr!==jr&&(Lr=Qr),i=fr(i,l),o=r;do{switch(o.tag){case 3:a=i,o.effectTag|=4096,o.expirationTime=t,Et(o,Sr(o,a,t));break e;case 1:a=i;var b=o.type,y=o.stateNode;if(0==(64&o.effectTag)&&(\"function\"==typeof b.getDerivedStateFromError||null!==y&&\"function\"==typeof y.componentDidCatch&&(null===nl||!nl.has(y)))){o.effectTag|=4096,o.expirationTime=t,Et(o,Cr(o,a,t));break e}}o=o.return}while(null!==o)}Hr=zl(Hr)}catch(e){t=e;continue}break}}function xl(){var e=Pr.current;return Pr.current=Qn,null===e?Qn:e}function El(e,t){e<qr&&2<e&&(qr=e),null!==t&&e<Vr&&2<e&&(Vr=e,Kr=t)}function kl(e){e>Gr&&(Gr=e)}function Sl(){for(;null!==Hr;)Hr=wl(Hr)}function Cl(){for(;null!==Hr&&!Ue();)Hr=wl(Hr)}function wl(e){var t=wr(e.alternate,e,Ar);return e.memoizedProps=e.pendingProps,null===t&&(t=zl(e)),_r.current=null,t}function zl(e){Hr=e;do{var t=Hr.alternate;if(e=Hr.return,0==(2048&Hr.effectTag)){e:{var n=t,r=Ar,l=(t=Hr).pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:case 20:case 21:break;case 1:case 17:xe(t.type)&&Ee();break;case 3:Kt(),ke(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null===n||n.child,Jn(t);break;case 5:Yt(t);var i=qt($t.current);if(r=t.type,null!==n&&null!=t.stateNode)Xn(n,t,r,l,i),n.ref!==t.ref&&(t.effectTag|=128);else if(l){n=qt(At.current);var a=D(r,l,i,n,t);Yn(a,t,!1,!1),t.stateNode=a,j(a,r,l,i,n)&&ar(t),null!==t.ref&&(t.effectTag|=128)}else if(null===t.stateNode)throw Error(f(166));break;case 6:if(n&&null!=t.stateNode)Zn(n,t,n.memoizedProps,l);else{if(\"string\"!=typeof l&&null===t.stateNode)throw Error(f(166));n=qt($t.current),i=qt(At.current),t.stateNode=H(l,n,i,t)}break;case 13:if(me(Jt),l=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=r;break e}l=null!==l,i=!1,null===n?t.memoizedProps.fallback:(i=null!==(r=n.memoizedState),l||null===r||null!==(r=n.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=r,r.nextEffect=a):(t.firstEffect=t.lastEffect=r,r.nextEffect=null),r.effectTag=8)),l&&!i&&0!=(2&t.mode)&&(null===n&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Jt.current)?Lr===Mr&&(Lr=Dr):(Lr!==Mr&&Lr!==Dr||(Lr=Wr),0!==Gr&&null!==Br&&(Yl(Br,Ar),Jl(Br,Gr)))),(l||i)&&(t.effectTag|=4);break;case 4:Kt(),Jn(t);break;case 10:dt(t);break;case 19:if(me(Jt),null===(l=t.memoizedState))break;if(i=0!=(64&t.effectTag),null===(a=l.rendering)){if(i)ur(l,!1);else if(Lr!==Mr||null!==n&&0!=(64&n.effectTag))for(n=t.child;null!==n;){if(null!==(a=Xt(n))){for(t.effectTag|=64,ur(l,!1),null!==(n=a.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),null===l.lastEffect&&(t.firstEffect=null),t.lastEffect=l.lastEffect,n=r,l=t.child;null!==l;)r=n,(i=l).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(a=i.alternate)?(i.childExpirationTime=0,i.expirationTime=r,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=a.childExpirationTime,i.expirationTime=a.expirationTime,i.child=a.child,i.memoizedProps=a.memoizedProps,i.memoizedState=a.memoizedState,i.updateQueue=a.updateQueue,r=a.dependencies,i.dependencies=null===r?null:{expirationTime:r.expirationTime,firstContext:r.firstContext,responders:r.responders}),l=l.sibling;he(Jt,1&Jt.current|2),t=t.child;break e}n=n.sibling}}else{if(!i)if(null!==(n=Xt(a))){if(t.effectTag|=64,i=!0,null!==(n=n.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ur(l,!0),null===l.tail&&\"hidden\"===l.tailMode){null!==(t=t.lastEffect=l.lastEffect)&&(t.nextEffect=null);break}}else qe()>l.tailExpiration&&1<r&&(t.effectTag|=64,i=!0,ur(l,!1),t.expirationTime=t.childExpirationTime=r-1);l.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=l.last)?n.sibling=a:t.child=a,l.last=a)}if(null!==l.tail){0===l.tailExpiration&&(l.tailExpiration=qe()+500),n=l.tail,l.rendering=n,l.tail=n.sibling,l.lastEffect=t.lastEffect,n.sibling=null,l=Jt.current,he(Jt,l=i?1&l|2:1&l),t=n;break e}break;default:throw Error(f(156,t.tag))}t=null}if(n=Hr,1===Ar||1!==n.childExpirationTime){for(l=0,i=n.child;null!==i;)(r=i.expirationTime)>l&&(l=r),(a=i.childExpirationTime)>l&&(l=a),i=i.sibling;n.childExpirationTime=l}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Hr.firstEffect),null!==Hr.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Hr.firstEffect),e.lastEffect=Hr.lastEffect),1<Hr.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Hr:e.firstEffect=Hr,e.lastEffect=Hr))}else{if(null!==(t=or(Hr)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Hr.sibling))return t;Hr=e}while(null!==Hr);return Lr===Mr&&(Lr=jr),null}function Pl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function _l(e){var t=Ve();return Ge(99,Nl.bind(null,e,t)),null}function Nl(e,t){if(Rl(),(Or&(Rr|Ir))!==Nr)throw Error(f(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(f(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var l=Pl(n);if(e.firstPendingTime=l,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Br&&(Hr=Br=null,Ar=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,l=n.firstEffect):l=n:l=n.firstEffect,null!==l){var i=Or;Or|=Ir,_r.current=null,F(e.containerInfo),Zr=l;do{try{Ul()}catch(e){if(null===Zr)throw Error(f(330));Fl(Zr,e),Zr=Zr.nextEffect}}while(null!==Zr);Zr=l;do{try{for(var a=e,u=t;null!==Zr;){var o=Zr.effectTag;if(16&o&&q&&re(Zr.stateNode),128&o){var c=Zr.alternate;if(null!==c){var s=c.ref;null!==s&&(\"function\"==typeof s?s(null):s.current=null)}}switch(1038&o){case 2:vr(Zr),Zr.effectTag&=-3;break;case 6:vr(Zr),Zr.effectTag&=-3,xr(Zr.alternate,Zr);break;case 1024:Zr.effectTag&=-1025;break;case 1028:Zr.effectTag&=-1025,xr(Zr.alternate,Zr);break;case 4:xr(Zr.alternate,Zr);break;case 8:var d=a,p=Zr,m=u;q?Tr(d,p,m):gr(d,p,m),br(p)}Zr=Zr.nextEffect}}catch(e){if(null===Zr)throw Error(f(330));Fl(Zr,e),Zr=Zr.nextEffect}}while(null!==Zr);Q(e.containerInfo),e.current=n,Zr=l;do{try{for(o=r;null!==Zr;){var h=Zr.effectTag;if(36&h){var g=Zr.alternate;switch(s=o,(c=Zr).tag){case 0:case 11:case 15:mr(16,32,c);break;case 1:var b=c.stateNode;if(4&c.effectTag)if(null===g)b.componentDidMount();else{var y=c.elementType===c.type?g.memoizedProps:it(c.type,g.memoizedProps);b.componentDidUpdate(y,g.memoizedState,b.__reactInternalSnapshotBeforeUpdate)}var v=c.updateQueue;null!==v&&wt(0,v,b);break;case 3:var T=c.updateQueue;if(null!==T){if(a=null,null!==c.child)switch(c.child.tag){case 5:a=R(c.child.stateNode);break;case 1:a=c.child.stateNode}wt(0,T,a)}break;case 5:var x=c.stateNode;null===g&&4&c.effectTag&&J(x,c.type,c.memoizedProps,c);break;case 6:case 4:case 12:case 19:case 17:case 20:case 21:break;case 13:V&&c.memoizedState;break;default:throw Error(f(163))}}if(128&h){c=void 0;var E=Zr.ref;if(null!==E){var k=Zr.stateNode;c=5===Zr.tag?R(k):k,\"function\"==typeof E?E(c):E.current=c}}Zr=Zr.nextEffect}}catch(e){if(null===Zr)throw Error(f(330));Fl(Zr,e),Zr=Zr.nextEffect}}while(null!==Zr);Zr=null,Be(),Or=i}else e.current=n;if(rl)rl=!1,ll=e,il=t;else for(Zr=l;null!==Zr;)t=Zr.nextEffect,Zr.nextEffect=null,Zr=t;if(0===(t=e.firstPendingTime)&&(nl=null),1073741823===t?e===ol?ul++:(ul=0,ol=e):ul=0,\"function\"==typeof Wl&&Wl(n.stateNode,r),hl(e),el)throw el=!1,e=tl,tl=null,e;return(Or&Ur)!==Nr||Xe(),null}function Ul(){for(;null!==Zr;){var e=Zr.effectTag;0!=(256&e)&&pr(Zr.alternate,Zr),0==(512&e)||rl||(rl=!0,Ye(97,(function(){return Rl(),null}))),Zr=Zr.nextEffect}}function Rl(){if(90!==il){var e=97<il?97:il;return il=90,Ge(e,Il)}}function Il(){if(null===ll)return!1;var e=ll;if(ll=null,(Or&(Rr|Ir))!==Nr)throw Error(f(331));var t=Or;for(Or|=Ir,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:mr(128,0,n),mr(0,64,n)}}catch(t){if(null===e)throw Error(f(330));Fl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Or=t,Xe(),!0}function Ml(e,t,n){xt(e,t=Sr(e,t=fr(n,t),1073741823)),null!==(e=pl(e,1073741823))&&hl(e)}function Fl(e,t){if(3===e.tag)Ml(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Ml(n,e,t);break}if(1===n.tag){var r=n.stateNode;if(\"function\"==typeof n.type.getDerivedStateFromError||\"function\"==typeof r.componentDidCatch&&(null===nl||!nl.has(r))){xt(n,e=Cr(n,e=fr(t,e),1073741823)),null!==(n=pl(n,1073741823))&&hl(n);break}}n=n.return}}function Ql(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Br===e&&Ar===n?Lr===Wr||Lr===Dr&&1073741823===qr&&qe()-Jr<Xr?vl(e,Ar):Yr=!0:Gl(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),hl(e)))}function Dl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=sl(t=cl(),e,null)),null!==(e=pl(e,t))&&hl(e)}wr=function(e,t,n){var r=t.expirationTime;if(null!==e){var l=t.pendingProps;if(e.memoizedProps!==l||ye.current)On=!0;else{if(r<n){switch(On=!1,t.tag){case 3:Gn(t);break;case 5:if(Gt(t),4&t.mode&&1!==n&&null(t.type,l))return t.expirationTime=t.childExpirationTime=1,null;break;case 1:xe(t.type)&&we(t);break;case 4:Vt(t,t.stateNode.containerInfo);break;case 10:st(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?tr(e,t,n):(he(Jt,1&Jt.current),null!==(t=ir(e,t,n))?t.sibling:null);he(Jt,1&Jt.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return lr(e,t,n);t.effectTag|=64}if(null!==(l=t.memoizedState)&&(l.rendering=null,l.tail=null),he(Jt,Jt.current),!r)return null}return ir(e,t,n)}On=!1}}else On=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,l=Te(t,be.current),mt(t,n),l=yn(null,t,r,e,l,n),t.effectTag|=1,\"object\"==typeof l&&null!==l&&\"function\"==typeof l.render&&void 0===l.$$typeof){if(t.tag=1,vn(),xe(r)){var i=!0;we(t)}else i=!1;t.memoizedState=null!==l.state&&void 0!==l.state?l.state:null;var a=r.getDerivedStateFromProps;\"function\"==typeof a&&Nt(t,r,a,e),l.updater=Ut,t.stateNode=l,l._reactInternalFiber=t,Ft(t,r,e,n),t=Kn(null,t,r,!0,i,n)}else t.tag=0,Bn(null,t,l,n),t=t.child;return t;case 16:if(l=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(l),1!==l._status)throw l._result;switch(l=l._result,t.type=l,i=t.tag=function(e){if(\"function\"==typeof e)return Hl(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===k)return 14}return 2}(l),e=it(l,e),i){case 0:t=qn(null,t,l,e,n);break;case 1:t=Vn(null,t,l,e,n);break;case 11:t=Hn(null,t,l,e,n);break;case 14:t=An(null,t,l,it(l.type,e),r,n);break;default:throw Error(f(306,l,\"\"))}return t;case 0:return r=t.type,l=t.pendingProps,qn(e,t,r,l=t.elementType===r?l:it(r,l),n);case 1:return r=t.type,l=t.pendingProps,Vn(e,t,r,l=t.elementType===r?l:it(r,l),n);case 3:if(Gn(t),null===(r=t.updateQueue))throw Error(f(282));if(l=null!==(l=t.memoizedState)?l.element:null,Ct(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===l)t=ir(e,t,n);else{if((l=t.stateNode.hydrate)&&(l=!1),l)for(n=Bt(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Bn(e,t,r,n);t=t.child}return t;case 5:return Gt(t),r=t.type,l=t.pendingProps,i=null!==e?e.memoizedProps:null,a=l.children,B(r,l)?a=null:null!==i&&B(r,i)&&(t.effectTag|=16),$n(e,t),4&t.mode&&1!==n&&null(r,l)?(t.expirationTime=t.childExpirationTime=1,t=null):(Bn(e,t,a,n),t=t.child),t;case 6:return null;case 13:return tr(e,t,n);case 4:return Vt(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ot(t,null,r,n):Bn(e,t,r,n),t.child;case 11:return r=t.type,l=t.pendingProps,Hn(e,t,r,l=t.elementType===r?l:it(r,l),n);case 7:return Bn(e,t,t.pendingProps,n),t.child;case 8:case 12:return Bn(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,l=t.pendingProps,a=t.memoizedProps,st(t,i=l.value),null!==a){var u=a.value;if(0==(i=nt(u,i)?0:0|(\"function\"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===l.children&&!ye.current){t=ir(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var o=u.dependencies;if(null!==o){a=u.child;for(var c=o.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===u.tag&&((c=vt(n,null)).tag=2,xt(u,c)),u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n),pt(u.return,n),o.expirationTime<n&&(o.expirationTime=n);break}c=c.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}}Bn(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,r=(i=t.pendingProps).children,mt(t,n),r=r(l=ht(l,i.unstable_observedBits)),t.effectTag|=1,Bn(e,t,r,n),t.child;case 14:return i=it(l=t.type,t.pendingProps),An(e,t,l,i=it(l.type,i),r,n);case 15:return Ln(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:it(r,l),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,xe(r)?(e=!0,we(t)):e=!1,mt(t,n),It(t,r,l),Ft(t,r,l,n),Kn(null,t,r,!0,e,n);case 19:return lr(e,t,n)}throw Error(f(156,t.tag))};var Wl=null,jl=null;function Ol(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Bl(e,t,n,r){return new Ol(e,t,n,r)}function Hl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Al(e,t){var n=e.alternate;return null===n?((n=Bl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ll(e,t,n,r,l,i){var a=2;if(r=e,\"function\"==typeof e)Hl(e)&&(a=1);else if(\"string\"==typeof e)a=5;else e:switch(e){case m:return $l(n.children,l,i,t);case v:a=8,l|=7;break;case h:a=8,l|=1;break;case g:return(e=Bl(12,n,t,8|l)).elementType=g,e.type=g,e.expirationTime=i,e;case x:return(e=Bl(13,n,t,l)).type=x,e.elementType=x,e.expirationTime=i,e;case E:return(e=Bl(19,n,t,l)).elementType=E,e.expirationTime=i,e;default:if(\"object\"==typeof e&&null!==e)switch(e.$$typeof){case b:a=10;break e;case y:a=9;break e;case T:a=11;break e;case k:a=14;break e;case S:a=16,r=null;break e}throw Error(f(130,null==e?e:typeof e,\"\"))}return(t=Bl(a,n,t,l)).elementType=e,t.type=r,t.expirationTime=i,t}function $l(e,t,n,r){return(e=Bl(7,e,r,t)).expirationTime=n,e}function ql(e,t,n){return(e=Bl(6,e,null,t)).expirationTime=n,e}function Vl(e,t,n){return(t=Bl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Kl(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=$,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Gl(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Yl(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Jl(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Xl(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Zl(e){var t=e._reactInternalFiber;if(void 0===t){if(\"function\"==typeof e.render)throw Error(f(188));throw Error(f(268,Object.keys(e)))}return null===(e=U(t))?null:e.stateNode}function ei(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function ti(e,t){ei(e,t),(e=e.alternate)&&ei(e,t)}var ni={createContainer:function(e,t,n){return e=new Kl(e,t,n),t=Bl(3,null,null,2===t?7:1===t?3:0),e.current=t,t.stateNode=e},updateContainer:function(e,t,n,r){var l=t.current,i=cl(),a=Pt.suspense;i=sl(i,l,a);e:if(n){t:{if(P(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(f(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(xe(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(f(171))}if(1===n.tag){var o=n.type;if(xe(o)){n=Ce(n,o,u);break e}}n=u}else n=ge;return null===t.context?t.context=n:t.pendingContext=n,(t=vt(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),xt(l,t),dl(l,i),i},batchedEventUpdates:function(e,t){var n=Or;Or|=2;try{return e(t)}finally{(Or=n)===Nr&&Xe()}},batchedUpdates:function(e,t){var n=Or;Or|=1;try{return e(t)}finally{(Or=n)===Nr&&Xe()}},unbatchedUpdates:function(e,t){var n=Or;Or&=-2,Or|=Ur;try{return e(t)}finally{(Or=n)===Nr&&Xe()}},deferredUpdates:function(e){return Ge(97,e)},syncUpdates:function(e,t,n,r){return Ge(99,e.bind(null,t,n,r))},discreteUpdates:function(e,t,n,r){var l=Or;Or|=4;try{return Ge(98,e.bind(null,t,n,r))}finally{(Or=l)===Nr&&Xe()}},flushDiscreteUpdates:function(){(Or&(1|Rr|Ir))===Nr&&(function(){if(null!==al){var e=al;al=null,e.forEach((function(e,t){Xl(t,e),hl(t)})),Xe()}}(),Rl())},flushControlled:function(e){var t=Or;Or|=1;try{Ge(99,e)}finally{(Or=t)===Nr&&Xe()}},flushSync:yl,flushPassiveEffects:Rl,IsThisRendererActing:{current:!1},getPublicRootInstance:function(e){return(e=e.current).child?5===e.child.tag?R(e.child.stateNode):e.child.stateNode:null},attemptSynchronousHydration:function(e){switch(e.tag){case 3:var t=e.stateNode;t.hydrate&&function(e,t){Xl(e,t),hl(e),(Or&(Rr|Ir))===Nr&&Xe()}(t,t.firstPendingTime);break;case 13:yl((function(){return dl(e,1073741823)})),t=tt(cl(),150,100),ti(e,t)}},attemptUserBlockingHydration:function(e){if(13===e.tag){var t=tt(cl(),150,100);dl(e,t),ti(e,t)}},attemptContinuousHydration:function(e){if(13===e.tag){cl();var t=et++;dl(e,t),ti(e,t)}},attemptHydrationAtCurrentPriority:function(e){if(13===e.tag){var t=cl();dl(e,t=sl(t,e,null)),ti(e,t)}},findHostInstance:Zl,findHostInstanceWithWarning:function(e){return Zl(e)},findHostInstanceWithNoPortals:function(e){return null===(e=function(e){if(!(e=N(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:20===e.tag?e.stateNode.instance:e.stateNode},shouldSuspend:function(){return!1},injectIntoDevTools:function(e){var t=e.findFiberByHostInstance;return function(e){if(\"undefined\"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Wl=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},jl=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}return!0}(l({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=U(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}};i.exports=ni.default||ni;var ri=i.exports;return i.exports=n,ri};var o=r(a.exports);const f=(e,t)=>{const n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(let r=0;r<n.length;r+=1){const l=n[r];if(\"render\"===l&&!e[l]!=!t[l])return!1;if(\"children\"!==l&&e[l]!==t[l]){if(\"object\"==typeof e[l]&&\"object\"==typeof t[l]&&f(e[l],t[l]))continue;return!1}if(\"children\"===l&&(\"string\"==typeof e[l]||\"string\"==typeof t[l]))return e[l]===t[l]}return!0},c={},s=({appendChild:e,appendChildToContainer:t,commitTextUpdate:n,commitUpdate:r,createInstance:l,createTextInstance:i,insertBefore:a,removeChild:u,removeChildFromContainer:s,resetAfterCommit:d})=>o({appendChild:e,appendChildToContainer:t,appendInitialChild:e,createInstance:l,createTextInstance:i,insertBefore:a,commitUpdate:r,commitTextUpdate:n,removeChild:u,removeChildFromContainer:s,resetAfterCommit:d,shouldSetTextContent:()=>!1,finalizeInitialChildren:()=>!1,getPublicInstance:e=>e,getRootHostContext:()=>c,getChildHostContext:()=>c,prepareForCommit(){},clearContainer(){},resetTextContent(){},prepareUpdate:(e,t,n,r)=>!f(n,r)});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/reconciler/lib/reconciler-23.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/reconciler/lib/reconciler-31.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@react-pdf/reconciler/lib/reconciler-31.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var scheduler__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ k)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/scheduler/index.js\");\n\n\nfunction t(e) {\n    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction r(e) {\n    if (e.__esModule) return e;\n    var n = e.default;\n    if (\"function\" == typeof n) {\n        var t = function e() {\n            return this instanceof e ? Reflect.construct(n, arguments, this.constructor) : n.apply(this, arguments);\n        };\n        t.prototype = n.prototype;\n    } else t = {};\n    return Object.defineProperty(t, \"__esModule\", {\n        value: !0\n    }), Object.keys(e).forEach(function(n) {\n        var r = Object.getOwnPropertyDescriptor(e, n);\n        Object.defineProperty(t, n, r.get ? r : {\n            enumerable: !0,\n            get: function() {\n                return e[n];\n            }\n        });\n    }), t;\n}\nvar l, a = {\n    exports: {}\n}, o = {\n    exports: {}\n}, u = r(/*#__PURE__*/ (scheduler__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (scheduler__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(scheduler__WEBPACK_IMPORTED_MODULE_1__, 2))));\nvar i, s, c = {\n    exports: {}\n};\n/**\n * @license React\n * react-reconciler.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */  false ? 0 : a.exports = function() {\n    return i || (i = 1, n = c,  true && (n.exports = function(n) {\n        function t(e, n, t, r) {\n            return new sa(e, n, t, r);\n        }\n        function r() {\n            console.error(\"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks\");\n        }\n        function l() {\n            console.error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\");\n        }\n        function a() {}\n        function o(e) {\n            var n = [];\n            return e.forEach(function(e) {\n                n.push(e);\n            }), n.sort().join(\", \");\n        }\n        function i(e) {\n            return null === e || \"object\" != typeof e ? null : \"function\" == typeof (e = Ya && e[Ya] || e[\"@@iterator\"]) ? e : null;\n        }\n        function s(e) {\n            if (null == e) return null;\n            if (\"function\" == typeof e) return e.$$typeof === Ga ? null : e.displayName || e.name || null;\n            if (\"string\" == typeof e) return e;\n            switch(e){\n                case Ia:\n                    return \"Fragment\";\n                case Da:\n                    return \"Portal\";\n                case Ma:\n                    return \"Profiler\";\n                case Fa:\n                    return \"StrictMode\";\n                case Qa:\n                    return \"Suspense\";\n                case Oa:\n                    return \"SuspenseList\";\n            }\n            if (\"object\" == typeof e) switch(\"number\" == typeof e.tag && console.error(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), e.$$typeof){\n                case ja:\n                    return (e.displayName || \"Context\") + \".Provider\";\n                case Ha:\n                    return (e._context.displayName || \"Context\") + \".Consumer\";\n                case Aa:\n                    var n = e.render;\n                    return (e = e.displayName) || (e = \"\" !== (e = n.displayName || n.name || \"\") ? \"ForwardRef(\" + e + \")\" : \"ForwardRef\"), e;\n                case Ba:\n                    return null !== (n = e.displayName || null) ? n : s(e.type) || \"Memo\";\n                case Va:\n                    n = e._payload, e = e._init;\n                    try {\n                        return s(e(n));\n                    } catch (e) {}\n            }\n            return null;\n        }\n        function c(e) {\n            var n = e.type;\n            switch(e.tag){\n                case 24:\n                    return \"Cache\";\n                case 9:\n                    return (n._context.displayName || \"Context\") + \".Consumer\";\n                case 10:\n                    return (n.displayName || \"Context\") + \".Provider\";\n                case 18:\n                    return \"DehydratedFragment\";\n                case 11:\n                    return e = (e = n.render).displayName || e.name || \"\", n.displayName || (\"\" !== e ? \"ForwardRef(\" + e + \")\" : \"ForwardRef\");\n                case 7:\n                    return \"Fragment\";\n                case 26:\n                case 27:\n                case 5:\n                    return n;\n                case 4:\n                    return \"Portal\";\n                case 3:\n                    return \"Root\";\n                case 6:\n                    return \"Text\";\n                case 16:\n                    return s(n);\n                case 8:\n                    return n === Fa ? \"StrictMode\" : \"Mode\";\n                case 22:\n                    return \"Offscreen\";\n                case 12:\n                    return \"Profiler\";\n                case 21:\n                    return \"Scope\";\n                case 13:\n                    return \"Suspense\";\n                case 19:\n                    return \"SuspenseList\";\n                case 25:\n                    return \"TracingMarker\";\n                case 1:\n                case 0:\n                case 14:\n                case 15:\n                    if (\"function\" == typeof n) return n.displayName || n.name || null;\n                    if (\"string\" == typeof n) return n;\n                    break;\n                case 29:\n                    if (null != (n = e._debugInfo)) {\n                        for(var t = n.length - 1; 0 <= t; t--)if (\"string\" == typeof n[t].name) return n[t].name;\n                    }\n                    if (null !== e.return) return c(e.return);\n            }\n            return null;\n        }\n        function f() {}\n        function d(e) {\n            if (void 0 === Xa) try {\n                throw Error();\n            } catch (e) {\n                var n = e.stack.trim().match(/\\n( *(at )?)/);\n                Xa = n && n[1] || \"\", Za = -1 < e.stack.indexOf(\"\\n    at\") ? \" (<anonymous>)\" : -1 < e.stack.indexOf(\"@\") ? \"@unknown:0:0\" : \"\";\n            }\n            return \"\\n\" + Xa + e + Za;\n        }\n        function p(e, n) {\n            if (!e || eo) return \"\";\n            var t, r = no.get(e);\n            if (void 0 !== r) return r;\n            eo = !0, r = Error.prepareStackTrace, Error.prepareStackTrace = void 0, t = Ja.H, Ja.H = null, function() {\n                if (0 === Ka) {\n                    ka = console.log, wa = console.info, xa = console.warn, za = console.error, Ca = console.group, Ea = console.groupCollapsed, Pa = console.groupEnd;\n                    var e = {\n                        configurable: !0,\n                        enumerable: !0,\n                        value: f,\n                        writable: !0\n                    };\n                    Object.defineProperties(console, {\n                        info: e,\n                        log: e,\n                        warn: e,\n                        error: e,\n                        group: e,\n                        groupCollapsed: e,\n                        groupEnd: e\n                    });\n                }\n                Ka++;\n            }();\n            try {\n                var l = {\n                    DetermineComponentFrameRoot: function() {\n                        try {\n                            if (n) {\n                                var t = function() {\n                                    throw Error();\n                                };\n                                if (Object.defineProperty(t.prototype, \"props\", {\n                                    set: function() {\n                                        throw Error();\n                                    }\n                                }), \"object\" == typeof Reflect && Reflect.construct) {\n                                    try {\n                                        Reflect.construct(t, []);\n                                    } catch (e) {\n                                        var r = e;\n                                    }\n                                    Reflect.construct(e, [], t);\n                                } else {\n                                    try {\n                                        t.call();\n                                    } catch (e) {\n                                        r = e;\n                                    }\n                                    e.call(t.prototype);\n                                }\n                            } else {\n                                try {\n                                    throw Error();\n                                } catch (e) {\n                                    r = e;\n                                }\n                                (t = e()) && \"function\" == typeof t.catch && t.catch(function() {});\n                            }\n                        } catch (e) {\n                            if (e && r && \"string\" == typeof e.stack) return [\n                                e.stack,\n                                r.stack\n                            ];\n                        }\n                        return [\n                            null,\n                            null\n                        ];\n                    }\n                };\n                l.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n                var a = Object.getOwnPropertyDescriptor(l.DetermineComponentFrameRoot, \"name\");\n                a && a.configurable && Object.defineProperty(l.DetermineComponentFrameRoot, \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n                var o = l.DetermineComponentFrameRoot(), u = o[0], i = o[1];\n                if (u && i) {\n                    var s = u.split(\"\\n\"), c = i.split(\"\\n\");\n                    for(o = a = 0; a < s.length && !s[a].includes(\"DetermineComponentFrameRoot\");)a++;\n                    for(; o < c.length && !c[o].includes(\"DetermineComponentFrameRoot\");)o++;\n                    if (a === s.length || o === c.length) for(a = s.length - 1, o = c.length - 1; 1 <= a && 0 <= o && s[a] !== c[o];)o--;\n                    for(; 1 <= a && 0 <= o; a--, o--)if (s[a] !== c[o]) {\n                        if (1 !== a || 1 !== o) do {\n                            if (a--, 0 > --o || s[a] !== c[o]) {\n                                var p = \"\\n\" + s[a].replace(\" at new \", \" at \");\n                                return e.displayName && p.includes(\"<anonymous>\") && (p = p.replace(\"<anonymous>\", e.displayName)), \"function\" == typeof e && no.set(e, p), p;\n                            }\n                        }while (1 <= a && 0 <= o);\n                        break;\n                    }\n                }\n            } finally{\n                eo = !1, Ja.H = t, function() {\n                    if (0 == --Ka) {\n                        var e = {\n                            configurable: !0,\n                            enumerable: !0,\n                            writable: !0\n                        };\n                        Object.defineProperties(console, {\n                            log: Na({}, e, {\n                                value: ka\n                            }),\n                            info: Na({}, e, {\n                                value: wa\n                            }),\n                            warn: Na({}, e, {\n                                value: xa\n                            }),\n                            error: Na({}, e, {\n                                value: za\n                            }),\n                            group: Na({}, e, {\n                                value: Ca\n                            }),\n                            groupCollapsed: Na({}, e, {\n                                value: Ea\n                            }),\n                            groupEnd: Na({}, e, {\n                                value: Pa\n                            })\n                        });\n                    }\n                    0 > Ka && console.error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n                }(), Error.prepareStackTrace = r;\n            }\n            return s = (s = e ? e.displayName || e.name : \"\") ? d(s) : \"\", \"function\" == typeof e && no.set(e, s), s;\n        }\n        function m(e) {\n            switch(e.tag){\n                case 26:\n                case 27:\n                case 5:\n                    return d(e.type);\n                case 16:\n                    return d(\"Lazy\");\n                case 13:\n                    return d(\"Suspense\");\n                case 19:\n                    return d(\"SuspenseList\");\n                case 0:\n                case 15:\n                    return p(e.type, !1);\n                case 11:\n                    return p(e.type.render, !1);\n                case 1:\n                    return p(e.type, !0);\n                default:\n                    return \"\";\n            }\n        }\n        function h(e) {\n            try {\n                var n = \"\";\n                do {\n                    n += m(e);\n                    var t = e._debugInfo;\n                    if (t) for(var r = t.length - 1; 0 <= r; r--){\n                        var l = t[r];\n                        if (\"string\" == typeof l.name) {\n                            var a = n, o = l.env;\n                            n = a + d(l.name + (o ? \" [\" + o + \"]\" : \"\"));\n                        }\n                    }\n                    e = e.return;\n                }while (e);\n                return n;\n            } catch (e) {\n                return \"\\nError generating stack: \" + e.message + \"\\n\" + e.stack;\n            }\n        }\n        function g() {\n            return null === to ? \"\" : h(to);\n        }\n        function y(e, n, t, r, l, a, o) {\n            var u = to;\n            Ja.getCurrentStack = null === e ? null : g, ro = !1, to = e;\n            try {\n                return n(t, r, l, a, o);\n            } finally{\n                to = u;\n            }\n            throw Error(\"runWithFiberInDEV should never be called in production. This is a bug in React.\");\n        }\n        function b(e) {\n            return {\n                current: e\n            };\n        }\n        function v(e, n) {\n            0 > iu ? console.error(\"Unexpected pop.\") : (n !== uu[iu] && console.error(\"Unexpected Fiber popped.\"), e.current = ou[iu], ou[iu] = null, uu[iu] = null, iu--);\n        }\n        function S(e, n, t) {\n            iu++, ou[iu] = e.current, uu[iu] = t, e.current = n;\n        }\n        function k(e) {\n            var n = 42 & e;\n            if (0 !== n) return n;\n            switch(e & -e){\n                case 1:\n                    return 1;\n                case 2:\n                    return 2;\n                case 4:\n                    return 4;\n                case 8:\n                    return 8;\n                case 16:\n                    return 16;\n                case 32:\n                    return 32;\n                case 64:\n                    return 64;\n                case 128:\n                case 256:\n                case 512:\n                case 1024:\n                case 2048:\n                case 4096:\n                case 8192:\n                case 16384:\n                case 32768:\n                case 65536:\n                case 131072:\n                case 262144:\n                case 524288:\n                case 1048576:\n                case 2097152:\n                    return 4194176 & e;\n                case 4194304:\n                case 8388608:\n                case 16777216:\n                case 33554432:\n                    return 62914560 & e;\n                case 67108864:\n                    return 67108864;\n                case 134217728:\n                    return 134217728;\n                case 268435456:\n                    return 268435456;\n                case 536870912:\n                    return 536870912;\n                case 1073741824:\n                    return 0;\n                default:\n                    return console.error(\"Should have found matching lanes. This is a bug in React.\"), e;\n            }\n        }\n        function w(e, n) {\n            var t = e.pendingLanes;\n            if (0 === t) return 0;\n            var r = 0, l = e.suspendedLanes;\n            e = e.pingedLanes;\n            var a = 134217727 & t;\n            return 0 !== a ? 0 != (t = a & ~l) ? r = k(t) : 0 != (e &= a) && (r = k(e)) : 0 != (t &= ~l) ? r = k(t) : 0 !== e && (r = k(e)), 0 === r ? 0 : 0 !== n && n !== r && 0 == (n & l) && ((l = r & -r) >= (e = n & -n) || 32 === l && 0 != (4194176 & e)) ? n : r;\n        }\n        function x(e, n) {\n            switch(e){\n                case 1:\n                case 2:\n                case 4:\n                case 8:\n                    return n + 250;\n                case 16:\n                case 32:\n                case 64:\n                case 128:\n                case 256:\n                case 512:\n                case 1024:\n                case 2048:\n                case 4096:\n                case 8192:\n                case 16384:\n                case 32768:\n                case 65536:\n                case 131072:\n                case 262144:\n                case 524288:\n                case 1048576:\n                case 2097152:\n                    return n + 5e3;\n                case 4194304:\n                case 8388608:\n                case 16777216:\n                case 33554432:\n                case 67108864:\n                case 134217728:\n                case 268435456:\n                case 536870912:\n                case 1073741824:\n                    return -1;\n                default:\n                    return console.error(\"Should have found matching lanes. This is a bug in React.\"), -1;\n            }\n        }\n        function z() {\n            var e = pu;\n            return 0 == (4194176 & (pu <<= 1)) && (pu = 128), e;\n        }\n        function C() {\n            var e = mu;\n            return 0 == (62914560 & (mu <<= 1)) && (mu = 4194304), e;\n        }\n        function E(e) {\n            for(var n = [], t = 0; 31 > t; t++)n.push(e);\n            return n;\n        }\n        function P(e, n) {\n            e.pendingLanes |= n, 268435456 !== n && (e.suspendedLanes = 0, e.pingedLanes = 0, e.warmLanes = 0);\n        }\n        function _(e, n, t) {\n            e.pendingLanes |= n, e.suspendedLanes &= ~n;\n            var r = 31 - cu(n);\n            e.entangledLanes |= n, e.entanglements[r] = 1073741824 | e.entanglements[r] | 4194218 & t;\n        }\n        function R(e, n) {\n            var t = e.entangledLanes |= n;\n            for(e = e.entanglements; t;){\n                var r = 31 - cu(t), l = 1 << r;\n                l & n | e[r] & n && (e[r] |= n), t &= ~l;\n            }\n        }\n        function T(e, n, t) {\n            if (_u) for(e = e.pendingUpdatersLaneMap; 0 < t;){\n                var r = 31 - cu(t), l = 1 << r;\n                e[r].add(n), t &= ~l;\n            }\n        }\n        function N(e, n) {\n            if (_u) for(var t = e.pendingUpdatersLaneMap, r = e.memoizedUpdaters; 0 < n;){\n                var l = 31 - cu(n);\n                e = 1 << l, 0 < (l = t[l]).size && (l.forEach(function(e) {\n                    var n = e.alternate;\n                    null !== n && r.has(n) || r.add(e);\n                }), l.clear()), n &= ~e;\n            }\n        }\n        function L(e) {\n            return 2 < (e &= -e) ? 8 < e ? 0 != (134217727 & e) ? 32 : 268435456 : 8 : 2;\n        }\n        function U(e) {\n            \"function\" == typeof zu && Cu(e);\n        }\n        function D(e, n) {\n            if (\"object\" == typeof e && null !== e) {\n                var t = Tu.get(e);\n                return void 0 !== t ? t : (n = {\n                    value: e,\n                    source: n,\n                    stack: h(n)\n                }, Tu.set(e, n), n);\n            }\n            return {\n                value: e,\n                source: n,\n                stack: h(n)\n            };\n        }\n        function I(e) {\n            for(; e === Uu;)Uu = Nu[--Lu], Nu[Lu] = null, Du = Nu[--Lu], Nu[Lu] = null;\n            for(; e === Mu;)Mu = Iu[--Fu], Iu[Fu] = null, Hu = Iu[--Fu], Iu[Fu] = null, Wu = Iu[--Fu], Iu[Fu] = null;\n        }\n        function F() {\n            console.error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\");\n        }\n        function M(e) {\n            return null === e && console.error(\"Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.\"), e;\n        }\n        function W(e, n) {\n            S(Qu, n, e), S(Au, e, e), S(ju, null, e), n = oo(n), v(ju, e), S(ju, n, e);\n        }\n        function H(e) {\n            v(ju, e), v(Au, e), v(Qu, e);\n        }\n        function j() {\n            return M(ju.current);\n        }\n        function A(e) {\n            null !== e.memoizedState && S(Ou, e, e);\n            var n = M(ju.current), t = uo(n, e.type);\n            n !== t && (S(Au, e, e), S(ju, t, e));\n        }\n        function Q(e) {\n            Au.current === e && (v(ju, e), v(Au, e)), Ou.current === e && (v(Ou, e), Uo._currentValue2 = Lo);\n        }\n        function O() {\n            for(var e = Yu, n = Gu = Yu = 0; n < e;){\n                var t = qu[n];\n                qu[n++] = null;\n                var r = qu[n];\n                qu[n++] = null;\n                var l = qu[n];\n                qu[n++] = null;\n                var a = qu[n];\n                if (qu[n++] = null, null !== r && null !== l) {\n                    var o = r.pending;\n                    null === o ? l.next = l : (l.next = o.next, o.next = l), r.pending = l;\n                }\n                0 !== a && q(t, l, a);\n            }\n        }\n        function B(e, n, t, r) {\n            qu[Yu++] = e, qu[Yu++] = n, qu[Yu++] = t, qu[Yu++] = r, Gu |= r, e.lanes |= r, null !== (e = e.alternate) && (e.lanes |= r);\n        }\n        function V(e, n, t, r) {\n            return B(e, n, t, r), Y(e);\n        }\n        function $(e, n) {\n            return B(e, null, null, n), Y(e);\n        }\n        function q(e, n, t) {\n            e.lanes |= t;\n            var r = e.alternate;\n            null !== r && (r.lanes |= t);\n            for(var l = !1, a = e.return; null !== a;)a.childLanes |= t, null !== (r = a.alternate) && (r.childLanes |= t), 22 === a.tag && (null === (e = a.stateNode) || 1 & e._visibility || (l = !0)), e = a, a = a.return;\n            l && null !== n && 3 === e.tag && (a = e.stateNode, l = 31 - cu(t), null === (e = (a = a.hiddenUpdates)[l]) ? a[l] = [\n                n\n            ] : e.push(n), n.lane = 536870912 | t);\n        }\n        function Y(e) {\n            if (Yf > qf) throw Zf = Yf = 0, ed = Gf = null, Error(\"Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.\");\n            Zf > Xf && (Zf = 0, ed = null, console.error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")), null === e.alternate && 0 != (4098 & e.flags) && ua(e);\n            for(var n = e, t = n.return; null !== t;)null === n.alternate && 0 != (4098 & n.flags) && ua(e), t = (n = t).return;\n            return 3 === n.tag ? n.stateNode : null;\n        }\n        function G() {\n            var e = Zu;\n            return Zu = 0, e;\n        }\n        function J(e) {\n            var n = Zu;\n            return Zu = e, n;\n        }\n        function K(e) {\n            var n = Zu;\n            return Zu += e, n;\n        }\n        function X(e) {\n            Xu = Ju(), 0 > e.actualStartTime && (e.actualStartTime = Xu);\n        }\n        function Z(e) {\n            if (0 <= Xu) {\n                var n = Ju() - Xu;\n                e.actualDuration += n, e.selfBaseDuration = n, Xu = -1;\n            }\n        }\n        function ee(e) {\n            if (0 <= Xu) {\n                var n = Ju() - Xu;\n                e.actualDuration += n, Xu = -1;\n            }\n        }\n        function ne() {\n            if (0 <= Xu) {\n                var e = Ju() - Xu;\n                Xu = -1, Zu += e;\n            }\n        }\n        function te() {\n            Xu = Ju();\n        }\n        function re(e) {\n            for(var n = e.child; n;)e.actualDuration += n.actualDuration, n = n.sibling;\n        }\n        function le(e) {\n            e !== ri && null === e.next && (null === ri ? ti = ri = e : ri = ri.next = e), oi = !0, null !== Ja.actQueue ? ai || (ai = !0, fe(oe)) : li || (li = !0, fe(oe));\n        }\n        function ae(e, n) {\n            if (!ui && oi) {\n                ui = !0;\n                do {\n                    for(var t = !1, r = ti; null !== r;){\n                        if (0 !== e) {\n                            var l = r.pendingLanes;\n                            if (0 === l) var a = 0;\n                            else {\n                                var o = r.suspendedLanes, u = r.pingedLanes;\n                                a = (1 << 31 - cu(42 | e) + 1) - 1, a = 201326677 & (a &= l & ~(o & ~u)) ? 201326677 & a | 1 : a ? 2 | a : 0;\n                            }\n                            0 !== a && (t = !0, se(r, a));\n                        } else a = df, 0 != (3 & (a = w(r, r === cf ? a : 0))) && (t = !0, se(r, a));\n                        r = r.next;\n                    }\n                }while (t);\n                ui = !1;\n            }\n        }\n        function oe() {\n            oi = ai = li = !1;\n            var e = 0;\n            0 !== ii && (Co() && (e = ii), ii = 0);\n            for(var n = vu(), t = null, r = ti; null !== r;){\n                var l = r.next, a = ue(r, n);\n                0 === a ? (r.next = null, null === t ? ti = l : t.next = l, null === l && (ri = t)) : (t = r, (0 !== e || 0 != (3 & a)) && (oi = !0)), r = l;\n            }\n            ae(e);\n        }\n        function ue(e, n) {\n            for(var t = e.suspendedLanes, r = e.pingedLanes, l = e.expirationTimes, a = -62914561 & e.pendingLanes; 0 < a;){\n                var o = 31 - cu(a), u = 1 << o, i = l[o];\n                -1 === i ? 0 != (u & t) && 0 == (u & r) || (l[o] = x(u, n)) : i <= n && (e.expiredLanes |= u), a &= ~u;\n            }\n            if (t = df, t = w(e, e === (n = cf) ? t : 0), r = e.callbackNode, 0 === t || e === n && wf === hf || null !== e.cancelPendingCommit) return null !== r && ce(r), e.callbackNode = null, e.callbackPriority = 0;\n            if (0 != (3 & t)) return null !== r && ce(r), e.callbackPriority = 2, e.callbackNode = null, 2;\n            if ((n = t & -t) === e.callbackPriority && (null === Ja.actQueue || r === si)) return n;\n            switch(ce(r), L(t)){\n                case 2:\n                    t = Su;\n                    break;\n                case 8:\n                    t = ku;\n                    break;\n                case 32:\n                default:\n                    t = wu;\n                    break;\n                case 268435456:\n                    t = xu;\n            }\n            return r = ie.bind(null, e), null !== Ja.actQueue ? (Ja.actQueue.push(r), t = si) : t = hu(t, r), e.callbackPriority = n, e.callbackNode = t, n;\n        }\n        function ie(e, n) {\n            ni = ei = !1;\n            var t = e.callbackNode;\n            if (Jl() && e.callbackNode !== t) return null;\n            var r = df;\n            return 0 === (r = w(e, e === cf ? r : 0)) ? null : (El(e, r, n), ue(e, vu()), e.callbackNode === t ? ie.bind(null, e) : null);\n        }\n        function se(e, n) {\n            if (Jl()) return null;\n            ei = ni, ni = !1, El(e, n, !0);\n        }\n        function ce(e) {\n            e !== si && null !== e && gu(e);\n        }\n        function fe(e) {\n            null !== Ja.actQueue && Ja.actQueue.push(function() {\n                return e(), null;\n            }), hu(Su, e);\n        }\n        function de() {\n            return 0 === ii && (ii = z()), ii;\n        }\n        function pe() {\n            if (0 == --fi && null !== ci) {\n                null !== pi && (pi.status = \"fulfilled\");\n                var e = ci;\n                ci = null, di = 0, pi = null;\n                for(var n = 0; n < e.length; n++)(0, e[n])();\n            }\n        }\n        function me(e) {\n            e.updateQueue = {\n                baseState: e.memoizedState,\n                firstBaseUpdate: null,\n                lastBaseUpdate: null,\n                shared: {\n                    pending: null,\n                    lanes: 0,\n                    hiddenCallbacks: null\n                },\n                callbacks: null\n            };\n        }\n        function he(e, n) {\n            e = e.updateQueue, n.updateQueue === e && (n.updateQueue = {\n                baseState: e.baseState,\n                firstBaseUpdate: e.firstBaseUpdate,\n                lastBaseUpdate: e.lastBaseUpdate,\n                shared: e.shared,\n                callbacks: null\n            });\n        }\n        function ge(e) {\n            return {\n                lane: e,\n                tag: mi,\n                payload: null,\n                callback: null,\n                next: null\n            };\n        }\n        function ye(e, n, t) {\n            var r = e.updateQueue;\n            if (null === r) return null;\n            if (r = r.shared, Si === r && !vi) {\n                var l = c(e);\n                console.error(\"An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\\n\\nPlease update the following component: %s\", l), vi = !0;\n            }\n            return (sf & Zc) !== Xc ? (null === (l = r.pending) ? n.next = n : (n.next = l.next, l.next = n), r.pending = n, n = Y(e), q(e, null, t), n) : (B(e, r, n, t), Y(e));\n        }\n        function be(e, n, t) {\n            if (null !== (n = n.updateQueue) && (n = n.shared, 0 != (4194176 & t))) {\n                var r = n.lanes;\n                t |= r &= e.pendingLanes, n.lanes = t, R(e, t);\n            }\n        }\n        function ve(e, n) {\n            var t = e.updateQueue, r = e.alternate;\n            if (null !== r && t === (r = r.updateQueue)) {\n                var l = null, a = null;\n                if (null !== (t = t.firstBaseUpdate)) {\n                    do {\n                        var o = {\n                            lane: t.lane,\n                            tag: t.tag,\n                            payload: t.payload,\n                            callback: null,\n                            next: null\n                        };\n                        null === a ? l = a = o : a = a.next = o, t = t.next;\n                    }while (null !== t);\n                    null === a ? l = a = n : a = a.next = n;\n                } else l = a = n;\n                return t = {\n                    baseState: r.baseState,\n                    firstBaseUpdate: l,\n                    lastBaseUpdate: a,\n                    shared: r.shared,\n                    callbacks: r.callbacks\n                }, void (e.updateQueue = t);\n            }\n            null === (e = t.lastBaseUpdate) ? t.firstBaseUpdate = n : e.next = n, t.lastBaseUpdate = n;\n        }\n        function Se() {\n            if (ki && null !== pi) throw pi;\n        }\n        function ke(e, n, t, r) {\n            ki = !1;\n            var l = e.updateQueue;\n            bi = !1, Si = l.shared;\n            var a = l.firstBaseUpdate, o = l.lastBaseUpdate, u = l.shared.pending;\n            if (null !== u) {\n                l.shared.pending = null;\n                var i = u, s = i.next;\n                i.next = null, null === o ? a = s : o.next = s, o = i;\n                var c = e.alternate;\n                null !== c && (u = (c = c.updateQueue).lastBaseUpdate) !== o && (null === u ? c.firstBaseUpdate = s : u.next = s, c.lastBaseUpdate = i);\n            }\n            if (null !== a) {\n                var f = l.baseState;\n                for(o = 0, c = s = i = null, u = a;;){\n                    var d = -536870913 & u.lane, p = d !== u.lane;\n                    if (p ? (df & d) === d : (r & d) === d) {\n                        0 !== d && d === di && (ki = !0), null !== c && (c = c.next = {\n                            lane: 0,\n                            tag: u.tag,\n                            payload: u.payload,\n                            callback: null,\n                            next: null\n                        });\n                        e: {\n                            d = e;\n                            var m = u, h = n, g = t;\n                            switch(m.tag){\n                                case hi:\n                                    if (\"function\" == typeof (m = m.payload)) {\n                                        Rc = !0;\n                                        var y = m.call(g, f, h);\n                                        if (8 & d.mode) {\n                                            U(!0);\n                                            try {\n                                                m.call(g, f, h);\n                                            } finally{\n                                                U(!1);\n                                            }\n                                        }\n                                        Rc = !1, f = y;\n                                        break e;\n                                    }\n                                    f = m;\n                                    break e;\n                                case yi:\n                                    d.flags = -65537 & d.flags | 128;\n                                case mi:\n                                    if (\"function\" == typeof (y = m.payload)) {\n                                        if (Rc = !0, m = y.call(g, f, h), 8 & d.mode) {\n                                            U(!0);\n                                            try {\n                                                y.call(g, f, h);\n                                            } finally{\n                                                U(!1);\n                                            }\n                                        }\n                                        Rc = !1;\n                                    } else m = y;\n                                    if (null == m) break e;\n                                    f = Na({}, f, m);\n                                    break e;\n                                case gi:\n                                    bi = !0;\n                            }\n                        }\n                        null !== (d = u.callback) && (e.flags |= 64, p && (e.flags |= 8192), null === (p = l.callbacks) ? l.callbacks = [\n                            d\n                        ] : p.push(d));\n                    } else p = {\n                        lane: d,\n                        tag: u.tag,\n                        payload: u.payload,\n                        callback: u.callback,\n                        next: null\n                    }, null === c ? (s = c = p, i = f) : c = c.next = p, o |= d;\n                    if (null === (u = u.next)) {\n                        if (null === (u = l.shared.pending)) break;\n                        u = (p = u).next, p.next = null, l.lastBaseUpdate = p, l.shared.pending = null;\n                    }\n                }\n                null === c && (i = f), l.baseState = i, l.firstBaseUpdate = s, l.lastBaseUpdate = c, null === a && (l.shared.lanes = 0), _f |= o, e.lanes = o, e.memoizedState = f;\n            }\n            Si = null;\n        }\n        function we(e, n) {\n            if (\"function\" != typeof e) throw Error(\"Invalid argument passed as callback. Expected a function. Instead received: \" + e);\n            e.call(n);\n        }\n        function xe(e, n) {\n            var t = e.shared.hiddenCallbacks;\n            if (null !== t) for(e.shared.hiddenCallbacks = null, e = 0; e < t.length; e++)we(t[e], n);\n        }\n        function ze(e, n) {\n            var t = e.callbacks;\n            if (null !== t) for(e.callbacks = null, e = 0; e < t.length; e++)we(t[e], n);\n        }\n        function Ce(e, n) {\n            if (Ru(e, n)) return !0;\n            if (\"object\" != typeof e || null === e || \"object\" != typeof n || null === n) return !1;\n            var t = Object.keys(e), r = Object.keys(n);\n            if (t.length !== r.length) return !1;\n            for(r = 0; r < t.length; r++){\n                var l = t[r];\n                if (!wi.call(n, l) || !Ru(e[l], n[l])) return !1;\n            }\n            return !0;\n        }\n        function Ee(e) {\n            return \"fulfilled\" === (e = e.status) || \"rejected\" === e;\n        }\n        function Pe() {}\n        function _e(e, n, t) {\n            null !== Ja.actQueue && (Ja.didUsePromise = !0);\n            var r = e.thenables;\n            switch(void 0 === (t = r[t]) ? r.push(n) : t !== n && (e.didWarnAboutUncachedPromise || (e.didWarnAboutUncachedPromise = !0, console.error(\"A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.\")), n.then(Pe, Pe), n = t), n.status){\n                case \"fulfilled\":\n                    return n.value;\n                case \"rejected\":\n                    throw Te(e = n.reason), e;\n                default:\n                    if (\"string\" == typeof n.status) n.then(Pe, Pe);\n                    else {\n                        if (null !== (e = cf) && 100 < e.shellSuspendCounter) throw Error(\"async/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\");\n                        (e = n).status = \"pending\", e.then(function(e) {\n                            if (\"pending\" === n.status) {\n                                var t = n;\n                                t.status = \"fulfilled\", t.value = e;\n                            }\n                        }, function(e) {\n                            if (\"pending\" === n.status) {\n                                var t = n;\n                                t.status = \"rejected\", t.reason = e;\n                            }\n                        });\n                    }\n                    switch(n.status){\n                        case \"fulfilled\":\n                            return n.value;\n                        case \"rejected\":\n                            throw Te(e = n.reason), e;\n                    }\n                    throw Mi = n, Wi = !0, Di;\n            }\n        }\n        function Re() {\n            if (null === Mi) throw Error(\"Expected a suspended thenable. This is a bug in React. Please file an issue.\");\n            var e = Mi;\n            return Mi = null, Wi = !1, e;\n        }\n        function Te(e) {\n            if (e === Di) throw Error(\"Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\");\n        }\n        function Ne(e) {\n            var n = as;\n            return null != e && (as = null === n ? e : n.concat(e)), n;\n        }\n        function Le(e, n, t) {\n            for(var r = Object.keys(e.props), l = 0; l < r.length; l++){\n                var a = r[l];\n                if (\"children\" !== a && \"key\" !== a) {\n                    null === n && ((n = ma(e, t.mode, 0))._debugInfo = as, n.return = t), y(n, function(e) {\n                        console.error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", e);\n                    }, a);\n                    break;\n                }\n            }\n        }\n        function Ue(e) {\n            var n = ls;\n            return ls += 1, null === rs && (rs = {\n                didWarnAboutUncachedPromise: !1,\n                thenables: []\n            }), _e(rs, e, n);\n        }\n        function De(e, n, t, r) {\n            e = r.props.ref, t.ref = void 0 !== e ? e : null;\n        }\n        function Ie(e, n) {\n            if (n.$$typeof === La) throw Error('A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.');\n            throw e = Object.prototype.toString.call(n), Error(\"Objects are not valid as a React child (found: \" + (\"[object Object]\" === e ? \"object with keys {\" + Object.keys(n).join(\", \") + \"}\" : e) + \"). If you meant to render a collection of children, use an array instead.\");\n        }\n        function Fe(e, n) {\n            var t = c(e) || \"Component\";\n            is[t] || (is[t] = !0, n = n.displayName || n.name || \"Component\", 3 === e.tag ? console.error(\"Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\\n  root.render(%s)\", n, n, n) : console.error(\"Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\\n  <%s>{%s}</%s>\", n, n, t, n, t));\n        }\n        function Me(e, n) {\n            var t = c(e) || \"Component\";\n            ss[t] || (ss[t] = !0, n = String(n), 3 === e.tag ? console.error(\"Symbols are not valid as a React child.\\n  root.render(%s)\", n) : console.error(\"Symbols are not valid as a React child.\\n  <%s>%s</%s>\", t, n, t));\n        }\n        function We(e) {\n            function n(n, t) {\n                if (e) {\n                    var r = n.deletions;\n                    null === r ? (n.deletions = [\n                        t\n                    ], n.flags |= 16) : r.push(t);\n                }\n            }\n            function r(t, r) {\n                if (!e) return null;\n                for(; null !== r;)n(t, r), r = r.sibling;\n                return null;\n            }\n            function l(e) {\n                for(var n = new Map; null !== e;)null !== e.key ? n.set(e.key, e) : n.set(e.index, e), e = e.sibling;\n                return n;\n            }\n            function o(e, n) {\n                return (e = fa(e, n)).index = 0, e.sibling = null, e;\n            }\n            function u(n, t, r) {\n                return n.index = r, e ? null !== (r = n.alternate) ? (r = r.index) < t ? (n.flags |= 33554434, t) : r : (n.flags |= 33554434, t) : (n.flags |= 1048576, t);\n            }\n            function s(n) {\n                return e && null === n.alternate && (n.flags |= 33554434), n;\n            }\n            function c(e, n, t, r) {\n                return null === n || 6 !== n.tag ? ((n = ya(t, e.mode, r)).return = e, n._debugOwner = e, n._debugInfo = as, n) : ((n = o(n, t)).return = e, n._debugInfo = as, n);\n            }\n            function f(e, n, t, r) {\n                var l = t.type;\n                return l === Ia ? (Le(t, n = p(e, n, t.props.children, r, t.key), e), n) : null !== n && (n.elementType === l || \"object\" == typeof l && null !== l && l.$$typeof === Va && ts(l) === n.type) ? (De(e, 0, r = o(n, t.props), t), r.return = e, r._debugOwner = t._owner, r._debugInfo = as, r) : (De(e, 0, r = ma(t, e.mode, r), t), r.return = e, r._debugInfo = as, r);\n            }\n            function d(e, n, t, r) {\n                return null === n || 4 !== n.tag || n.stateNode.containerInfo !== t.containerInfo || n.stateNode.implementation !== t.implementation ? ((n = ba(t, e.mode, r)).return = e, n._debugInfo = as, n) : ((n = o(n, t.children || [])).return = e, n._debugInfo = as, n);\n            }\n            function p(e, n, t, r, l) {\n                return null === n || 7 !== n.tag ? ((n = ha(t, e.mode, r, l)).return = e, n._debugOwner = e, n._debugInfo = as, n) : ((n = o(n, t)).return = e, n._debugInfo = as, n);\n            }\n            function m(e, n, t) {\n                if (\"string\" == typeof n && \"\" !== n || \"number\" == typeof n || \"bigint\" == typeof n) return (n = ya(\"\" + n, e.mode, t)).return = e, n._debugOwner = e, n._debugInfo = as, n;\n                if (\"object\" == typeof n && null !== n) {\n                    switch(n.$$typeof){\n                        case Ua:\n                            return De(e, 0, t = ma(n, e.mode, t), n), t.return = e, e = Ne(n._debugInfo), t._debugInfo = as, as = e, t;\n                        case Da:\n                            return (n = ba(n, e.mode, t)).return = e, n._debugInfo = as, n;\n                        case Va:\n                            var r = Ne(n._debugInfo);\n                            return e = m(e, n = ts(n), t), as = r, e;\n                    }\n                    if (lo(n) || i(n)) return (t = ha(n, e.mode, t, null)).return = e, t._debugOwner = e, e = Ne(n._debugInfo), t._debugInfo = as, as = e, t;\n                    if (\"function\" == typeof n.then) return r = Ne(n._debugInfo), e = m(e, Ue(n), t), as = r, e;\n                    if (n.$$typeof === ja) return m(e, cr(e, n), t);\n                    Ie(e, n);\n                }\n                return \"function\" == typeof n && Fe(e, n), \"symbol\" == typeof n && Me(e, n), null;\n            }\n            function h(e, n, t, r) {\n                var l = null !== n ? n.key : null;\n                if (\"string\" == typeof t && \"\" !== t || \"number\" == typeof t || \"bigint\" == typeof t) return null !== l ? null : c(e, n, \"\" + t, r);\n                if (\"object\" == typeof t && null !== t) {\n                    switch(t.$$typeof){\n                        case Ua:\n                            return t.key === l ? (l = Ne(t._debugInfo), e = f(e, n, t, r), as = l, e) : null;\n                        case Da:\n                            return t.key === l ? d(e, n, t, r) : null;\n                        case Va:\n                            return l = Ne(t._debugInfo), e = h(e, n, t = ts(t), r), as = l, e;\n                    }\n                    if (lo(t) || i(t)) return null !== l ? null : (l = Ne(t._debugInfo), e = p(e, n, t, r, null), as = l, e);\n                    if (\"function\" == typeof t.then) return l = Ne(t._debugInfo), e = h(e, n, Ue(t), r), as = l, e;\n                    if (t.$$typeof === ja) return h(e, n, cr(e, t), r);\n                    Ie(e, t);\n                }\n                return \"function\" == typeof t && Fe(e, t), \"symbol\" == typeof t && Me(e, t), null;\n            }\n            function g(e, n, t, r, l) {\n                if (\"string\" == typeof r && \"\" !== r || \"number\" == typeof r || \"bigint\" == typeof r) return c(n, e = e.get(t) || null, \"\" + r, l);\n                if (\"object\" == typeof r && null !== r) {\n                    switch(r.$$typeof){\n                        case Ua:\n                            return t = e.get(null === r.key ? t : r.key) || null, e = Ne(r._debugInfo), n = f(n, t, r, l), as = e, n;\n                        case Da:\n                            return d(n, e = e.get(null === r.key ? t : r.key) || null, r, l);\n                        case Va:\n                            var a = Ne(r._debugInfo);\n                            return n = g(e, n, t, r = ts(r), l), as = a, n;\n                    }\n                    if (lo(r) || i(r)) return t = e.get(t) || null, e = Ne(r._debugInfo), n = p(n, t, r, l, null), as = e, n;\n                    if (\"function\" == typeof r.then) return a = Ne(r._debugInfo), n = g(e, n, t, Ue(r), l), as = a, n;\n                    if (r.$$typeof === ja) return g(e, n, t, cr(n, r), l);\n                    Ie(n, r);\n                }\n                return \"function\" == typeof r && Fe(n, r), \"symbol\" == typeof r && Me(n, r), null;\n            }\n            function b(e, n, t, r) {\n                if (\"object\" != typeof t || null === t) return r;\n                switch(t.$$typeof){\n                    case Ua:\n                    case Da:\n                        a(e, n, t);\n                        var l = t.key;\n                        if (\"string\" != typeof l) break;\n                        if (null === r) {\n                            (r = new Set).add(l);\n                            break;\n                        }\n                        if (!r.has(l)) {\n                            r.add(l);\n                            break;\n                        }\n                        y(n, function() {\n                            console.error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.\", l);\n                        });\n                        break;\n                    case Va:\n                        b(e, n, t = ts(t), r);\n                }\n                return r;\n            }\n            function v(t, a, c, f) {\n                if (\"object\" == typeof c && null !== c && c.type === Ia && null === c.key && (Le(c, null, t), c = c.props.children), \"object\" == typeof c && null !== c) {\n                    switch(c.$$typeof){\n                        case Ua:\n                            var d = Ne(c._debugInfo);\n                            e: {\n                                for(var p = c.key, y = a; null !== y;){\n                                    if (y.key === p) {\n                                        if ((p = c.type) === Ia) {\n                                            if (7 === y.tag) {\n                                                r(t, y.sibling), (a = o(y, c.props.children)).return = t, a._debugOwner = c._owner, a._debugInfo = as, Le(c, a, t), t = a;\n                                                break e;\n                                            }\n                                        } else if (y.elementType === p || \"object\" == typeof p && null !== p && p.$$typeof === Va && ts(p) === y.type) {\n                                            r(t, y.sibling), De(t, 0, a = o(y, c.props), c), a.return = t, a._debugOwner = c._owner, a._debugInfo = as, t = a;\n                                            break e;\n                                        }\n                                        r(t, y);\n                                        break;\n                                    }\n                                    n(t, y), y = y.sibling;\n                                }\n                                c.type === Ia ? ((a = ha(c.props.children, t.mode, f, c.key)).return = t, a._debugOwner = t, a._debugInfo = as, Le(c, a, t), t = a) : (De(t, 0, f = ma(c, t.mode, f), c), f.return = t, f._debugInfo = as, t = f);\n                            }\n                            return t = s(t), as = d, t;\n                        case Da:\n                            e: {\n                                for(c = (d = c).key; null !== a;){\n                                    if (a.key === c) {\n                                        if (4 === a.tag && a.stateNode.containerInfo === d.containerInfo && a.stateNode.implementation === d.implementation) {\n                                            r(t, a.sibling), (a = o(a, d.children || [])).return = t, t = a;\n                                            break e;\n                                        }\n                                        r(t, a);\n                                        break;\n                                    }\n                                    n(t, a), a = a.sibling;\n                                }\n                                (a = ba(d, t.mode, f)).return = t, t = a;\n                            }\n                            return s(t);\n                        case Va:\n                            return d = Ne(c._debugInfo), t = v(t, a, c = ts(c), f), as = d, t;\n                    }\n                    if (lo(c)) return d = Ne(c._debugInfo), t = function(t, a, o, i) {\n                        for(var s = null, c = null, f = null, d = a, p = a = 0, y = null; null !== d && p < o.length; p++){\n                            d.index > p ? (y = d, d = null) : y = d.sibling;\n                            var v = h(t, d, o[p], i);\n                            if (null === v) {\n                                null === d && (d = y);\n                                break;\n                            }\n                            s = b(t, v, o[p], s), e && d && null === v.alternate && n(t, d), a = u(v, a, p), null === f ? c = v : f.sibling = v, f = v, d = y;\n                        }\n                        if (p === o.length) return r(t, d), c;\n                        if (null === d) {\n                            for(; p < o.length; p++)null !== (d = m(t, o[p], i)) && (s = b(t, d, o[p], s), a = u(d, a, p), null === f ? c = d : f.sibling = d, f = d);\n                            return c;\n                        }\n                        for(d = l(d); p < o.length; p++)null !== (y = g(d, t, p, o[p], i)) && (s = b(t, y, o[p], s), e && null !== y.alternate && d.delete(null === y.key ? p : y.key), a = u(y, a, p), null === f ? c = y : f.sibling = y, f = y);\n                        return e && d.forEach(function(e) {\n                            return n(t, e);\n                        }), c;\n                    }(t, a, c, f), as = d, t;\n                    if (i(c)) {\n                        if (d = Ne(c._debugInfo), \"function\" != typeof (y = i(c))) throw Error(\"An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.\");\n                        return (p = y.call(c)) === c ? 0 === t.tag && \"[object GeneratorFunction]\" === Object.prototype.toString.call(t.type) && \"[object Generator]\" === Object.prototype.toString.call(p) || (os || console.error(\"Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items.\"), os = !0) : c.entries !== y || Ui || (console.error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\"), Ui = !0), t = function(t, a, o, i) {\n                            if (null == o) throw Error(\"An iterable object provided no iterator.\");\n                            for(var s = null, c = null, f = a, d = a = 0, p = null, y = null, v = o.next(); null !== f && !v.done; d++, v = o.next()){\n                                f.index > d ? (p = f, f = null) : p = f.sibling;\n                                var S = h(t, f, v.value, i);\n                                if (null === S) {\n                                    null === f && (f = p);\n                                    break;\n                                }\n                                y = b(t, S, v.value, y), e && f && null === S.alternate && n(t, f), a = u(S, a, d), null === c ? s = S : c.sibling = S, c = S, f = p;\n                            }\n                            if (v.done) return r(t, f), s;\n                            if (null === f) {\n                                for(; !v.done; d++, v = o.next())null !== (f = m(t, v.value, i)) && (y = b(t, f, v.value, y), a = u(f, a, d), null === c ? s = f : c.sibling = f, c = f);\n                                return s;\n                            }\n                            for(f = l(f); !v.done; d++, v = o.next())null !== (p = g(f, t, d, v.value, i)) && (y = b(t, p, v.value, y), e && null !== p.alternate && f.delete(null === p.key ? d : p.key), a = u(p, a, d), null === c ? s = p : c.sibling = p, c = p);\n                            return e && f.forEach(function(e) {\n                                return n(t, e);\n                            }), s;\n                        }(t, a, p, f), as = d, t;\n                    }\n                    if (\"function\" == typeof c.then) return d = Ne(c._debugInfo), t = v(t, a, Ue(c), f), as = d, t;\n                    if (c.$$typeof === ja) return v(t, a, cr(t, c), f);\n                    Ie(t, c);\n                }\n                return \"string\" == typeof c && \"\" !== c || \"number\" == typeof c || \"bigint\" == typeof c ? (d = \"\" + c, null !== a && 6 === a.tag ? (r(t, a.sibling), (a = o(a, d)).return = t, t = a) : (r(t, a), (a = ya(d, t.mode, f)).return = t, a._debugOwner = t, a._debugInfo = as, t = a), s(t)) : (\"function\" == typeof c && Fe(t, c), \"symbol\" == typeof c && Me(t, c), r(t, a));\n            }\n            return function(e, n, r, l) {\n                var a = as;\n                as = null;\n                try {\n                    ls = 0;\n                    var o = v(e, n, r, l);\n                    return rs = null, o;\n                } catch (n) {\n                    if (n === Di) throw n;\n                    var u = t(29, n, null, e.mode);\n                    u.lanes = l, u.return = e;\n                    var i = u._debugInfo = as;\n                    if (u._debugOwner = e._debugOwner, null != i) {\n                        for(var s = i.length - 1; 0 <= s; s--)if (\"string\" == typeof i[s].stack) {\n                            u._debugOwner = i[s];\n                            break;\n                        }\n                    }\n                    return u;\n                } finally{\n                    as = a;\n                }\n            };\n        }\n        function He(e, n) {\n            var t = Ef;\n            S(ms, t, e), S(ps, n, e), Ef = t | n.baseLanes;\n        }\n        function je(e) {\n            S(ms, Ef, e), S(ps, ps.current, e);\n        }\n        function Ae(e) {\n            Ef = ms.current, v(ps, e), v(ms, e);\n        }\n        function Qe(e) {\n            var n = e.alternate;\n            S(vs, vs.current & ys, e), S(hs, e, e), null === gs && (null === n || null !== ps.current || null !== n.memoizedState) && (gs = e);\n        }\n        function Oe(e) {\n            if (22 === e.tag) {\n                if (S(vs, vs.current, e), S(hs, e, e), null === gs) {\n                    var n = e.alternate;\n                    null !== n && null !== n.memoizedState && (gs = e);\n                }\n            } else Be(e);\n        }\n        function Be(e) {\n            S(vs, vs.current, e), S(hs, hs.current, e);\n        }\n        function Ve(e) {\n            v(hs, e), gs === e && (gs = null), v(vs, e);\n        }\n        function $e(e) {\n            for(var n = e; null !== n;){\n                if (13 === n.tag) {\n                    var t = n.memoizedState;\n                    if (null !== t && (null === (t = t.dehydrated) || Jo(t) || Ko(t))) return n;\n                } else if (19 === n.tag && void 0 !== n.memoizedProps.revealOrder) {\n                    if (0 != (128 & n.flags)) return n;\n                } else if (null !== n.child) {\n                    n.child.return = n, n = n.child;\n                    continue;\n                }\n                if (n === e) break;\n                for(; null === n.sibling;){\n                    if (null === n.return || n.return === e) return null;\n                    n = n.return;\n                }\n                n.sibling.return = n.return, n = n.sibling;\n            }\n            return null;\n        }\n        function qe() {\n            var e = As;\n            null === Qs ? Qs = [\n                e\n            ] : Qs.push(e);\n        }\n        function Ye() {\n            var e = As;\n            if (null !== Qs && (Os++, Qs[Os] !== e)) {\n                var n = c(Ts);\n                if (!Cs.has(n) && (Cs.add(n), null !== Qs)) {\n                    for(var t = \"\", r = 0; r <= Os; r++){\n                        var l = Qs[r], a = r === Os ? e : l;\n                        for(l = r + 1 + \". \" + l; 30 > l.length;)l += \" \";\n                        t += l += a + \"\\n\";\n                    }\n                    console.error(\"React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\\n\\n   Previous render            Next render\\n   ------------------------------------------------------\\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\", n, t);\n                }\n            }\n        }\n        function Ge(e) {\n            null == e || lo(e) || console.error(\"%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.\", As, typeof e);\n        }\n        function Je() {\n            var e = c(Ts);\n            _s.has(e) || (_s.add(e), console.error(\"ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.\", e));\n        }\n        function Ke() {\n            throw Error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n        }\n        function Xe(e, n) {\n            if (Bs) return !1;\n            if (null === n) return console.error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\", As), !1;\n            e.length !== n.length && console.error(\"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\", As, \"[\" + n.join(\", \") + \"]\", \"[\" + e.join(\", \") + \"]\");\n            for(var t = 0; t < n.length && t < e.length; t++)if (!Ru(e[t], n[t])) return !1;\n            return !0;\n        }\n        function Ze(e, n, t, r, l, a) {\n            Rs = a, Ts = n, Qs = null !== e ? e._debugHookTypes : null, Os = -1, Bs = null !== e && e.type !== n.type, \"[object AsyncFunction]\" !== Object.prototype.toString.call(t) && \"[object AsyncGeneratorFunction]\" !== Object.prototype.toString.call(t) || (a = c(Ts), Ps.has(a) || (Ps.add(a), console.error(\"async/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\"))), n.memoizedState = null, n.updateQueue = null, n.lanes = 0, Ja.H = null !== e && null !== e.memoizedState ? Gs : null !== Qs ? Ys : qs, Is = a = (8 & n.mode) !== $u;\n            var o = ji(t, r, l);\n            if (Is = !1, Ds && (o = nn(n, t, r, l)), a) {\n                U(!0);\n                try {\n                    o = nn(n, t, r, l);\n                } finally{\n                    U(!1);\n                }\n            }\n            return en(e, n), o;\n        }\n        function en(e, n) {\n            n._debugHookTypes = Qs, null === n.dependencies ? null !== Ws && (n.dependencies = {\n                lanes: 0,\n                firstContext: null,\n                _debugThenableState: Ws\n            }) : n.dependencies._debugThenableState = Ws, Ja.H = $s;\n            var t = null !== Ns && null !== Ns.next;\n            if (Rs = 0, Qs = As = Ls = Ns = Ts = null, Os = -1, null !== e && (31457280 & e.flags) != (31457280 & n.flags) && console.error(\"Internal React error: Expected static flag was missing. Please notify the React team.\"), Us = !1, Ms = 0, Ws = null, t) throw Error(\"Rendered fewer hooks than expected. This may be caused by an accidental early return statement.\");\n            null === e || pc || null !== (e = e.dependencies) && ur(e) && (pc = !0), Wi ? (Wi = !1, e = !0) : e = !1, e && (n = c(n) || \"Unknown\", Es.has(n) || Ps.has(n) || (Es.add(n), console.error(\"`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.\")));\n        }\n        function nn(e, n, t, r) {\n            Ts = e;\n            var l = 0;\n            do {\n                if (Ds && (Ws = null), Ms = 0, Ds = !1, l >= js) throw Error(\"Too many re-renders. React limits the number of renders to prevent an infinite loop.\");\n                if (l += 1, Bs = !1, Ls = Ns = null, null != e.updateQueue) {\n                    var a = e.updateQueue;\n                    a.lastEffect = null, a.events = null, a.stores = null, null != a.memoCache && (a.memoCache.index = 0);\n                }\n                Os = -1, Ja.H = Js, a = ji(n, t, r);\n            }while (Ds);\n            return a;\n        }\n        function tn() {\n            var e = Ja.H, n = e.useState()[0];\n            return n = \"function\" == typeof n.then ? sn(n) : n, e = e.useState()[0], (null !== Ns ? Ns.memoizedState : null) !== e && (Ts.flags |= 1024), n;\n        }\n        function rn() {\n            var e = 0 !== Fs;\n            return Fs = 0, e;\n        }\n        function ln(e, n, t) {\n            n.updateQueue = e.updateQueue, n.flags = (16 & n.mode) !== $u ? -201328645 & n.flags : -2053 & n.flags, e.lanes &= ~t;\n        }\n        function an(e) {\n            if (Us) {\n                for(e = e.memoizedState; null !== e;){\n                    var n = e.queue;\n                    null !== n && (n.pending = null), e = e.next;\n                }\n                Us = !1;\n            }\n            Rs = 0, Qs = Ls = Ns = Ts = null, Os = -1, As = null, Ds = !1, Ms = Fs = 0, Ws = null;\n        }\n        function on() {\n            var e = {\n                memoizedState: null,\n                baseState: null,\n                baseQueue: null,\n                queue: null,\n                next: null\n            };\n            return null === Ls ? Ts.memoizedState = Ls = e : Ls = Ls.next = e, Ls;\n        }\n        function un() {\n            if (null === Ns) {\n                var e = Ts.alternate;\n                e = null !== e ? e.memoizedState : null;\n            } else e = Ns.next;\n            var n = null === Ls ? Ts.memoizedState : Ls.next;\n            if (null !== n) Ls = n, Ns = e;\n            else {\n                if (null === e) {\n                    if (null === Ts.alternate) throw Error(\"Update hook called on initial render. This is likely a bug in React. Please file an issue.\");\n                    throw Error(\"Rendered more hooks than during the previous render.\");\n                }\n                e = {\n                    memoizedState: (Ns = e).memoizedState,\n                    baseState: Ns.baseState,\n                    baseQueue: Ns.baseQueue,\n                    queue: Ns.queue,\n                    next: null\n                }, null === Ls ? Ts.memoizedState = Ls = e : Ls = Ls.next = e;\n            }\n            return Ls;\n        }\n        function sn(e) {\n            var n = Ms;\n            return Ms += 1, null === Ws && (Ws = {\n                didWarnAboutUncachedPromise: !1,\n                thenables: []\n            }), e = _e(Ws, e, n), n = Ts, null === (null === Ls ? n.memoizedState : Ls.next) && (n = n.alternate, Ja.H = null !== n && null !== n.memoizedState ? Gs : qs), e;\n        }\n        function cn(e) {\n            if (null !== e && \"object\" == typeof e) {\n                if (\"function\" == typeof e.then) return sn(e);\n                if (e.$$typeof === ja) return sr(e);\n            }\n            throw Error(\"An unsupported type was passed to use(): \" + String(e));\n        }\n        function fn(e) {\n            var n = null, t = Ts.updateQueue;\n            if (null !== t && (n = t.memoCache), null == n) {\n                var r = Ts.alternate;\n                null !== r && null !== (r = r.updateQueue) && null != (r = r.memoCache) && (n = {\n                    data: r.data.map(function(e) {\n                        return e.slice();\n                    }),\n                    index: 0\n                });\n            }\n            if (null == n && (n = {\n                data: [],\n                index: 0\n            }), null === t && (t = Vs(), Ts.updateQueue = t), t.memoCache = n, void 0 === (t = n.data[n.index]) || Bs) for(t = n.data[n.index] = Array(e), r = 0; r < e; r++)t[r] = qa;\n            else t.length !== e && console.error(\"Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.\", t.length, e);\n            return n.index++, t;\n        }\n        function dn(e, n) {\n            return \"function\" == typeof n ? n(e) : n;\n        }\n        function pn(e, n, t) {\n            var r = on();\n            if (void 0 !== t) {\n                var l = t(n);\n                if (Is) {\n                    U(!0);\n                    try {\n                        t(n);\n                    } finally{\n                        U(!1);\n                    }\n                }\n            } else l = n;\n            return r.memoizedState = r.baseState = l, e = {\n                pending: null,\n                lanes: 0,\n                dispatch: null,\n                lastRenderedReducer: e,\n                lastRenderedState: l\n            }, r.queue = e, e = e.dispatch = mt.bind(null, Ts, e), [\n                r.memoizedState,\n                e\n            ];\n        }\n        function mn(e) {\n            return hn(un(), Ns, e);\n        }\n        function hn(e, n, t) {\n            var r = e.queue;\n            if (null === r) throw Error(\"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\");\n            r.lastRenderedReducer = t;\n            var l = e.baseQueue, a = r.pending;\n            if (null !== a) {\n                if (null !== l) {\n                    var o = l.next;\n                    l.next = a.next, a.next = o;\n                }\n                n.baseQueue !== l && console.error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\"), n.baseQueue = l = a, r.pending = null;\n            }\n            if (a = e.baseState, null === l) e.memoizedState = a;\n            else {\n                var u = o = null, i = null, s = n = l.next, c = !1;\n                do {\n                    var f = -536870913 & s.lane;\n                    if (f !== s.lane ? (df & f) === f : (Rs & f) === f) {\n                        var d = s.revertLane;\n                        if (0 === d) null !== i && (i = i.next = {\n                            lane: 0,\n                            revertLane: 0,\n                            action: s.action,\n                            hasEagerState: s.hasEagerState,\n                            eagerState: s.eagerState,\n                            next: null\n                        }), f === di && (c = !0);\n                        else {\n                            if ((Rs & d) === d) {\n                                s = s.next, d === di && (c = !0);\n                                continue;\n                            }\n                            f = {\n                                lane: 0,\n                                revertLane: s.revertLane,\n                                action: s.action,\n                                hasEagerState: s.hasEagerState,\n                                eagerState: s.eagerState,\n                                next: null\n                            }, null === i ? (u = i = f, o = a) : i = i.next = f, Ts.lanes |= d, _f |= d;\n                        }\n                        f = s.action, Is && t(a, f), a = s.hasEagerState ? s.eagerState : t(a, f);\n                    } else d = {\n                        lane: f,\n                        revertLane: s.revertLane,\n                        action: s.action,\n                        hasEagerState: s.hasEagerState,\n                        eagerState: s.eagerState,\n                        next: null\n                    }, null === i ? (u = i = d, o = a) : i = i.next = d, Ts.lanes |= f, _f |= f;\n                    s = s.next;\n                }while (null !== s && s !== n);\n                if (null === i ? o = a : i.next = u, !Ru(a, e.memoizedState) && (pc = !0, c && null !== (t = pi))) throw t;\n                e.memoizedState = a, e.baseState = o, e.baseQueue = i, r.lastRenderedState = a;\n            }\n            return null === l && (r.lanes = 0), [\n                e.memoizedState,\n                r.dispatch\n            ];\n        }\n        function gn(e) {\n            var n = un(), t = n.queue;\n            if (null === t) throw Error(\"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\");\n            t.lastRenderedReducer = e;\n            var r = t.dispatch, l = t.pending, a = n.memoizedState;\n            if (null !== l) {\n                t.pending = null;\n                var o = l = l.next;\n                do {\n                    a = e(a, o.action), o = o.next;\n                }while (o !== l);\n                Ru(a, n.memoizedState) || (pc = !0), n.memoizedState = a, null === n.baseQueue && (n.baseState = a), t.lastRenderedState = a;\n            }\n            return [\n                a,\n                r\n            ];\n        }\n        function yn(e, n, t) {\n            var r, l = Ts, a = on();\n            if (r = n(), cs || (t = n(), Ru(r, t) || (console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\"), cs = !0)), null === cf) throw Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n            return 0 != (60 & df) || vn(l, n, r), a.memoizedState = r, t = {\n                value: r,\n                getSnapshot: n\n            }, a.queue = t, $n(kn.bind(null, l, t, e), [\n                e\n            ]), l.flags |= 2048, Qn(ks | zs, Sn.bind(null, l, t, r, n), {\n                destroy: void 0\n            }, null), r;\n        }\n        function bn(e, n, t) {\n            var r = Ts, l = un();\n            if (t = n(), !cs) {\n                var a = n();\n                Ru(t, a) || (console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\"), cs = !0);\n            }\n            (a = !Ru((Ns || l).memoizedState, t)) && (l.memoizedState = t, pc = !0), l = l.queue;\n            var o = kn.bind(null, r, l, e);\n            if (Vn(2048, zs, o, [\n                e\n            ]), l.getSnapshot !== n || a || null !== Ls && Ls.memoizedState.tag & ks) {\n                if (r.flags |= 2048, Qn(ks | zs, Sn.bind(null, r, l, t, n), {\n                    destroy: void 0\n                }, null), null === cf) throw Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n                0 != (60 & Rs) || vn(r, n, t);\n            }\n            return t;\n        }\n        function vn(e, n, t) {\n            e.flags |= 16384, e = {\n                getSnapshot: n,\n                value: t\n            }, null === (n = Ts.updateQueue) ? (n = Vs(), Ts.updateQueue = n, n.stores = [\n                e\n            ]) : null === (t = n.stores) ? n.stores = [\n                e\n            ] : t.push(e);\n        }\n        function Sn(e, n, t, r) {\n            n.value = t, n.getSnapshot = r, wn(n) && xn(e);\n        }\n        function kn(e, n, t) {\n            return t(function() {\n                wn(n) && xn(e);\n            });\n        }\n        function wn(e) {\n            var n = e.getSnapshot;\n            e = e.value;\n            try {\n                var t = n();\n                return !Ru(e, t);\n            } catch (e) {\n                return !0;\n            }\n        }\n        function xn(e) {\n            var n = $(e, 2);\n            null !== n && Cl(n, e, 2);\n        }\n        function zn(e) {\n            var n = on();\n            if (\"function\" == typeof e) {\n                var t = e;\n                if (e = t(), Is) {\n                    U(!0);\n                    try {\n                        t();\n                    } finally{\n                        U(!1);\n                    }\n                }\n            }\n            return n.memoizedState = n.baseState = e, n.queue = {\n                pending: null,\n                lanes: 0,\n                dispatch: null,\n                lastRenderedReducer: dn,\n                lastRenderedState: e\n            }, n;\n        }\n        function Cn(e) {\n            var n = (e = zn(e)).queue, t = ht.bind(null, Ts, n);\n            return n.dispatch = t, [\n                e.memoizedState,\n                t\n            ];\n        }\n        function En(e) {\n            var n = on();\n            n.memoizedState = n.baseState = e;\n            var t = {\n                pending: null,\n                lanes: 0,\n                dispatch: null,\n                lastRenderedReducer: null,\n                lastRenderedState: null\n            };\n            return n.queue = t, n = yt.bind(null, Ts, !0, t), t.dispatch = n, [\n                e,\n                n\n            ];\n        }\n        function Pn(e, n) {\n            return _n(un(), 0, e, n);\n        }\n        function _n(e, n, t, r) {\n            return e.baseState = t, hn(e, Ns, \"function\" == typeof r ? r : dn);\n        }\n        function Rn(e, n) {\n            var t = un();\n            return null !== Ns ? _n(t, 0, e, n) : (t.baseState = e, [\n                e,\n                t.queue.dispatch\n            ]);\n        }\n        function Tn(e, n, t, r, l) {\n            if (bt(e)) throw Error(\"Cannot update form state while rendering.\");\n            if (null !== (e = n.action)) {\n                var a = {\n                    payload: l,\n                    action: e,\n                    next: null,\n                    isTransition: !0,\n                    status: \"pending\",\n                    value: null,\n                    reason: null,\n                    listeners: [],\n                    then: function(e) {\n                        a.listeners.push(e);\n                    }\n                };\n                null !== Ja.T ? t(!0) : a.isTransition = !1, r(a), null === (t = n.pending) ? (a.next = n.pending = a, Nn(n, a)) : (a.next = t.next, n.pending = t.next = a);\n            }\n        }\n        function Nn(e, n) {\n            var t = n.action, r = n.payload, l = e.state;\n            if (n.isTransition) {\n                var a = Ja.T, o = {};\n                Ja.T = o, Ja.T._updatedFibers = new Set;\n                try {\n                    var u = t(l, r), i = Ja.S;\n                    null !== i && i(o, u), Ln(e, n, u);\n                } catch (t) {\n                    Dn(e, n, t);\n                } finally{\n                    Ja.T = a, null === a && o._updatedFibers && (e = o._updatedFibers.size, o._updatedFibers.clear(), 10 < e && console.warn(\"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"));\n                }\n            } else try {\n                Ln(e, n, o = t(l, r));\n            } catch (t) {\n                Dn(e, n, t);\n            }\n        }\n        function Ln(e, n, t) {\n            null !== t && \"object\" == typeof t && \"function\" == typeof t.then ? (t.then(function(t) {\n                Un(e, n, t);\n            }, function(t) {\n                return Dn(e, n, t);\n            }), n.isTransition || console.error(\"An async function was passed to useActionState, but it was dispatched outside of an action context. This is likely not what you intended. Either pass the dispatch function to an `action` prop, or dispatch manually inside `startTransition`\")) : Un(e, n, t);\n        }\n        function Un(e, n, t) {\n            n.status = \"fulfilled\", n.value = t, In(n), e.state = t, null !== (n = e.pending) && ((t = n.next) === n ? e.pending = null : (t = t.next, n.next = t, Nn(e, t)));\n        }\n        function Dn(e, n, t) {\n            var r = e.pending;\n            if (e.pending = null, null !== r) {\n                r = r.next;\n                do {\n                    n.status = \"rejected\", n.reason = t, In(n), n = n.next;\n                }while (n !== r);\n            }\n            e.action = null;\n        }\n        function In(e) {\n            e = e.listeners;\n            for(var n = 0; n < e.length; n++)(0, e[n])();\n        }\n        function Fn(e, n) {\n            return n;\n        }\n        function Mn(e, n) {\n            var t, r, l;\n            (t = on()).memoizedState = t.baseState = n, r = {\n                pending: null,\n                lanes: 0,\n                dispatch: null,\n                lastRenderedReducer: Fn,\n                lastRenderedState: n\n            }, t.queue = r, t = ht.bind(null, Ts, r), r.dispatch = t, r = zn(!1);\n            var a = yt.bind(null, Ts, !1, r.queue);\n            return l = {\n                state: n,\n                dispatch: null,\n                action: e,\n                pending: null\n            }, (r = on()).queue = l, t = Tn.bind(null, Ts, l, a, t), l.dispatch = t, r.memoizedState = e, [\n                n,\n                t,\n                !1\n            ];\n        }\n        function Wn(e) {\n            return Hn(un(), Ns, e);\n        }\n        function Hn(e, n, t) {\n            n = hn(e, n, Fn)[0], e = mn(dn)[0], n = \"object\" == typeof n && null !== n && \"function\" == typeof n.then ? sn(n) : n;\n            var r = un(), l = r.queue, a = l.dispatch;\n            return t !== r.memoizedState && (Ts.flags |= 2048, Qn(ks | zs, jn.bind(null, l, t), {\n                destroy: void 0\n            }, null)), [\n                n,\n                a,\n                e\n            ];\n        }\n        function jn(e, n) {\n            e.action = n;\n        }\n        function An(e) {\n            var n = un(), t = Ns;\n            if (null !== t) return Hn(n, t, e);\n            un(), n = n.memoizedState;\n            var r = (t = un()).queue.dispatch;\n            return t.memoizedState = e, [\n                n,\n                r,\n                !1\n            ];\n        }\n        function Qn(e, n, t, r) {\n            return e = {\n                tag: e,\n                create: n,\n                inst: t,\n                deps: r,\n                next: null\n            }, null === (n = Ts.updateQueue) && (n = Vs(), Ts.updateQueue = n), null === (t = n.lastEffect) ? n.lastEffect = e.next = e : (r = t.next, t.next = e, e.next = r, n.lastEffect = e), e;\n        }\n        function On(e) {\n            return e = {\n                current: e\n            }, on().memoizedState = e;\n        }\n        function Bn(e, n, t, r) {\n            var l = on();\n            Ts.flags |= e, l.memoizedState = Qn(ks | n, t, {\n                destroy: void 0\n            }, void 0 === r ? null : r);\n        }\n        function Vn(e, n, t, r) {\n            var l = un();\n            r = void 0 === r ? null : r;\n            var a = l.memoizedState.inst;\n            null !== Ns && null !== r && Xe(r, Ns.memoizedState.deps) ? l.memoizedState = Qn(n, t, a, r) : (Ts.flags |= e, l.memoizedState = Qn(ks | n, t, a, r));\n        }\n        function $n(e, n) {\n            (16 & Ts.mode) !== $u && (64 & Ts.mode) === $u ? Bn(142608384, zs, e, n) : Bn(8390656, zs, e, n);\n        }\n        function qn(e, n) {\n            var t = 4194308;\n            return (16 & Ts.mode) !== $u && (t |= 67108864), Bn(t, xs, e, n);\n        }\n        function Yn(e, n) {\n            if (\"function\" == typeof n) {\n                e = e();\n                var t = n(e);\n                return function() {\n                    \"function\" == typeof t ? t() : n(null);\n                };\n            }\n            if (null != n) return n.hasOwnProperty(\"current\") || console.error(\"Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.\", \"an object with keys {\" + Object.keys(n).join(\", \") + \"}\"), e = e(), n.current = e, function() {\n                n.current = null;\n            };\n        }\n        function Gn(e, n, t) {\n            \"function\" != typeof n && console.error(\"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\", null !== n ? typeof n : \"null\"), t = null != t ? t.concat([\n                e\n            ]) : null;\n            var r = 4194308;\n            (16 & Ts.mode) !== $u && (r |= 67108864), Bn(r, xs, Yn.bind(null, n, e), t);\n        }\n        function Jn(e, n, t) {\n            \"function\" != typeof n && console.error(\"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\", null !== n ? typeof n : \"null\"), t = null != t ? t.concat([\n                e\n            ]) : null, Vn(4, xs, Yn.bind(null, n, e), t);\n        }\n        function Kn(e, n) {\n            return on().memoizedState = [\n                e,\n                void 0 === n ? null : n\n            ], e;\n        }\n        function Xn(e, n) {\n            var t = un();\n            n = void 0 === n ? null : n;\n            var r = t.memoizedState;\n            return null !== n && Xe(n, r[1]) ? r[0] : (t.memoizedState = [\n                e,\n                n\n            ], e);\n        }\n        function Zn(e, n) {\n            var t = on();\n            n = void 0 === n ? null : n;\n            var r = e();\n            if (Is) {\n                U(!0);\n                try {\n                    e();\n                } finally{\n                    U(!1);\n                }\n            }\n            return t.memoizedState = [\n                r,\n                n\n            ], r;\n        }\n        function et(e, n) {\n            var t = un();\n            n = void 0 === n ? null : n;\n            var r = t.memoizedState;\n            if (null !== n && Xe(n, r[1])) return r[0];\n            if (r = e(), Is) {\n                U(!0);\n                try {\n                    e();\n                } finally{\n                    U(!1);\n                }\n            }\n            return t.memoizedState = [\n                r,\n                n\n            ], r;\n        }\n        function nt(e, n) {\n            return lt(on(), e, n);\n        }\n        function tt(e, n) {\n            return at(un(), Ns.memoizedState, e, n);\n        }\n        function rt(e, n) {\n            var t = un();\n            return null === Ns ? lt(t, e, n) : at(t, Ns.memoizedState, e, n);\n        }\n        function lt(e, n, t) {\n            return void 0 === t || 0 != (1073741824 & Rs) ? e.memoizedState = n : (e.memoizedState = t, e = zl(), Ts.lanes |= e, _f |= e, t);\n        }\n        function at(e, n, t, r) {\n            return Ru(t, n) ? t : null !== ps.current ? (e = lt(e, t, r), Ru(e, n) || (pc = !0), e) : 0 == (42 & Rs) ? (pc = !0, e.memoizedState = t) : (e = zl(), Ts.lanes |= e, _f |= e, n);\n        }\n        function ot(e, n, t, r, l) {\n            var a = xo();\n            wo(0 !== a && 8 > a ? a : 8);\n            var o, u, i, s = Ja.T, c = {};\n            Ja.T = c, yt(e, !1, n, t), c._updatedFibers = new Set;\n            try {\n                var f = l(), d = Ja.S;\n                null !== d && d(c, f), null !== f && \"object\" == typeof f && \"function\" == typeof f.then ? gt(e, n, (o = r, u = [], i = {\n                    status: \"pending\",\n                    value: null,\n                    reason: null,\n                    then: function(e) {\n                        u.push(e);\n                    }\n                }, f.then(function() {\n                    i.status = \"fulfilled\", i.value = o;\n                    for(var e = 0; e < u.length; e++)(0, u[e])(o);\n                }, function(e) {\n                    for(i.status = \"rejected\", i.reason = e, e = 0; e < u.length; e++)(0, u[e])(void 0);\n                }), i), xl(e)) : gt(e, n, r, xl(e));\n            } catch (t) {\n                gt(e, n, {\n                    then: function() {},\n                    status: \"rejected\",\n                    reason: t\n                }, xl(e));\n            } finally{\n                wo(a), Ja.T = s, null === s && c._updatedFibers && (e = c._updatedFibers.size, c._updatedFibers.clear(), 10 < e && console.warn(\"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"));\n            }\n        }\n        function ut() {\n            var e = zn(!1);\n            return e = ot.bind(null, Ts, e.queue, !0, !1), on().memoizedState = e, [\n                !1,\n                e\n            ];\n        }\n        function it() {\n            var e = mn(dn)[0], n = un().memoizedState;\n            return [\n                \"boolean\" == typeof e ? e : sn(e),\n                n\n            ];\n        }\n        function st() {\n            var e = gn(dn)[0], n = un().memoizedState;\n            return [\n                \"boolean\" == typeof e ? e : sn(e),\n                n\n            ];\n        }\n        function ct() {\n            return sr(Uo);\n        }\n        function ft() {\n            var e = on(), n = cf.identifierPrefix;\n            return n = \":\" + n + \"r\" + (Hs++).toString(32) + \":\", e.memoizedState = n;\n        }\n        function dt() {\n            return on().memoizedState = pt.bind(null, Ts);\n        }\n        function pt(e, n) {\n            for(var t = e.return; null !== t;){\n                switch(t.tag){\n                    case 24:\n                    case 3:\n                        var r = xl(t), l = ye(t, e = ge(r), r);\n                        return null !== l && (Cl(l, t, r), be(l, t, r)), t = dr(), null != n && null !== l && console.error(\"The seed argument is not enabled outside experimental channels.\"), void (e.payload = {\n                            cache: t\n                        });\n                }\n                t = t.return;\n            }\n        }\n        function mt(e, n, t, r) {\n            \"function\" == typeof r && console.error(\"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"), t = {\n                lane: r = xl(e),\n                revertLane: 0,\n                action: t,\n                hasEagerState: !1,\n                eagerState: null,\n                next: null\n            }, bt(e) ? vt(n, t) : null !== (t = V(e, n, t, r)) && (Cl(t, e, r), St(t, n, r));\n        }\n        function ht(e, n, t, r) {\n            \"function\" == typeof r && console.error(\"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"), gt(e, n, t, r = xl(e));\n        }\n        function gt(e, n, t, r) {\n            var l = {\n                lane: r,\n                revertLane: 0,\n                action: t,\n                hasEagerState: !1,\n                eagerState: null,\n                next: null\n            };\n            if (bt(e)) vt(n, l);\n            else {\n                var a = e.alternate;\n                if (0 === e.lanes && (null === a || 0 === a.lanes) && null !== (a = n.lastRenderedReducer)) {\n                    var o = Ja.H;\n                    Ja.H = Xs;\n                    try {\n                        var u = n.lastRenderedState, i = a(u, t);\n                        if (l.hasEagerState = !0, l.eagerState = i, Ru(i, u)) return B(e, n, l, 0), null === cf && O(), !1;\n                    } catch (e) {} finally{\n                        Ja.H = o;\n                    }\n                }\n                if (null !== (t = V(e, n, l, r))) return Cl(t, e, r), St(t, n, r), !0;\n            }\n            return !1;\n        }\n        function yt(e, n, t, r) {\n            if (null === Ja.T && 0 === di && console.error(\"An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.\"), r = {\n                lane: 2,\n                revertLane: de(),\n                action: r,\n                hasEagerState: !1,\n                eagerState: null,\n                next: null\n            }, bt(e)) {\n                if (n) throw Error(\"Cannot update optimistic state while rendering.\");\n                console.error(\"Cannot call startTransition while rendering.\");\n            } else null !== (n = V(e, t, r, 2)) && Cl(n, e, 2);\n        }\n        function bt(e) {\n            var n = e.alternate;\n            return e === Ts || null !== n && n === Ts;\n        }\n        function vt(e, n) {\n            Ds = Us = !0;\n            var t = e.pending;\n            null === t ? n.next = n : (n.next = t.next, t.next = n), e.pending = n;\n        }\n        function St(e, n, t) {\n            if (0 != (4194176 & t)) {\n                var r = n.lanes;\n                t |= r &= e.pendingLanes, n.lanes = t, R(e, t);\n            }\n        }\n        function kt(e) {\n            if (null !== e && \"function\" != typeof e) {\n                var n = String(e);\n                cc.has(n) || (cc.add(n), console.error(\"Expected the last optional `callback` argument to be a function. Instead received: %s.\", e));\n            }\n        }\n        function wt(e, n, t, r) {\n            var l = e.memoizedState, a = t(r, l);\n            if (8 & e.mode) {\n                U(!0);\n                try {\n                    a = t(r, l);\n                } finally{\n                    U(!1);\n                }\n            }\n            void 0 === a && (n = s(n) || \"Component\", oc.has(n) || (oc.add(n), console.error(\"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.\", n))), l = null == a ? l : Na({}, l, a), e.memoizedState = l, 0 === e.lanes && (e.updateQueue.baseState = l);\n        }\n        function xt(e, n, t, r, l, a, o) {\n            var u = e.stateNode;\n            if (\"function\" == typeof u.shouldComponentUpdate) {\n                if (t = u.shouldComponentUpdate(r, a, o), 8 & e.mode) {\n                    U(!0);\n                    try {\n                        t = u.shouldComponentUpdate(r, a, o);\n                    } finally{\n                        U(!1);\n                    }\n                }\n                return void 0 === t && console.error(\"%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.\", s(n) || \"Component\"), t;\n            }\n            return !(n.prototype && n.prototype.isPureReactComponent && Ce(t, r) && Ce(l, a));\n        }\n        function zt(e, n, t, r) {\n            var l = n.state;\n            \"function\" == typeof n.componentWillReceiveProps && n.componentWillReceiveProps(t, r), \"function\" == typeof n.UNSAFE_componentWillReceiveProps && n.UNSAFE_componentWillReceiveProps(t, r), n.state !== l && (e = c(e) || \"Component\", nc.has(e) || (nc.add(e), console.error(\"%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\", e)), fc.enqueueReplaceState(n, n.state, null));\n        }\n        function Ct(e, n) {\n            var t = n;\n            if (\"ref\" in n) for(var r in t = {}, n)\"ref\" !== r && (t[r] = n[r]);\n            if (e = e.defaultProps) for(var l in t === n && (t = Na({}, t)), e)void 0 === t[l] && (t[l] = e[l]);\n            return t;\n        }\n        function Et(e, n) {\n            try {\n                n.source && c(n.source);\n                var t = n.value;\n                null !== Ja.actQueue ? Ja.thrownErrors.push(t) : (0, e.onUncaughtError)(t, {\n                    componentStack: n.stack\n                });\n            } catch (e) {\n                setTimeout(function() {\n                    throw e;\n                });\n            }\n        }\n        function Pt(e, n, t) {\n            try {\n                t.source && c(t.source), c(n), (0, e.onCaughtError)(t.value, {\n                    componentStack: t.stack,\n                    errorBoundary: 1 === n.tag ? n.stateNode : null\n                });\n            } catch (e) {\n                setTimeout(function() {\n                    throw e;\n                });\n            }\n        }\n        function _t(e, n, t) {\n            return (t = ge(t)).tag = yi, t.payload = {\n                element: null\n            }, t.callback = function() {\n                y(n.source, Et, e, n);\n            }, t;\n        }\n        function Rt(e) {\n            return (e = ge(e)).tag = yi, e;\n        }\n        function Tt(e, n, t, r) {\n            var l = t.type.getDerivedStateFromError;\n            if (\"function\" == typeof l) {\n                var a = r.value;\n                e.payload = function() {\n                    return l(a);\n                }, e.callback = function() {\n                    y(r.source, Pt, n, t, r);\n                };\n            }\n            var o = t.stateNode;\n            null !== o && \"function\" == typeof o.componentDidCatch && (e.callback = function() {\n                y(r.source, Pt, n, t, r), \"function\" != typeof l && (null === Af ? Af = new Set([\n                    this\n                ]) : Af.add(this)), Yi(this, r), \"function\" == typeof l || 0 == (2 & t.lanes) && console.error(\"%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.\", c(t) || \"Unknown\");\n            });\n        }\n        function Nt(e, n, t, r) {\n            n.child = null === e ? ds(n, null, t, r) : fs(n, e.child, t, r);\n        }\n        function Lt(e, n, t, r, l) {\n            t = t.render;\n            var a = n.ref;\n            if (\"ref\" in r) {\n                var o = {};\n                for(var u in r)\"ref\" !== u && (o[u] = r[u]);\n            } else o = r;\n            return ir(n), r = Ze(e, n, t, o, a, l), u = rn(), null === e || pc ? (n.flags |= 1, Nt(e, n, r, l), n.child) : (ln(e, n, l), Xt(e, n, l));\n        }\n        function Ut(e, n, t, r, l) {\n            if (null === e) {\n                var a = t.type;\n                return \"function\" != typeof a || ca(a) || void 0 !== a.defaultProps || null !== t.compare ? ((e = pa(t.type, null, r, n, n.mode, l)).ref = n.ref, e.return = n, n.child = e) : (t = a, n.tag = 15, n.type = t, At(n, a), Dt(e, n, t, r, l));\n            }\n            if (a = e.child, !Zt(e, l)) {\n                var o = a.memoizedProps;\n                if ((t = null !== (t = t.compare) ? t : Ce)(o, r) && e.ref === n.ref) return Xt(e, n, l);\n            }\n            return n.flags |= 1, (e = fa(a, r)).ref = n.ref, e.return = n, n.child = e;\n        }\n        function Dt(e, n, t, r, l) {\n            if (null !== e) {\n                var a = e.memoizedProps;\n                if (Ce(a, r) && e.ref === n.ref && n.type === e.type) {\n                    if (pc = !1, n.pendingProps = r = a, !Zt(e, l)) return n.lanes = e.lanes, Xt(e, n, l);\n                    0 != (131072 & e.flags) && (pc = !0);\n                }\n            }\n            return Wt(e, n, t, r, l);\n        }\n        function It(e, n, t) {\n            var r = n.pendingProps, l = r.children, a = 0 != (2 & n.stateNode._pendingVisibility), o = null !== e ? e.memoizedState : null;\n            if (Mt(e, n), \"hidden\" === r.mode || a) {\n                if (0 != (128 & n.flags)) {\n                    if (r = null !== o ? o.baseLanes | t : t, null !== e) {\n                        for(l = n.child = e.child, a = 0; null !== l;)a = a | l.lanes | l.childLanes, l = l.sibling;\n                        n.childLanes = a & ~r;\n                    } else n.childLanes = 0, n.child = null;\n                    return Ft(e, n, r, t);\n                }\n                if (0 == (536870912 & t)) return n.lanes = n.childLanes = 536870912, Ft(e, n, null !== o ? o.baseLanes | t : t, t);\n                n.memoizedState = {\n                    baseLanes: 0,\n                    cachePool: null\n                }, null !== e && gr(n, null !== o ? o.cachePool : null), null !== o ? He(n, o) : je(n), Oe(n);\n            } else null !== o ? (gr(n, o.cachePool), He(n, o), Be(n), n.memoizedState = null) : (null !== e && gr(n, null), je(n), Be(n));\n            return Nt(e, n, l, t), n.child;\n        }\n        function Ft(e, n, t, r) {\n            var l = hr();\n            return l = null === l ? null : {\n                parent: Uc._currentValue2,\n                pool: l\n            }, n.memoizedState = {\n                baseLanes: t,\n                cachePool: l\n            }, null !== e && gr(n, null), je(n), Oe(n), null !== e && or(e, n, r, !0), null;\n        }\n        function Mt(e, n) {\n            var t = n.ref;\n            if (null === t) null !== e && null !== e.ref && (n.flags |= 2097664);\n            else {\n                if (\"function\" != typeof t && \"object\" != typeof t) throw Error(\"Expected ref to be a function, an object returned by React.createRef(), or undefined/null.\");\n                null !== e && e.ref === t || (n.flags |= 2097664);\n            }\n        }\n        function Wt(e, n, t, r, l) {\n            if (t.prototype && \"function\" == typeof t.prototype.render) {\n                var a = s(t) || \"Unknown\";\n                mc[a] || (console.error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\", a, a), mc[a] = !0);\n            }\n            return 8 & n.mode && xi.recordLegacyContextWarning(n, null), null === e && (At(n, n.type), t.contextTypes && (a = s(t) || \"Unknown\", gc[a] || (gc[a] = !0, console.error(\"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)\", a)))), ir(n), t = Ze(e, n, t, r, void 0, l), r = rn(), null === e || pc ? (n.flags |= 1, Nt(e, n, t, l), n.child) : (ln(e, n, l), Xt(e, n, l));\n        }\n        function Ht(e, n, t, r, l, a) {\n            return ir(n), Os = -1, Bs = null !== e && e.type !== n.type, n.updateQueue = null, t = nn(n, r, t, l), en(e, n), r = rn(), null === e || pc ? (n.flags |= 1, Nt(e, n, t, a), n.child) : (ln(e, n, a), Xt(e, n, a));\n        }\n        function jt(e, n, t, r, l) {\n            var a, o, u;\n            if (ir(n), null === n.stateNode) {\n                if (o = su, a = t.contextType, \"contextType\" in t && null !== a && (void 0 === a || a.$$typeof !== ja) && !sc.has(t) && (sc.add(t), u = void 0 === a ? \" However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.\" : \"object\" != typeof a ? \" However, it is set to a \" + typeof a + \".\" : a.$$typeof === Ha ? \" Did you accidentally pass the Context.Consumer instead?\" : \" However, it is set to an object with keys {\" + Object.keys(a).join(\", \") + \"}.\", console.error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s\", s(t) || \"Component\", u)), \"object\" == typeof a && null !== a && (o = sr(a)), a = new t(r, o), 8 & n.mode) {\n                    U(!0);\n                    try {\n                        a = new t(r, o);\n                    } finally{\n                        U(!1);\n                    }\n                }\n                if (o = n.memoizedState = null !== a.state && void 0 !== a.state ? a.state : null, a.updater = fc, n.stateNode = a, a._reactInternals = n, a._reactInternalInstance = ec, \"function\" == typeof t.getDerivedStateFromProps && null === o && (o = s(t) || \"Component\", tc.has(o) || (tc.add(o), console.error(\"`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\", o, null === a.state ? \"null\" : \"undefined\", o))), \"function\" == typeof t.getDerivedStateFromProps || \"function\" == typeof a.getSnapshotBeforeUpdate) {\n                    var i = u = o = null;\n                    if (\"function\" == typeof a.componentWillMount && !0 !== a.componentWillMount.__suppressDeprecationWarning ? o = \"componentWillMount\" : \"function\" == typeof a.UNSAFE_componentWillMount && (o = \"UNSAFE_componentWillMount\"), \"function\" == typeof a.componentWillReceiveProps && !0 !== a.componentWillReceiveProps.__suppressDeprecationWarning ? u = \"componentWillReceiveProps\" : \"function\" == typeof a.UNSAFE_componentWillReceiveProps && (u = \"UNSAFE_componentWillReceiveProps\"), \"function\" == typeof a.componentWillUpdate && !0 !== a.componentWillUpdate.__suppressDeprecationWarning ? i = \"componentWillUpdate\" : \"function\" == typeof a.UNSAFE_componentWillUpdate && (i = \"UNSAFE_componentWillUpdate\"), null !== o || null !== u || null !== i) {\n                        a = s(t) || \"Component\";\n                        var f = \"function\" == typeof t.getDerivedStateFromProps ? \"getDerivedStateFromProps()\" : \"getSnapshotBeforeUpdate()\";\n                        lc.has(a) || (lc.add(a), console.error(\"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\nhttps://react.dev/link/unsafe-component-lifecycles\", a, f, null !== o ? \"\\n  \" + o : \"\", null !== u ? \"\\n  \" + u : \"\", null !== i ? \"\\n  \" + i : \"\"));\n                    }\n                }\n                a = n.stateNode, o = s(t) || \"Component\", a.render || (t.prototype && \"function\" == typeof t.prototype.render ? console.error(\"No `render` method found on the %s instance: did you accidentally return an object from the constructor?\", o) : console.error(\"No `render` method found on the %s instance: you may have forgotten to define `render`.\", o)), !a.getInitialState || a.getInitialState.isReactClassApproved || a.state || console.error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\", o), a.getDefaultProps && !a.getDefaultProps.isReactClassApproved && console.error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\", o), a.contextType && console.error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\", o), t.childContextTypes && !ic.has(t) && (ic.add(t), console.error(\"%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)\", o)), t.contextTypes && !uc.has(t) && (uc.add(t), console.error(\"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)\", o)), \"function\" == typeof a.componentShouldUpdate && console.error(\"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.\", o), t.prototype && t.prototype.isPureReactComponent && void 0 !== a.shouldComponentUpdate && console.error(\"%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.\", s(t) || \"A pure component\"), \"function\" == typeof a.componentDidUnmount && console.error(\"%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?\", o), \"function\" == typeof a.componentDidReceiveProps && console.error(\"%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().\", o), \"function\" == typeof a.componentWillRecieveProps && console.error(\"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\", o), \"function\" == typeof a.UNSAFE_componentWillRecieveProps && console.error(\"%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\", o), u = a.props !== r, void 0 !== a.props && u && console.error(\"When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.\", o), a.defaultProps && console.error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\", o, o), \"function\" != typeof a.getSnapshotBeforeUpdate || \"function\" == typeof a.componentDidUpdate || rc.has(t) || (rc.add(t), console.error(\"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.\", s(t))), \"function\" == typeof a.getDerivedStateFromProps && console.error(\"%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.\", o), \"function\" == typeof a.getDerivedStateFromError && console.error(\"%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.\", o), \"function\" == typeof t.getSnapshotBeforeUpdate && console.error(\"%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.\", o), (u = a.state) && (\"object\" != typeof u || lo(u)) && console.error(\"%s.state: must be set to an object or null\", o), \"function\" == typeof a.getChildContext && \"object\" != typeof t.childContextTypes && console.error(\"%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().\", o), (a = n.stateNode).props = r, a.state = n.memoizedState, a.refs = {}, me(n), o = t.contextType, a.context = \"object\" == typeof o && null !== o ? sr(o) : su, a.state === r && (o = s(t) || \"Component\", ac.has(o) || (ac.add(o), console.error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\", o))), 8 & n.mode && xi.recordLegacyContextWarning(n, a), xi.recordUnsafeLifecycleWarnings(n, a), a.state = n.memoizedState, \"function\" == typeof (o = t.getDerivedStateFromProps) && (wt(n, t, o, r), a.state = n.memoizedState), \"function\" == typeof t.getDerivedStateFromProps || \"function\" == typeof a.getSnapshotBeforeUpdate || \"function\" != typeof a.UNSAFE_componentWillMount && \"function\" != typeof a.componentWillMount || (o = a.state, \"function\" == typeof a.componentWillMount && a.componentWillMount(), \"function\" == typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(), o !== a.state && (console.error(\"%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\", c(n) || \"Component\"), fc.enqueueReplaceState(a, a.state, null)), ke(n, r, a, l), Se(), a.state = n.memoizedState), \"function\" == typeof a.componentDidMount && (n.flags |= 4194308), (16 & n.mode) !== $u && (n.flags |= 67108864), a = !0;\n            } else if (null === e) {\n                a = n.stateNode;\n                var d = n.memoizedProps;\n                u = Ct(t, d), a.props = u;\n                var p = a.context;\n                i = t.contextType, o = su, \"object\" == typeof i && null !== i && (o = sr(i)), i = \"function\" == typeof (f = t.getDerivedStateFromProps) || \"function\" == typeof a.getSnapshotBeforeUpdate, d = n.pendingProps !== d, i || \"function\" != typeof a.UNSAFE_componentWillReceiveProps && \"function\" != typeof a.componentWillReceiveProps || (d || p !== o) && zt(n, a, r, o), bi = !1;\n                var m = n.memoizedState;\n                a.state = m, ke(n, r, a, l), Se(), p = n.memoizedState, d || m !== p || bi ? (\"function\" == typeof f && (wt(n, t, f, r), p = n.memoizedState), (u = bi || xt(n, t, u, r, m, p, o)) ? (i || \"function\" != typeof a.UNSAFE_componentWillMount && \"function\" != typeof a.componentWillMount || (\"function\" == typeof a.componentWillMount && a.componentWillMount(), \"function\" == typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount()), \"function\" == typeof a.componentDidMount && (n.flags |= 4194308), (16 & n.mode) !== $u && (n.flags |= 67108864)) : (\"function\" == typeof a.componentDidMount && (n.flags |= 4194308), (16 & n.mode) !== $u && (n.flags |= 67108864), n.memoizedProps = r, n.memoizedState = p), a.props = r, a.state = p, a.context = o, a = u) : (\"function\" == typeof a.componentDidMount && (n.flags |= 4194308), (16 & n.mode) !== $u && (n.flags |= 67108864), a = !1);\n            } else {\n                a = n.stateNode, he(e, n), i = Ct(t, o = n.memoizedProps), a.props = i, f = n.pendingProps, m = a.context, p = t.contextType, u = su, \"object\" == typeof p && null !== p && (u = sr(p)), (p = \"function\" == typeof (d = t.getDerivedStateFromProps) || \"function\" == typeof a.getSnapshotBeforeUpdate) || \"function\" != typeof a.UNSAFE_componentWillReceiveProps && \"function\" != typeof a.componentWillReceiveProps || (o !== f || m !== u) && zt(n, a, r, u), bi = !1, m = n.memoizedState, a.state = m, ke(n, r, a, l), Se();\n                var h = n.memoizedState;\n                o !== f || m !== h || bi || null !== e && null !== e.dependencies && ur(e.dependencies) ? (\"function\" == typeof d && (wt(n, t, d, r), h = n.memoizedState), (i = bi || xt(n, t, i, r, m, h, u) || null !== e && null !== e.dependencies && ur(e.dependencies)) ? (p || \"function\" != typeof a.UNSAFE_componentWillUpdate && \"function\" != typeof a.componentWillUpdate || (\"function\" == typeof a.componentWillUpdate && a.componentWillUpdate(r, h, u), \"function\" == typeof a.UNSAFE_componentWillUpdate && a.UNSAFE_componentWillUpdate(r, h, u)), \"function\" == typeof a.componentDidUpdate && (n.flags |= 4), \"function\" == typeof a.getSnapshotBeforeUpdate && (n.flags |= 1024)) : (\"function\" != typeof a.componentDidUpdate || o === e.memoizedProps && m === e.memoizedState || (n.flags |= 4), \"function\" != typeof a.getSnapshotBeforeUpdate || o === e.memoizedProps && m === e.memoizedState || (n.flags |= 1024), n.memoizedProps = r, n.memoizedState = h), a.props = r, a.state = h, a.context = u, a = i) : (\"function\" != typeof a.componentDidUpdate || o === e.memoizedProps && m === e.memoizedState || (n.flags |= 4), \"function\" != typeof a.getSnapshotBeforeUpdate || o === e.memoizedProps && m === e.memoizedState || (n.flags |= 1024), a = !1);\n            }\n            if (u = a, Mt(e, n), o = 0 != (128 & n.flags), u || o) {\n                if (u = n.stateNode, Ja.getCurrentStack = null === n ? null : g, ro = !1, to = n, o && \"function\" != typeof t.getDerivedStateFromError) t = null, Xu = -1;\n                else if (t = Qi(u), 8 & n.mode) {\n                    U(!0);\n                    try {\n                        Qi(u);\n                    } finally{\n                        U(!1);\n                    }\n                }\n                n.flags |= 1, null !== e && o ? (n.child = fs(n, e.child, null, l), n.child = fs(n, null, t, l)) : Nt(e, n, t, l), n.memoizedState = u.state, e = n.child;\n            } else e = Xt(e, n, l);\n            return l = n.stateNode, a && l.props !== r && (bc || console.error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\", c(n) || \"a component\"), bc = !0), e;\n        }\n        function At(e, n) {\n            n && n.childContextTypes && console.error(\"childContextTypes cannot be defined on a function component.\\n  %s.childContextTypes = ...\", n.displayName || n.name || \"Component\"), \"function\" == typeof n.getDerivedStateFromProps && (e = s(n) || \"Unknown\", yc[e] || (console.error(\"%s: Function components do not support getDerivedStateFromProps.\", e), yc[e] = !0)), \"object\" == typeof n.contextType && null !== n.contextType && (n = s(n) || \"Unknown\", hc[n] || (console.error(\"%s: Function components do not support contextType.\", n), hc[n] = !0));\n        }\n        function Qt(e) {\n            return {\n                baseLanes: e,\n                cachePool: yr()\n            };\n        }\n        function Ot(e, n, t) {\n            return e = null !== e ? e.childLanes & ~t : 0, n && (e |= Nf), e;\n        }\n        function Bt(e, n, t) {\n            var r, l, a, o, u = n.pendingProps, i = !1, s = 0 != (128 & n.flags);\n            if ((r = s) || (r = (null === e || null !== e.memoizedState) && 0 != (vs.current & bs)), r && (i = !0, n.flags &= -129), r = 0 != (32 & n.flags), n.flags &= -33, null === e) return l = u.children, u = u.fallback, i ? (Be(n), l = $t({\n                mode: \"hidden\",\n                children: l\n            }, i = n.mode), u = ha(u, i, t, null), l.return = n, u.return = n, l.sibling = u, n.child = l, (i = n.child).memoizedState = Qt(t), i.childLanes = Ot(e, r, t), n.memoizedState = kc, u) : (Qe(n), Vt(n, l));\n            if (null !== (a = e.memoizedState) && null !== (l = a.dehydrated)) {\n                if (s) 256 & n.flags ? (Qe(n), n.flags &= -257, n = qt(e, n, t)) : null !== n.memoizedState ? (Be(n), n.child = e.child, n.flags |= 128, n = null) : (Be(n), i = u.fallback, l = n.mode, u = $t({\n                    mode: \"visible\",\n                    children: u.children\n                }, l), (i = ha(i, l, t, null)).flags |= 2, u.return = n, i.return = n, u.sibling = i, n.child = u, fs(n, e.child, null, t), (u = n.child).memoizedState = Qt(t), u.childLanes = Ot(e, r, t), n.memoizedState = kc, n = i);\n                else if (Qe(n), Ko(l)) r = (l = Xo(l)).digest, i = l.message, u = l.stack, l = l.componentStack, (i = i ? Error(i) : Error(\"The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.\")).stack = u || \"\", i.digest = r, u = {\n                    value: i,\n                    source: null,\n                    stack: r = void 0 === l ? null : l\n                }, \"string\" == typeof r && Tu.set(i, u), o = u, null === Vu ? Vu = [\n                    o\n                ] : Vu.push(o), n = qt(e, n, t);\n                else if (pc || or(e, n, t, !1), r = 0 != (t & e.childLanes), pc || r) {\n                    if (null !== (r = cf)) {\n                        if (0 != (42 & (u = t & -t))) u = 1;\n                        else switch(u){\n                            case 2:\n                                u = 1;\n                                break;\n                            case 8:\n                                u = 4;\n                                break;\n                            case 32:\n                                u = 16;\n                                break;\n                            case 128:\n                            case 256:\n                            case 512:\n                            case 1024:\n                            case 2048:\n                            case 4096:\n                            case 8192:\n                            case 16384:\n                            case 32768:\n                            case 65536:\n                            case 131072:\n                            case 262144:\n                            case 524288:\n                            case 1048576:\n                            case 2097152:\n                            case 4194304:\n                            case 8388608:\n                            case 16777216:\n                            case 33554432:\n                                u = 64;\n                                break;\n                            case 268435456:\n                                u = 134217728;\n                                break;\n                            default:\n                                u = 0;\n                        }\n                        if (0 !== (u = 0 != (u & (r.suspendedLanes | t)) ? 0 : u) && u !== a.retryLane) throw a.retryLane = u, $(e, u), Cl(r, e, u), dc;\n                    }\n                    Jo(l) || Ml(), n = qt(e, n, t);\n                } else Jo(l) ? (n.flags |= 128, n.child = e.child, n = ta.bind(null, e), Zo(l, n), n = null) : (e = a.treeContext, (n = Vt(n, u.children)).flags |= 4096);\n                return n;\n            }\n            return i ? (Be(n), i = u.fallback, l = n.mode, s = (a = e.child).sibling, (u = fa(a, {\n                mode: \"hidden\",\n                children: u.children\n            })).subtreeFlags = 31457280 & a.subtreeFlags, null !== s ? i = fa(s, i) : (i = ha(i, l, t, null)).flags |= 2, i.return = n, u.return = n, u.sibling = i, n.child = u, u = i, i = n.child, null === (l = e.child.memoizedState) ? l = Qt(t) : (null !== (a = l.cachePool) ? (s = Uc._currentValue2, a = a.parent !== s ? {\n                parent: s,\n                pool: s\n            } : a) : a = yr(), l = {\n                baseLanes: l.baseLanes | t,\n                cachePool: a\n            }), i.memoizedState = l, i.childLanes = Ot(e, r, t), n.memoizedState = kc, u) : (Qe(n), e = (t = e.child).sibling, (t = fa(t, {\n                mode: \"visible\",\n                children: u.children\n            })).return = n, t.sibling = null, null !== e && (null === (r = n.deletions) ? (n.deletions = [\n                e\n            ], n.flags |= 16) : r.push(e)), n.child = t, n.memoizedState = null, t);\n        }\n        function Vt(e, n) {\n            return (n = $t({\n                mode: \"visible\",\n                children: n\n            }, e.mode)).return = e, e.child = n;\n        }\n        function $t(e, n) {\n            return ga(e, n, 0, null);\n        }\n        function qt(e, n, t) {\n            return fs(n, e.child, null, t), (e = Vt(n, n.pendingProps.children)).flags |= 2, n.memoizedState = null, e;\n        }\n        function Yt(e, n, t) {\n            e.lanes |= n;\n            var r = e.alternate;\n            null !== r && (r.lanes |= n), lr(e.return, n, t);\n        }\n        function Gt(e, n) {\n            var t = lo(e);\n            return e = !t && \"function\" == typeof i(e), !t && !e || (t = t ? \"array\" : \"iterable\", console.error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\", t, n, t), !1);\n        }\n        function Jt(e, n, t, r, l) {\n            var a = e.memoizedState;\n            null === a ? e.memoizedState = {\n                isBackwards: n,\n                rendering: null,\n                renderingStartTime: 0,\n                last: r,\n                tail: t,\n                tailMode: l\n            } : (a.isBackwards = n, a.rendering = null, a.renderingStartTime = 0, a.last = r, a.tail = t, a.tailMode = l);\n        }\n        function Kt(e, n, t) {\n            var r = n.pendingProps, l = r.revealOrder, a = r.tail;\n            if (r = r.children, void 0 !== l && \"forwards\" !== l && \"backwards\" !== l && \"together\" !== l && !vc[l]) if (vc[l] = !0, \"string\" == typeof l) switch(l.toLowerCase()){\n                case \"together\":\n                case \"forwards\":\n                case \"backwards\":\n                    console.error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.', l, l.toLowerCase());\n                    break;\n                case \"forward\":\n                case \"backward\":\n                    console.error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.', l, l.toLowerCase());\n                    break;\n                default:\n                    console.error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', l);\n            }\n            else console.error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', l);\n            void 0 === a || Sc[a] || (\"collapsed\" !== a && \"hidden\" !== a ? (Sc[a] = !0, console.error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?', a)) : \"forwards\" !== l && \"backwards\" !== l && (Sc[a] = !0, console.error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?', a)));\n            e: if ((\"forwards\" === l || \"backwards\" === l) && null != r && !1 !== r) if (lo(r)) {\n                for(var o = 0; o < r.length; o++)if (!Gt(r[o], o)) break e;\n            } else if (o = i(r), \"function\" == typeof o) {\n                if (o = o.call(r)) for(var u = o.next(), s = 0; !u.done; u = o.next()){\n                    if (!Gt(u.value, s)) break e;\n                    s++;\n                }\n            } else console.error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', l);\n            if (Nt(e, n, r, t), 0 != ((r = vs.current) & bs)) r = r & ys | bs, n.flags |= 128;\n            else {\n                if (null !== e && 0 != (128 & e.flags)) e: for(e = n.child; null !== e;){\n                    if (13 === e.tag) null !== e.memoizedState && Yt(e, t, n);\n                    else if (19 === e.tag) Yt(e, t, n);\n                    else if (null !== e.child) {\n                        e.child.return = e, e = e.child;\n                        continue;\n                    }\n                    if (e === n) break e;\n                    for(; null === e.sibling;){\n                        if (null === e.return || e.return === n) break e;\n                        e = e.return;\n                    }\n                    e.sibling.return = e.return, e = e.sibling;\n                }\n                r &= ys;\n            }\n            switch(S(vs, r, n), l){\n                case \"forwards\":\n                    for(t = n.child, l = null; null !== t;)null !== (e = t.alternate) && null === $e(e) && (l = t), t = t.sibling;\n                    null === (t = l) ? (l = n.child, n.child = null) : (l = t.sibling, t.sibling = null), Jt(n, !1, l, t, a);\n                    break;\n                case \"backwards\":\n                    for(t = null, l = n.child, n.child = null; null !== l;){\n                        if (null !== (e = l.alternate) && null === $e(e)) {\n                            n.child = l;\n                            break;\n                        }\n                        e = l.sibling, l.sibling = t, t = l, l = e;\n                    }\n                    Jt(n, !0, t, null, a);\n                    break;\n                case \"together\":\n                    Jt(n, !1, null, null, void 0);\n                    break;\n                default:\n                    n.memoizedState = null;\n            }\n            return n.child;\n        }\n        function Xt(e, n, t) {\n            if (null !== e && (n.dependencies = e.dependencies), Xu = -1, _f |= n.lanes, 0 == (t & n.childLanes)) {\n                if (null === e) return null;\n                if (or(e, n, t, !1), 0 == (t & n.childLanes)) return null;\n            }\n            if (null !== e && n.child !== e.child) throw Error(\"Resuming work not yet implemented.\");\n            if (null !== n.child) {\n                for(t = fa(e = n.child, e.pendingProps), n.child = t, t.return = n; null !== e.sibling;)e = e.sibling, (t = t.sibling = fa(e, e.pendingProps)).return = n;\n                t.sibling = null;\n            }\n            return n.child;\n        }\n        function Zt(e, n) {\n            return 0 != (e.lanes & n) || !(null === (e = e.dependencies) || !ur(e));\n        }\n        function er(e, n, t) {\n            if (n._debugNeedsRemount && null !== e) {\n                t = pa(n.type, n.key, n.pendingProps, n._debugOwner || null, n.mode, n.lanes);\n                var r = n.return;\n                if (null === r) throw Error(\"Cannot swap the root fiber.\");\n                if (e.alternate = null, n.alternate = null, t.index = n.index, t.sibling = n.sibling, t.return = n.return, t.ref = n.ref, t._debugInfo = n._debugInfo, n === r.child) r.child = t;\n                else {\n                    var l = r.child;\n                    if (null === l) throw Error(\"Expected parent to have a child.\");\n                    for(; l.sibling !== n;)if (null === (l = l.sibling)) throw Error(\"Expected to find the previous sibling.\");\n                    l.sibling = t;\n                }\n                return null === (n = r.deletions) ? (r.deletions = [\n                    e\n                ], r.flags |= 16) : n.push(e), t.flags |= 2, t;\n            }\n            if (null !== e) if (e.memoizedProps !== n.pendingProps || n.type !== e.type) pc = !0;\n            else {\n                if (!Zt(e, t) && 0 == (128 & n.flags)) return pc = !1, function(e, n, t) {\n                    switch(n.tag){\n                        case 3:\n                            W(n, n.stateNode.containerInfo), tr(n, Uc, e.memoizedState.cache);\n                            break;\n                        case 27:\n                        case 5:\n                            A(n);\n                            break;\n                        case 4:\n                            W(n, n.stateNode.containerInfo);\n                            break;\n                        case 10:\n                            tr(n, n.type, n.memoizedProps.value);\n                            break;\n                        case 12:\n                            0 != (t & n.childLanes) && (n.flags |= 4), n.flags |= 2048;\n                            var r = n.stateNode;\n                            r.effectDuration = -0, r.passiveEffectDuration = -0;\n                            break;\n                        case 13:\n                            if (null !== (r = n.memoizedState)) return null !== r.dehydrated ? (Qe(n), n.flags |= 128, null) : 0 != (t & n.child.childLanes) ? Bt(e, n, t) : (Qe(n), null !== (e = Xt(e, n, t)) ? e.sibling : null);\n                            Qe(n);\n                            break;\n                        case 19:\n                            var l = 0 != (128 & e.flags);\n                            if ((r = 0 != (t & n.childLanes)) || (or(e, n, t, !1), r = 0 != (t & n.childLanes)), l) {\n                                if (r) return Kt(e, n, t);\n                                n.flags |= 128;\n                            }\n                            if (null !== (l = n.memoizedState) && (l.rendering = null, l.tail = null, l.lastEffect = null), S(vs, vs.current, n), r) break;\n                            return null;\n                        case 22:\n                        case 23:\n                            return n.lanes = 0, It(e, n, t);\n                        case 24:\n                            tr(n, Uc, e.memoizedState.cache);\n                    }\n                    return Xt(e, n, t);\n                }(e, n, t);\n                pc = 0 != (131072 & e.flags);\n            }\n            else pc = !1, (r = Bu) && (F(), r = 0 != (1048576 & n.flags)), r && (r = n.index, F(), function(e, n, t) {\n                F(), Iu[Fu++] = Wu, Iu[Fu++] = Hu, Iu[Fu++] = Mu, Mu = e;\n                var r = Wu;\n                e = Hu;\n                var l = 32 - cu(r) - 1;\n                r &= ~(1 << l), t += 1;\n                var a = 32 - cu(n) + l;\n                if (30 < a) {\n                    var o = l - l % 5;\n                    a = (r & (1 << o) - 1).toString(32), r >>= o, l -= o, Wu = 1 << 32 - cu(n) + l | t << l | r, Hu = a + e;\n                } else Wu = 1 << a | t << l | r, Hu = e;\n            }(n, Du, r));\n            switch(n.lanes = 0, n.tag){\n                case 16:\n                    e: {\n                        if (r = n.pendingProps, e = ts(n.elementType), n.type = e, \"function\" != typeof e) {\n                            if (null != e) {\n                                if ((l = e.$$typeof) === Aa) {\n                                    n.tag = 11, n.type = e, n = Lt(null, n, e, r, t);\n                                    break e;\n                                }\n                                if (l === Ba) {\n                                    n.tag = 14, n = Ut(null, n, e, r, t);\n                                    break e;\n                                }\n                            }\n                            throw n = \"\", null !== e && \"object\" == typeof e && e.$$typeof === Va && (n = \" Did you wrap a component in React.lazy() more than once?\"), e = s(e) || e, Error(\"Element type is invalid. Received a promise that resolves to: \" + e + \". Lazy element type must resolve to a class or function.\" + n);\n                        }\n                        ca(e) ? (r = Ct(e, r), n.tag = 1, n.type = e, n = jt(null, n, e, r, t)) : (n.tag = 0, At(n, e), n.type = e, n = Wt(null, n, e, r, t));\n                    }\n                    return n;\n                case 0:\n                    return Wt(e, n, n.type, n.pendingProps, t);\n                case 1:\n                    return jt(e, n, r = n.type, l = Ct(r, n.pendingProps), t);\n                case 3:\n                    if (W(n, n.stateNode.containerInfo), null === e) throw Error(\"Should have a current fiber. This is a bug in React.\");\n                    var a = n.pendingProps;\n                    r = (l = n.memoizedState).element, he(e, n), ke(n, a, null, t);\n                    var o = n.memoizedState;\n                    return a = o.cache, tr(n, Uc, a), a !== l.cache && ar(n, [\n                        Uc\n                    ], t, !0), Se(), (a = o.element) !== r ? (Nt(e, n, a, t), n = n.child) : n = Xt(e, n, t), n;\n                case 26:\n                case 27:\n                case 5:\n                    return A(n), l = n.type, a = n.pendingProps, o = null !== e ? e.memoizedProps : null, r = a.children, mo(l, a) ? r = null : null !== o && mo(l, o) && (n.flags |= 32), null !== n.memoizedState && (l = Ze(e, n, tn, null, null, t), Uo._currentValue2 = l), Mt(e, n), Nt(e, n, r, t), n.child;\n                case 6:\n                    return null;\n                case 13:\n                    return Bt(e, n, t);\n                case 4:\n                    return W(n, n.stateNode.containerInfo), r = n.pendingProps, null === e ? n.child = fs(n, null, r, t) : Nt(e, n, r, t), n.child;\n                case 11:\n                    return Lt(e, n, n.type, n.pendingProps, t);\n                case 7:\n                    return Nt(e, n, n.pendingProps, t), n.child;\n                case 8:\n                    return Nt(e, n, n.pendingProps.children, t), n.child;\n                case 12:\n                    return n.flags |= 4, n.flags |= 2048, (r = n.stateNode).effectDuration = -0, r.passiveEffectDuration = -0, Nt(e, n, n.pendingProps.children, t), n.child;\n                case 10:\n                    return r = n.type, a = (l = n.pendingProps).value, \"value\" in l || wc || (wc = !0, console.error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")), tr(n, r, a), Nt(e, n, l.children, t), n.child;\n                case 9:\n                    return l = n.type._context, \"function\" != typeof (r = n.pendingProps.children) && console.error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\"), ir(n), l = sr(l), r = ji(r, l, void 0), n.flags |= 1, Nt(e, n, r, t), n.child;\n                case 14:\n                    return Ut(e, n, n.type, n.pendingProps, t);\n                case 15:\n                    return Dt(e, n, n.type, n.pendingProps, t);\n                case 19:\n                    return Kt(e, n, t);\n                case 22:\n                    return It(e, n, t);\n                case 24:\n                    return ir(n), r = sr(Uc), null === e ? (null === (l = hr()) && (l = cf, a = dr(), l.pooledCache = a, pr(a), null !== a && (l.pooledCacheLanes |= t), l = a), n.memoizedState = {\n                        parent: r,\n                        cache: l\n                    }, me(n), tr(n, Uc, l)) : (0 != (e.lanes & t) && (he(e, n), ke(n, null, null, t), Se()), l = e.memoizedState, a = n.memoizedState, l.parent !== r ? (l = {\n                        parent: r,\n                        cache: r\n                    }, n.memoizedState = l, 0 === n.lanes && (n.memoizedState = n.updateQueue.baseState = l), tr(n, Uc, r)) : (r = a.cache, tr(n, Uc, r), r !== l.cache && ar(n, [\n                        Uc\n                    ], t, !0))), Nt(e, n, n.pendingProps.children, t), n.child;\n                case 29:\n                    throw n.pendingProps;\n            }\n            throw Error(\"Unknown unit of work tag (\" + n.tag + \"). This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        function nr() {\n            _c = Pc = Ec = null, Rc = !1;\n        }\n        function tr(e, n, t) {\n            S(xc, n._currentValue2, e), n._currentValue2 = t, S(zc, n._currentRenderer2, e), void 0 !== n._currentRenderer2 && null !== n._currentRenderer2 && n._currentRenderer2 !== Cc && console.error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\"), n._currentRenderer2 = Cc;\n        }\n        function rr(e, n) {\n            var t = xc.current;\n            e._currentValue2 = t, t = zc.current, v(zc, n), e._currentRenderer2 = t, v(xc, n);\n        }\n        function lr(e, n, t) {\n            for(; null !== e;){\n                var r = e.alternate;\n                if ((e.childLanes & n) !== n ? (e.childLanes |= n, null !== r && (r.childLanes |= n)) : null !== r && (r.childLanes & n) !== n && (r.childLanes |= n), e === t) break;\n                e = e.return;\n            }\n            e !== t && console.error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        function ar(e, n, t, r) {\n            var l = e.child;\n            for(null !== l && (l.return = e); null !== l;){\n                var a = l.dependencies;\n                if (null !== a) {\n                    var o = l.child;\n                    a = a.firstContext;\n                    e: for(; null !== a;){\n                        var u = a;\n                        a = l;\n                        for(var i = 0; i < n.length; i++)if (u.context === n[i]) {\n                            a.lanes |= t, null !== (u = a.alternate) && (u.lanes |= t), lr(a.return, t, e), r || (o = null);\n                            break e;\n                        }\n                        a = u.next;\n                    }\n                } else if (18 === l.tag) {\n                    if (null === (o = l.return)) throw Error(\"We just came from a parent so we must have had a parent. This is a bug in React.\");\n                    o.lanes |= t, null !== (a = o.alternate) && (a.lanes |= t), lr(o, t, e), o = null;\n                } else o = l.child;\n                if (null !== o) o.return = l;\n                else for(o = l; null !== o;){\n                    if (o === e) {\n                        o = null;\n                        break;\n                    }\n                    if (null !== (l = o.sibling)) {\n                        l.return = o.return, o = l;\n                        break;\n                    }\n                    o = o.return;\n                }\n                l = o;\n            }\n        }\n        function or(e, n, t, r) {\n            e = null;\n            for(var l = n, a = !1; null !== l;){\n                if (!a) {\n                    if (0 != (524288 & l.flags)) a = !0;\n                    else if (0 != (262144 & l.flags)) break;\n                }\n                if (10 === l.tag) {\n                    var o = l.alternate;\n                    if (null === o) throw Error(\"Should have a current fiber. This is a bug in React.\");\n                    if (null !== (o = o.memoizedProps)) {\n                        var u = l.type;\n                        Ru(l.pendingProps.value, o.value) || (null !== e ? e.push(u) : e = [\n                            u\n                        ]);\n                    }\n                } else if (l === Ou.current) {\n                    if (null === (o = l.alternate)) throw Error(\"Should have a current fiber. This is a bug in React.\");\n                    o.memoizedState.memoizedState !== l.memoizedState.memoizedState && (null !== e ? e.push(Uo) : e = [\n                        Uo\n                    ]);\n                }\n                l = l.return;\n            }\n            null !== e && ar(n, e, t, r), n.flags |= 262144;\n        }\n        function ur(e) {\n            for(e = e.firstContext; null !== e;){\n                var n = e.context;\n                if (!Ru(n._currentValue2, e.memoizedValue)) return !0;\n                e = e.next;\n            }\n            return !1;\n        }\n        function ir(e) {\n            Ec = e, _c = Pc = null, null !== (e = e.dependencies) && (e.firstContext = null);\n        }\n        function sr(e) {\n            return Rc && console.error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"), fr(Ec, e);\n        }\n        function cr(e, n) {\n            return null === Ec && ir(e), fr(e, n);\n        }\n        function fr(e, n) {\n            var t = n._currentValue2;\n            if (_c !== n) if (n = {\n                context: n,\n                memoizedValue: t,\n                next: null\n            }, null === Pc) {\n                if (null === e) throw Error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\");\n                Pc = n, e.dependencies = {\n                    lanes: 0,\n                    firstContext: n,\n                    _debugThenableState: null\n                }, e.flags |= 524288;\n            } else Pc = Pc.next = n;\n            return t;\n        }\n        function dr() {\n            return {\n                controller: new Tc,\n                data: new Map,\n                refCount: 0\n            };\n        }\n        function pr(e) {\n            e.controller.signal.aborted && console.warn(\"A cache instance was retained after it was already freed. This likely indicates a bug in React.\"), e.refCount++;\n        }\n        function mr(e) {\n            e.refCount--, 0 > e.refCount && console.warn(\"A cache instance was released after it was already freed. This likely indicates a bug in React.\"), 0 === e.refCount && Nc(Lc, function() {\n                e.controller.abort();\n            });\n        }\n        function hr() {\n            var e = Ic.current;\n            return null !== e ? e : cf.pooledCache;\n        }\n        function gr(e, n) {\n            S(Ic, null === n ? Ic.current : n.pool, e);\n        }\n        function yr() {\n            var e = hr();\n            return null === e ? null : {\n                parent: Uc._currentValue2,\n                pool: e\n            };\n        }\n        function br(e) {\n            e.flags |= 4;\n        }\n        function vr(e, n) {\n            null !== n && (e.flags |= 4), 16384 & e.flags && (n = 22 !== e.tag ? C() : 536870912, e.lanes |= n);\n        }\n        function Sr(e, n) {\n            switch(e.tailMode){\n                case \"hidden\":\n                    n = e.tail;\n                    for(var t = null; null !== n;)null !== n.alternate && (t = n), n = n.sibling;\n                    null === t ? e.tail = null : t.sibling = null;\n                    break;\n                case \"collapsed\":\n                    t = e.tail;\n                    for(var r = null; null !== t;)null !== t.alternate && (r = t), t = t.sibling;\n                    null === r ? n || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null;\n            }\n        }\n        function kr(e) {\n            var n = null !== e.alternate && e.alternate.child === e.child, t = 0, r = 0;\n            if (n) if ((2 & e.mode) !== $u) {\n                for(var l = e.selfBaseDuration, a = e.child; null !== a;)t |= a.lanes | a.childLanes, r |= 31457280 & a.subtreeFlags, r |= 31457280 & a.flags, l += a.treeBaseDuration, a = a.sibling;\n                e.treeBaseDuration = l;\n            } else for(l = e.child; null !== l;)t |= l.lanes | l.childLanes, r |= 31457280 & l.subtreeFlags, r |= 31457280 & l.flags, l.return = e, l = l.sibling;\n            else if ((2 & e.mode) !== $u) {\n                l = e.actualDuration, a = e.selfBaseDuration;\n                for(var o = e.child; null !== o;)t |= o.lanes | o.childLanes, r |= o.subtreeFlags, r |= o.flags, l += o.actualDuration, a += o.treeBaseDuration, o = o.sibling;\n                e.actualDuration = l, e.treeBaseDuration = a;\n            } else for(l = e.child; null !== l;)t |= l.lanes | l.childLanes, r |= l.subtreeFlags, r |= l.flags, l.return = e, l = l.sibling;\n            return e.subtreeFlags |= r, e.childLanes = t, n;\n        }\n        function wr(e, n, t) {\n            var r = n.pendingProps;\n            switch(I(n), n.tag){\n                case 16:\n                case 15:\n                case 0:\n                case 11:\n                case 7:\n                case 8:\n                case 12:\n                case 9:\n                case 14:\n                case 1:\n                    return kr(n), null;\n                case 3:\n                    return t = n.stateNode, r = null, null !== e && (r = e.memoizedState.cache), n.memoizedState.cache !== r && (n.flags |= 2048), rr(Uc, n), H(n), t.pendingContext && (t.context = t.pendingContext, t.pendingContext = null), null !== e && null !== e.child || null === e || e.memoizedState.isDehydrated && 0 == (256 & n.flags) || (n.flags |= 1024, null !== Vu && (Pl(Vu), Vu = null)), kr(n), null;\n                case 26:\n                    var l;\n                case 27:\n                case 5:\n                    if (Q(n), t = n.type, null !== e && null != n.stateNode) !function(e, n, t, r) {\n                        e.memoizedProps !== r && br(n);\n                    }(e, n, 0, r);\n                    else {\n                        if (!r) {\n                            if (null === n.stateNode) throw Error(\"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\");\n                            return kr(n), null;\n                        }\n                        e = j(), l = M(Qu.current), function(e, n, t, r) {\n                            for(t = n.child; null !== t;){\n                                if (5 === t.tag || 6 === t.tag) fo(e, t.stateNode);\n                                else if (4 !== t.tag && !au && null !== t.child) {\n                                    t.child.return = t, t = t.child;\n                                    continue;\n                                }\n                                if (t === n) break;\n                                for(; null === t.sibling;){\n                                    if (null === t.return || t.return === n) return;\n                                    t = t.return;\n                                }\n                                t.sibling.return = t.return, t = t.sibling;\n                            }\n                        }(l = co(t, r, l, e, n), n, !1), n.stateNode = l, po(l, t, r, e) && br(n);\n                    }\n                    return kr(n), function(e, n, t) {\n                        if (Po(n, t)) {\n                            if (e.flags |= 16777216, !_o(n, t)) {\n                                if (!Dl()) throw Mi = Fi, Ii;\n                                e.flags |= 8192;\n                            }\n                        } else e.flags &= -16777217;\n                    }(n, n.type, n.pendingProps), null;\n                case 6:\n                    if (e && null != n.stateNode) (t = e.memoizedProps) !== r && br(n);\n                    else {\n                        if (\"string\" != typeof r && null === n.stateNode) throw Error(\"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\");\n                        var a;\n                        e = M(Qu.current), t = j(), n.stateNode = ho(r, e, t, n);\n                    }\n                    return kr(n), null;\n                case 13:\n                    if (r = n.memoizedState, null === e || null !== e.memoizedState && null !== e.memoizedState.dehydrated) {\n                        if (l = !1, null !== r && null !== r.dehydrated) {\n                            if (null === e) {\n                                if (!l) throw Error(\"A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.\");\n                                throw Error(\"Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.\");\n                            }\n                            0 == (128 & n.flags) && (n.memoizedState = null), n.flags |= 4, kr(n), (2 & n.mode) !== $u && null !== r && null !== (l = n.child) && (n.treeBaseDuration -= l.treeBaseDuration), l = !1;\n                        } else null !== Vu && (Pl(Vu), Vu = null), l = !0;\n                        if (!l) return 256 & n.flags ? (Ve(n), n) : (Ve(n), null);\n                    }\n                    return Ve(n), 0 != (128 & n.flags) ? (n.lanes = t, (2 & n.mode) !== $u && re(n), n) : (t = null !== r, e = null !== e && null !== e.memoizedState, t && (l = null, null !== (r = n.child).alternate && null !== r.alternate.memoizedState && null !== r.alternate.memoizedState.cachePool && (l = r.alternate.memoizedState.cachePool.pool), a = null, null !== r.memoizedState && null !== r.memoizedState.cachePool && (a = r.memoizedState.cachePool.pool), a !== l && (r.flags |= 2048)), t !== e && t && (n.child.flags |= 8192), vr(n, n.updateQueue), kr(n), (2 & n.mode) !== $u && t && null !== (e = n.child) && (n.treeBaseDuration -= e.treeBaseDuration), null);\n                case 4:\n                    return H(n), null === e && ko(n.stateNode.containerInfo), kr(n), null;\n                case 10:\n                    return rr(n.type, n), kr(n), null;\n                case 19:\n                    if (v(vs, n), null === (l = n.memoizedState)) return kr(n), null;\n                    if (r = 0 != (128 & n.flags), null === (a = l.rendering)) if (r) Sr(l, !1);\n                    else {\n                        if (Pf !== nf || null !== e && 0 != (128 & e.flags)) for(e = n.child; null !== e;){\n                            if (null !== (a = $e(e))) {\n                                for(n.flags |= 128, Sr(l, !1), e = a.updateQueue, n.updateQueue = e, vr(n, e), n.subtreeFlags = 0, e = t, t = n.child; null !== t;)da(t, e), t = t.sibling;\n                                return S(vs, vs.current & ys | bs, n), n.child;\n                            }\n                            e = e.sibling;\n                        }\n                        null !== l.tail && vu() > Wf && (n.flags |= 128, r = !0, Sr(l, !1), n.lanes = 4194304);\n                    }\n                    else {\n                        if (!r) if (null !== (e = $e(a))) {\n                            if (n.flags |= 128, r = !0, e = e.updateQueue, n.updateQueue = e, vr(n, e), Sr(l, !0), null === l.tail && \"hidden\" === l.tailMode && !a.alternate) return kr(n), null;\n                        } else 2 * vu() - l.renderingStartTime > Wf && 536870912 !== t && (n.flags |= 128, r = !0, Sr(l, !1), n.lanes = 4194304);\n                        l.isBackwards ? (a.sibling = n.child, n.child = a) : (null !== (e = l.last) ? e.sibling = a : n.child = a, l.last = a);\n                    }\n                    return null !== l.tail ? (e = l.tail, l.rendering = e, l.tail = e.sibling, l.renderingStartTime = vu(), e.sibling = null, t = vs.current, S(vs, t = r ? t & ys | bs : t & ys, n), e) : (kr(n), null);\n                case 22:\n                case 23:\n                    return Ve(n), Ae(n), r = null !== n.memoizedState, null !== e ? null !== e.memoizedState !== r && (n.flags |= 8192) : r && (n.flags |= 8192), r ? 0 != (536870912 & t) && 0 == (128 & n.flags) && (kr(n), 6 & n.subtreeFlags && (n.flags |= 8192)) : kr(n), null !== (t = n.updateQueue) && vr(n, t.retryQueue), t = null, null !== e && null !== e.memoizedState && null !== e.memoizedState.cachePool && (t = e.memoizedState.cachePool.pool), r = null, null !== n.memoizedState && null !== n.memoizedState.cachePool && (r = n.memoizedState.cachePool.pool), r !== t && (n.flags |= 2048), null !== e && v(Ic, n), null;\n                case 24:\n                    return t = null, null !== e && (t = e.memoizedState.cache), n.memoizedState.cache !== t && (n.flags |= 2048), rr(Uc, n), kr(n), null;\n                case 25:\n                    return null;\n            }\n            throw Error(\"Unknown unit of work tag (\" + n.tag + \"). This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        function xr(e, n) {\n            switch(I(n), n.tag){\n                case 1:\n                    return 65536 & (e = n.flags) ? (n.flags = -65537 & e | 128, (2 & n.mode) !== $u && re(n), n) : null;\n                case 3:\n                    return rr(Uc, n), H(n), 0 != (65536 & (e = n.flags)) && 0 == (128 & e) ? (n.flags = -65537 & e | 128, n) : null;\n                case 26:\n                case 27:\n                case 5:\n                    return Q(n), null;\n                case 13:\n                    if (Ve(n), null !== (e = n.memoizedState) && null !== e.dehydrated && null === n.alternate) throw Error(\"Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.\");\n                    return 65536 & (e = n.flags) ? (n.flags = -65537 & e | 128, (2 & n.mode) !== $u && re(n), n) : null;\n                case 19:\n                    return v(vs, n), null;\n                case 4:\n                    return H(n), null;\n                case 10:\n                    return rr(n.type, n), null;\n                case 22:\n                case 23:\n                    return Ve(n), Ae(n), null !== e && v(Ic, n), 65536 & (e = n.flags) ? (n.flags = -65537 & e | 128, (2 & n.mode) !== $u && re(n), n) : null;\n                case 24:\n                    return rr(Uc, n), null;\n                default:\n                    return null;\n            }\n        }\n        function zr(e, n) {\n            switch(I(n), n.tag){\n                case 3:\n                    rr(Uc, n), H(n);\n                    break;\n                case 26:\n                case 27:\n                case 5:\n                    Q(n);\n                    break;\n                case 4:\n                    H(n);\n                    break;\n                case 13:\n                    Ve(n);\n                    break;\n                case 19:\n                    v(vs, n);\n                    break;\n                case 10:\n                    rr(n.type, n);\n                    break;\n                case 22:\n                case 23:\n                    Ve(n), Ae(n), null !== e && v(Ic, n);\n                    break;\n                case 24:\n                    rr(Uc, n);\n            }\n        }\n        function Cr(e) {\n            return (2 & e.mode) !== $u;\n        }\n        function Er(e, n) {\n            Cr(e) ? (te(), _r(n, e), ne()) : _r(n, e);\n        }\n        function Pr(e, n, t) {\n            Cr(e) ? (te(), Rr(t, e, n), ne()) : Rr(t, e, n);\n        }\n        function _r(e, n) {\n            try {\n                var t = n.updateQueue, r = null !== t ? t.lastEffect : null;\n                if (null !== r) {\n                    var l = r.next;\n                    t = l;\n                    do {\n                        var a;\n                        (t.tag & e) === e && ((e & zs) !== Ss ? null !== Pu && \"function\" == typeof Pu.markComponentPassiveEffectMountStarted && Pu.markComponentPassiveEffectMountStarted(n) : (e & xs) !== Ss && null !== Pu && \"function\" == typeof Pu.markComponentLayoutEffectMountStarted && Pu.markComponentLayoutEffectMountStarted(n), r = void 0, (e & ws) !== Ss && (nd = !0), r = y(n, Xi, t), (e & ws) !== Ss && (nd = !1), (e & zs) !== Ss ? null !== Pu && \"function\" == typeof Pu.markComponentPassiveEffectMountStopped && Pu.markComponentPassiveEffectMountStopped() : (e & xs) !== Ss && null !== Pu && \"function\" == typeof Pu.markComponentLayoutEffectMountStopped && Pu.markComponentLayoutEffectMountStopped(), void 0 !== r && \"function\" != typeof r) && y(n, function(e, n) {\n                            console.error(\"%s must not return anything besides a function, which is used for clean-up.%s\", e, n);\n                        }, a = 0 != (t.tag & xs) ? \"useLayoutEffect\" : 0 != (t.tag & ws) ? \"useInsertionEffect\" : \"useEffect\", null === r ? \" You returned null. If your effect does not require clean up, return undefined (or nothing).\" : \"function\" == typeof r.then ? \"\\n\\nIt looks like you wrote \" + a + \"(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\\n\\n\" + a + \"(() => {\\n  async function fetchData() {\\n    // You can await here\\n    const response = await MyAPI.getData(someId);\\n    // ...\\n  }\\n  fetchData();\\n}, [someId]); // Or [] if effect doesn't need props or state\\n\\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching\" : \" You returned: \" + r), t = t.next;\n                    }while (t !== l);\n                }\n            } catch (e) {\n                Xl(n, n.return, e);\n            }\n        }\n        function Rr(e, n, t) {\n            try {\n                var r = n.updateQueue, l = null !== r ? r.lastEffect : null;\n                if (null !== l) {\n                    var a = l.next;\n                    r = a;\n                    do {\n                        if ((r.tag & e) === e) {\n                            var o = r.inst, u = o.destroy;\n                            void 0 !== u && (o.destroy = void 0, (e & zs) !== Ss ? null !== Pu && \"function\" == typeof Pu.markComponentPassiveEffectUnmountStarted && Pu.markComponentPassiveEffectUnmountStarted(n) : (e & xs) !== Ss && null !== Pu && \"function\" == typeof Pu.markComponentLayoutEffectUnmountStarted && Pu.markComponentLayoutEffectUnmountStarted(n), (e & ws) !== Ss && (nd = !0), y(n, es, n, t, u), (e & ws) !== Ss && (nd = !1), (e & zs) !== Ss ? null !== Pu && \"function\" == typeof Pu.markComponentPassiveEffectUnmountStopped && Pu.markComponentPassiveEffectUnmountStopped() : (e & xs) !== Ss && null !== Pu && \"function\" == typeof Pu.markComponentLayoutEffectUnmountStopped && Pu.markComponentLayoutEffectUnmountStopped());\n                        }\n                        r = r.next;\n                    }while (r !== a);\n                }\n            } catch (e) {\n                Xl(n, n.return, e);\n            }\n        }\n        function Tr(e, n) {\n            Cr(e) ? (te(), _r(n, e), ne()) : _r(n, e);\n        }\n        function Nr(e, n, t) {\n            Cr(e) ? (te(), Rr(t, e, n), ne()) : Rr(t, e, n);\n        }\n        function Lr(e) {\n            var n = e.updateQueue;\n            if (null !== n) {\n                var t = e.stateNode;\n                e.type.defaultProps || \"ref\" in e.memoizedProps || bc || (t.props !== e.memoizedProps && console.error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", c(e) || \"instance\"), t.state !== e.memoizedState && console.error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", c(e) || \"instance\"));\n                try {\n                    y(e, ze, n, t);\n                } catch (n) {\n                    Xl(e, e.return, n);\n                }\n            }\n        }\n        function Ur(e, n, t) {\n            return e.getSnapshotBeforeUpdate(n, t);\n        }\n        function Dr(e, n) {\n            var t = n.memoizedProps, r = n.memoizedState;\n            n = e.stateNode, e.type.defaultProps || \"ref\" in e.memoizedProps || bc || (n.props !== e.memoizedProps && console.error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", c(e) || \"instance\"), n.state !== e.memoizedState && console.error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", c(e) || \"instance\"));\n            try {\n                var l = Ct(e.type, t, (e.elementType, e.type)), a = y(e, Ur, n, l, r);\n                t = Fc, void 0 !== a || t.has(e.type) || (t.add(e.type), y(e, function() {\n                    console.error(\"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.\", c(e));\n                })), n.__reactInternalSnapshotBeforeUpdate = a;\n            } catch (n) {\n                Xl(e, e.return, n);\n            }\n        }\n        function Ir(e, n, t) {\n            t.props = Ct(e.type, e.memoizedProps), t.state = e.memoizedState, Cr(e) ? (te(), y(e, Ji, e, n, t), ne()) : y(e, Ji, e, n, t);\n        }\n        function Fr(e) {\n            var n = e.ref;\n            if (null !== n) {\n                var t = e.stateNode;\n                switch(e.tag){\n                    case 26:\n                    case 27:\n                    case 5:\n                        t = ao(t);\n                }\n                if (\"function\" == typeof n) if (Cr(e)) try {\n                    te(), e.refCleanup = n(t);\n                } finally{\n                    ne();\n                }\n                else e.refCleanup = n(t);\n                else \"string\" == typeof n ? console.error(\"String refs are no longer supported.\") : n.hasOwnProperty(\"current\") || console.error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().\", c(e)), n.current = t;\n            }\n        }\n        function Mr(e, n) {\n            try {\n                y(e, Fr, e);\n            } catch (t) {\n                Xl(e, n, t);\n            }\n        }\n        function Wr(e, n) {\n            var t = e.ref, r = e.refCleanup;\n            if (null !== t) if (\"function\" == typeof r) try {\n                if (Cr(e)) try {\n                    te(), y(e, r);\n                } finally{\n                    ne();\n                }\n                else y(e, r);\n            } catch (t) {\n                Xl(e, n, t);\n            } finally{\n                e.refCleanup = null, null != (e = e.alternate) && (e.refCleanup = null);\n            }\n            else if (\"function\" == typeof t) try {\n                if (Cr(e)) try {\n                    te(), y(e, t, null);\n                } finally{\n                    ne();\n                }\n                else y(e, t, null);\n            } catch (t) {\n                Xl(e, n, t);\n            }\n            else t.current = null;\n        }\n        function Hr(e, n, t, r) {\n            var l = e.memoizedProps, a = l.id, o = l.onCommit;\n            l = l.onRender, n = null === n ? \"mount\" : \"update\", ei && (n = \"nested-update\"), \"function\" == typeof l && l(a, n, e.actualDuration, e.treeBaseDuration, e.actualStartTime, t), \"function\" == typeof o && o(e.memoizedProps.id, n, r, t);\n        }\n        function jr(e, n, t, r) {\n            var l = e.memoizedProps;\n            e = l.id, l = l.onPostCommit, n = null === n ? \"mount\" : \"update\", ei && (n = \"nested-update\"), \"function\" == typeof l && l(e, n, r, t);\n        }\n        function Ar(e) {\n            var n = e.type, t = e.memoizedProps, r = e.stateNode;\n            try {\n                y(e, Wo, r, n, t, e);\n            } catch (n) {\n                Xl(e, e.return, n);\n            }\n        }\n        function Qr(e) {\n            return 5 === e.tag || 3 === e.tag || 4 === e.tag;\n        }\n        function Or(e) {\n            e: for(;;){\n                for(; null === e.sibling;){\n                    if (null === e.return || Qr(e.return)) return null;\n                    e = e.return;\n                }\n                for(e.sibling.return = e.return, e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag;){\n                    if (2 & e.flags) continue e;\n                    if (null === e.child || 4 === e.tag) continue e;\n                    e.child.return = e, e = e.child;\n                }\n                if (!(2 & e.flags)) return e.stateNode;\n            }\n        }\n        function Br(e, n, t) {\n            var r = e.tag;\n            if (5 === r || 6 === r) e = e.stateNode, n ? Ao(t, e, n) : Fo(t, e);\n            else if (4 !== r && !au && null !== (e = e.child)) for(Br(e, n, t), e = e.sibling; null !== e;)Br(e, n, t), e = e.sibling;\n        }\n        function Vr(e, n, t) {\n            var r = e.tag;\n            if (5 === r || 6 === r) e = e.stateNode, n ? jo(t, e, n) : Io(t, e);\n            else if (4 !== r && !au && null !== (e = e.child)) for(Vr(e, n, t), e = e.sibling; null !== e;)Vr(e, n, t), e = e.sibling;\n        }\n        function $r(e) {\n            e: {\n                for(var n = e.return; null !== n;){\n                    if (Qr(n)) {\n                        var t = n;\n                        break e;\n                    }\n                    n = n.return;\n                }\n                throw Error(\"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\");\n            }\n            switch(t.tag){\n                case 27:\n                case 5:\n                    n = t.stateNode, 32 & t.flags && (Bo(n), t.flags &= -33), Vr(e, t = Or(e), n);\n                    break;\n                case 3:\n                case 4:\n                    n = t.stateNode.containerInfo, Br(e, t = Or(e), n);\n                    break;\n                default:\n                    throw Error(\"Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.\");\n            }\n        }\n        function qr(e, n, t) {\n            var r = t.flags;\n            switch(t.tag){\n                case 0:\n                case 11:\n                case 15:\n                    tl(e, t), 4 & r && Er(t, xs | ks);\n                    break;\n                case 1:\n                    if (tl(e, t), 4 & r) if (e = t.stateNode, null === n) t.type.defaultProps || \"ref\" in t.memoizedProps || bc || (e.props !== t.memoizedProps && console.error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", c(t) || \"instance\"), e.state !== t.memoizedState && console.error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", c(t) || \"instance\")), Cr(t) ? (te(), y(t, Bi, t, e), ne()) : y(t, Bi, t, e);\n                    else {\n                        var l = Ct(t.type, n.memoizedProps);\n                        n = n.memoizedState, t.type.defaultProps || \"ref\" in t.memoizedProps || bc || (e.props !== t.memoizedProps && console.error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", c(t) || \"instance\"), e.state !== t.memoizedState && console.error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", c(t) || \"instance\")), Cr(t) ? (te(), y(t, $i, t, e, l, n, e.__reactInternalSnapshotBeforeUpdate), ne()) : y(t, $i, t, e, l, n, e.__reactInternalSnapshotBeforeUpdate);\n                    }\n                    64 & r && Lr(t), 512 & r && Mr(t, t.return);\n                    break;\n                case 3:\n                    if (n = G(), tl(e, t), 64 & r && null !== (r = t.updateQueue)) {\n                        if (l = null, null !== t.child) switch(t.child.tag){\n                            case 27:\n                            case 5:\n                                l = ao(t.child.stateNode);\n                                break;\n                            case 1:\n                                l = t.child.stateNode;\n                        }\n                        try {\n                            y(t, ze, r, l);\n                        } catch (e) {\n                            Xl(t, t.return, e);\n                        }\n                    }\n                    e.effectDuration += J(n);\n                    break;\n                case 26:\n                case 27:\n                case 5:\n                    tl(e, t), null === n && 4 & r && Ar(t), 512 & r && Mr(t, t.return);\n                    break;\n                case 12:\n                    if (4 & r) {\n                        r = G(), tl(e, t), (e = t.stateNode).effectDuration += K(r);\n                        try {\n                            y(t, Hr, t, n, Ku, e.effectDuration);\n                        } catch (e) {\n                            Xl(t, t.return, e);\n                        }\n                    } else tl(e, t);\n                    break;\n                case 13:\n                default:\n                    tl(e, t);\n                    break;\n                case 22:\n                    if (!(l = null !== t.memoizedState || Mc)) {\n                        n = null !== n && null !== n.memoizedState || Wc;\n                        var a = Mc, o = Wc;\n                        Mc = l, (Wc = n) && !o ? ol(e, t, 0 != (8772 & t.subtreeFlags)) : tl(e, t), Mc = a, Wc = o;\n                    }\n                    512 & r && (\"manual\" === t.memoizedProps.mode ? Mr(t, t.return) : Wr(t, t.return));\n            }\n        }\n        function Yr(e) {\n            var n = e.alternate;\n            null !== n && (e.alternate = null, Yr(n)), e.child = null, e.deletions = null, e.sibling = null, 5 === e.tag && null !== (n = e.stateNode) && Eo(n), e.stateNode = null, e._debugOwner = null, e.return = null, e.dependencies = null, e.memoizedProps = null, e.memoizedState = null, e.pendingProps = null, e.stateNode = null, e.updateQueue = null;\n        }\n        function Gr(e, n, t) {\n            for(t = t.child; null !== t;)Jr(e, n, t), t = t.sibling;\n        }\n        function Jr(e, n, t) {\n            switch(t.tag){\n                case 26:\n                case 27:\n                    var r, l;\n                case 5:\n                    Wc || Wr(t, n);\n                case 6:\n                    if (r = Vc, l = $c, Vc = null, Gr(e, n, t), $c = l, null !== (Vc = r)) if ($c) try {\n                        y(t, Oo, Vc, t.stateNode);\n                    } catch (e) {\n                        Xl(t, n, e);\n                    }\n                    else try {\n                        y(t, Qo, Vc, t.stateNode);\n                    } catch (e) {\n                        Xl(t, n, e);\n                    }\n                    break;\n                case 18:\n                    null !== Vc && ($c ? nu(Vc, t.stateNode) : eu(Vc, t.stateNode));\n                    break;\n                case 4:\n                    r = Vc, l = $c, Vc = t.stateNode.containerInfo, $c = !0, Gr(e, n, t), Vc = r, $c = l;\n                    break;\n                case 0:\n                case 11:\n                case 14:\n                case 15:\n                    Wc || Rr(ws, t, n), Wc || Pr(t, n, xs), Gr(e, n, t);\n                    break;\n                case 1:\n                    Wc || (Wr(t, n), \"function\" == typeof (r = t.stateNode).componentWillUnmount && Ir(t, n, r)), Gr(e, n, t);\n                    break;\n                case 21:\n                    Gr(e, n, t);\n                    break;\n                case 22:\n                    Wr(t, n), Wc = (r = Wc) || null !== t.memoizedState, Gr(e, n, t), Wc = r;\n                    break;\n                default:\n                    Gr(e, n, t);\n            }\n        }\n        function Kr(e, n) {\n            var t = function(e) {\n                switch(e.tag){\n                    case 13:\n                    case 19:\n                        var n = e.stateNode;\n                        return null === n && (n = e.stateNode = new jc), n;\n                    case 22:\n                        return null === (n = (e = e.stateNode)._retryCache) && (n = e._retryCache = new jc), n;\n                    default:\n                        throw Error(\"Unexpected Suspense handler tag (\" + e.tag + \"). This is a bug in React.\");\n                }\n            }(e);\n            n.forEach(function(n) {\n                var r = ra.bind(null, e, n);\n                if (!t.has(n)) {\n                    if (t.add(n), _u) {\n                        if (null === Qc || null === Oc) throw Error(\"Expected finished root and lanes to be set. This is a bug in React.\");\n                        ia(Oc, Qc);\n                    }\n                    n.then(r, r);\n                }\n            });\n        }\n        function Xr(e, n) {\n            var t = n.deletions;\n            if (null !== t) for(var r = 0; r < t.length; r++){\n                var l = e, a = n, o = t[r], u = a;\n                e: for(; null !== u;){\n                    switch(u.tag){\n                        case 27:\n                        case 5:\n                            Vc = u.stateNode, $c = !1;\n                            break e;\n                        case 3:\n                        case 4:\n                            Vc = u.stateNode.containerInfo, $c = !0;\n                            break e;\n                    }\n                    u = u.return;\n                }\n                if (null === Vc) throw Error(\"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\");\n                Jr(l, a, o), Vc = null, $c = !1, null !== (a = (l = o).alternate) && (a.return = null), l.return = null;\n            }\n            if (13878 & n.subtreeFlags) for(n = n.child; null !== n;)Zr(n, e), n = n.sibling;\n        }\n        function Zr(e, n) {\n            var t = e.alternate, r = e.flags;\n            switch(e.tag){\n                case 0:\n                case 11:\n                case 14:\n                case 15:\n                    Xr(n, e), el(e), 4 & r && (Rr(ws | ks, e, e.return), _r(ws | ks, e), Pr(e, e.return, xs | ks));\n                    break;\n                case 1:\n                    Xr(n, e), el(e), 512 & r && null !== t && Wr(t, t.return), 64 & r && Mc && null !== (e = e.updateQueue) && null !== (r = e.callbacks) && (t = e.shared.hiddenCallbacks, e.shared.hiddenCallbacks = null === t ? r : t.concat(r));\n                    break;\n                case 26:\n                    var l;\n                case 27:\n                    var a;\n                case 5:\n                    if (Xr(n, e), el(e), 512 & r && null !== t && Wr(t, t.return), 32 & e.flags) {\n                        n = e.stateNode;\n                        try {\n                            y(e, Bo, n);\n                        } catch (n) {\n                            Xl(e, e.return, n);\n                        }\n                    }\n                    4 & r && null != e.stateNode && function(e, n, t) {\n                        try {\n                            y(e, Ho, e.stateNode, e.type, t, n, e);\n                        } catch (n) {\n                            Xl(e, e.return, n);\n                        }\n                    }(e, n = e.memoizedProps, null !== t ? t.memoizedProps : n), 1024 & r && (Hc = !0, \"form\" !== e.type && console.error(\"Unexpected host component type. Expected a form. This is a bug in React.\"));\n                    break;\n                case 6:\n                    if (Xr(n, e), el(e), 4 & r && vo) {\n                        if (null === e.stateNode) throw Error(\"This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.\");\n                        r = e.memoizedProps, t = null !== t ? t.memoizedProps : r, n = e.stateNode;\n                        try {\n                            y(e, Mo, n, t, r);\n                        } catch (n) {\n                            Xl(e, e.return, n);\n                        }\n                    }\n                    break;\n                case 3:\n                    l = G(), Xr(n, e), el(e), Hc && (Hc = !1, nl(e)), n.effectDuration += J(l);\n                    break;\n                case 4:\n                    Xr(n, e), el(e);\n                    break;\n                case 12:\n                    r = G(), Xr(n, e), el(e), e.stateNode.effectDuration += K(r);\n                    break;\n                case 13:\n                    Xr(n, e), el(e), 8192 & e.child.flags && null !== e.memoizedState != (null !== t && null !== t.memoizedState) && (Ff = vu()), 4 & r && null !== (r = e.updateQueue) && (e.updateQueue = null, Kr(e, r));\n                    break;\n                case 22:\n                    512 & r && null !== t && Wr(t, t.return), l = null !== e.memoizedState;\n                    var o = null !== t && null !== t.memoizedState, u = Mc, i = Wc;\n                    if (Mc = u || l, Wc = i || o, Xr(n, e), Wc = i, Mc = u, el(e), (n = e.stateNode)._current = e, n._visibility &= -3, n._visibility |= 2 & n._pendingVisibility, 8192 & r && (n._visibility = l ? -2 & n._visibility : 1 | n._visibility, l && (n = Mc || Wc, null === t || o || n || ll(e)), null === e.memoizedProps || \"manual\" !== e.memoizedProps.mode)) {\n                        e: if (t = null, vo) for(n = e;;){\n                            if (5 === n.tag || tu || au) {\n                                if (null === t) {\n                                    o = t = n;\n                                    try {\n                                        a = o.stateNode, l ? y(o, Vo, a) : y(o, qo, o.stateNode, o.memoizedProps);\n                                    } catch (e) {\n                                        Xl(o, o.return, e);\n                                    }\n                                }\n                            } else if (6 === n.tag) {\n                                if (null === t) {\n                                    o = n;\n                                    try {\n                                        var s = o.stateNode;\n                                        l ? y(o, $o, s) : y(o, Yo, s, o.memoizedProps);\n                                    } catch (e) {\n                                        Xl(o, o.return, e);\n                                    }\n                                }\n                            } else if ((22 !== n.tag && 23 !== n.tag || null === n.memoizedState || n === e) && null !== n.child) {\n                                n.child.return = n, n = n.child;\n                                continue;\n                            }\n                            if (n === e) break e;\n                            for(; null === n.sibling;){\n                                if (null === n.return || n.return === e) break e;\n                                t === n && (t = null), n = n.return;\n                            }\n                            t === n && (t = null), n.sibling.return = n.return, n = n.sibling;\n                        }\n                    }\n                    4 & r && null !== (r = e.updateQueue) && null !== (t = r.retryQueue) && (r.retryQueue = null, Kr(e, t));\n                    break;\n                case 19:\n                    Xr(n, e), el(e), 4 & r && null !== (r = e.updateQueue) && (e.updateQueue = null, Kr(e, r));\n                    break;\n                case 21:\n                    break;\n                default:\n                    Xr(n, e), el(e);\n            }\n        }\n        function el(e) {\n            var n = e.flags;\n            if (2 & n) {\n                try {\n                    y(e, $r, e);\n                } catch (n) {\n                    Xl(e, e.return, n);\n                }\n                e.flags &= -3;\n            }\n            4096 & n && (e.flags &= -4097);\n        }\n        function nl(e) {\n            if (1024 & e.subtreeFlags) for(e = e.child; null !== e;){\n                var n = e;\n                nl(n), 5 === n.tag && 1024 & n.flags && Do(n.stateNode), e = e.sibling;\n            }\n        }\n        function tl(e, n) {\n            if (8772 & n.subtreeFlags) for(n = n.child; null !== n;)qr(e, n.alternate, n), n = n.sibling;\n        }\n        function rl(e) {\n            switch(e.tag){\n                case 0:\n                case 11:\n                case 14:\n                case 15:\n                    Pr(e, e.return, xs), ll(e);\n                    break;\n                case 1:\n                    Wr(e, e.return);\n                    var n = e.stateNode;\n                    \"function\" == typeof n.componentWillUnmount && Ir(e, e.return, n), ll(e);\n                    break;\n                case 26:\n                case 27:\n                case 5:\n                    Wr(e, e.return), ll(e);\n                    break;\n                case 22:\n                    Wr(e, e.return), null === e.memoizedState && ll(e);\n                    break;\n                default:\n                    ll(e);\n            }\n        }\n        function ll(e) {\n            for(e = e.child; null !== e;)rl(e), e = e.sibling;\n        }\n        function al(e, n, t, r) {\n            var l = t.flags;\n            switch(t.tag){\n                case 0:\n                case 11:\n                case 15:\n                    ol(e, t, r), Er(t, xs);\n                    break;\n                case 1:\n                    if (ol(e, t, r), \"function\" == typeof (n = t.stateNode).componentDidMount && y(t, Bi, t, n), null !== (n = t.updateQueue)) {\n                        e = t.stateNode;\n                        try {\n                            y(t, xe, n, e);\n                        } catch (e) {\n                            Xl(t, t.return, e);\n                        }\n                    }\n                    r && 64 & l && Lr(t), Mr(t, t.return);\n                    break;\n                case 26:\n                case 27:\n                case 5:\n                    ol(e, t, r), r && null === n && 4 & l && Ar(t), Mr(t, t.return);\n                    break;\n                case 12:\n                    if (r && 4 & l) {\n                        l = G(), ol(e, t, r), (r = t.stateNode).effectDuration += K(l);\n                        try {\n                            y(t, Hr, t, n, Ku, r.effectDuration);\n                        } catch (e) {\n                            Xl(t, t.return, e);\n                        }\n                    } else ol(e, t, r);\n                    break;\n                case 13:\n                default:\n                    ol(e, t, r);\n                    break;\n                case 22:\n                    null === t.memoizedState && ol(e, t, r), Mr(t, t.return);\n            }\n        }\n        function ol(e, n, t) {\n            for(t = t && 0 != (8772 & n.subtreeFlags), n = n.child; null !== n;)al(e, n.alternate, n, t), n = n.sibling;\n        }\n        function ul(e, n) {\n            var t = null;\n            null !== e && null !== e.memoizedState && null !== e.memoizedState.cachePool && (t = e.memoizedState.cachePool.pool), e = null, null !== n.memoizedState && null !== n.memoizedState.cachePool && (e = n.memoizedState.cachePool.pool), e !== t && (null != e && pr(e), null != t && mr(t));\n        }\n        function il(e, n) {\n            e = null, null !== n.alternate && (e = n.alternate.memoizedState.cache), (n = n.memoizedState.cache) !== e && (pr(n), null != e && mr(e));\n        }\n        function sl(e, n, t, r) {\n            if (10256 & n.subtreeFlags) for(n = n.child; null !== n;)cl(e, n, t, r), n = n.sibling;\n        }\n        function cl(e, n, t, r) {\n            var l = n.flags;\n            switch(n.tag){\n                case 0:\n                case 11:\n                case 15:\n                    sl(e, n, t, r), 2048 & l && Tr(n, zs | ks);\n                    break;\n                case 3:\n                    var a = G();\n                    sl(e, n, t, r), 2048 & l && (t = null, null !== n.alternate && (t = n.alternate.memoizedState.cache), (n = n.memoizedState.cache) !== t && (pr(n), null != t && mr(t))), e.passiveEffectDuration += J(a);\n                    break;\n                case 12:\n                    if (2048 & l) {\n                        a = G(), sl(e, n, t, r), (e = n.stateNode).passiveEffectDuration += K(a);\n                        try {\n                            y(n, jr, n, n.alternate, Ku, e.passiveEffectDuration);\n                        } catch (e) {\n                            Xl(n, n.return, e);\n                        }\n                    } else sl(e, n, t, r);\n                    break;\n                case 23:\n                    break;\n                case 22:\n                    a = n.stateNode, null !== n.memoizedState ? 4 & a._visibility ? sl(e, n, t, r) : pl(e, n) : 4 & a._visibility ? sl(e, n, t, r) : (a._visibility |= 4, fl(e, n, t, r, 0 != (10256 & n.subtreeFlags))), 2048 & l && ul(n.alternate, n);\n                    break;\n                case 24:\n                    sl(e, n, t, r), 2048 & l && il(n.alternate, n);\n                    break;\n                default:\n                    sl(e, n, t, r);\n            }\n        }\n        function fl(e, n, t, r, l) {\n            for(l = l && 0 != (10256 & n.subtreeFlags), n = n.child; null !== n;)dl(e, n, t, r, l), n = n.sibling;\n        }\n        function dl(e, n, t, r, l) {\n            var a = n.flags;\n            switch(n.tag){\n                case 0:\n                case 11:\n                case 15:\n                    fl(e, n, t, r, l), Tr(n, zs);\n                    break;\n                case 23:\n                    break;\n                case 22:\n                    var o = n.stateNode;\n                    null !== n.memoizedState ? 4 & o._visibility ? fl(e, n, t, r, l) : pl(e, n) : (o._visibility |= 4, fl(e, n, t, r, l)), l && 2048 & a && ul(n.alternate, n);\n                    break;\n                case 24:\n                    fl(e, n, t, r, l), l && 2048 & a && il(n.alternate, n);\n                    break;\n                default:\n                    fl(e, n, t, r, l);\n            }\n        }\n        function pl(e, n) {\n            if (10256 & n.subtreeFlags) for(n = n.child; null !== n;){\n                var t = e, r = n, l = r.flags;\n                switch(r.tag){\n                    case 22:\n                        pl(t, r), 2048 & l && ul(r.alternate, r);\n                        break;\n                    case 24:\n                        pl(t, r), 2048 & l && il(r.alternate, r);\n                        break;\n                    default:\n                        pl(t, r);\n                }\n                n = n.sibling;\n            }\n        }\n        function ml(e) {\n            if (e.subtreeFlags & Yc) for(e = e.child; null !== e;)hl(e), e = e.sibling;\n        }\n        function hl(e) {\n            switch(e.tag){\n                case 26:\n                    ml(e), e.flags & Yc && (null !== e.memoizedState ? lu(qc, e.memoizedState, e.memoizedProps) : To(e.type, e.memoizedProps));\n                    break;\n                case 5:\n                    ml(e), e.flags & Yc && To(e.type, e.memoizedProps);\n                    break;\n                case 3:\n                case 4:\n                    var n;\n                    ml(e);\n                    break;\n                case 22:\n                    null === e.memoizedState && (null !== (n = e.alternate) && null !== n.memoizedState ? (n = Yc, Yc = 16777216, ml(e), Yc = n) : ml(e));\n                    break;\n                default:\n                    ml(e);\n            }\n        }\n        function gl(e) {\n            var n = e.alternate;\n            if (null !== n && null !== (e = n.child)) {\n                n.child = null;\n                do {\n                    n = e.sibling, e.sibling = null, e = n;\n                }while (null !== e);\n            }\n        }\n        function yl(e) {\n            var n = e.deletions;\n            if (0 != (16 & e.flags)) {\n                if (null !== n) for(var t = 0; t < n.length; t++){\n                    var r = n[t];\n                    Ac = r, kl(r, e);\n                }\n                gl(e);\n            }\n            if (10256 & e.subtreeFlags) for(e = e.child; null !== e;)bl(e), e = e.sibling;\n        }\n        function bl(e) {\n            switch(e.tag){\n                case 0:\n                case 11:\n                case 15:\n                    yl(e), 2048 & e.flags && Nr(e, e.return, zs | ks);\n                    break;\n                case 3:\n                    var n = G();\n                    yl(e), e.stateNode.passiveEffectDuration += J(n);\n                    break;\n                case 12:\n                    n = G(), yl(e), e.stateNode.passiveEffectDuration += K(n);\n                    break;\n                case 22:\n                    n = e.stateNode, null !== e.memoizedState && 4 & n._visibility && (null === e.return || 13 !== e.return.tag) ? (n._visibility &= -5, vl(e)) : yl(e);\n                    break;\n                default:\n                    yl(e);\n            }\n        }\n        function vl(e) {\n            var n = e.deletions;\n            if (0 != (16 & e.flags)) {\n                if (null !== n) for(var t = 0; t < n.length; t++){\n                    var r = n[t];\n                    Ac = r, kl(r, e);\n                }\n                gl(e);\n            }\n            for(e = e.child; null !== e;)Sl(e), e = e.sibling;\n        }\n        function Sl(e) {\n            switch(e.tag){\n                case 0:\n                case 11:\n                case 15:\n                    Nr(e, e.return, zs), vl(e);\n                    break;\n                case 22:\n                    var n = e.stateNode;\n                    4 & n._visibility && (n._visibility &= -5, vl(e));\n                    break;\n                default:\n                    vl(e);\n            }\n        }\n        function kl(e, n) {\n            for(; null !== Ac;){\n                var t = Ac, r = t;\n                switch(r.tag){\n                    case 0:\n                    case 11:\n                    case 15:\n                        Nr(r, n, zs);\n                        break;\n                    case 23:\n                    case 22:\n                        null !== r.memoizedState && null !== r.memoizedState.cachePool && null != (r = r.memoizedState.cachePool.pool) && pr(r);\n                        break;\n                    case 24:\n                        mr(r.memoizedState.cache);\n                }\n                if (null !== (r = t.child)) r.return = t, Ac = r;\n                else e: for(t = e; null !== Ac;){\n                    var l = (r = Ac).sibling, a = r.return;\n                    if (Yr(r), r === t) {\n                        Ac = null;\n                        break e;\n                    }\n                    if (null !== l) {\n                        l.return = a, Ac = l;\n                        break e;\n                    }\n                    Ac = a;\n                }\n            }\n        }\n        function wl() {\n            var e = \"undefined\" != typeof IS_REACT_ACT_ENVIRONMENT ? IS_REACT_ACT_ENVIRONMENT : void 0;\n            return e || null === Ja.actQueue || console.error(\"The current testing environment is not configured to support act(...)\"), e;\n        }\n        function xl(e) {\n            if ((sf & Zc) !== Xc && 0 !== df) return df & -df;\n            var n = Ja.T;\n            return null !== n ? (n._updatedFibers || (n._updatedFibers = new Set), n._updatedFibers.add(e), 0 !== (e = di) ? e : de()) : zo();\n        }\n        function zl() {\n            0 === Nf && (Nf = 0 == (536870912 & df) || Bu ? z() : 536870912);\n            var e = hs.current;\n            return null !== e && (e.flags |= 32), Nf;\n        }\n        function Cl(e, n, t) {\n            if (nd && console.error(\"useInsertionEffect must not schedule updates.\"), Jf && (Kf = !0), (e === cf && wf === hf || null !== e.cancelPendingCommit) && (Ll(e, 0), Tl(e, df, Nf)), P(e, t), 0 != (sf & Zc) && e === cf) {\n                if (ro) switch(n.tag){\n                    case 0:\n                    case 11:\n                    case 15:\n                        e = ff && c(ff) || \"Unknown\", ud.has(e) || (ud.add(e), n = c(n) || \"Unknown\", console.error(\"Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render\", n, e, e));\n                        break;\n                    case 1:\n                        od || (console.error(\"Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.\"), od = !0);\n                }\n            } else _u && T(e, n, t), function(e) {\n                wl() && null === Ja.actQueue && y(e, function() {\n                    console.error(\"An update to %s inside a test was not wrapped in act(...).\\n\\nWhen testing, code that causes React state updates should be wrapped into act(...):\\n\\nact(() => {\\n  /* fire events that update state */\\n});\\n/* assert on the output */\\n\\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act\", c(e));\n                });\n            }(n), e === cf && ((sf & Zc) === Xc && (Rf |= t), Pf === af && Tl(e, df, Nf)), le(e);\n        }\n        function El(e, n, t) {\n            if ((sf & (Zc | ef)) !== Xc) throw Error(\"Should not already be working.\");\n            var r = (t = !t && 0 == (60 & n) && 0 == (n & e.expiredLanes)) ? function(e, n) {\n                var t = sf;\n                sf |= Zc;\n                var r = Il(), l = Fl();\n                if (cf !== e || df !== n) {\n                    if (_u) {\n                        var a = e.memoizedUpdaters;\n                        0 < a.size && (ia(e, df), a.clear()), N(e, n);\n                    }\n                    jf = null, Wf = vu() + Hf, Ll(e, n);\n                }\n                e: for(;;)try {\n                    if (wf !== pf && null !== ff) n: switch(n = ff, a = xf, wf){\n                        case mf:\n                            wf = pf, xf = null, Bl(e, n, a);\n                            break;\n                        case hf:\n                            if (Ee(a)) {\n                                wf = pf, xf = null, Ql(n);\n                                break;\n                            }\n                            n = function() {\n                                wf === hf && cf === e && (wf = Sf), le(e);\n                            }, a.then(n, n);\n                            break e;\n                        case gf:\n                            wf = Sf;\n                            break e;\n                        case yf:\n                            wf = bf;\n                            break e;\n                        case Sf:\n                            Ee(a) ? (wf = pf, xf = null, Ql(n)) : (wf = pf, xf = null, Bl(e, n, a));\n                            break;\n                        case bf:\n                            var o = null;\n                            switch(ff.tag){\n                                case 26:\n                                    o = ff.memoizedState;\n                                case 5:\n                                case 27:\n                                    var u = ff, i = u.type, s = u.pendingProps;\n                                    if (o ? ru(o) : _o(i, s)) {\n                                        wf = pf, xf = null;\n                                        var c = u.sibling;\n                                        if (null !== c) ff = c;\n                                        else {\n                                            var f = u.return;\n                                            null !== f ? (ff = f, Vl(f)) : ff = null;\n                                        }\n                                        break n;\n                                    }\n                                    break;\n                                default:\n                                    console.error(\"Unexpected type of fiber triggered a suspensey commit. This is a bug in React.\");\n                            }\n                            wf = pf, xf = null, Bl(e, n, a);\n                            break;\n                        case vf:\n                            wf = pf, xf = null, Bl(e, n, a);\n                            break;\n                        case kf:\n                            Nl(), Pf = uf;\n                            break e;\n                        default:\n                            throw Error(\"Unexpected SuspendedReason. This is a bug in React.\");\n                    }\n                    null !== Ja.actQueue ? Hl() : jl();\n                    break;\n                } catch (n) {\n                    Ul(e, n);\n                }\n                return nr(), Ja.H = r, Ja.A = l, sf = t, null !== ff ? nf : (cf = null, df = 0, O(), Pf);\n            }(e, n) : Wl(e, n);\n            if (r !== nf) for(var l = t;;){\n                if (r === uf) Tl(e, n, 0);\n                else {\n                    if (t = e.current.alternate, l && !Rl(t)) {\n                        r = Wl(e, n), l = !1;\n                        continue;\n                    }\n                    if (r === rf) {\n                        if (l = n, e.errorRecoveryDisabledLanes & l) var a = 0;\n                        else a = 0 != (a = -536870913 & e.pendingLanes) ? a : 536870912 & a ? 536870912 : 0;\n                        if (0 !== a) {\n                            n = a;\n                            e: {\n                                r = e;\n                                var o = a;\n                                a = Uf;\n                                var u = So;\n                                if (u && (Ll(r, o).flags |= 256), (o = Wl(r, o)) !== rf) {\n                                    if (Cf && !u) {\n                                        r.errorRecoveryDisabledLanes |= l, Rf |= l, r = af;\n                                        break e;\n                                    }\n                                    r = Df, Df = a, null !== r && Pl(r);\n                                }\n                                r = o;\n                            }\n                            if (l = !1, r !== rf) continue;\n                        }\n                    }\n                    if (r === tf) {\n                        Ll(e, 0), Tl(e, n, 0);\n                        break;\n                    }\n                    e: {\n                        switch(l = e, r){\n                            case nf:\n                            case tf:\n                                throw Error(\"Root did not complete. This is a bug in React.\");\n                            case af:\n                                if ((4194176 & n) === n) {\n                                    Tl(l, n, Nf);\n                                    break e;\n                                }\n                                break;\n                            case rf:\n                                Df = null;\n                                break;\n                            case lf:\n                            case of:\n                                break;\n                            default:\n                                throw Error(\"Unknown root exit status.\");\n                        }\n                        if (l.finishedWork = t, l.finishedLanes = n, null !== Ja.actQueue) ql(l, Df, jf, If, Nf);\n                        else {\n                            if ((62914560 & n) === n && 10 < (r = Ff + Mf - vu())) {\n                                if (Tl(l, n, Nf), 0 !== w(l, 0)) break e;\n                                l.timeoutHandle = go(_l.bind(null, l, t, Df, jf, If, n, Nf, Rf, Lf, zf, ld, -0, 0), r);\n                                break e;\n                            }\n                            _l(l, t, Df, jf, If, n, Nf, Rf, Lf, zf, td, -0, 0);\n                        }\n                    }\n                }\n                break;\n            }\n            le(e);\n        }\n        function Pl(e) {\n            null === Df ? Df = e : Df.push.apply(Df, e);\n        }\n        function _l(e, n, t, r, l, a, o, u, i, s, c, f, d) {\n            if ((8192 & (s = n.subtreeFlags) || 16785408 == (16785408 & s)) && (Ro(), hl(n), null !== (n = No()))) return e.cancelPendingCommit = n(ql.bind(null, e, t, r, l, o, u, i, rd, f, d)), void Tl(e, a, o);\n            ql(e, t, r, l, o);\n        }\n        function Rl(e) {\n            for(var n = e;;){\n                var t = n.tag;\n                if ((0 === t || 11 === t || 15 === t) && 16384 & n.flags && null !== (t = n.updateQueue) && null !== (t = t.stores)) for(var r = 0; r < t.length; r++){\n                    var l = t[r], a = l.getSnapshot;\n                    l = l.value;\n                    try {\n                        if (!Ru(a(), l)) return !1;\n                    } catch (e) {\n                        return !1;\n                    }\n                }\n                if (t = n.child, 16384 & n.subtreeFlags && null !== t) t.return = n, n = t;\n                else {\n                    if (n === e) break;\n                    for(; null === n.sibling;){\n                        if (null === n.return || n.return === e) return !0;\n                        n = n.return;\n                    }\n                    n.sibling.return = n.return, n = n.sibling;\n                }\n            }\n            return !0;\n        }\n        function Tl(e, n, t) {\n            n &= ~Tf, n &= ~Rf, e.suspendedLanes |= n, e.pingedLanes &= ~n;\n            for(var r = e.expirationTimes, l = n; 0 < l;){\n                var a = 31 - cu(l), o = 1 << a;\n                r[a] = -1, l &= ~o;\n            }\n            0 !== t && _(e, t, n);\n        }\n        function Nl() {\n            if (null !== ff) {\n                if (wf === pf) var e = ff.return;\n                else e = ff, nr(), an(e), rs = null, ls = 0, e = ff;\n                for(; null !== e;)zr(e.alternate, e), e = e.return;\n                ff = null;\n            }\n        }\n        function Ll(e, n) {\n            e.finishedWork = null, e.finishedLanes = 0;\n            var t = e.timeoutHandle;\n            t !== bo && (e.timeoutHandle = bo, yo(t)), null !== (t = e.cancelPendingCommit) && (e.cancelPendingCommit = null, t()), Nl(), cf = e, ff = t = fa(e.current, null), df = n, wf = pf, xf = null, Cf = zf = !1, Pf = nf, Lf = Nf = Tf = Rf = _f = 0, Df = Uf = null, If = !1, 0 != (8 & n) && (n |= 32 & n);\n            var r = e.entangledLanes;\n            if (0 !== r) for(e = e.entanglements, r &= n; 0 < r;){\n                var l = 31 - cu(r), a = 1 << l;\n                n |= e[l], r &= ~a;\n            }\n            return Ef = n, O(), xi.discardPendingWarnings(), t;\n        }\n        function Ul(e, n) {\n            Ts = null, Ja.H = $s, Ja.getCurrentStack = null, ro = !1, to = null, n === Di ? (n = Re(), wf = Dl() && 0 == (134217727 & _f) && 0 == (134217727 & Rf) ? hf : gf) : n === Ii ? (n = Re(), wf = yf) : wf = n === dc ? kf : null !== n && \"object\" == typeof n && \"function\" == typeof n.then ? vf : mf, xf = n;\n            var t = ff;\n            null === t ? (Pf = tf, Et(e, D(n, e.current))) : 2 & t.mode && Z(t);\n        }\n        function Dl() {\n            var e = hs.current;\n            return null === e || ((4194176 & df) === df ? null === gs : ((62914560 & df) === df || 0 != (536870912 & df)) && e === gs);\n        }\n        function Il() {\n            var e = Ja.H;\n            return Ja.H = $s, null === e ? $s : e;\n        }\n        function Fl() {\n            var e = Ja.A;\n            return Ja.A = Gc, e;\n        }\n        function Ml() {\n            Pf = af, 0 == (134217727 & _f) && 0 == (134217727 & Rf) || null === cf || Tl(cf, df, Nf);\n        }\n        function Wl(e, n) {\n            var t = sf;\n            sf |= Zc;\n            var r = Il(), l = Fl();\n            if (cf !== e || df !== n) {\n                if (_u) {\n                    var a = e.memoizedUpdaters;\n                    0 < a.size && (ia(e, df), a.clear()), N(e, n);\n                }\n                jf = null, Ll(e, n);\n            }\n            n = !1;\n            e: for(;;)try {\n                if (wf !== pf && null !== ff) {\n                    a = ff;\n                    var o = xf;\n                    switch(wf){\n                        case kf:\n                            Nl(), Pf = uf;\n                            break e;\n                        case gf:\n                        case hf:\n                            n || null !== hs.current || (n = !0);\n                        default:\n                            wf = pf, xf = null, Bl(e, a, o);\n                    }\n                }\n                Hl();\n                break;\n            } catch (n) {\n                Ul(e, n);\n            }\n            if (n && e.shellSuspendCounter++, nr(), sf = t, Ja.H = r, Ja.A = l, null !== ff) throw Error(\"Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.\");\n            return cf = null, df = 0, O(), Pf;\n        }\n        function Hl() {\n            for(; null !== ff;)Al(ff);\n        }\n        function jl() {\n            for(; null !== ff && !yu();)Al(ff);\n        }\n        function Al(e) {\n            var n = e.alternate;\n            (2 & e.mode) !== $u ? (X(e), n = y(e, er, n, e, Ef), Z(e)) : n = y(e, er, n, e, Ef), e.memoizedProps = e.pendingProps, null === n ? Vl(e) : ff = n;\n        }\n        function Ql(e) {\n            var n = y(e, Ol, e);\n            e.memoizedProps = e.pendingProps, null === n ? Vl(e) : ff = n;\n        }\n        function Ol(e) {\n            var n = e.alternate, t = (2 & e.mode) !== $u;\n            switch(t && X(e), e.tag){\n                case 15:\n                case 0:\n                    n = Ht(n, e, e.pendingProps, e.type, void 0, df);\n                    break;\n                case 11:\n                    n = Ht(n, e, e.pendingProps, e.type.render, e.ref, df);\n                    break;\n                case 5:\n                    an(e);\n                default:\n                    zr(n, e), n = er(n, e = ff = da(e, Ef), Ef);\n            }\n            return t && Z(e), n;\n        }\n        function Bl(e, n, t) {\n            nr(), an(n), rs = null, ls = 0;\n            var r = n.return;\n            try {\n                if (function(e, n, t, r, l) {\n                    if (t.flags |= 32768, _u && ia(e, l), null !== r && \"object\" == typeof r && \"function\" == typeof r.then) {\n                        if (null !== (n = t.alternate) && or(n, t, l, !0), null !== (t = hs.current)) {\n                            switch(t.tag){\n                                case 13:\n                                    return null === gs ? Ml() : null === t.alternate && Pf === nf && (Pf = lf), t.flags &= -257, t.flags |= 65536, t.lanes = l, r === Fi ? t.flags |= 16384 : (null === (n = t.updateQueue) ? t.updateQueue = new Set([\n                                        r\n                                    ]) : n.add(r), Zl(e, r, l)), !1;\n                                case 22:\n                                    return t.flags |= 65536, r === Fi ? t.flags |= 16384 : (null === (n = t.updateQueue) ? (n = {\n                                        transitions: null,\n                                        markerInstances: null,\n                                        retryQueue: new Set([\n                                            r\n                                        ])\n                                    }, t.updateQueue = n) : null === (t = n.retryQueue) ? n.retryQueue = new Set([\n                                        r\n                                    ]) : t.add(r), Zl(e, r, l)), !1;\n                            }\n                            throw Error(\"Unexpected Suspense handler tag (\" + t.tag + \"). This is a bug in React.\");\n                        }\n                        return Zl(e, r, l), Ml(), !1;\n                    }\n                    var a = D(Error(\"There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.\", {\n                        cause: r\n                    }), t);\n                    if (null === Uf ? Uf = [\n                        a\n                    ] : Uf.push(a), Pf !== af && (Pf = rf), null === n) return !0;\n                    r = D(r, t), t = n;\n                    do {\n                        switch(t.tag){\n                            case 3:\n                                return t.flags |= 65536, e = l & -l, t.lanes |= e, ve(t, e = _t(t.stateNode, r, e)), !1;\n                            case 1:\n                                if (n = t.type, a = t.stateNode, 0 == (128 & t.flags) && (\"function\" == typeof n.getDerivedStateFromError || null !== a && \"function\" == typeof a.componentDidCatch && (null === Af || !Af.has(a)))) return t.flags |= 65536, l &= -l, t.lanes |= l, Tt(l = Rt(l), e, t, r), ve(t, l), !1;\n                        }\n                        t = t.return;\n                    }while (null !== t);\n                    return !1;\n                }(e, r, n, t, df)) return Pf = tf, Et(e, D(t, e.current)), void (ff = null);\n            } catch (n) {\n                if (null !== r) throw ff = r, n;\n                return Pf = tf, Et(e, D(t, e.current)), void (ff = null);\n            }\n            32768 & n.flags ? $l(n, !0) : Vl(n);\n        }\n        function Vl(e) {\n            var n = e;\n            do {\n                if (0 != (32768 & n.flags)) return void $l(n, zf);\n                var t = n.alternate;\n                if (e = n.return, X(n), t = y(n, wr, t, n, Ef), (2 & n.mode) !== $u && ee(n), null !== t) return void (ff = t);\n                if (null !== (n = n.sibling)) return void (ff = n);\n                ff = n = e;\n            }while (null !== n);\n            Pf === nf && (Pf = of);\n        }\n        function $l(e, n) {\n            do {\n                var t = xr(e.alternate, e);\n                if (null !== t) return t.flags &= 32767, void (ff = t);\n                if ((2 & e.mode) !== $u) {\n                    ee(e), t = e.actualDuration;\n                    for(var r = e.child; null !== r;)t += r.actualDuration, r = r.sibling;\n                    e.actualDuration = t;\n                }\n                if (null !== (t = e.return) && (t.flags |= 32768, t.subtreeFlags = 0, t.deletions = null), !n && null !== (e = e.sibling)) return void (ff = e);\n                ff = e = t;\n            }while (null !== e);\n            Pf = uf, ff = null;\n        }\n        function ql(e, n, t, r, l, a, o, u, i, s) {\n            var c = Ja.T, f = xo();\n            try {\n                wo(2), Ja.T = null, function(e, n, t, r, l, a) {\n                    do {\n                        Jl();\n                    }while (null !== Of);\n                    if (xi.flushLegacyContextWarning(), xi.flushPendingUnsafeLifecycleWarnings(), (sf & (Zc | ef)) !== Xc) throw Error(\"Should not already be working.\");\n                    var o = e.finishedWork;\n                    if (r = e.finishedLanes, null === o) return null;\n                    if (0 === r && console.error(\"root.finishedLanes should not be empty during a commit. This is a bug in React.\"), e.finishedWork = null, e.finishedLanes = 0, o === e.current) throw Error(\"Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.\");\n                    e.callbackNode = null, e.callbackPriority = 0, e.cancelPendingCommit = null;\n                    var u, i, s, c = o.lanes | o.childLanes;\n                    if (function(e, n, t, r) {\n                        var l = e.pendingLanes;\n                        e.pendingLanes = t, e.suspendedLanes = 0, e.pingedLanes = 0, e.warmLanes = 0, e.expiredLanes &= t, e.entangledLanes &= t, e.errorRecoveryDisabledLanes &= t, e.shellSuspendCounter = 0, n = e.entanglements;\n                        var a = e.expirationTimes, o = e.hiddenUpdates;\n                        for(t = l & ~t; 0 < t;){\n                            var u = 31 - cu(t);\n                            l = 1 << u, n[u] = 0, a[u] = -1;\n                            var i = o[u];\n                            if (null !== i) for(o[u] = null, u = 0; u < i.length; u++){\n                                var s = i[u];\n                                null !== s && (s.lane &= -536870913);\n                            }\n                            t &= ~l;\n                        }\n                        0 !== r && _(e, r, 0);\n                    }(e, r, c |= Gu, a), e === cf && (ff = cf = null, df = 0), 0 == (10256 & o.subtreeFlags) && 0 == (10256 & o.flags) || Qf || (Qf = !0, Vf = c, $f = t, u = wu, i = function() {\n                        return Jl(), null;\n                    }, null !== (s = Ja.actQueue) ? s.push(i) : hu(u, i)), Ku = Ju(), t = 0 != (15990 & o.flags), 0 != (15990 & o.subtreeFlags) || t) {\n                        t = Ja.T, Ja.T = null, a = xo(), wo(2);\n                        var f = sf;\n                        sf |= ef, function(e, n) {\n                            for(io(e.containerInfo), Ac = n; null !== Ac;)if (n = (e = Ac).child, 0 != (1028 & e.subtreeFlags) && null !== n) n.return = e, Ac = n;\n                            else for(; null !== Ac;){\n                                var t = (n = e = Ac).alternate, r = n.flags;\n                                switch(n.tag){\n                                    case 0:\n                                    case 11:\n                                    case 15:\n                                    case 5:\n                                    case 26:\n                                    case 27:\n                                    case 6:\n                                    case 4:\n                                    case 17:\n                                        break;\n                                    case 1:\n                                        0 != (1024 & r) && null !== t && Dr(n, t);\n                                        break;\n                                    case 3:\n                                        0 != (1024 & r) && vo && Go(n.stateNode.containerInfo);\n                                        break;\n                                    default:\n                                        if (0 != (1024 & r)) throw Error(\"This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.\");\n                                }\n                                if (null !== (n = e.sibling)) {\n                                    n.return = e.return, Ac = n;\n                                    break;\n                                }\n                                Ac = e.return;\n                            }\n                            e = Bc, Bc = !1;\n                        }(e, o), function(e, n, t) {\n                            Qc = t, Oc = e, Zr(n, e), Oc = Qc = null;\n                        }(e, o, r), so(e.containerInfo), e.current = o, function(e, n, t) {\n                            Qc = t, Oc = n, qr(n, e.alternate, e), Oc = Qc = null;\n                        }(o, e, r), bu(), sf = f, wo(a), Ja.T = t;\n                    } else e.current = o;\n                    if ((t = Qf) ? (Qf = !1, Of = e, Bf = r) : (Gl(e, c), Zf = 0, ed = null), 0 === (c = e.pendingLanes) && (Af = null), t || oa(e), o.stateNode, _u && e.memoizedUpdaters.clear(), le(e), null !== n) for(l = e.onRecoverableError, o = 0; o < n.length; o++)t = Yl((c = n[o]).stack), y(c.source, l, c.value, t);\n                    0 != (3 & Bf) && Jl(), c = e.pendingLanes, 0 != (4194218 & r) && 0 != (42 & c) ? (ni = !0, e === Gf ? Yf++ : (Yf = 0, Gf = e)) : Yf = 0, ae(0);\n                }(e, n, t, r, f, l);\n            } finally{\n                Ja.T = c, wo(f);\n            }\n        }\n        function Yl(e) {\n            return e = {\n                componentStack: e\n            }, Object.defineProperty(e, \"digest\", {\n                get: function() {\n                    console.error('You are accessing \"digest\" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.');\n                }\n            }), e;\n        }\n        function Gl(e, n) {\n            0 == (e.pooledCacheLanes &= n) && null != (n = e.pooledCache) && (e.pooledCache = null, mr(n));\n        }\n        function Jl() {\n            if (null !== Of) {\n                var e = Of, n = Vf;\n                Vf = 0;\n                var t = L(Bf), r = 32 > t ? 32 : t;\n                t = Ja.T;\n                var l = xo();\n                try {\n                    if (wo(r), Ja.T = null, null === Of) var a = !1;\n                    else {\n                        r = $f, $f = null;\n                        var o = Of, u = Bf;\n                        if (Of = null, Bf = 0, (sf & (Zc | ef)) !== Xc) throw Error(\"Cannot flush passive effects while already rendering.\");\n                        Jf = !0, Kf = !1, null !== Pu && \"function\" == typeof Pu.markPassiveEffectsStarted && Pu.markPassiveEffectsStarted(u);\n                        var i = sf;\n                        sf |= ef, bl(o.current), cl(o, o.current, u, r), null !== Pu && \"function\" == typeof Pu.markPassiveEffectsStopped && Pu.markPassiveEffectsStopped(), oa(o), sf = i, ae(0), Kf ? o === ed ? Zf++ : (Zf = 0, ed = o) : Zf = 0, Kf = Jf = !1, Eu && Eu.onPostCommitFiberRoot;\n                        var s = o.current.stateNode;\n                        s.effectDuration = 0, s.passiveEffectDuration = 0, a = !0;\n                    }\n                    return a;\n                } finally{\n                    wo(l), Ja.T = t, Gl(e, n);\n                }\n            }\n            return !1;\n        }\n        function Kl(e, n, t) {\n            n = D(t, n), null !== (e = ye(e, n = _t(e.stateNode, n, 2), 2)) && (P(e, 2), le(e));\n        }\n        function Xl(e, n, t) {\n            if (nd = !1, 3 === e.tag) Kl(e, e, t);\n            else {\n                for(; null !== n;){\n                    if (3 === n.tag) return void Kl(n, e, t);\n                    if (1 === n.tag) {\n                        var r = n.stateNode;\n                        if (\"function\" == typeof n.type.getDerivedStateFromError || \"function\" == typeof r.componentDidCatch && (null === Af || !Af.has(r))) return e = D(t, e), void (null !== (r = ye(n, t = Rt(2), 2)) && (Tt(t, r, n, e), P(r, 2), le(r)));\n                    }\n                    n = n.return;\n                }\n                console.error(\"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\", t);\n            }\n        }\n        function Zl(e, n, t) {\n            var r = e.pingCache;\n            if (null === r) {\n                r = e.pingCache = new Kc;\n                var l = new Set;\n                r.set(n, l);\n            } else void 0 === (l = r.get(n)) && (l = new Set, r.set(n, l));\n            l.has(t) || (Cf = !0, l.add(t), r = ea.bind(null, e, n, t), _u && ia(e, t), n.then(r, r));\n        }\n        function ea(e, n, t) {\n            var r = e.pingCache;\n            null !== r && r.delete(n), e.pingedLanes |= e.suspendedLanes & t, e.warmLanes &= ~t, wl() && null === Ja.actQueue && console.error(\"A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\\n\\nWhen testing, code that resolves suspended data should be wrapped into act(...):\\n\\nact(() => {\\n  /* finish loading suspended data */\\n});\\n/* assert on the output */\\n\\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act\"), cf === e && (df & t) === t && (Pf === af || Pf === lf && (62914560 & df) === df && vu() - Ff < Mf ? (sf & Zc) === Xc && Ll(e, 0) : Tf |= t, Lf === df && (Lf = 0)), le(e);\n        }\n        function na(e, n) {\n            0 === n && (n = C()), null !== (e = $(e, n)) && (P(e, n), le(e));\n        }\n        function ta(e) {\n            var n = e.memoizedState, t = 0;\n            null !== n && (t = n.retryLane), na(e, t);\n        }\n        function ra(e, n) {\n            var t = 0;\n            switch(e.tag){\n                case 13:\n                    var r = e.stateNode, l = e.memoizedState;\n                    null !== l && (t = l.retryLane);\n                    break;\n                case 19:\n                    r = e.stateNode;\n                    break;\n                case 22:\n                    r = e.stateNode._retryCache;\n                    break;\n                default:\n                    throw Error(\"Pinged unknown suspense boundary type. This is probably a bug in React.\");\n            }\n            null !== r && r.delete(n), na(e, t);\n        }\n        function la(e, n, t) {\n            if (0 != (33562624 & n.subtreeFlags)) for(n = n.child; null !== n;){\n                var r = e, l = n, a = l.type === Fa;\n                a = t || a, 22 !== l.tag ? 33554432 & l.flags ? a && y(l, aa, r, l, (64 & l.mode) === $u) : la(r, l, a) : null === l.memoizedState && (a && 8192 & l.flags ? y(l, aa, r, l) : 33554432 & l.subtreeFlags && y(l, la, r, l, a)), n = n.sibling;\n            }\n        }\n        function aa(e, n) {\n            var t = !(2 < arguments.length && void 0 !== arguments[2]) || arguments[2];\n            U(!0);\n            try {\n                rl(n), t && Sl(n), al(e, n.alternate, n, !1), t && dl(e, n, 0, null, !1);\n            } finally{\n                U(!1);\n            }\n        }\n        function oa(e) {\n            var n = !0;\n            24 & e.current.mode || (n = !1), la(e, e.current, n);\n        }\n        function ua(e) {\n            if ((sf & Zc) === Xc) {\n                var n = e.tag;\n                if (3 === n || 1 === n || 0 === n || 11 === n || 14 === n || 15 === n) {\n                    if (n = c(e) || \"ReactComponent\", null !== ad) {\n                        if (ad.has(n)) return;\n                        ad.add(n);\n                    } else ad = new Set([\n                        n\n                    ]);\n                    y(e, function() {\n                        console.error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\");\n                    });\n                }\n            }\n        }\n        function ia(e, n) {\n            _u && e.memoizedUpdaters.forEach(function(t) {\n                T(e, t, n);\n            });\n        }\n        function sa(e, n, t, r) {\n            this.tag = e, this.key = t, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.refCleanup = this.ref = null, this.pendingProps = n, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = r, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null, this.actualDuration = -0, this.actualStartTime = -1.1, this.treeBaseDuration = this.selfBaseDuration = -0, this._debugOwner = this._debugInfo = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, id || \"function\" != typeof Object.preventExtensions || Object.preventExtensions(this);\n        }\n        function ca(e) {\n            return !(!(e = e.prototype) || !e.isReactComponent);\n        }\n        function fa(e, n) {\n            var r = e.alternate;\n            switch(null === r ? ((r = t(e.tag, n, e.key, e.mode)).elementType = e.elementType, r.type = e.type, r.stateNode = e.stateNode, r._debugOwner = e._debugOwner, r._debugHookTypes = e._debugHookTypes, r.alternate = e, e.alternate = r) : (r.pendingProps = n, r.type = e.type, r.flags = 0, r.subtreeFlags = 0, r.deletions = null, r.actualDuration = -0, r.actualStartTime = -1.1), r.flags = 31457280 & e.flags, r.childLanes = e.childLanes, r.lanes = e.lanes, r.child = e.child, r.memoizedProps = e.memoizedProps, r.memoizedState = e.memoizedState, r.updateQueue = e.updateQueue, n = e.dependencies, r.dependencies = null === n ? null : {\n                lanes: n.lanes,\n                firstContext: n.firstContext,\n                _debugThenableState: n._debugThenableState\n            }, r.sibling = e.sibling, r.index = e.index, r.ref = e.ref, r.refCleanup = e.refCleanup, r.selfBaseDuration = e.selfBaseDuration, r.treeBaseDuration = e.treeBaseDuration, r._debugInfo = e._debugInfo, r._debugNeedsRemount = e._debugNeedsRemount, r.tag){\n                case 0:\n                case 15:\n                case 1:\n                case 11:\n                    r.type = e.type;\n            }\n            return r;\n        }\n        function da(e, n) {\n            e.flags &= 31457282;\n            var t = e.alternate;\n            return null === t ? (e.childLanes = 0, e.lanes = n, e.child = null, e.subtreeFlags = 0, e.memoizedProps = null, e.memoizedState = null, e.updateQueue = null, e.dependencies = null, e.stateNode = null, e.selfBaseDuration = 0, e.treeBaseDuration = 0) : (e.childLanes = t.childLanes, e.lanes = t.lanes, e.child = t.child, e.subtreeFlags = 0, e.deletions = null, e.memoizedProps = t.memoizedProps, e.memoizedState = t.memoizedState, e.updateQueue = t.updateQueue, e.type = t.type, n = t.dependencies, e.dependencies = null === n ? null : {\n                lanes: n.lanes,\n                firstContext: n.firstContext,\n                _debugThenableState: n._debugThenableState\n            }, e.selfBaseDuration = t.selfBaseDuration, e.treeBaseDuration = t.treeBaseDuration), e;\n        }\n        function pa(e, n, r, l, a, o) {\n            var u = 0, i = e;\n            if (\"function\" == typeof e) ca(e) && (u = 1);\n            else if (\"string\" == typeof e) u = 5;\n            else e: switch(e){\n                case Ia:\n                    return ha(r.children, a, o, n);\n                case Fa:\n                    u = 8, a |= 24;\n                    break;\n                case Ma:\n                    return l = a, \"string\" != typeof (e = r).id && console.error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof e.id), (n = t(12, e, n, 2 | l)).elementType = Ma, n.lanes = o, n.stateNode = {\n                        effectDuration: 0,\n                        passiveEffectDuration: 0\n                    }, n;\n                case Qa:\n                    return (n = t(13, r, n, a)).elementType = Qa, n.lanes = o, n;\n                case Oa:\n                    return (n = t(19, r, n, a)).elementType = Oa, n.lanes = o, n;\n                case $a:\n                    return ga(r, a, o, n);\n                default:\n                    if (\"object\" == typeof e && null !== e) switch(e.$$typeof){\n                        case Wa:\n                        case ja:\n                            u = 10;\n                            break e;\n                        case Ha:\n                            u = 9;\n                            break e;\n                        case Aa:\n                            u = 11;\n                            break e;\n                        case Ba:\n                            u = 14;\n                            break e;\n                        case Va:\n                            u = 16, i = null;\n                            break e;\n                    }\n                    i = \"\", (void 0 === e || \"object\" == typeof e && null !== e && 0 === Object.keys(e).length) && (i += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\"), null === e ? r = \"null\" : lo(e) ? r = \"array\" : void 0 !== e && e.$$typeof === Ua ? (r = \"<\" + (s(e.type) || \"Unknown\") + \" />\", i = \" Did you accidentally export a JSX literal instead of a component?\") : r = typeof e, (u = l ? \"number\" == typeof l.tag ? c(l) : \"string\" == typeof l.name ? l.name : null : null) && (i += \"\\n\\nCheck the render method of `\" + u + \"`.\"), u = 29, r = Error(\"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: \" + r + \".\" + i), i = null;\n            }\n            return (n = t(u, r, n, a)).elementType = e, n.type = i, n.lanes = o, n._debugOwner = l, n;\n        }\n        function ma(e, n, t) {\n            return (n = pa(e.type, e.key, e.props, e._owner, n, t))._debugOwner = e._owner, n;\n        }\n        function ha(e, n, r, l) {\n            return (e = t(7, e, l, n)).lanes = r, e;\n        }\n        function ga(e, n, r, l) {\n            (e = t(22, e, l, n)).elementType = $a, e.lanes = r;\n            var a = {\n                _visibility: 1,\n                _pendingVisibility: 1,\n                _pendingMarkers: null,\n                _retryCache: null,\n                _transitions: null,\n                _current: null,\n                detach: function() {\n                    var e = a, n = e._current;\n                    if (null === n) throw Error(\"Calling Offscreen.detach before instance handle has been set.\");\n                    if (0 == (2 & e._pendingVisibility)) {\n                        var t = $(n, 2);\n                        null !== t && (e._pendingVisibility |= 2, Cl(t, n, 2));\n                    }\n                },\n                attach: function() {\n                    var e = a, n = e._current;\n                    if (null === n) throw Error(\"Calling Offscreen.detach before instance handle has been set.\");\n                    if (0 != (2 & e._pendingVisibility)) {\n                        var t = $(n, 2);\n                        null !== t && (e._pendingVisibility &= -3, Cl(t, n, 2));\n                    }\n                }\n            };\n            return e.stateNode = a, e;\n        }\n        function ya(e, n, r) {\n            return (e = t(6, e, null, n)).lanes = r, e;\n        }\n        function ba(e, n, r) {\n            return (n = t(4, null !== e.children ? e.children : [], e.key, n)).lanes = r, n.stateNode = {\n                containerInfo: e.containerInfo,\n                pendingChildren: null,\n                implementation: e.implementation\n            }, n;\n        }\n        function va(e, n, t, r, l, a, o, u) {\n            for(this.tag = 1, this.containerInfo = e, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = bo, this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null, this.callbackPriority = 0, this.expirationTimes = E(-1), this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.finishedLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = E(0), this.hiddenUpdates = E(null), this.identifierPrefix = r, this.onUncaughtError = l, this.onCaughtError = a, this.onRecoverableError = o, this.pooledCache = null, this.pooledCacheLanes = 0, this.formState = u, this.incompleteTransitions = new Map, this.passiveEffectDuration = this.effectDuration = -0, this.memoizedUpdaters = new Set, e = this.pendingUpdatersLaneMap = [], n = 0; 31 > n; n++)e.push(new Set);\n            this._debugRootType = t ? \"hydrateRoot()\" : \"createRoot()\";\n        }\n        function Sa(e, n, t, r, l, a) {\n            l = function(e) {\n                return e ? e = su : su;\n            }(l), null === r.context ? r.context = l : r.pendingContext = l, ro && null !== to && !cd && (cd = !0, console.error(\"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\", c(to) || \"Unknown\")), (r = ge(n)).payload = {\n                element: t\n            }, null !== (a = void 0 === a ? null : a) && (\"function\" != typeof a && console.error(\"Expected the last optional `callback` argument to be a function. Instead received: %s.\", a), r.callback = a), null !== (t = ye(e, r, n)) && (Cl(t, e, n), be(t, e, n));\n        }\n        var ka, wa, xa, za, Ca, Ea, Pa, _a = {}, Ra = react__WEBPACK_IMPORTED_MODULE_0__, Ta = u, Na = Object.assign, La = Symbol.for(\"react.element\"), Ua = Symbol.for(\"react.transitional.element\"), Da = Symbol.for(\"react.portal\"), Ia = Symbol.for(\"react.fragment\"), Fa = Symbol.for(\"react.strict_mode\"), Ma = Symbol.for(\"react.profiler\"), Wa = Symbol.for(\"react.provider\"), Ha = Symbol.for(\"react.consumer\"), ja = Symbol.for(\"react.context\"), Aa = Symbol.for(\"react.forward_ref\"), Qa = Symbol.for(\"react.suspense\"), Oa = Symbol.for(\"react.suspense_list\"), Ba = Symbol.for(\"react.memo\"), Va = Symbol.for(\"react.lazy\"), $a = Symbol.for(\"react.offscreen\"), qa = Symbol.for(\"react.memo_cache_sentinel\"), Ya = Symbol.iterator, Ga = Symbol.for(\"react.client.reference\"), Ja = Ra.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, Ka = 0;\n        f.__reactDisabledLog = !0;\n        var Xa, Za, eo = !1, no = new (\"function\" == typeof WeakMap ? WeakMap : Map), to = null, ro = !1, lo = Array.isArray, ao = n.getPublicInstance, oo = n.getRootHostContext, uo = n.getChildHostContext, io = n.prepareForCommit, so = n.resetAfterCommit, co = n.createInstance, fo = n.appendInitialChild, po = n.finalizeInitialChildren, mo = n.shouldSetTextContent, ho = n.createTextInstance, go = null, yo = null, bo = n.noTimeout, vo = !0, So = null, ko = null, wo = n.setCurrentUpdatePriority, xo = n.getCurrentUpdatePriority, zo = n.resolveUpdatePriority, Co = n.shouldAttemptEagerTransition, Eo = null;\n        n.requestPostPaintCallback;\n        var Po = n.maySuspendCommit, _o = null, Ro = null, To = null, No = null, Lo = null, Uo = null, Do = null, Io = n.appendChild, Fo = n.appendChildToContainer, Mo = n.commitTextUpdate, Wo = null, Ho = n.commitUpdate, jo = n.insertBefore, Ao = null, Qo = n.removeChild, Oo = n.removeChildFromContainer, Bo = n.resetTextContent, Vo = null, $o = null, qo = null, Yo = null, Go = n.clearContainer, Jo = null, Ko = null, Xo = null, Zo = null, eu = null, nu = null, tu = null, ru = null, lu = null, au = null, ou = [], uu = [], iu = -1, su = {};\n        Object.freeze(su);\n        var cu = Math.clz32 ? Math.clz32 : function(e) {\n            return 0 == (e >>>= 0) ? 32 : 31 - (fu(e) / du | 0) | 0;\n        }, fu = Math.log, du = Math.LN2, pu = 128, mu = 4194304, hu = Ta.unstable_scheduleCallback, gu = Ta.unstable_cancelCallback, yu = Ta.unstable_shouldYield, bu = Ta.unstable_requestPaint, vu = Ta.unstable_now, Su = Ta.unstable_ImmediatePriority, ku = Ta.unstable_UserBlockingPriority, wu = Ta.unstable_NormalPriority, xu = Ta.unstable_IdlePriority, zu = Ta.log, Cu = Ta.unstable_setDisableYieldValue, Eu = null, Pu = null, _u = \"undefined\" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__, Ru = \"function\" == typeof Object.is ? Object.is : function(e, n) {\n            return e === n && (0 !== e || 1 / e == 1 / n) || e != e && n != n;\n        }, Tu = new WeakMap, Nu = [], Lu = 0, Uu = null, Du = 0, Iu = [], Fu = 0, Mu = null, Wu = 1, Hu = \"\", ju = b(null), Au = b(null), Qu = b(null), Ou = b(null), Bu = !1, Vu = null, $u = 0, qu = [], Yu = 0, Gu = 0, Ju = Ta.unstable_now, Ku = -0, Xu = -1.1, Zu = -0, ei = !1, ni = !1, ti = null, ri = null, li = !1, ai = !1, oi = !1, ui = !1, ii = 0, si = {}, ci = null, fi = 0, di = 0, pi = null, mi = 0, hi = 1, gi = 2, yi = 3, bi = !1, vi = !1, Si = null, ki = !1, wi = Object.prototype.hasOwnProperty, xi = {\n            recordUnsafeLifecycleWarnings: function() {},\n            flushPendingUnsafeLifecycleWarnings: function() {},\n            recordLegacyContextWarning: function() {},\n            flushLegacyContextWarning: function() {},\n            discardPendingWarnings: function() {}\n        }, zi = [], Ci = [], Ei = [], Pi = [], _i = [], Ri = [], Ti = new Set;\n        xi.recordUnsafeLifecycleWarnings = function(e, n) {\n            Ti.has(e.type) || (\"function\" == typeof n.componentWillMount && !0 !== n.componentWillMount.__suppressDeprecationWarning && zi.push(e), 8 & e.mode && \"function\" == typeof n.UNSAFE_componentWillMount && Ci.push(e), \"function\" == typeof n.componentWillReceiveProps && !0 !== n.componentWillReceiveProps.__suppressDeprecationWarning && Ei.push(e), 8 & e.mode && \"function\" == typeof n.UNSAFE_componentWillReceiveProps && Pi.push(e), \"function\" == typeof n.componentWillUpdate && !0 !== n.componentWillUpdate.__suppressDeprecationWarning && _i.push(e), 8 & e.mode && \"function\" == typeof n.UNSAFE_componentWillUpdate && Ri.push(e));\n        }, xi.flushPendingUnsafeLifecycleWarnings = function() {\n            var e = new Set;\n            0 < zi.length && (zi.forEach(function(n) {\n                e.add(c(n) || \"Component\"), Ti.add(n.type);\n            }), zi = []);\n            var n = new Set;\n            0 < Ci.length && (Ci.forEach(function(e) {\n                n.add(c(e) || \"Component\"), Ti.add(e.type);\n            }), Ci = []);\n            var t = new Set;\n            0 < Ei.length && (Ei.forEach(function(e) {\n                t.add(c(e) || \"Component\"), Ti.add(e.type);\n            }), Ei = []);\n            var r = new Set;\n            0 < Pi.length && (Pi.forEach(function(e) {\n                r.add(c(e) || \"Component\"), Ti.add(e.type);\n            }), Pi = []);\n            var l = new Set;\n            0 < _i.length && (_i.forEach(function(e) {\n                l.add(c(e) || \"Component\"), Ti.add(e.type);\n            }), _i = []);\n            var a = new Set;\n            if (0 < Ri.length && (Ri.forEach(function(e) {\n                a.add(c(e) || \"Component\"), Ti.add(e.type);\n            }), Ri = []), 0 < n.size) {\n                var u = o(n);\n                console.error(\"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\\nPlease update the following components: %s\", u);\n            }\n            0 < r.size && (u = o(r), console.error(\"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\\n\\nPlease update the following components: %s\", u)), 0 < a.size && (u = o(a), console.error(\"Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n\\nPlease update the following components: %s\", u)), 0 < e.size && (u = o(e), console.warn(\"componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\", u)), 0 < t.size && (u = o(t), console.warn(\"componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\", u)), 0 < l.size && (u = o(l), console.warn(\"componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\", u));\n        };\n        var Ni = new Map, Li = new Set;\n        xi.recordLegacyContextWarning = function(e, n) {\n            for(var t = null, r = e; null !== r;)8 & r.mode && (t = r), r = r.return;\n            null === t ? console.error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\") : !Li.has(e.type) && (r = Ni.get(t), null != e.type.contextTypes || null != e.type.childContextTypes || null !== n && \"function\" == typeof n.getChildContext) && (void 0 === r && (r = [], Ni.set(t, r)), r.push(e));\n        }, xi.flushLegacyContextWarning = function() {\n            Ni.forEach(function(e) {\n                if (0 !== e.length) {\n                    var n = e[0], t = new Set;\n                    e.forEach(function(e) {\n                        t.add(c(e) || \"Component\"), Li.add(e.type);\n                    });\n                    var r = o(t);\n                    y(n, function() {\n                        console.error(\"Legacy context API has been detected within a strict-mode tree.\\n\\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\\n\\nPlease update the following components: %s\\n\\nLearn more about this warning here: https://react.dev/link/legacy-context\", r);\n                    });\n                }\n            });\n        }, xi.discardPendingWarnings = function() {\n            zi = [], Ci = [], Ei = [], Pi = [], _i = [], Ri = [], Ni = new Map;\n        };\n        var Ui, Di = Error(\"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`\"), Ii = Error(\"Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React.\"), Fi = {\n            then: function() {\n                console.error('Internal React error: A listener was unexpectedly attached to a \"noop\" thenable. This is a bug in React. Please file an issue.');\n            }\n        }, Mi = null, Wi = !1, Hi = {\n            \"react-stack-bottom-frame\": function(e, n, t) {\n                var r = ro;\n                ro = !0;\n                try {\n                    return e(n, t);\n                } finally{\n                    ro = r;\n                }\n            }\n        }, ji = Hi[\"react-stack-bottom-frame\"].bind(Hi), Ai = {\n            \"react-stack-bottom-frame\": function(e) {\n                var n = ro;\n                ro = !0;\n                try {\n                    return e.render();\n                } finally{\n                    ro = n;\n                }\n            }\n        }, Qi = Ai[\"react-stack-bottom-frame\"].bind(Ai), Oi = {\n            \"react-stack-bottom-frame\": function(e, n) {\n                try {\n                    n.componentDidMount();\n                } catch (n) {\n                    Xl(e, e.return, n);\n                }\n            }\n        }, Bi = Oi[\"react-stack-bottom-frame\"].bind(Oi), Vi = {\n            \"react-stack-bottom-frame\": function(e, n, t, r, l) {\n                try {\n                    n.componentDidUpdate(t, r, l);\n                } catch (n) {\n                    Xl(e, e.return, n);\n                }\n            }\n        }, $i = Vi[\"react-stack-bottom-frame\"].bind(Vi), qi = {\n            \"react-stack-bottom-frame\": function(e, n) {\n                var t = n.stack;\n                e.componentDidCatch(n.value, {\n                    componentStack: null !== t ? t : \"\"\n                });\n            }\n        }, Yi = qi[\"react-stack-bottom-frame\"].bind(qi), Gi = {\n            \"react-stack-bottom-frame\": function(e, n, t) {\n                try {\n                    t.componentWillUnmount();\n                } catch (t) {\n                    Xl(e, n, t);\n                }\n            }\n        }, Ji = Gi[\"react-stack-bottom-frame\"].bind(Gi), Ki = {\n            \"react-stack-bottom-frame\": function(e) {\n                var n = e.create;\n                return e = e.inst, n = n(), e.destroy = n;\n            }\n        }, Xi = Ki[\"react-stack-bottom-frame\"].bind(Ki), Zi = {\n            \"react-stack-bottom-frame\": function(e, n, t) {\n                try {\n                    t();\n                } catch (t) {\n                    Xl(e, n, t);\n                }\n            }\n        }, es = Zi[\"react-stack-bottom-frame\"].bind(Zi), ns = {\n            \"react-stack-bottom-frame\": function(e) {\n                return (0, e._init)(e._payload);\n            }\n        }, ts = ns[\"react-stack-bottom-frame\"].bind(ns), rs = null, ls = 0, as = null, os = Ui = !1, us = {}, is = {}, ss = {};\n        a = function(e, n, t) {\n            if (null !== t && \"object\" == typeof t && t._store && (!t._store.validated && null == t.key || 2 === t._store.validated)) {\n                if (\"object\" != typeof t._store) throw Error(\"React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.\");\n                t._store.validated = 1;\n                var r = c(e), l = r || \"null\";\n                if (!us[l]) {\n                    us[l] = !0, t = t._owner, e = e._debugOwner;\n                    var a = \"\";\n                    e && \"number\" == typeof e.tag && (l = c(e)) && (a = \"\\n\\nCheck the render method of `\" + l + \"`.\"), a || r && (a = \"\\n\\nCheck the top-level render call using <\" + r + \">.\");\n                    var o = \"\";\n                    null != t && e !== t && (r = null, \"number\" == typeof t.tag ? r = c(t) : \"string\" == typeof t.name && (r = t.name), r && (o = \" It was passed a child from \" + r + \".\")), y(n, function() {\n                        console.error('Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.', a, o);\n                    });\n                }\n            }\n        };\n        var cs, fs = We(!0), ds = We(!1), ps = b(null), ms = b(0), hs = b(null), gs = null, ys = 1, bs = 2, vs = b(0), Ss = 0, ks = 1, ws = 2, xs = 4, zs = 8, Cs = new Set, Es = new Set, Ps = new Set, _s = new Set, Rs = 0, Ts = null, Ns = null, Ls = null, Us = !1, Ds = !1, Is = !1, Fs = 0, Ms = 0, Ws = null, Hs = 0, js = 25, As = null, Qs = null, Os = -1, Bs = !1, Vs = function() {\n            return {\n                lastEffect: null,\n                events: null,\n                stores: null,\n                memoCache: null\n            };\n        }, $s = {\n            readContext: sr,\n            use: cn,\n            useCallback: Ke,\n            useContext: Ke,\n            useEffect: Ke,\n            useImperativeHandle: Ke,\n            useLayoutEffect: Ke,\n            useInsertionEffect: Ke,\n            useMemo: Ke,\n            useReducer: Ke,\n            useRef: Ke,\n            useState: Ke,\n            useDebugValue: Ke,\n            useDeferredValue: Ke,\n            useTransition: Ke,\n            useSyncExternalStore: Ke,\n            useId: Ke\n        };\n        $s.useCacheRefresh = Ke, $s.useMemoCache = Ke, $s.useHostTransitionStatus = Ke, $s.useFormState = Ke, $s.useActionState = Ke, $s.useOptimistic = Ke;\n        var qs = null, Ys = null, Gs = null, Js = null, Ks = null, Xs = null, Zs = null;\n        (qs = {\n            readContext: function(e) {\n                return sr(e);\n            },\n            use: cn,\n            useCallback: function(e, n) {\n                return As = \"useCallback\", qe(), Ge(n), Kn(e, n);\n            },\n            useContext: function(e) {\n                return As = \"useContext\", qe(), sr(e);\n            },\n            useEffect: function(e, n) {\n                return As = \"useEffect\", qe(), Ge(n), $n(e, n);\n            },\n            useImperativeHandle: function(e, n, t) {\n                return As = \"useImperativeHandle\", qe(), Ge(t), Gn(e, n, t);\n            },\n            useInsertionEffect: function(e, n) {\n                As = \"useInsertionEffect\", qe(), Ge(n), Bn(4, ws, e, n);\n            },\n            useLayoutEffect: function(e, n) {\n                return As = \"useLayoutEffect\", qe(), Ge(n), qn(e, n);\n            },\n            useMemo: function(e, n) {\n                As = \"useMemo\", qe(), Ge(n);\n                var t = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return Zn(e, n);\n                } finally{\n                    Ja.H = t;\n                }\n            },\n            useReducer: function(e, n, t) {\n                As = \"useReducer\", qe();\n                var r = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return pn(e, n, t);\n                } finally{\n                    Ja.H = r;\n                }\n            },\n            useRef: function(e) {\n                return As = \"useRef\", qe(), On(e);\n            },\n            useState: function(e) {\n                As = \"useState\", qe();\n                var n = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return Cn(e);\n                } finally{\n                    Ja.H = n;\n                }\n            },\n            useDebugValue: function() {\n                As = \"useDebugValue\", qe();\n            },\n            useDeferredValue: function(e, n) {\n                return As = \"useDeferredValue\", qe(), nt(e, n);\n            },\n            useTransition: function() {\n                return As = \"useTransition\", qe(), ut();\n            },\n            useSyncExternalStore: function(e, n, t) {\n                return As = \"useSyncExternalStore\", qe(), yn(e, n, t);\n            },\n            useId: function() {\n                return As = \"useId\", qe(), ft();\n            },\n            useCacheRefresh: function() {\n                return As = \"useCacheRefresh\", qe(), dt();\n            }\n        }).useMemoCache = fn, qs.useHostTransitionStatus = ct, qs.useFormState = function(e, n) {\n            return As = \"useFormState\", qe(), Je(), Mn(e, n);\n        }, qs.useActionState = function(e, n) {\n            return As = \"useActionState\", qe(), Mn(e, n);\n        }, qs.useOptimistic = function(e) {\n            return As = \"useOptimistic\", qe(), En(e);\n        }, (Ys = {\n            readContext: function(e) {\n                return sr(e);\n            },\n            use: cn,\n            useCallback: function(e, n) {\n                return As = \"useCallback\", Ye(), Kn(e, n);\n            },\n            useContext: function(e) {\n                return As = \"useContext\", Ye(), sr(e);\n            },\n            useEffect: function(e, n) {\n                return As = \"useEffect\", Ye(), $n(e, n);\n            },\n            useImperativeHandle: function(e, n, t) {\n                return As = \"useImperativeHandle\", Ye(), Gn(e, n, t);\n            },\n            useInsertionEffect: function(e, n) {\n                As = \"useInsertionEffect\", Ye(), Bn(4, ws, e, n);\n            },\n            useLayoutEffect: function(e, n) {\n                return As = \"useLayoutEffect\", Ye(), qn(e, n);\n            },\n            useMemo: function(e, n) {\n                As = \"useMemo\", Ye();\n                var t = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return Zn(e, n);\n                } finally{\n                    Ja.H = t;\n                }\n            },\n            useReducer: function(e, n, t) {\n                As = \"useReducer\", Ye();\n                var r = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return pn(e, n, t);\n                } finally{\n                    Ja.H = r;\n                }\n            },\n            useRef: function(e) {\n                return As = \"useRef\", Ye(), On(e);\n            },\n            useState: function(e) {\n                As = \"useState\", Ye();\n                var n = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return Cn(e);\n                } finally{\n                    Ja.H = n;\n                }\n            },\n            useDebugValue: function() {\n                As = \"useDebugValue\", Ye();\n            },\n            useDeferredValue: function(e, n) {\n                return As = \"useDeferredValue\", Ye(), nt(e, n);\n            },\n            useTransition: function() {\n                return As = \"useTransition\", Ye(), ut();\n            },\n            useSyncExternalStore: function(e, n, t) {\n                return As = \"useSyncExternalStore\", Ye(), yn(e, n, t);\n            },\n            useId: function() {\n                return As = \"useId\", Ye(), ft();\n            },\n            useCacheRefresh: function() {\n                return As = \"useCacheRefresh\", Ye(), dt();\n            }\n        }).useMemoCache = fn, Ys.useHostTransitionStatus = ct, Ys.useFormState = function(e, n) {\n            return As = \"useFormState\", Ye(), Je(), Mn(e, n);\n        }, Ys.useActionState = function(e, n) {\n            return As = \"useActionState\", Ye(), Mn(e, n);\n        }, Ys.useOptimistic = function(e) {\n            return As = \"useOptimistic\", Ye(), En(e);\n        }, (Gs = {\n            readContext: function(e) {\n                return sr(e);\n            },\n            use: cn,\n            useCallback: function(e, n) {\n                return As = \"useCallback\", Ye(), Xn(e, n);\n            },\n            useContext: function(e) {\n                return As = \"useContext\", Ye(), sr(e);\n            },\n            useEffect: function(e, n) {\n                As = \"useEffect\", Ye(), Vn(2048, zs, e, n);\n            },\n            useImperativeHandle: function(e, n, t) {\n                return As = \"useImperativeHandle\", Ye(), Jn(e, n, t);\n            },\n            useInsertionEffect: function(e, n) {\n                return As = \"useInsertionEffect\", Ye(), Vn(4, ws, e, n);\n            },\n            useLayoutEffect: function(e, n) {\n                return As = \"useLayoutEffect\", Ye(), Vn(4, xs, e, n);\n            },\n            useMemo: function(e, n) {\n                As = \"useMemo\", Ye();\n                var t = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return et(e, n);\n                } finally{\n                    Ja.H = t;\n                }\n            },\n            useReducer: function(e, n, t) {\n                As = \"useReducer\", Ye();\n                var r = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return mn(e);\n                } finally{\n                    Ja.H = r;\n                }\n            },\n            useRef: function() {\n                return As = \"useRef\", Ye(), un().memoizedState;\n            },\n            useState: function() {\n                As = \"useState\", Ye();\n                var e = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return mn(dn);\n                } finally{\n                    Ja.H = e;\n                }\n            },\n            useDebugValue: function() {\n                As = \"useDebugValue\", Ye();\n            },\n            useDeferredValue: function(e, n) {\n                return As = \"useDeferredValue\", Ye(), tt(e, n);\n            },\n            useTransition: function() {\n                return As = \"useTransition\", Ye(), it();\n            },\n            useSyncExternalStore: function(e, n, t) {\n                return As = \"useSyncExternalStore\", Ye(), bn(e, n, t);\n            },\n            useId: function() {\n                return As = \"useId\", Ye(), un().memoizedState;\n            },\n            useCacheRefresh: function() {\n                return As = \"useCacheRefresh\", Ye(), un().memoizedState;\n            }\n        }).useMemoCache = fn, Gs.useHostTransitionStatus = ct, Gs.useFormState = function(e) {\n            return As = \"useFormState\", Ye(), Je(), Wn(e);\n        }, Gs.useActionState = function(e) {\n            return As = \"useActionState\", Ye(), Wn(e);\n        }, Gs.useOptimistic = function(e, n) {\n            return As = \"useOptimistic\", Ye(), Pn(e, n);\n        }, (Js = {\n            readContext: function(e) {\n                return sr(e);\n            },\n            use: cn,\n            useCallback: function(e, n) {\n                return As = \"useCallback\", Ye(), Xn(e, n);\n            },\n            useContext: function(e) {\n                return As = \"useContext\", Ye(), sr(e);\n            },\n            useEffect: function(e, n) {\n                As = \"useEffect\", Ye(), Vn(2048, zs, e, n);\n            },\n            useImperativeHandle: function(e, n, t) {\n                return As = \"useImperativeHandle\", Ye(), Jn(e, n, t);\n            },\n            useInsertionEffect: function(e, n) {\n                return As = \"useInsertionEffect\", Ye(), Vn(4, ws, e, n);\n            },\n            useLayoutEffect: function(e, n) {\n                return As = \"useLayoutEffect\", Ye(), Vn(4, xs, e, n);\n            },\n            useMemo: function(e, n) {\n                As = \"useMemo\", Ye();\n                var t = Ja.H;\n                Ja.H = Zs;\n                try {\n                    return et(e, n);\n                } finally{\n                    Ja.H = t;\n                }\n            },\n            useReducer: function(e, n, t) {\n                As = \"useReducer\", Ye();\n                var r = Ja.H;\n                Ja.H = Zs;\n                try {\n                    return gn(e);\n                } finally{\n                    Ja.H = r;\n                }\n            },\n            useRef: function() {\n                return As = \"useRef\", Ye(), un().memoizedState;\n            },\n            useState: function() {\n                As = \"useState\", Ye();\n                var e = Ja.H;\n                Ja.H = Zs;\n                try {\n                    return gn(dn);\n                } finally{\n                    Ja.H = e;\n                }\n            },\n            useDebugValue: function() {\n                As = \"useDebugValue\", Ye();\n            },\n            useDeferredValue: function(e, n) {\n                return As = \"useDeferredValue\", Ye(), rt(e, n);\n            },\n            useTransition: function() {\n                return As = \"useTransition\", Ye(), st();\n            },\n            useSyncExternalStore: function(e, n, t) {\n                return As = \"useSyncExternalStore\", Ye(), bn(e, n, t);\n            },\n            useId: function() {\n                return As = \"useId\", Ye(), un().memoizedState;\n            },\n            useCacheRefresh: function() {\n                return As = \"useCacheRefresh\", Ye(), un().memoizedState;\n            }\n        }).useMemoCache = fn, Js.useHostTransitionStatus = ct, Js.useFormState = function(e) {\n            return As = \"useFormState\", Ye(), Je(), An(e);\n        }, Js.useActionState = function(e) {\n            return As = \"useActionState\", Ye(), An(e);\n        }, Js.useOptimistic = function(e, n) {\n            return As = \"useOptimistic\", Ye(), Rn(e, n);\n        }, (Ks = {\n            readContext: function(e) {\n                return l(), sr(e);\n            },\n            use: function(e) {\n                return r(), cn(e);\n            },\n            useCallback: function(e, n) {\n                return As = \"useCallback\", r(), qe(), Kn(e, n);\n            },\n            useContext: function(e) {\n                return As = \"useContext\", r(), qe(), sr(e);\n            },\n            useEffect: function(e, n) {\n                return As = \"useEffect\", r(), qe(), $n(e, n);\n            },\n            useImperativeHandle: function(e, n, t) {\n                return As = \"useImperativeHandle\", r(), qe(), Gn(e, n, t);\n            },\n            useInsertionEffect: function(e, n) {\n                As = \"useInsertionEffect\", r(), qe(), Bn(4, ws, e, n);\n            },\n            useLayoutEffect: function(e, n) {\n                return As = \"useLayoutEffect\", r(), qe(), qn(e, n);\n            },\n            useMemo: function(e, n) {\n                As = \"useMemo\", r(), qe();\n                var t = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return Zn(e, n);\n                } finally{\n                    Ja.H = t;\n                }\n            },\n            useReducer: function(e, n, t) {\n                As = \"useReducer\", r(), qe();\n                var l = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return pn(e, n, t);\n                } finally{\n                    Ja.H = l;\n                }\n            },\n            useRef: function(e) {\n                return As = \"useRef\", r(), qe(), On(e);\n            },\n            useState: function(e) {\n                As = \"useState\", r(), qe();\n                var n = Ja.H;\n                Ja.H = Ks;\n                try {\n                    return Cn(e);\n                } finally{\n                    Ja.H = n;\n                }\n            },\n            useDebugValue: function() {\n                As = \"useDebugValue\", r(), qe();\n            },\n            useDeferredValue: function(e, n) {\n                return As = \"useDeferredValue\", r(), qe(), nt(e, n);\n            },\n            useTransition: function() {\n                return As = \"useTransition\", r(), qe(), ut();\n            },\n            useSyncExternalStore: function(e, n, t) {\n                return As = \"useSyncExternalStore\", r(), qe(), yn(e, n, t);\n            },\n            useId: function() {\n                return As = \"useId\", r(), qe(), ft();\n            },\n            useCacheRefresh: function() {\n                return As = \"useCacheRefresh\", qe(), dt();\n            },\n            useMemoCache: function(e) {\n                return r(), fn(e);\n            }\n        }).useHostTransitionStatus = ct, Ks.useFormState = function(e, n) {\n            return As = \"useFormState\", r(), qe(), Mn(e, n);\n        }, Ks.useActionState = function(e, n) {\n            return As = \"useActionState\", r(), qe(), Mn(e, n);\n        }, Ks.useOptimistic = function(e) {\n            return As = \"useOptimistic\", r(), qe(), En(e);\n        }, (Xs = {\n            readContext: function(e) {\n                return l(), sr(e);\n            },\n            use: function(e) {\n                return r(), cn(e);\n            },\n            useCallback: function(e, n) {\n                return As = \"useCallback\", r(), Ye(), Xn(e, n);\n            },\n            useContext: function(e) {\n                return As = \"useContext\", r(), Ye(), sr(e);\n            },\n            useEffect: function(e, n) {\n                As = \"useEffect\", r(), Ye(), Vn(2048, zs, e, n);\n            },\n            useImperativeHandle: function(e, n, t) {\n                return As = \"useImperativeHandle\", r(), Ye(), Jn(e, n, t);\n            },\n            useInsertionEffect: function(e, n) {\n                return As = \"useInsertionEffect\", r(), Ye(), Vn(4, ws, e, n);\n            },\n            useLayoutEffect: function(e, n) {\n                return As = \"useLayoutEffect\", r(), Ye(), Vn(4, xs, e, n);\n            },\n            useMemo: function(e, n) {\n                As = \"useMemo\", r(), Ye();\n                var t = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return et(e, n);\n                } finally{\n                    Ja.H = t;\n                }\n            },\n            useReducer: function(e, n, t) {\n                As = \"useReducer\", r(), Ye();\n                var l = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return mn(e);\n                } finally{\n                    Ja.H = l;\n                }\n            },\n            useRef: function() {\n                return As = \"useRef\", r(), Ye(), un().memoizedState;\n            },\n            useState: function() {\n                As = \"useState\", r(), Ye();\n                var e = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return mn(dn);\n                } finally{\n                    Ja.H = e;\n                }\n            },\n            useDebugValue: function() {\n                As = \"useDebugValue\", r(), Ye();\n            },\n            useDeferredValue: function(e, n) {\n                return As = \"useDeferredValue\", r(), Ye(), tt(e, n);\n            },\n            useTransition: function() {\n                return As = \"useTransition\", r(), Ye(), it();\n            },\n            useSyncExternalStore: function(e, n, t) {\n                return As = \"useSyncExternalStore\", r(), Ye(), bn(e, n, t);\n            },\n            useId: function() {\n                return As = \"useId\", r(), Ye(), un().memoizedState;\n            },\n            useCacheRefresh: function() {\n                return As = \"useCacheRefresh\", Ye(), un().memoizedState;\n            },\n            useMemoCache: function(e) {\n                return r(), fn(e);\n            }\n        }).useHostTransitionStatus = ct, Xs.useFormState = function(e) {\n            return As = \"useFormState\", r(), Ye(), Wn(e);\n        }, Xs.useActionState = function(e) {\n            return As = \"useActionState\", r(), Ye(), Wn(e);\n        }, Xs.useOptimistic = function(e, n) {\n            return As = \"useOptimistic\", r(), Ye(), Pn(e, n);\n        }, (Zs = {\n            readContext: function(e) {\n                return l(), sr(e);\n            },\n            use: function(e) {\n                return r(), cn(e);\n            },\n            useCallback: function(e, n) {\n                return As = \"useCallback\", r(), Ye(), Xn(e, n);\n            },\n            useContext: function(e) {\n                return As = \"useContext\", r(), Ye(), sr(e);\n            },\n            useEffect: function(e, n) {\n                As = \"useEffect\", r(), Ye(), Vn(2048, zs, e, n);\n            },\n            useImperativeHandle: function(e, n, t) {\n                return As = \"useImperativeHandle\", r(), Ye(), Jn(e, n, t);\n            },\n            useInsertionEffect: function(e, n) {\n                return As = \"useInsertionEffect\", r(), Ye(), Vn(4, ws, e, n);\n            },\n            useLayoutEffect: function(e, n) {\n                return As = \"useLayoutEffect\", r(), Ye(), Vn(4, xs, e, n);\n            },\n            useMemo: function(e, n) {\n                As = \"useMemo\", r(), Ye();\n                var t = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return et(e, n);\n                } finally{\n                    Ja.H = t;\n                }\n            },\n            useReducer: function(e, n, t) {\n                As = \"useReducer\", r(), Ye();\n                var l = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return gn(e);\n                } finally{\n                    Ja.H = l;\n                }\n            },\n            useRef: function() {\n                return As = \"useRef\", r(), Ye(), un().memoizedState;\n            },\n            useState: function() {\n                As = \"useState\", r(), Ye();\n                var e = Ja.H;\n                Ja.H = Xs;\n                try {\n                    return gn(dn);\n                } finally{\n                    Ja.H = e;\n                }\n            },\n            useDebugValue: function() {\n                As = \"useDebugValue\", r(), Ye();\n            },\n            useDeferredValue: function(e, n) {\n                return As = \"useDeferredValue\", r(), Ye(), rt(e, n);\n            },\n            useTransition: function() {\n                return As = \"useTransition\", r(), Ye(), st();\n            },\n            useSyncExternalStore: function(e, n, t) {\n                return As = \"useSyncExternalStore\", r(), Ye(), bn(e, n, t);\n            },\n            useId: function() {\n                return As = \"useId\", r(), Ye(), un().memoizedState;\n            },\n            useCacheRefresh: function() {\n                return As = \"useCacheRefresh\", Ye(), un().memoizedState;\n            },\n            useMemoCache: function(e) {\n                return r(), fn(e);\n            }\n        }).useHostTransitionStatus = ct, Zs.useFormState = function(e) {\n            return As = \"useFormState\", r(), Ye(), An(e);\n        }, Zs.useActionState = function(e) {\n            return As = \"useActionState\", r(), Ye(), An(e);\n        }, Zs.useOptimistic = function(e, n) {\n            return As = \"useOptimistic\", r(), Ye(), Rn(e, n);\n        };\n        var ec = {}, nc = new Set, tc = new Set, rc = new Set, lc = new Set, ac = new Set, oc = new Set, uc = new Set, ic = new Set, sc = new Set, cc = new Set;\n        Object.freeze(ec);\n        var fc = {\n            isMounted: function(e) {\n                var n = to;\n                if (null !== n && ro && 1 === n.tag) {\n                    var t = n.stateNode;\n                    t._warnedAboutRefsInRender || console.error(\"%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.\", c(n) || \"A component\"), t._warnedAboutRefsInRender = !0;\n                }\n                return !!(e = e._reactInternals) && function(e) {\n                    var n = e, t = e;\n                    if (e.alternate) for(; n.return;)n = n.return;\n                    else {\n                        e = n;\n                        do {\n                            0 != (4098 & (n = e).flags) && (t = n.return), e = n.return;\n                        }while (e);\n                    }\n                    return 3 === n.tag ? t : null;\n                }(e) === e;\n            },\n            enqueueSetState: function(e, n, t) {\n                var r = xl(e = e._reactInternals), l = ge(r);\n                l.payload = n, null != t && (kt(t), l.callback = t), null !== (n = ye(e, l, r)) && (Cl(n, e, r), be(n, e, r));\n            },\n            enqueueReplaceState: function(e, n, t) {\n                var r = xl(e = e._reactInternals), l = ge(r);\n                l.tag = hi, l.payload = n, null != t && (kt(t), l.callback = t), null !== (n = ye(e, l, r)) && (Cl(n, e, r), be(n, e, r));\n            },\n            enqueueForceUpdate: function(e, n) {\n                var t = xl(e = e._reactInternals), r = ge(t);\n                r.tag = gi, null != n && (kt(n), r.callback = n), null !== (n = ye(e, r, t)) && (Cl(n, e, t), be(n, e, t));\n            }\n        };\n        \"function\" == typeof reportError && reportError;\n        var dc = Error(\"This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue.\"), pc = !1, mc = {}, hc = {}, gc = {}, yc = {}, bc = !1, vc = {}, Sc = {}, kc = {\n            dehydrated: null,\n            treeContext: null,\n            retryLane: 0\n        }, wc = !1, xc = b(null), zc = b(null), Cc = {}, Ec = null, Pc = null, _c = null, Rc = !1, Tc = \"undefined\" != typeof AbortController ? AbortController : function() {\n            var e = [], n = this.signal = {\n                aborted: !1,\n                addEventListener: function(n, t) {\n                    e.push(t);\n                }\n            };\n            this.abort = function() {\n                n.aborted = !0, e.forEach(function(e) {\n                    return e();\n                });\n            };\n        }, Nc = Ta.unstable_scheduleCallback, Lc = Ta.unstable_NormalPriority, Uc = {\n            $$typeof: ja,\n            Consumer: null,\n            Provider: null,\n            _currentValue: null,\n            _currentValue2: null,\n            _threadCount: 0,\n            _currentRenderer: null,\n            _currentRenderer2: null\n        }, Dc = Ja.S;\n        Ja.S = function(e, n) {\n            \"object\" == typeof n && null !== n && \"function\" == typeof n.then && function(e, n) {\n                if (null === ci) {\n                    var t = ci = [];\n                    fi = 0, di = de(), pi = {\n                        status: \"pending\",\n                        value: void 0,\n                        then: function(e) {\n                            t.push(e);\n                        }\n                    };\n                }\n                fi++, n.then(pe, pe);\n            }(0, n), null !== Dc && Dc(e, n);\n        };\n        var Ic = b(null), Fc = null;\n        Fc = new Set;\n        var Mc = !1, Wc = !1, Hc = !1, jc = \"function\" == typeof WeakSet ? WeakSet : Set, Ac = null, Qc = null, Oc = null, Bc = !1, Vc = null, $c = !1, qc = null, Yc = 8192, Gc = {\n            getCacheForType: function(e) {\n                var n = sr(Uc), t = n.data.get(e);\n                return void 0 === t && (t = e(), n.data.set(e, t)), t;\n            },\n            getOwner: function() {\n                return to;\n            }\n        };\n        if (\"function\" == typeof Symbol && Symbol.for) {\n            var Jc = Symbol.for;\n            Jc(\"selector.component\"), Jc(\"selector.has_pseudo_class\"), Jc(\"selector.role\"), Jc(\"selector.test_id\"), Jc(\"selector.text\");\n        }\n        var Kc = \"function\" == typeof WeakMap ? WeakMap : Map, Xc = 0, Zc = 2, ef = 4, nf = 0, tf = 1, rf = 2, lf = 3, af = 4, of = 5, uf = 6, sf = Xc, cf = null, ff = null, df = 0, pf = 0, mf = 1, hf = 2, gf = 3, yf = 4, bf = 5, vf = 6, Sf = 7, kf = 8, wf = pf, xf = null, zf = !1, Cf = !1, Ef = 0, Pf = nf, _f = 0, Rf = 0, Tf = 0, Nf = 0, Lf = 0, Uf = null, Df = null, If = !1, Ff = 0, Mf = 300, Wf = 1 / 0, Hf = 500, jf = null, Af = null, Qf = !1, Of = null, Bf = 0, Vf = 0, $f = null, qf = 50, Yf = 0, Gf = null, Jf = !1, Kf = !1, Xf = 50, Zf = 0, ed = null, nd = !1, td = 0, rd = 1, ld = 2, ad = null, od = !1, ud = new Set, id = !1;\n        try {\n            var sd = Object.preventExtensions({});\n            new Map([\n                [\n                    sd,\n                    null\n                ]\n            ]), new Set([\n                sd\n            ]);\n        } catch (e) {\n            id = !0;\n        }\n        var cd = !1;\n        return _a.createContainer = function(e, n, r, l, a, o, u, i, s, c) {\n            return function(e, n, r, l, a, o, u, i, s, c, f, d) {\n                return e = new va(e, n, r, u, i, s, c, null), n = 1, !0 === o && (n |= 24), _u && (n |= 2), o = t(3, null, null, n), e.current = o, o.stateNode = e, pr(n = dr()), e.pooledCache = n, pr(n), o.memoizedState = {\n                    element: l,\n                    isDehydrated: r,\n                    cache: n\n                }, me(o), e;\n            }(e, n, !1, null, 0, l, o, u, i, s);\n        }, _a.flushSyncWork = function() {\n            return (sf & (Zc | ef)) !== Xc || (ae(0), !1);\n        }, _a.updateContainer = function(e, n, t, r) {\n            var l = n.current, a = xl(l);\n            return Sa(l, a, e, n, t, r), a;\n        }, _a.updateContainerSync = function(e, n, t, r) {\n            return 0 === n.tag && Jl(), Sa(n.current, 2, e, n, t, r), 2;\n        }, _a;\n    }, n.exports.default = n.exports, Object.defineProperty(n.exports, \"__esModule\", {\n        value: !0\n    }))), c.exports;\n    var n;\n}();\nvar f, d = t(a.exports), p = {\n    exports: {}\n}, m = {};\nvar h, g = {};\n/**\n * @license React\n * react-reconciler-constants.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */  false ? 0 : p.exports = (h || (h = 1,  true && (g.ConcurrentRoot = 1, g.ContinuousEventPriority = 8, g.DefaultEventPriority = 32, g.DiscreteEventPriority = 2, g.IdleEventPriority = 268435456, g.LegacyRoot = 0, g.NoEventPriority = 0)), g);\nvar y = p.exports;\nconst b = (e, n)=>{\n    const t = Object.keys(e), r = Object.keys(n);\n    if (t.length !== r.length) return !1;\n    for(let r = 0; r < t.length; r += 1){\n        const l = t[r];\n        if (\"render\" === l && !e[l] != !n[l]) return !1;\n        if (\"children\" !== l && e[l] !== n[l]) {\n            if (\"object\" == typeof e[l] && \"object\" == typeof n[l] && b(e[l], n[l])) continue;\n            return !1;\n        }\n        if (\"children\" === l && (\"string\" == typeof e[l] || \"string\" == typeof n[l])) return e[l] === n[l];\n    }\n    return !0;\n}, v = {}, S = console.error, k = ({ appendChild: e, appendChildToContainer: n, commitTextUpdate: t, commitUpdate: r, createInstance: l, createTextInstance: a, insertBefore: o, removeChild: u, removeChildFromContainer: i, resetAfterCommit: s })=>{\n    const c = d({\n        appendChild: e,\n        appendChildToContainer: n,\n        appendInitialChild: e,\n        createInstance: l,\n        createTextInstance: a,\n        insertBefore: o,\n        commitUpdate: (e, n, t, l)=>{\n            b(t, l) || r(e, null, n, t, l);\n        },\n        commitTextUpdate: t,\n        removeChild: u,\n        removeChildFromContainer: i,\n        resetAfterCommit: s,\n        noTimeout: -1,\n        shouldSetTextContent: ()=>!1,\n        finalizeInitialChildren: ()=>!1,\n        getPublicInstance: (e)=>e,\n        getRootHostContext: ()=>v,\n        getChildHostContext: ()=>v,\n        prepareForCommit () {},\n        clearContainer () {},\n        resetTextContent () {},\n        getCurrentUpdatePriority: ()=>y.DefaultEventPriority,\n        maySuspendCommit: ()=>!1,\n        requestPostPaintCallback: ()=>{},\n        resolveUpdatePriority: ()=>y.DefaultEventPriority,\n        setCurrentUpdatePriority: ()=>{},\n        shouldAttemptEagerTransition: ()=>!1\n    });\n    return {\n        createContainer: (e)=>c.createContainer(e, y.ConcurrentRoot, null, !1, null, \"\", S, S, S, null),\n        updateContainer: (e, n, t, r)=>{\n            c.updateContainerSync(e, n, t, r), c.flushSyncWork();\n        }\n    };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9yZWNvbmNpbGVyL2xpYi9yZWNvbmNpbGVyLTMxLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUI7QUFBNEI7QUFBQSxTQUFTRSxFQUFFRixDQUFDO0lBQUUsT0FBT0EsS0FBR0EsRUFBRUcsVUFBVSxJQUFFQyxPQUFPQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUCxHQUFFLGFBQVdBLEVBQUVRLE9BQU8sR0FBQ1I7QUFBQztBQUFDLFNBQVNTLEVBQUVULENBQUM7SUFBRSxJQUFHQSxFQUFFRyxVQUFVLEVBQUMsT0FBT0g7SUFBRSxJQUFJQyxJQUFFRCxFQUFFUSxPQUFPO0lBQUMsSUFBRyxjQUFZLE9BQU9QLEdBQUU7UUFBQyxJQUFJQyxJQUFFLFNBQVNGO1lBQUksT0FBTyxJQUFJLFlBQVlBLElBQUVVLFFBQVFDLFNBQVMsQ0FBQ1YsR0FBRVcsV0FBVSxJQUFJLENBQUNDLFdBQVcsSUFBRVosRUFBRWEsS0FBSyxDQUFDLElBQUksRUFBQ0Y7UUFBVTtRQUFFVixFQUFFRyxTQUFTLEdBQUNKLEVBQUVJLFNBQVM7SUFBQSxPQUFNSCxJQUFFLENBQUM7SUFBRSxPQUFPRSxPQUFPVyxjQUFjLENBQUNiLEdBQUUsY0FBYTtRQUFDYyxPQUFNLENBQUM7SUFBQyxJQUFHWixPQUFPYSxJQUFJLENBQUNqQixHQUFHa0IsT0FBTyxDQUFFLFNBQVNqQixDQUFDO1FBQUUsSUFBSVEsSUFBRUwsT0FBT2Usd0JBQXdCLENBQUNuQixHQUFFQztRQUFHRyxPQUFPVyxjQUFjLENBQUNiLEdBQUVELEdBQUVRLEVBQUVXLEdBQUcsR0FBQ1gsSUFBRTtZQUFDWSxZQUFXLENBQUM7WUFBRUQsS0FBSTtnQkFBVyxPQUFPcEIsQ0FBQyxDQUFDQyxFQUFFO1lBQUE7UUFBQztJQUFFLElBQUlDO0FBQUM7QUFBQyxJQUFJb0IsR0FBRUMsSUFBRTtJQUFDQyxTQUFRLENBQUM7QUFBQyxHQUFFQyxJQUFFO0lBQUNELFNBQVEs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aUI3cUI7UUFBRW1yQixXQUFVLENBQUM7UUFBRUYsc0JBQXFCLElBQUksQ0FBQztRQUFFRCx5QkFBd0IsSUFBSSxDQUFDO1FBQUVQLG1CQUFrQnJzQixDQUFBQSxJQUFHQTtRQUFFc3NCLG9CQUFtQixJQUFJN21CO1FBQUU4bUIscUJBQW9CLElBQUk5bUI7UUFBRSttQixxQkFBbUI7UUFBRXNCLG1CQUFpQjtRQUFFRCxxQkFBbUI7UUFBRVosMEJBQXlCLElBQUk1bkIsRUFBRWsvQixvQkFBb0I7UUFBQ2xYLGtCQUFpQixJQUFJLENBQUM7UUFBRUQsMEJBQXlCLEtBQUs7UUFBRUYsdUJBQXNCLElBQUk3bkIsRUFBRWsvQixvQkFBb0I7UUFBQ3ZYLDBCQUF5QixLQUFLO1FBQUVHLDhCQUE2QixJQUFJLENBQUM7SUFBQztJQUFHLE9BQU07UUFBQ3FFLGlCQUFnQnh4QixDQUFBQSxJQUFHNkIsRUFBRTJ2QixlQUFlLENBQUN4eEIsR0FBRXFGLEVBQUVnL0IsY0FBYyxFQUFDLE1BQUssQ0FBQyxHQUFFLE1BQUssSUFBRzErQixHQUFFQSxHQUFFQSxHQUFFO1FBQU0rckIsaUJBQWdCLENBQUMxeEIsR0FBRUMsR0FBRUMsR0FBRU87WUFBS29CLEVBQUU4dkIsbUJBQW1CLENBQUMzeEIsR0FBRUMsR0FBRUMsR0FBRU8sSUFBR29CLEVBQUU0dkIsYUFBYTtRQUFFO0lBQUM7QUFBQztBQUF1QiIsInNvdXJjZXMiOlsiL1VzZXJzL3ppbWluL3dlYkRldi9xdWlja2ludm9pY2Uvbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYvcmVjb25jaWxlci9saWIvcmVjb25jaWxlci0zMS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZSBmcm9tXCJyZWFjdFwiO2ltcG9ydCphcyBuIGZyb21cInNjaGVkdWxlclwiO2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZSYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsXCJkZWZhdWx0XCIpP2UuZGVmYXVsdDplfWZ1bmN0aW9uIHIoZSl7aWYoZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciBuPWUuZGVmYXVsdDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKXt2YXIgdD1mdW5jdGlvbiBlKCl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBlP1JlZmxlY3QuY29uc3RydWN0KG4sYXJndW1lbnRzLHRoaXMuY29uc3RydWN0b3IpOm4uYXBwbHkodGhpcyxhcmd1bWVudHMpfTt0LnByb3RvdHlwZT1uLnByb3RvdHlwZX1lbHNlIHQ9e307cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLE9iamVjdC5rZXlzKGUpLmZvckVhY2goKGZ1bmN0aW9uKG4pe3ZhciByPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxuKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLHIuZ2V0P3I6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGVbbl19fSl9KSksdH12YXIgbCxhPXtleHBvcnRzOnt9fSxvPXtleHBvcnRzOnt9fSx1PXIobik7dmFyIGkscyxjPXtleHBvcnRzOnt9fTtcbi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LXJlY29uY2lsZXIuZGV2ZWxvcG1lbnQuanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVj9hLmV4cG9ydHM9KGx8fChsPTEsKHM9bykuZXhwb3J0cz1mdW5jdGlvbihuKXtmdW5jdGlvbiB0KGUsbix0LHIpe3JldHVybiBuZXcgJHIoZSxuLHQscil9ZnVuY3Rpb24gcihlKXt2YXIgbj1cImh0dHBzOi8vcmVhY3QuZGV2L2Vycm9ycy9cIitlO2lmKDE8YXJndW1lbnRzLmxlbmd0aCl7bis9XCI/YXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbMV0pO2Zvcih2YXIgdD0yO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspbis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbdF0pfXJldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2UrXCI7IHZpc2l0IFwiK24rXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWZ1bmN0aW9uIGwoZSl7cmV0dXJuIG51bGw9PT1lfHxcIm9iamVjdFwiIT10eXBlb2YgZT9udWxsOlwiZnVuY3Rpb25cIj09dHlwZW9mKGU9Q2wmJmVbQ2xdfHxlW1wiQEBpdGVyYXRvclwiXSk/ZTpudWxsfWZ1bmN0aW9uIGEoZSl7aWYobnVsbD09ZSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlKXJldHVybiBlLiQkdHlwZW9mPT09RWw/bnVsbDplLmRpc3BsYXlOYW1lfHxlLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGU7c3dpdGNoKGUpe2Nhc2UgZGw6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgZmw6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIG1sOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHBsOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2Ugdmw6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgU2w6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT10eXBlb2YgZSlzd2l0Y2goZS4kJHR5cGVvZil7Y2FzZSB5bDpyZXR1cm4oZS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBnbDpyZXR1cm4oZS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSBibDp2YXIgbj1lLnJlbmRlcjtyZXR1cm4oZT1lLmRpc3BsYXlOYW1lKXx8KGU9XCJcIiE9PShlPW4uZGlzcGxheU5hbWV8fG4ubmFtZXx8XCJcIik/XCJGb3J3YXJkUmVmKFwiK2UrXCIpXCI6XCJGb3J3YXJkUmVmXCIpLGU7Y2FzZSBrbDpyZXR1cm4gbnVsbCE9PShuPWUuZGlzcGxheU5hbWV8fG51bGwpP246YShlLnR5cGUpfHxcIk1lbW9cIjtjYXNlIHdsOm49ZS5fcGF5bG9hZCxlPWUuX2luaXQ7dHJ5e3JldHVybiBhKGUobikpfWNhdGNoKGUpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gbyhlKXtpZih2b2lkIDA9PT1ybCl0cnl7dGhyb3cgRXJyb3IoKX1jYXRjaChlKXt2YXIgbj1lLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO3JsPW4mJm5bMV18fFwiXCIsbGw9LTE8ZS5zdGFjay5pbmRleE9mKFwiXFxuICAgIGF0XCIpP1wiICg8YW5vbnltb3VzPilcIjotMTxlLnN0YWNrLmluZGV4T2YoXCJAXCIpP1wiQHVua25vd246MDowXCI6XCJcIn1yZXR1cm5cIlxcblwiK3JsK2UrbGx9ZnVuY3Rpb24gaShlLG4pe2lmKCFlfHxfbClyZXR1cm5cIlwiO19sPSEwO3ZhciB0PUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7dmFyIHI9e0RldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdDpmdW5jdGlvbigpe3RyeXtpZihuKXt2YXIgdD1mdW5jdGlvbigpe3Rocm93IEVycm9yKCl9O2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCl9fSksXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QodCxbXSl9Y2F0Y2goZSl7dmFyIHI9ZX1SZWZsZWN0LmNvbnN0cnVjdChlLFtdLHQpfWVsc2V7dHJ5e3QuY2FsbCgpfWNhdGNoKGUpe3I9ZX1lLmNhbGwodC5wcm90b3R5cGUpfX1lbHNle3RyeXt0aHJvdyBFcnJvcigpfWNhdGNoKGUpe3I9ZX0odD1lKCkpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNhdGNoJiZ0LmNhdGNoKChmdW5jdGlvbigpe30pKX19Y2F0Y2goZSl7aWYoZSYmciYmXCJzdHJpbmdcIj09dHlwZW9mIGUuc3RhY2spcmV0dXJuW2Uuc3RhY2ssci5zdGFja119cmV0dXJuW251bGwsbnVsbF19fTtyLkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdC5kaXNwbGF5TmFtZT1cIkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdFwiO3ZhciBsPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioci5EZXRlcm1pbmVDb21wb25lbnRGcmFtZVJvb3QsXCJuYW1lXCIpO2wmJmwuY29uZmlndXJhYmxlJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoci5EZXRlcm1pbmVDb21wb25lbnRGcmFtZVJvb3QsXCJuYW1lXCIse3ZhbHVlOlwiRGV0ZXJtaW5lQ29tcG9uZW50RnJhbWVSb290XCJ9KTt2YXIgYT1yLkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdCgpLHU9YVswXSxpPWFbMV07aWYodSYmaSl7dmFyIHM9dS5zcGxpdChcIlxcblwiKSxjPWkuc3BsaXQoXCJcXG5cIik7Zm9yKGw9cj0wO3I8cy5sZW5ndGgmJiFzW3JdLmluY2x1ZGVzKFwiRGV0ZXJtaW5lQ29tcG9uZW50RnJhbWVSb290XCIpOylyKys7Zm9yKDtsPGMubGVuZ3RoJiYhY1tsXS5pbmNsdWRlcyhcIkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdFwiKTspbCsrO2lmKHI9PT1zLmxlbmd0aHx8bD09PWMubGVuZ3RoKWZvcihyPXMubGVuZ3RoLTEsbD1jLmxlbmd0aC0xOzE8PXImJjA8PWwmJnNbcl0hPT1jW2xdOylsLS07Zm9yKDsxPD1yJiYwPD1sO3ItLSxsLS0paWYoc1tyXSE9PWNbbF0pe2lmKDEhPT1yfHwxIT09bClkb3tpZihyLS0sMD4tLWx8fHNbcl0hPT1jW2xdKXt2YXIgZj1cIlxcblwiK3Nbcl0ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO3JldHVybiBlLmRpc3BsYXlOYW1lJiZmLmluY2x1ZGVzKFwiPGFub255bW91cz5cIikmJihmPWYucmVwbGFjZShcIjxhbm9ueW1vdXM+XCIsZS5kaXNwbGF5TmFtZSkpLGZ9fXdoaWxlKDE8PXImJjA8PWwpO2JyZWFrfX19ZmluYWxseXtfbD0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT10fXJldHVybih0PWU/ZS5kaXNwbGF5TmFtZXx8ZS5uYW1lOlwiXCIpP28odCk6XCJcIn1mdW5jdGlvbiBzKGUpe3N3aXRjaChlLnRhZyl7Y2FzZSAyNjpjYXNlIDI3OmNhc2UgNTpyZXR1cm4gbyhlLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIG8oXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIG8oXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBvKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDE1OnJldHVybiBpKGUudHlwZSwhMSk7Y2FzZSAxMTpyZXR1cm4gaShlLnR5cGUucmVuZGVyLCExKTtjYXNlIDE6cmV0dXJuIGkoZS50eXBlLCEwKTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIGMoZSl7dHJ5e3ZhciBuPVwiXCI7ZG97bis9cyhlKSxlPWUucmV0dXJufXdoaWxlKGUpO3JldHVybiBufWNhdGNoKGUpe3JldHVyblwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZS5tZXNzYWdlK1wiXFxuXCIrZS5zdGFja319ZnVuY3Rpb24gZihlKXtyZXR1cm57Y3VycmVudDplfX1mdW5jdGlvbiBkKGUpezA+TmF8fChlLmN1cnJlbnQ9VGFbTmFdLFRhW05hXT1udWxsLE5hLS0pfWZ1bmN0aW9uIHAoZSxuKXtOYSsrLFRhW05hXT1lLmN1cnJlbnQsZS5jdXJyZW50PW59ZnVuY3Rpb24gbShlKXt2YXIgbj00MiZlO2lmKDAhPT1uKXJldHVybiBuO3N3aXRjaChlJi1lKXtjYXNlIDE6cmV0dXJuIDE7Y2FzZSAyOnJldHVybiAyO2Nhc2UgNDpyZXR1cm4gNDtjYXNlIDg6cmV0dXJuIDg7Y2FzZSAxNjpyZXR1cm4gMTY7Y2FzZSAzMjpyZXR1cm4gMzI7Y2FzZSA2NDpyZXR1cm4gNjQ7Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6cmV0dXJuIDQxOTQxNzYmZTtjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpyZXR1cm4gNjI5MTQ1NjAmZTtjYXNlIDY3MTA4ODY0OnJldHVybiA2NzEwODg2NDtjYXNlIDEzNDIxNzcyODpyZXR1cm4gMTM0MjE3NzI4O2Nhc2UgMjY4NDM1NDU2OnJldHVybiAyNjg0MzU0NTY7Y2FzZSA1MzY4NzA5MTI6cmV0dXJuIDUzNjg3MDkxMjtjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuIDA7ZGVmYXVsdDpyZXR1cm4gZX19ZnVuY3Rpb24gaChlLG4pe3ZhciB0PWUucGVuZGluZ0xhbmVzO2lmKDA9PT10KXJldHVybiAwO3ZhciByPTAsbD1lLnN1c3BlbmRlZExhbmVzO2U9ZS5waW5nZWRMYW5lczt2YXIgYT0xMzQyMTc3MjcmdDtyZXR1cm4gMCE9PWE/MCE9KHQ9YSZ+bCk/cj1tKHQpOjAhPShlJj1hKSYmKHI9bShlKSk6MCE9KHQmPX5sKT9yPW0odCk6MCE9PWUmJihyPW0oZSkpLDA9PT1yPzA6MCE9PW4mJm4hPT1yJiYwPT0obiZsKSYmKChsPXImLXIpPj0oZT1uJi1uKXx8MzI9PT1sJiYwIT0oNDE5NDE3NiZlKSk/bjpyfWZ1bmN0aW9uIGcoZSxuKXtzd2l0Y2goZSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6Y2FzZSA4OnJldHVybiBuKzI1MDtjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gbis1ZTM7ZGVmYXVsdDpyZXR1cm4tMX19ZnVuY3Rpb24geSgpe3ZhciBlPUZhO3JldHVybiAwPT0oNDE5NDE3NiYoRmE8PD0xKSkmJihGYT0xMjgpLGV9ZnVuY3Rpb24gYigpe3ZhciBlPU1hO3JldHVybiAwPT0oNjI5MTQ1NjAmKE1hPDw9MSkpJiYoTWE9NDE5NDMwNCksZX1mdW5jdGlvbiB2KGUpe2Zvcih2YXIgbj1bXSx0PTA7MzE+dDt0Kyspbi5wdXNoKGUpO3JldHVybiBufWZ1bmN0aW9uIFMoZSxuKXtlLnBlbmRpbmdMYW5lc3w9biwyNjg0MzU0NTYhPT1uJiYoZS5zdXNwZW5kZWRMYW5lcz0wLGUucGluZ2VkTGFuZXM9MCxlLndhcm1MYW5lcz0wKX1mdW5jdGlvbiBrKGUsbix0KXtlLnBlbmRpbmdMYW5lc3w9bixlLnN1c3BlbmRlZExhbmVzJj1+bjt2YXIgcj0zMS1VYShuKTtlLmVudGFuZ2xlZExhbmVzfD1uLGUuZW50YW5nbGVtZW50c1tyXT0xMDczNzQxODI0fGUuZW50YW5nbGVtZW50c1tyXXw0MTk0MjE4JnR9ZnVuY3Rpb24gdyhlLG4pe3ZhciB0PWUuZW50YW5nbGVkTGFuZXN8PW47Zm9yKGU9ZS5lbnRhbmdsZW1lbnRzO3Q7KXt2YXIgcj0zMS1VYSh0KSxsPTE8PHI7bCZufGVbcl0mbiYmKGVbcl18PW4pLHQmPX5sfX1mdW5jdGlvbiB4KGUpe3JldHVybiAyPChlJj0tZSk/ODxlPzAhPSgxMzQyMTc3MjcmZSk/MzI6MjY4NDM1NDU2Ojg6Mn1mdW5jdGlvbiB6KGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIHFhJiZZYShlKX1mdW5jdGlvbiBDKGUsbil7aWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lKXt2YXIgdD1LYS5nZXQoZSk7cmV0dXJuIHZvaWQgMCE9PXQ/dDoobj17dmFsdWU6ZSxzb3VyY2U6bixzdGFjazpjKG4pfSxLYS5zZXQoZSxuKSxuKX1yZXR1cm57dmFsdWU6ZSxzb3VyY2U6bixzdGFjazpjKG4pfX1mdW5jdGlvbiBFKGUpe2Zvcig7ZT09PWVvOyllbz1YYVstLVphXSxYYVtaYV09bnVsbCxYYVstLVphXSxYYVtaYV09bnVsbDtmb3IoO2U9PT1ybzspcm89bm9bLS10b10sbm9bdG9dPW51bGwsbm9bLS10b10sbm9bdG9dPW51bGwsbm9bLS10b10sbm9bdG9dPW51bGx9ZnVuY3Rpb24gUChlLG4pe3Aob28sbikscChhbyxlKSxwKGxvLG51bGwpLGU9TmwobiksZChsbykscChsbyxlKX1mdW5jdGlvbiBfKCl7ZChsbyksZChhbyksZChvbyl9ZnVuY3Rpb24gUihlKXtudWxsIT09ZS5tZW1vaXplZFN0YXRlJiZwKHVvLGUpO3ZhciBuPWxvLmN1cnJlbnQsdD1MbChuLGUudHlwZSk7biE9PXQmJihwKGFvLGUpLHAobG8sdCkpfWZ1bmN0aW9uIFQoZSl7YW8uY3VycmVudD09PWUmJihkKGxvKSxkKGFvKSksdW8uY3VycmVudD09PWUmJihkKHVvKSxyYS5fY3VycmVudFZhbHVlMj10YSl9ZnVuY3Rpb24gTigpe2Zvcih2YXIgZT1mbyxuPXBvPWZvPTA7bjxlOyl7dmFyIHQ9Y29bbl07Y29bbisrXT1udWxsO3ZhciByPWNvW25dO2NvW24rK109bnVsbDt2YXIgbD1jb1tuXTtjb1tuKytdPW51bGw7dmFyIGE9Y29bbl07aWYoY29bbisrXT1udWxsLG51bGwhPT1yJiZudWxsIT09bCl7dmFyIG89ci5wZW5kaW5nO251bGw9PT1vP2wubmV4dD1sOihsLm5leHQ9by5uZXh0LG8ubmV4dD1sKSxyLnBlbmRpbmc9bH0wIT09YSYmSSh0LGwsYSl9fWZ1bmN0aW9uIEwoZSxuLHQscil7Y29bZm8rK109ZSxjb1tmbysrXT1uLGNvW2ZvKytdPXQsY29bZm8rK109cixwb3w9cixlLmxhbmVzfD1yLG51bGwhPT0oZT1lLmFsdGVybmF0ZSkmJihlLmxhbmVzfD1yKX1mdW5jdGlvbiBVKGUsbix0LHIpe3JldHVybiBMKGUsbix0LHIpLEYoZSl9ZnVuY3Rpb24gRChlLG4pe3JldHVybiBMKGUsbnVsbCxudWxsLG4pLEYoZSl9ZnVuY3Rpb24gSShlLG4sdCl7ZS5sYW5lc3w9dDt2YXIgcj1lLmFsdGVybmF0ZTtudWxsIT09ciYmKHIubGFuZXN8PXQpO2Zvcih2YXIgbD0hMSxhPWUucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PXQsbnVsbCE9PShyPWEuYWx0ZXJuYXRlKSYmKHIuY2hpbGRMYW5lc3w9dCksMjI9PT1hLnRhZyYmKG51bGw9PT0oZT1hLnN0YXRlTm9kZSl8fDEmZS5fdmlzaWJpbGl0eXx8KGw9ITApKSxlPWEsYT1hLnJldHVybjtsJiZudWxsIT09biYmMz09PWUudGFnJiYoYT1lLnN0YXRlTm9kZSxsPTMxLVVhKHQpLG51bGw9PT0oZT0oYT1hLmhpZGRlblVwZGF0ZXMpW2xdKT9hW2xdPVtuXTplLnB1c2gobiksbi5sYW5lPTUzNjg3MDkxMnx0KX1mdW5jdGlvbiBGKGUpe2lmKDUwPHRpKXRocm93IHRpPTAscmk9bnVsbCxFcnJvcihyKDE4NSkpO2Zvcih2YXIgbj1lLnJldHVybjtudWxsIT09bjspbj0oZT1uKS5yZXR1cm47cmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZTpudWxsfWZ1bmN0aW9uIE0oZSl7ZSE9PWhvJiZudWxsPT09ZS5uZXh0JiYobnVsbD09PWhvP21vPWhvPWU6aG89aG8ubmV4dD1lKSx5bz0hMCxnb3x8KGdvPSEwLFdhKE9hLEgpKX1mdW5jdGlvbiBXKGUsbil7aWYoIWJvJiZ5byl7Ym89ITA7ZG97Zm9yKHZhciB0PSExLHI9bW87bnVsbCE9PXI7KXtpZigwIT09ZSl7dmFyIGw9ci5wZW5kaW5nTGFuZXM7aWYoMD09PWwpdmFyIGE9MDtlbHNle3ZhciBvPXIuc3VzcGVuZGVkTGFuZXMsdT1yLnBpbmdlZExhbmVzO2E9KDE8PDMxLVVhKDQyfGUpKzEpLTEsYT0yMDEzMjY2NzcmKGEmPWwmfihvJn51KSk/MjAxMzI2Njc3JmF8MTphPzJ8YTowfTAhPT1hJiYodD0hMCxRKHIsYSkpfWVsc2UgYT1MdSwwIT0oMyYoYT1oKHIscj09PVR1P2E6MCkpKSYmKHQ9ITAsUShyLGEpKTtyPXIubmV4dH19d2hpbGUodCk7Ym89ITF9fWZ1bmN0aW9uIEgoKXt5bz1nbz0hMTt2YXIgZT0wOzAhPT12byYmKEdsKCkmJihlPXZvKSx2bz0wKTtmb3IodmFyIG49UWEoKSx0PW51bGwscj1tbztudWxsIT09cjspe3ZhciBsPXIubmV4dCxhPWoocixuKTswPT09YT8oci5uZXh0PW51bGwsbnVsbD09PXQ/bW89bDp0Lm5leHQ9bCxudWxsPT09bCYmKGhvPXQpKToodD1yLCgwIT09ZXx8MCE9KDMmYSkpJiYoeW89ITApKSxyPWx9VyhlKX1mdW5jdGlvbiBqKGUsbil7Zm9yKHZhciB0PWUuc3VzcGVuZGVkTGFuZXMscj1lLnBpbmdlZExhbmVzLGw9ZS5leHBpcmF0aW9uVGltZXMsYT0tNjI5MTQ1NjEmZS5wZW5kaW5nTGFuZXM7MDxhOyl7dmFyIG89MzEtVWEoYSksdT0xPDxvLGk9bFtvXTstMT09PWk/MCE9KHUmdCkmJjA9PSh1JnIpfHwobFtvXT1nKHUsbikpOmk8PW4mJihlLmV4cGlyZWRMYW5lc3w9dSksYSY9fnV9aWYodD1MdSx0PWgoZSxlPT09KG49VHUpP3Q6MCkscj1lLmNhbGxiYWNrTm9kZSwwPT09dHx8ZT09PW4mJjI9PT1VdXx8bnVsbCE9PWUuY2FuY2VsUGVuZGluZ0NvbW1pdClyZXR1cm4gbnVsbCE9PXImJm51bGwhPT1yJiZIYShyKSxlLmNhbGxiYWNrTm9kZT1udWxsLGUuY2FsbGJhY2tQcmlvcml0eT0wO2lmKDAhPSgzJnQpKXJldHVybiBudWxsIT09ciYmbnVsbCE9PXImJkhhKHIpLGUuY2FsbGJhY2tQcmlvcml0eT0yLGUuY2FsbGJhY2tOb2RlPW51bGwsMjtpZigobj10Ji10KT09PWUuY2FsbGJhY2tQcmlvcml0eSlyZXR1cm4gbjtzd2l0Y2gobnVsbCE9PXImJkhhKHIpLHgodCkpe2Nhc2UgMjp0PU9hO2JyZWFrO2Nhc2UgODp0PUJhO2JyZWFrO2Nhc2UgMzI6ZGVmYXVsdDp0PVZhO2JyZWFrO2Nhc2UgMjY4NDM1NDU2OnQ9JGF9cmV0dXJuIHI9QS5iaW5kKG51bGwsZSksdD1XYSh0LHIpLGUuY2FsbGJhY2tQcmlvcml0eT1uLGUuY2FsbGJhY2tOb2RlPXQsbn1mdW5jdGlvbiBBKGUsbil7dmFyIHQ9ZS5jYWxsYmFja05vZGU7aWYoV3IoKSYmZS5jYWxsYmFja05vZGUhPT10KXJldHVybiBudWxsO3ZhciByPUx1O3JldHVybiAwPT09KHI9aChlLGU9PT1UdT9yOjApKT9udWxsOihncihlLHIsbiksaihlLFFhKCkpLGUuY2FsbGJhY2tOb2RlPT09dD9BLmJpbmQobnVsbCxlKTpudWxsKX1mdW5jdGlvbiBRKGUsbil7aWYoV3IoKSlyZXR1cm4gbnVsbDtncihlLG4sITApfWZ1bmN0aW9uIE8oKXtyZXR1cm4gMD09PXZvJiYodm89eSgpKSx2b31mdW5jdGlvbiBCKCl7aWYoMD09LS1rbyYmbnVsbCE9PVNvKXtudWxsIT09eG8mJih4by5zdGF0dXM9XCJmdWxmaWxsZWRcIik7dmFyIGU9U287U289bnVsbCx3bz0wLHhvPW51bGw7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspKDAsZVtuXSkoKX19ZnVuY3Rpb24gVihlKXtlLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6ZS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGwsbGFuZXM6MCxoaWRkZW5DYWxsYmFja3M6bnVsbH0sY2FsbGJhY2tzOm51bGx9fWZ1bmN0aW9uICQoZSxuKXtlPWUudXBkYXRlUXVldWUsbi51cGRhdGVRdWV1ZT09PWUmJihuLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6ZS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmUubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmUuc2hhcmVkLGNhbGxiYWNrczpudWxsfSl9ZnVuY3Rpb24gcShlKXtyZXR1cm57bGFuZTplLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24gWShlLG4sdCl7dmFyIHI9ZS51cGRhdGVRdWV1ZTtpZihudWxsPT09cilyZXR1cm4gbnVsbDtpZihyPXIuc2hhcmVkLDAhPSgyJlJ1KSl7dmFyIGw9ci5wZW5kaW5nO3JldHVybiBudWxsPT09bD9uLm5leHQ9bjoobi5uZXh0PWwubmV4dCxsLm5leHQ9biksci5wZW5kaW5nPW4sbj1GKGUpLEkoZSxudWxsLHQpLG59cmV0dXJuIEwoZSxyLG4sdCksRihlKX1mdW5jdGlvbiBHKGUsbix0KXtpZihudWxsIT09KG49bi51cGRhdGVRdWV1ZSkmJihuPW4uc2hhcmVkLDAhPSg0MTk0MTc2JnQpKSl7dmFyIHI9bi5sYW5lczt0fD1yJj1lLnBlbmRpbmdMYW5lcyxuLmxhbmVzPXQsdyhlLHQpfX1mdW5jdGlvbiBKKGUsbil7dmFyIHQ9ZS51cGRhdGVRdWV1ZSxyPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1yJiZ0PT09KHI9ci51cGRhdGVRdWV1ZSkpe3ZhciBsPW51bGwsYT1udWxsO2lmKG51bGwhPT0odD10LmZpcnN0QmFzZVVwZGF0ZSkpe2Rve3ZhciBvPXtsYW5lOnQubGFuZSx0YWc6dC50YWcscGF5bG9hZDp0LnBheWxvYWQsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O251bGw9PT1hP2w9YT1vOmE9YS5uZXh0PW8sdD10Lm5leHR9d2hpbGUobnVsbCE9PXQpO251bGw9PT1hP2w9YT1uOmE9YS5uZXh0PW59ZWxzZSBsPWE9bjtyZXR1cm4gdD17YmFzZVN0YXRlOnIuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpsLGxhc3RCYXNlVXBkYXRlOmEsc2hhcmVkOnIuc2hhcmVkLGNhbGxiYWNrczpyLmNhbGxiYWNrc30sdm9pZChlLnVwZGF0ZVF1ZXVlPXQpfW51bGw9PT0oZT10Lmxhc3RCYXNlVXBkYXRlKT90LmZpcnN0QmFzZVVwZGF0ZT1uOmUubmV4dD1uLHQubGFzdEJhc2VVcGRhdGU9bn1mdW5jdGlvbiBLKCl7aWYoQ28mJm51bGwhPT14byl0aHJvdyB4b31mdW5jdGlvbiBYKGUsbix0LHIpe0NvPSExO3ZhciBsPWUudXBkYXRlUXVldWU7em89ITE7dmFyIGE9bC5maXJzdEJhc2VVcGRhdGUsbz1sLmxhc3RCYXNlVXBkYXRlLHU9bC5zaGFyZWQucGVuZGluZztpZihudWxsIT09dSl7bC5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBpPXUscz1pLm5leHQ7aS5uZXh0PW51bGwsbnVsbD09PW8/YT1zOm8ubmV4dD1zLG89aTt2YXIgYz1lLmFsdGVybmF0ZTtudWxsIT09YyYmKHU9KGM9Yy51cGRhdGVRdWV1ZSkubGFzdEJhc2VVcGRhdGUpIT09byYmKG51bGw9PT11P2MuZmlyc3RCYXNlVXBkYXRlPXM6dS5uZXh0PXMsYy5sYXN0QmFzZVVwZGF0ZT1pKX1pZihudWxsIT09YSl7dmFyIGY9bC5iYXNlU3RhdGU7Zm9yKG89MCxjPXM9aT1udWxsLHU9YTs7KXt2YXIgZD0tNTM2ODcwOTEzJnUubGFuZSxwPWQhPT11LmxhbmU7aWYocD8oTHUmZCk9PT1kOihyJmQpPT09ZCl7MCE9PWQmJmQ9PT13byYmKENvPSEwKSxudWxsIT09YyYmKGM9Yy5uZXh0PXtsYW5lOjAsdGFnOnUudGFnLHBheWxvYWQ6dS5wYXlsb2FkLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7ZTp7dmFyIG09ZSxoPXU7ZD1uO3ZhciBnPXQ7c3dpdGNoKGgudGFnKXtjYXNlIDE6aWYoXCJmdW5jdGlvblwiPT10eXBlb2YobT1oLnBheWxvYWQpKXtmPW0uY2FsbChnLGYsZCk7YnJlYWsgZX1mPW07YnJlYWsgZTtjYXNlIDM6bS5mbGFncz0tNjU1MzcmbS5mbGFnc3wxMjg7Y2FzZSAwOmlmKG51bGw9PShkPVwiZnVuY3Rpb25cIj09dHlwZW9mKG09aC5wYXlsb2FkKT9tLmNhbGwoZyxmLGQpOm0pKWJyZWFrIGU7Zj1pbCh7fSxmLGQpO2JyZWFrIGU7Y2FzZSAyOnpvPSEwfX1udWxsIT09KGQ9dS5jYWxsYmFjaykmJihlLmZsYWdzfD02NCxwJiYoZS5mbGFnc3w9ODE5MiksbnVsbD09PShwPWwuY2FsbGJhY2tzKT9sLmNhbGxiYWNrcz1bZF06cC5wdXNoKGQpKX1lbHNlIHA9e2xhbmU6ZCx0YWc6dS50YWcscGF5bG9hZDp1LnBheWxvYWQsY2FsbGJhY2s6dS5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1jPyhzPWM9cCxpPWYpOmM9Yy5uZXh0PXAsb3w9ZDtpZihudWxsPT09KHU9dS5uZXh0KSl7aWYobnVsbD09PSh1PWwuc2hhcmVkLnBlbmRpbmcpKWJyZWFrO3U9KHA9dSkubmV4dCxwLm5leHQ9bnVsbCxsLmxhc3RCYXNlVXBkYXRlPXAsbC5zaGFyZWQucGVuZGluZz1udWxsfX1udWxsPT09YyYmKGk9ZiksbC5iYXNlU3RhdGU9aSxsLmZpcnN0QmFzZVVwZGF0ZT1zLGwubGFzdEJhc2VVcGRhdGU9YyxudWxsPT09YSYmKGwuc2hhcmVkLmxhbmVzPTApLEh1fD1vLGUubGFuZXM9byxlLm1lbW9pemVkU3RhdGU9Zn19ZnVuY3Rpb24gWihlLG4pe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgRXJyb3IocigxOTEsZSkpO2UuY2FsbChuKX1mdW5jdGlvbiBlZShlLG4pe3ZhciB0PWUuY2FsbGJhY2tzO2lmKG51bGwhPT10KWZvcihlLmNhbGxiYWNrcz1udWxsLGU9MDtlPHQubGVuZ3RoO2UrKylaKHRbZV0sbil9ZnVuY3Rpb24gbmUoZSxuKXtpZihKYShlLG4pKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlfHxudWxsPT09ZXx8XCJvYmplY3RcIiE9dHlwZW9mIG58fG51bGw9PT1uKXJldHVybiExO3ZhciB0PU9iamVjdC5rZXlzKGUpLHI9T2JqZWN0LmtleXMobik7aWYodC5sZW5ndGghPT1yLmxlbmd0aClyZXR1cm4hMTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbD10W3JdO2lmKCFFby5jYWxsKG4sbCl8fCFKYShlW2xdLG5bbF0pKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIHRlKGUpe3JldHVyblwiZnVsZmlsbGVkXCI9PT0oZT1lLnN0YXR1cyl8fFwicmVqZWN0ZWRcIj09PWV9ZnVuY3Rpb24gcmUoKXt9ZnVuY3Rpb24gbGUoZSxuLHQpe3N3aXRjaCh2b2lkIDA9PT0odD1lW3RdKT9lLnB1c2gobik6dCE9PW4mJihuLnRoZW4ocmUscmUpLG49dCksbi5zdGF0dXMpe2Nhc2VcImZ1bGZpbGxlZFwiOnJldHVybiBuLnZhbHVlO2Nhc2VcInJlamVjdGVkXCI6aWYoKGU9bi5yZWFzb24pPT09UG8pdGhyb3cgRXJyb3Iocig0ODMpKTt0aHJvdyBlO2RlZmF1bHQ6aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4uc3RhdHVzKW4udGhlbihyZSxyZSk7ZWxzZXtpZihudWxsIT09KGU9VHUpJiYxMDA8ZS5zaGVsbFN1c3BlbmRDb3VudGVyKXRocm93IEVycm9yKHIoNDgyKSk7KGU9bikuc3RhdHVzPVwicGVuZGluZ1wiLGUudGhlbigoZnVuY3Rpb24oZSl7aWYoXCJwZW5kaW5nXCI9PT1uLnN0YXR1cyl7dmFyIHQ9bjt0LnN0YXR1cz1cImZ1bGZpbGxlZFwiLHQudmFsdWU9ZX19KSwoZnVuY3Rpb24oZSl7aWYoXCJwZW5kaW5nXCI9PT1uLnN0YXR1cyl7dmFyIHQ9bjt0LnN0YXR1cz1cInJlamVjdGVkXCIsdC5yZWFzb249ZX19KSl9c3dpdGNoKG4uc3RhdHVzKXtjYXNlXCJmdWxmaWxsZWRcIjpyZXR1cm4gbi52YWx1ZTtjYXNlXCJyZWplY3RlZFwiOmlmKChlPW4ucmVhc29uKT09PVBvKXRocm93IEVycm9yKHIoNDgzKSk7dGhyb3cgZX10aHJvdyBUbz1uLFBvfX1mdW5jdGlvbiBhZSgpe2lmKG51bGw9PT1Ubyl0aHJvdyBFcnJvcihyKDQ1OSkpO3ZhciBlPVRvO3JldHVybiBUbz1udWxsLGV9ZnVuY3Rpb24gb2UoZSl7dmFyIG49TG87cmV0dXJuIExvKz0xLG51bGw9PT1ObyYmKE5vPVtdKSxsZShObyxlLG4pfWZ1bmN0aW9uIHVlKGUsbix0LHIpe2U9ci5wcm9wcy5yZWYsdC5yZWY9dm9pZCAwIT09ZT9lOm51bGx9ZnVuY3Rpb24gaWUoZSxuKXtpZihuLiQkdHlwZW9mPT09c2wpdGhyb3cgRXJyb3Iocig1MjUpKTt0aHJvdyBlPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKSxFcnJvcihyKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMobikuam9pbihcIiwgXCIpK1wifVwiOmUpKX1mdW5jdGlvbiBzZShlKXtyZXR1cm4oMCxlLl9pbml0KShlLl9wYXlsb2FkKX1mdW5jdGlvbiBjZShlKXtmdW5jdGlvbiBuKG4sdCl7aWYoZSl7dmFyIHI9bi5kZWxldGlvbnM7bnVsbD09PXI/KG4uZGVsZXRpb25zPVt0XSxuLmZsYWdzfD0xNik6ci5wdXNoKHQpfX1mdW5jdGlvbiBhKHQscil7aWYoIWUpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09cjspbih0LHIpLHI9ci5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIG8oZSl7Zm9yKHZhciBuPW5ldyBNYXA7bnVsbCE9PWU7KW51bGwhPT1lLmtleT9uLnNldChlLmtleSxlKTpuLnNldChlLmluZGV4LGUpLGU9ZS5zaWJsaW5nO3JldHVybiBufWZ1bmN0aW9uIHUoZSxuKXtyZXR1cm4oZT1ZcihlLG4pKS5pbmRleD0wLGUuc2libGluZz1udWxsLGV9ZnVuY3Rpb24gaShuLHQscil7cmV0dXJuIG4uaW5kZXg9cixlP251bGwhPT0ocj1uLmFsdGVybmF0ZSk/KHI9ci5pbmRleCk8dD8obi5mbGFnc3w9MzM1NTQ0MzQsdCk6cjoobi5mbGFnc3w9MzM1NTQ0MzQsdCk6KG4uZmxhZ3N8PTEwNDg1NzYsdCl9ZnVuY3Rpb24gcyhuKXtyZXR1cm4gZSYmbnVsbD09PW4uYWx0ZXJuYXRlJiYobi5mbGFnc3w9MzM1NTQ0MzQpLG59ZnVuY3Rpb24gYyhlLG4sdCxyKXtyZXR1cm4gbnVsbD09PW58fDYhPT1uLnRhZz8oKG49WnIodCxlLm1vZGUscikpLnJldHVybj1lLG4pOigobj11KG4sdCkpLnJldHVybj1lLG4pfWZ1bmN0aW9uIGYoZSxuLHQscil7dmFyIGw9dC50eXBlO3JldHVybiBsPT09ZGw/cChlLG4sdC5wcm9wcy5jaGlsZHJlbixyLHQua2V5KTpudWxsIT09biYmKG4uZWxlbWVudFR5cGU9PT1sfHxcIm9iamVjdFwiPT10eXBlb2YgbCYmbnVsbCE9PWwmJmwuJCR0eXBlb2Y9PT13bCYmc2UobCk9PT1uLnR5cGUpPyh1ZShlLDAscj11KG4sdC5wcm9wcyksdCksci5yZXR1cm49ZSxyKToodWUoZSwwLHI9SnIodC50eXBlLHQua2V5LHQucHJvcHMsbnVsbCxlLm1vZGUsciksdCksci5yZXR1cm49ZSxyKX1mdW5jdGlvbiBkKGUsbix0LHIpe3JldHVybiBudWxsPT09bnx8NCE9PW4udGFnfHxuLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09dC5jb250YWluZXJJbmZvfHxuLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PXQuaW1wbGVtZW50YXRpb24/KChuPWVsKHQsZS5tb2RlLHIpKS5yZXR1cm49ZSxuKTooKG49dShuLHQuY2hpbGRyZW58fFtdKSkucmV0dXJuPWUsbil9ZnVuY3Rpb24gcChlLG4sdCxyLGwpe3JldHVybiBudWxsPT09bnx8NyE9PW4udGFnPygobj1Lcih0LGUubW9kZSxyLGwpKS5yZXR1cm49ZSxuKTooKG49dShuLHQpKS5yZXR1cm49ZSxuKX1mdW5jdGlvbiBtKGUsbix0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgbiYmXCJcIiE9PW58fFwibnVtYmVyXCI9PXR5cGVvZiBufHxcImJpZ2ludFwiPT10eXBlb2YgbilyZXR1cm4obj1acihcIlwiK24sZS5tb2RlLHQpKS5yZXR1cm49ZSxuO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBuJiZudWxsIT09bil7c3dpdGNoKG4uJCR0eXBlb2Ype2Nhc2UgY2w6cmV0dXJuIHVlKGUsMCx0PUpyKG4udHlwZSxuLmtleSxuLnByb3BzLG51bGwsZS5tb2RlLHQpLG4pLHQucmV0dXJuPWUsdDtjYXNlIGZsOnJldHVybihuPWVsKG4sZS5tb2RlLHQpKS5yZXR1cm49ZSxuO2Nhc2Ugd2w6cmV0dXJuIG0oZSxuPSgwLG4uX2luaXQpKG4uX3BheWxvYWQpLHQpfWlmKFJsKG4pfHxsKG4pKXJldHVybihuPUtyKG4sZS5tb2RlLHQsbnVsbCkpLnJldHVybj1lLG47aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygbi50aGVuKXJldHVybiBtKGUsb2UobiksdCk7aWYobi4kJHR5cGVvZj09PXlsKXJldHVybiBtKGUseXQoZSxuKSx0KTtpZShlLG4pfXJldHVybiBudWxsfWZ1bmN0aW9uIGgoZSxuLHQscil7dmFyIGE9bnVsbCE9PW4/bi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT10eXBlb2YgdCYmXCJcIiE9PXR8fFwibnVtYmVyXCI9PXR5cGVvZiB0fHxcImJpZ2ludFwiPT10eXBlb2YgdClyZXR1cm4gbnVsbCE9PWE/bnVsbDpjKGUsbixcIlwiK3Qscik7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQmJm51bGwhPT10KXtzd2l0Y2godC4kJHR5cGVvZil7Y2FzZSBjbDpyZXR1cm4gdC5rZXk9PT1hP2YoZSxuLHQscik6bnVsbDtjYXNlIGZsOnJldHVybiB0LmtleT09PWE/ZChlLG4sdCxyKTpudWxsO2Nhc2Ugd2w6cmV0dXJuIGgoZSxuLHQ9KGE9dC5faW5pdCkodC5fcGF5bG9hZCkscil9aWYoUmwodCl8fGwodCkpcmV0dXJuIG51bGwhPT1hP251bGw6cChlLG4sdCxyLG51bGwpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQudGhlbilyZXR1cm4gaChlLG4sb2UodCkscik7aWYodC4kJHR5cGVvZj09PXlsKXJldHVybiBoKGUsbix5dChlLHQpLHIpO2llKGUsdCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZyhlLG4sdCxyLGEpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiByJiZcIlwiIT09cnx8XCJudW1iZXJcIj09dHlwZW9mIHJ8fFwiYmlnaW50XCI9PXR5cGVvZiByKXJldHVybiBjKG4sZT1lLmdldCh0KXx8bnVsbCxcIlwiK3IsYSk7aWYoXCJvYmplY3RcIj09dHlwZW9mIHImJm51bGwhPT1yKXtzd2l0Y2goci4kJHR5cGVvZil7Y2FzZSBjbDpyZXR1cm4gZihuLGU9ZS5nZXQobnVsbD09PXIua2V5P3Q6ci5rZXkpfHxudWxsLHIsYSk7Y2FzZSBmbDpyZXR1cm4gZChuLGU9ZS5nZXQobnVsbD09PXIua2V5P3Q6ci5rZXkpfHxudWxsLHIsYSk7Y2FzZSB3bDpyZXR1cm4gZyhlLG4sdCxyPSgwLHIuX2luaXQpKHIuX3BheWxvYWQpLGEpfWlmKFJsKHIpfHxsKHIpKXJldHVybiBwKG4sZT1lLmdldCh0KXx8bnVsbCxyLGEsbnVsbCk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygci50aGVuKXJldHVybiBnKGUsbix0LG9lKHIpLGEpO2lmKHIuJCR0eXBlb2Y9PT15bClyZXR1cm4gZyhlLG4sdCx5dChuLHIpLGEpO2llKG4scil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geSh0LGMsZixkKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWRsJiZudWxsPT09Zi5rZXkmJihmPWYucHJvcHMuY2hpbGRyZW4pLFwib2JqZWN0XCI9PXR5cGVvZiBmJiZudWxsIT09Zil7c3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgY2w6ZTp7Zm9yKHZhciBwPWYua2V5LGI9YztudWxsIT09Yjspe2lmKGIua2V5PT09cCl7aWYoKHA9Zi50eXBlKT09PWRsKXtpZig3PT09Yi50YWcpe2EodCxiLnNpYmxpbmcpLChjPXUoYixmLnByb3BzLmNoaWxkcmVuKSkucmV0dXJuPXQsdD1jO2JyZWFrIGV9fWVsc2UgaWYoYi5lbGVtZW50VHlwZT09PXB8fFwib2JqZWN0XCI9PXR5cGVvZiBwJiZudWxsIT09cCYmcC4kJHR5cGVvZj09PXdsJiZzZShwKT09PWIudHlwZSl7YSh0LGIuc2libGluZyksdWUodCwwLGM9dShiLGYucHJvcHMpLGYpLGMucmV0dXJuPXQsdD1jO2JyZWFrIGV9YSh0LGIpO2JyZWFrfW4odCxiKSxiPWIuc2libGluZ31mLnR5cGU9PT1kbD8oKGM9S3IoZi5wcm9wcy5jaGlsZHJlbix0Lm1vZGUsZCxmLmtleSkpLnJldHVybj10LHQ9Yyk6KHVlKHQsMCxkPUpyKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsdC5tb2RlLGQpLGYpLGQucmV0dXJuPXQsdD1kKX1yZXR1cm4gcyh0KTtjYXNlIGZsOmU6e2ZvcihiPWYua2V5O251bGwhPT1jOyl7aWYoYy5rZXk9PT1iKXtpZig0PT09Yy50YWcmJmMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmMuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YSh0LGMuc2libGluZyksKGM9dShjLGYuY2hpbGRyZW58fFtdKSkucmV0dXJuPXQsdD1jO2JyZWFrIGV9YSh0LGMpO2JyZWFrfW4odCxjKSxjPWMuc2libGluZ30oYz1lbChmLHQubW9kZSxkKSkucmV0dXJuPXQsdD1jfXJldHVybiBzKHQpO2Nhc2Ugd2w6cmV0dXJuIHkodCxjLGY9KGI9Zi5faW5pdCkoZi5fcGF5bG9hZCksZCl9aWYoUmwoZikpcmV0dXJuIGZ1bmN0aW9uKHQscixsLHUpe2Zvcih2YXIgcz1udWxsLGM9bnVsbCxmPXIsZD1yPTAscD1udWxsO251bGwhPT1mJiZkPGwubGVuZ3RoO2QrKyl7Zi5pbmRleD5kPyhwPWYsZj1udWxsKTpwPWYuc2libGluZzt2YXIgeT1oKHQsZixsW2RdLHUpO2lmKG51bGw9PT15KXtudWxsPT09ZiYmKGY9cCk7YnJlYWt9ZSYmZiYmbnVsbD09PXkuYWx0ZXJuYXRlJiZuKHQsZikscj1pKHkscixkKSxudWxsPT09Yz9zPXk6Yy5zaWJsaW5nPXksYz15LGY9cH1pZihkPT09bC5sZW5ndGgpcmV0dXJuIGEodCxmKSxzO2lmKG51bGw9PT1mKXtmb3IoO2Q8bC5sZW5ndGg7ZCsrKW51bGwhPT0oZj1tKHQsbFtkXSx1KSkmJihyPWkoZixyLGQpLG51bGw9PT1jP3M9ZjpjLnNpYmxpbmc9ZixjPWYpO3JldHVybiBzfWZvcihmPW8oZik7ZDxsLmxlbmd0aDtkKyspbnVsbCE9PShwPWcoZix0LGQsbFtkXSx1KSkmJihlJiZudWxsIT09cC5hbHRlcm5hdGUmJmYuZGVsZXRlKG51bGw9PT1wLmtleT9kOnAua2V5KSxyPWkocCxyLGQpLG51bGw9PT1jP3M9cDpjLnNpYmxpbmc9cCxjPXApO3JldHVybiBlJiZmLmZvckVhY2goKGZ1bmN0aW9uKGUpe3JldHVybiBuKHQsZSl9KSksc30odCxjLGYsZCk7aWYobChmKSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YoYj1sKGYpKSl0aHJvdyBFcnJvcihyKDE1MCkpO3JldHVybiBmdW5jdGlvbih0LGwsdSxzKXtpZihudWxsPT11KXRocm93IEVycm9yKHIoMTUxKSk7Zm9yKHZhciBjPW51bGwsZj1udWxsLGQ9bCxwPWw9MCx5PW51bGwsYj11Lm5leHQoKTtudWxsIT09ZCYmIWIuZG9uZTtwKyssYj11Lm5leHQoKSl7ZC5pbmRleD5wPyh5PWQsZD1udWxsKTp5PWQuc2libGluZzt2YXIgdj1oKHQsZCxiLnZhbHVlLHMpO2lmKG51bGw9PT12KXtudWxsPT09ZCYmKGQ9eSk7YnJlYWt9ZSYmZCYmbnVsbD09PXYuYWx0ZXJuYXRlJiZuKHQsZCksbD1pKHYsbCxwKSxudWxsPT09Zj9jPXY6Zi5zaWJsaW5nPXYsZj12LGQ9eX1pZihiLmRvbmUpcmV0dXJuIGEodCxkKSxjO2lmKG51bGw9PT1kKXtmb3IoOyFiLmRvbmU7cCsrLGI9dS5uZXh0KCkpbnVsbCE9PShiPW0odCxiLnZhbHVlLHMpKSYmKGw9aShiLGwscCksbnVsbD09PWY/Yz1iOmYuc2libGluZz1iLGY9Yik7cmV0dXJuIGN9Zm9yKGQ9byhkKTshYi5kb25lO3ArKyxiPXUubmV4dCgpKW51bGwhPT0oYj1nKGQsdCxwLGIudmFsdWUscykpJiYoZSYmbnVsbCE9PWIuYWx0ZXJuYXRlJiZkLmRlbGV0ZShudWxsPT09Yi5rZXk/cDpiLmtleSksbD1pKGIsbCxwKSxudWxsPT09Zj9jPWI6Zi5zaWJsaW5nPWIsZj1iKTtyZXR1cm4gZSYmZC5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gbih0LGUpfSkpLGN9KHQsYyxmPWIuY2FsbChmKSxkKX1pZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBmLnRoZW4pcmV0dXJuIHkodCxjLG9lKGYpLGQpO2lmKGYuJCR0eXBlb2Y9PT15bClyZXR1cm4geSh0LGMseXQodCxmKSxkKTtpZSh0LGYpfXJldHVyblwic3RyaW5nXCI9PXR5cGVvZiBmJiZcIlwiIT09Znx8XCJudW1iZXJcIj09dHlwZW9mIGZ8fFwiYmlnaW50XCI9PXR5cGVvZiBmPyhmPVwiXCIrZixudWxsIT09YyYmNj09PWMudGFnPyhhKHQsYy5zaWJsaW5nKSwoYz11KGMsZikpLnJldHVybj10LHQ9Yyk6KGEodCxjKSwoYz1acihmLHQubW9kZSxkKSkucmV0dXJuPXQsdD1jKSxzKHQpKTphKHQsYyl9cmV0dXJuIGZ1bmN0aW9uKGUsbixyLGwpe3RyeXtMbz0wO3ZhciBhPXkoZSxuLHIsbCk7cmV0dXJuIE5vPW51bGwsYX1jYXRjaChuKXtpZihuPT09UG8pdGhyb3cgbjt2YXIgbz10KDI5LG4sbnVsbCxlLm1vZGUpO3JldHVybiBvLmxhbmVzPWwsby5yZXR1cm49ZSxvfX19ZnVuY3Rpb24gZmUoZSxuKXtwKEZvLGU9TXUpLHAoSW8sbiksTXU9ZXxuLmJhc2VMYW5lc31mdW5jdGlvbiBkZSgpe3AoRm8sTXUpLHAoSW8sSW8uY3VycmVudCl9ZnVuY3Rpb24gcGUoKXtNdT1Gby5jdXJyZW50LGQoSW8pLGQoRm8pfWZ1bmN0aW9uIG1lKGUpe3ZhciBuPWUuYWx0ZXJuYXRlO3AoSG8sMSZIby5jdXJyZW50KSxwKE1vLGUpLG51bGw9PT1XbyYmKG51bGw9PT1ufHxudWxsIT09SW8uY3VycmVudHx8bnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZSkmJihXbz1lKX1mdW5jdGlvbiBoZShlKXtpZigyMj09PWUudGFnKXtpZihwKEhvLEhvLmN1cnJlbnQpLHAoTW8sZSksbnVsbD09PVdvKXt2YXIgbj1lLmFsdGVybmF0ZTtudWxsIT09biYmbnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZSYmKFdvPWUpfX1lbHNlIGdlKCl9ZnVuY3Rpb24gZ2UoKXtwKEhvLEhvLmN1cnJlbnQpLHAoTW8sTW8uY3VycmVudCl9ZnVuY3Rpb24geWUoZSl7ZChNbyksV289PT1lJiYoV289bnVsbCksZChIbyl9ZnVuY3Rpb24gYmUoZSl7Zm9yKHZhciBuPWU7bnVsbCE9PW47KXtpZigxMz09PW4udGFnKXt2YXIgdD1uLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXQmJihudWxsPT09KHQ9dC5kZWh5ZHJhdGVkKXx8U2EodCl8fGthKHQpKSlyZXR1cm4gbn1lbHNlIGlmKDE5PT09bi50YWcmJnZvaWQgMCE9PW4ubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9KDEyOCZuLmZsYWdzKSlyZXR1cm4gbn1lbHNlIGlmKG51bGwhPT1uLmNoaWxkKXtuLmNoaWxkLnJldHVybj1uLG49bi5jaGlsZDtjb250aW51ZX1pZihuPT09ZSlicmVhaztmb3IoO251bGw9PT1uLnNpYmxpbmc7KXtpZihudWxsPT09bi5yZXR1cm58fG4ucmV0dXJuPT09ZSlyZXR1cm4gbnVsbDtuPW4ucmV0dXJufW4uc2libGluZy5yZXR1cm49bi5yZXR1cm4sbj1uLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdmUoKXt0aHJvdyBFcnJvcihyKDMyMSkpfWZ1bmN0aW9uIFNlKGUsbil7aWYobnVsbD09PW4pcmV0dXJuITE7Zm9yKHZhciB0PTA7dDxuLmxlbmd0aCYmdDxlLmxlbmd0aDt0KyspaWYoIUphKGVbdF0sblt0XSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24ga2UoZSxuLHQscixsLGEpe3JldHVybiBqbz1hLEFvPW4sbi5tZW1vaXplZFN0YXRlPW51bGwsbi51cGRhdGVRdWV1ZT1udWxsLG4ubGFuZXM9MCxQbC5IPW51bGw9PT1lfHxudWxsPT09ZS5tZW1vaXplZFN0YXRlP1pvOmV1LCRvPSExLGE9dChyLGwpLCRvPSExLFZvJiYoYT14ZShuLHQscixsKSksd2UoZSksYX1mdW5jdGlvbiB3ZShlKXtQbC5IPVhvO3ZhciBuPW51bGwhPT1RbyYmbnVsbCE9PVFvLm5leHQ7aWYoam89MCxPbz1Rbz1Bbz1udWxsLEJvPSExLFlvPTAsR289bnVsbCxuKXRocm93IEVycm9yKHIoMzAwKSk7bnVsbD09PWV8fGx1fHxudWxsIT09KGU9ZS5kZXBlbmRlbmNpZXMpJiZtdChlKSYmKGx1PSEwKX1mdW5jdGlvbiB4ZShlLG4sdCxsKXtBbz1lO3ZhciBhPTA7ZG97aWYoVm8mJihHbz1udWxsKSxZbz0wLFZvPSExLDI1PD1hKXRocm93IEVycm9yKHIoMzAxKSk7aWYoYSs9MSxPbz1Rbz1udWxsLG51bGwhPWUudXBkYXRlUXVldWUpe3ZhciBvPWUudXBkYXRlUXVldWU7by5sYXN0RWZmZWN0PW51bGwsby5ldmVudHM9bnVsbCxvLnN0b3Jlcz1udWxsLG51bGwhPW8ubWVtb0NhY2hlJiYoby5tZW1vQ2FjaGUuaW5kZXg9MCl9UGwuSD1udSxvPW4odCxsKX13aGlsZShWbyk7cmV0dXJuIG99ZnVuY3Rpb24gemUoKXt2YXIgZT1QbC5ILG49ZS51c2VTdGF0ZSgpWzBdO3JldHVybiBuPVwiZnVuY3Rpb25cIj09dHlwZW9mIG4udGhlbj9UZShuKTpuLGU9ZS51c2VTdGF0ZSgpWzBdLChudWxsIT09UW8/UW8ubWVtb2l6ZWRTdGF0ZTpudWxsKSE9PWUmJihBby5mbGFnc3w9MTAyNCksbn1mdW5jdGlvbiBDZSgpe3ZhciBlPTAhPT1xbztyZXR1cm4gcW89MCxlfWZ1bmN0aW9uIEVlKGUsbix0KXtuLnVwZGF0ZVF1ZXVlPWUudXBkYXRlUXVldWUsbi5mbGFncyY9LTIwNTMsZS5sYW5lcyY9fnR9ZnVuY3Rpb24gUGUoZSl7aWYoQm8pe2ZvcihlPWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZTspe3ZhciBuPWUucXVldWU7bnVsbCE9PW4mJihuLnBlbmRpbmc9bnVsbCksZT1lLm5leHR9Qm89ITF9am89MCxPbz1Rbz1Bbz1udWxsLFZvPSExLFlvPXFvPTAsR289bnVsbH1mdW5jdGlvbiBfZSgpe3ZhciBlPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O3JldHVybiBudWxsPT09T28/QW8ubWVtb2l6ZWRTdGF0ZT1Pbz1lOk9vPU9vLm5leHQ9ZSxPb31mdW5jdGlvbiBSZSgpe2lmKG51bGw9PT1Rbyl7dmFyIGU9QW8uYWx0ZXJuYXRlO2U9bnVsbCE9PWU/ZS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBlPVFvLm5leHQ7dmFyIG49bnVsbD09PU9vP0FvLm1lbW9pemVkU3RhdGU6T28ubmV4dDtpZihudWxsIT09bilPbz1uLFFvPWU7ZWxzZXtpZihudWxsPT09ZSl7aWYobnVsbD09PUFvLmFsdGVybmF0ZSl0aHJvdyBFcnJvcihyKDQ2NykpO3Rocm93IEVycm9yKHIoMzEwKSl9ZT17bWVtb2l6ZWRTdGF0ZTooUW89ZSkubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6UW8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpRby5iYXNlUXVldWUscXVldWU6UW8ucXVldWUsbmV4dDpudWxsfSxudWxsPT09T28/QW8ubWVtb2l6ZWRTdGF0ZT1Pbz1lOk9vPU9vLm5leHQ9ZX1yZXR1cm4gT299ZnVuY3Rpb24gVGUoZSl7dmFyIG49WW87cmV0dXJuIFlvKz0xLG51bGw9PT1HbyYmKEdvPVtdKSxlPWxlKEdvLGUsbiksbj1BbyxudWxsPT09KG51bGw9PT1Pbz9uLm1lbW9pemVkU3RhdGU6T28ubmV4dCkmJihuPW4uYWx0ZXJuYXRlLFBsLkg9bnVsbD09PW58fG51bGw9PT1uLm1lbW9pemVkU3RhdGU/Wm86ZXUpLGV9ZnVuY3Rpb24gTmUoZSl7aWYobnVsbCE9PWUmJlwib2JqZWN0XCI9PXR5cGVvZiBlKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnRoZW4pcmV0dXJuIFRlKGUpO2lmKGUuJCR0eXBlb2Y9PT15bClyZXR1cm4gZ3QoZSl9dGhyb3cgRXJyb3Iocig0MzgsU3RyaW5nKGUpKSl9ZnVuY3Rpb24gTGUoZSl7dmFyIG49bnVsbCx0PUFvLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT10JiYobj10Lm1lbW9DYWNoZSksbnVsbD09bil7dmFyIHI9QW8uYWx0ZXJuYXRlO251bGwhPT1yJiZudWxsIT09KHI9ci51cGRhdGVRdWV1ZSkmJm51bGwhPShyPXIubWVtb0NhY2hlKSYmKG49e2RhdGE6ci5kYXRhLm1hcCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuc2xpY2UoKX0pKSxpbmRleDowfSl9aWYobnVsbD09biYmKG49e2RhdGE6W10saW5kZXg6MH0pLG51bGw9PT10JiYodD1LbygpLEFvLnVwZGF0ZVF1ZXVlPXQpLHQubWVtb0NhY2hlPW4sdm9pZCAwPT09KHQ9bi5kYXRhW24uaW5kZXhdKSlmb3IodD1uLmRhdGFbbi5pbmRleF09QXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT16bDtyZXR1cm4gbi5pbmRleCsrLHR9ZnVuY3Rpb24gVWUoZSxuKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24oZSk6bn1mdW5jdGlvbiBEZShlKXtyZXR1cm4gSWUoUmUoKSxRbyxlKX1mdW5jdGlvbiBJZShlLG4sdCl7dmFyIGw9ZS5xdWV1ZTtpZihudWxsPT09bCl0aHJvdyBFcnJvcihyKDMxMSkpO2wubGFzdFJlbmRlcmVkUmVkdWNlcj10O3ZhciBhPWUuYmFzZVF1ZXVlLG89bC5wZW5kaW5nO2lmKG51bGwhPT1vKXtpZihudWxsIT09YSl7dmFyIHU9YS5uZXh0O2EubmV4dD1vLm5leHQsby5uZXh0PXV9bi5iYXNlUXVldWU9YT1vLGwucGVuZGluZz1udWxsfWlmKG89ZS5iYXNlU3RhdGUsbnVsbD09PWEpZS5tZW1vaXplZFN0YXRlPW87ZWxzZXt2YXIgaT11PW51bGwscz1udWxsLGM9bj1hLm5leHQsZj0hMTtkb3t2YXIgZD0tNTM2ODcwOTEzJmMubGFuZTtpZihkIT09Yy5sYW5lPyhMdSZkKT09PWQ6KGpvJmQpPT09ZCl7dmFyIHA9Yy5yZXZlcnRMYW5lO2lmKDA9PT1wKW51bGwhPT1zJiYocz1zLm5leHQ9e2xhbmU6MCxyZXZlcnRMYW5lOjAsYWN0aW9uOmMuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6Yy5oYXNFYWdlclN0YXRlLGVhZ2VyU3RhdGU6Yy5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9PT13byYmKGY9ITApO2Vsc2V7aWYoKGpvJnApPT09cCl7Yz1jLm5leHQscD09PXdvJiYoZj0hMCk7Y29udGludWV9ZD17bGFuZTowLHJldmVydExhbmU6Yy5yZXZlcnRMYW5lLGFjdGlvbjpjLmFjdGlvbixoYXNFYWdlclN0YXRlOmMuaGFzRWFnZXJTdGF0ZSxlYWdlclN0YXRlOmMuZWFnZXJTdGF0ZSxuZXh0Om51bGx9LG51bGw9PT1zPyhpPXM9ZCx1PW8pOnM9cy5uZXh0PWQsQW8ubGFuZXN8PXAsSHV8PXB9ZD1jLmFjdGlvbiwkbyYmdChvLGQpLG89Yy5oYXNFYWdlclN0YXRlP2MuZWFnZXJTdGF0ZTp0KG8sZCl9ZWxzZSBwPXtsYW5lOmQscmV2ZXJ0TGFuZTpjLnJldmVydExhbmUsYWN0aW9uOmMuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6Yy5oYXNFYWdlclN0YXRlLGVhZ2VyU3RhdGU6Yy5lYWdlclN0YXRlLG5leHQ6bnVsbH0sbnVsbD09PXM/KGk9cz1wLHU9byk6cz1zLm5leHQ9cCxBby5sYW5lc3w9ZCxIdXw9ZDtjPWMubmV4dH13aGlsZShudWxsIT09YyYmYyE9PW4pO2lmKG51bGw9PT1zP3U9bzpzLm5leHQ9aSwhSmEobyxlLm1lbW9pemVkU3RhdGUpJiYobHU9ITAsZiYmbnVsbCE9PSh0PXhvKSkpdGhyb3cgdDtlLm1lbW9pemVkU3RhdGU9byxlLmJhc2VTdGF0ZT11LGUuYmFzZVF1ZXVlPXMsbC5sYXN0UmVuZGVyZWRTdGF0ZT1vfXJldHVybiBudWxsPT09YSYmKGwubGFuZXM9MCksW2UubWVtb2l6ZWRTdGF0ZSxsLmRpc3BhdGNoXX1mdW5jdGlvbiBGZShlKXt2YXIgbj1SZSgpLHQ9bi5xdWV1ZTtpZihudWxsPT09dCl0aHJvdyBFcnJvcihyKDMxMSkpO3QubGFzdFJlbmRlcmVkUmVkdWNlcj1lO3ZhciBsPXQuZGlzcGF0Y2gsYT10LnBlbmRpbmcsbz1uLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEpe3QucGVuZGluZz1udWxsO3ZhciB1PWE9YS5uZXh0O2Rve289ZShvLHUuYWN0aW9uKSx1PXUubmV4dH13aGlsZSh1IT09YSk7SmEobyxuLm1lbW9pemVkU3RhdGUpfHwobHU9ITApLG4ubWVtb2l6ZWRTdGF0ZT1vLG51bGw9PT1uLmJhc2VRdWV1ZSYmKG4uYmFzZVN0YXRlPW8pLHQubGFzdFJlbmRlcmVkU3RhdGU9b31yZXR1cm5bbyxsXX1mdW5jdGlvbiBNZShlLG4sdCl7dmFyIGw9QW8sYT1SZSgpO3Q9bigpO3ZhciBvPSFKYSgoUW98fGEpLm1lbW9pemVkU3RhdGUsdCk7aWYobyYmKGEubWVtb2l6ZWRTdGF0ZT10LGx1PSEwKSxhPWEucXVldWUsc24oamUuYmluZChudWxsLGwsYSxlKSxbZV0pLGEuZ2V0U25hcHNob3QhPT1ufHxvfHxudWxsIT09T28mJjEmT28ubWVtb2l6ZWRTdGF0ZS50YWcpe2lmKGwuZmxhZ3N8PTIwNDgscm4oOSxIZS5iaW5kKG51bGwsbCxhLHQsbikse2Rlc3Ryb3k6dm9pZCAwfSxudWxsKSxudWxsPT09VHUpdGhyb3cgRXJyb3IocigzNDkpKTswIT0oNjAmam8pfHxXZShsLG4sdCl9cmV0dXJuIHR9ZnVuY3Rpb24gV2UoZSxuLHQpe2UuZmxhZ3N8PTE2Mzg0LGU9e2dldFNuYXBzaG90Om4sdmFsdWU6dH0sbnVsbD09PShuPUFvLnVwZGF0ZVF1ZXVlKT8obj1LbygpLEFvLnVwZGF0ZVF1ZXVlPW4sbi5zdG9yZXM9W2VdKTpudWxsPT09KHQ9bi5zdG9yZXMpP24uc3RvcmVzPVtlXTp0LnB1c2goZSl9ZnVuY3Rpb24gSGUoZSxuLHQscil7bi52YWx1ZT10LG4uZ2V0U25hcHNob3Q9cixBZShuKSYmUWUoZSl9ZnVuY3Rpb24gamUoZSxuLHQpe3JldHVybiB0KChmdW5jdGlvbigpe0FlKG4pJiZRZShlKX0pKX1mdW5jdGlvbiBBZShlKXt2YXIgbj1lLmdldFNuYXBzaG90O2U9ZS52YWx1ZTt0cnl7dmFyIHQ9bigpO3JldHVybiFKYShlLHQpfWNhdGNoKGUpe3JldHVybiEwfX1mdW5jdGlvbiBRZShlKXt2YXIgbj1EKGUsMik7bnVsbCE9PW4mJmhyKG4sMCwyKX1mdW5jdGlvbiBPZShlKXt2YXIgbj1fZSgpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUpe3ZhciB0PWU7aWYoZT10KCksJG8pe3ooITApO3RyeXt0KCl9ZmluYWxseXt6KCExKX19fXJldHVybiBuLm1lbW9pemVkU3RhdGU9bi5iYXNlU3RhdGU9ZSxuLnF1ZXVlPXtwZW5kaW5nOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6VWUsbGFzdFJlbmRlcmVkU3RhdGU6ZX0sbn1mdW5jdGlvbiBCZShlLG4sdCxyKXtyZXR1cm4gZS5iYXNlU3RhdGU9dCxJZShlLFFvLFwiZnVuY3Rpb25cIj09dHlwZW9mIHI/cjpVZSl9ZnVuY3Rpb24gVmUoZSxuLHQsbCxhKXtpZihfbihlKSl0aHJvdyBFcnJvcihyKDQ4NSkpO2lmKG51bGwhPT0oZT1uLmFjdGlvbikpe3ZhciBvPXtwYXlsb2FkOmEsYWN0aW9uOmUsbmV4dDpudWxsLGlzVHJhbnNpdGlvbjohMCxzdGF0dXM6XCJwZW5kaW5nXCIsdmFsdWU6bnVsbCxyZWFzb246bnVsbCxsaXN0ZW5lcnM6W10sdGhlbjpmdW5jdGlvbihlKXtvLmxpc3RlbmVycy5wdXNoKGUpfX07bnVsbCE9PVBsLlQ/dCghMCk6by5pc1RyYW5zaXRpb249ITEsbChvKSxudWxsPT09KHQ9bi5wZW5kaW5nKT8oby5uZXh0PW4ucGVuZGluZz1vLCRlKG4sbykpOihvLm5leHQ9dC5uZXh0LG4ucGVuZGluZz10Lm5leHQ9byl9fWZ1bmN0aW9uICRlKGUsbil7dmFyIHQ9bi5hY3Rpb24scj1uLnBheWxvYWQsbD1lLnN0YXRlO2lmKG4uaXNUcmFuc2l0aW9uKXt2YXIgYT1QbC5ULG89e307UGwuVD1vO3RyeXt2YXIgdT10KGwsciksaT1QbC5TO251bGwhPT1pJiZpKG8sdSkscWUoZSxuLHUpfWNhdGNoKHQpe0dlKGUsbix0KX1maW5hbGx5e1BsLlQ9YX19ZWxzZSB0cnl7cWUoZSxuLGE9dChsLHIpKX1jYXRjaCh0KXtHZShlLG4sdCl9fWZ1bmN0aW9uIHFlKGUsbix0KXtudWxsIT09dCYmXCJvYmplY3RcIj09dHlwZW9mIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQudGhlbj90LnRoZW4oKGZ1bmN0aW9uKHQpe1llKGUsbix0KX0pLChmdW5jdGlvbih0KXtyZXR1cm4gR2UoZSxuLHQpfSkpOlllKGUsbix0KX1mdW5jdGlvbiBZZShlLG4sdCl7bi5zdGF0dXM9XCJmdWxmaWxsZWRcIixuLnZhbHVlPXQsSmUobiksZS5zdGF0ZT10LG51bGwhPT0obj1lLnBlbmRpbmcpJiYoKHQ9bi5uZXh0KT09PW4/ZS5wZW5kaW5nPW51bGw6KHQ9dC5uZXh0LG4ubmV4dD10LCRlKGUsdCkpKX1mdW5jdGlvbiBHZShlLG4sdCl7dmFyIHI9ZS5wZW5kaW5nO2lmKGUucGVuZGluZz1udWxsLG51bGwhPT1yKXtyPXIubmV4dDtkb3tuLnN0YXR1cz1cInJlamVjdGVkXCIsbi5yZWFzb249dCxKZShuKSxuPW4ubmV4dH13aGlsZShuIT09cil9ZS5hY3Rpb249bnVsbH1mdW5jdGlvbiBKZShlKXtlPWUubGlzdGVuZXJzO2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKSgwLGVbbl0pKCl9ZnVuY3Rpb24gS2UoZSxuKXtyZXR1cm4gbn1mdW5jdGlvbiBYZShlLG4pe3ZhciB0LHIsbDsodD1fZSgpKS5tZW1vaXplZFN0YXRlPXQuYmFzZVN0YXRlPW4scj17cGVuZGluZzpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOktlLGxhc3RSZW5kZXJlZFN0YXRlOm59LHQucXVldWU9cix0PUNuLmJpbmQobnVsbCxBbyxyKSxyLmRpc3BhdGNoPXQscj1PZSghMSk7dmFyIGE9UG4uYmluZChudWxsLEFvLCExLHIucXVldWUpO3JldHVybiBsPXtzdGF0ZTpuLGRpc3BhdGNoOm51bGwsYWN0aW9uOmUscGVuZGluZzpudWxsfSwocj1fZSgpKS5xdWV1ZT1sLHQ9VmUuYmluZChudWxsLEFvLGwsYSx0KSxsLmRpc3BhdGNoPXQsci5tZW1vaXplZFN0YXRlPWUsW24sdCwhMV19ZnVuY3Rpb24gWmUoZSl7cmV0dXJuIGVuKFJlKCksUW8sZSl9ZnVuY3Rpb24gZW4oZSxuLHQpe249SWUoZSxuLEtlKVswXSxlPURlKFVlKVswXSxuPVwib2JqZWN0XCI9PXR5cGVvZiBuJiZudWxsIT09biYmXCJmdW5jdGlvblwiPT10eXBlb2Ygbi50aGVuP1RlKG4pOm47dmFyIHI9UmUoKSxsPXIucXVldWUsYT1sLmRpc3BhdGNoO3JldHVybiB0IT09ci5tZW1vaXplZFN0YXRlJiYoQW8uZmxhZ3N8PTIwNDgscm4oOSxubi5iaW5kKG51bGwsbCx0KSx7ZGVzdHJveTp2b2lkIDB9LG51bGwpKSxbbixhLGVdfWZ1bmN0aW9uIG5uKGUsbil7ZS5hY3Rpb249bn1mdW5jdGlvbiB0bihlKXt2YXIgbj1SZSgpLHQ9UW87aWYobnVsbCE9PXQpcmV0dXJuIGVuKG4sdCxlKTtSZSgpLG49bi5tZW1vaXplZFN0YXRlO3ZhciByPSh0PVJlKCkpLnF1ZXVlLmRpc3BhdGNoO3JldHVybiB0Lm1lbW9pemVkU3RhdGU9ZSxbbixyLCExXX1mdW5jdGlvbiBybihlLG4sdCxyKXtyZXR1cm4gZT17dGFnOmUsY3JlYXRlOm4saW5zdDp0LGRlcHM6cixuZXh0Om51bGx9LG51bGw9PT0obj1Bby51cGRhdGVRdWV1ZSkmJihuPUtvKCksQW8udXBkYXRlUXVldWU9biksbnVsbD09PSh0PW4ubGFzdEVmZmVjdCk/bi5sYXN0RWZmZWN0PWUubmV4dD1lOihyPXQubmV4dCx0Lm5leHQ9ZSxlLm5leHQ9cixuLmxhc3RFZmZlY3Q9ZSksZX1mdW5jdGlvbiBsbigpe3JldHVybiBSZSgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gYW4oZSxuLHQscil7dmFyIGw9X2UoKTtBby5mbGFnc3w9ZSxsLm1lbW9pemVkU3RhdGU9cm4oMXxuLHQse2Rlc3Ryb3k6dm9pZCAwfSx2b2lkIDA9PT1yP251bGw6cil9ZnVuY3Rpb24gb24oZSxuLHQscil7dmFyIGw9UmUoKTtyPXZvaWQgMD09PXI/bnVsbDpyO3ZhciBhPWwubWVtb2l6ZWRTdGF0ZS5pbnN0O251bGwhPT1RbyYmbnVsbCE9PXImJlNlKHIsUW8ubWVtb2l6ZWRTdGF0ZS5kZXBzKT9sLm1lbW9pemVkU3RhdGU9cm4obix0LGEscik6KEFvLmZsYWdzfD1lLGwubWVtb2l6ZWRTdGF0ZT1ybigxfG4sdCxhLHIpKX1mdW5jdGlvbiB1bihlLG4pe2FuKDgzOTA2NTYsOCxlLG4pfWZ1bmN0aW9uIHNuKGUsbil7b24oMjA0OCw4LGUsbil9ZnVuY3Rpb24gY24oZSxuKXtyZXR1cm4gb24oNCwyLGUsbil9ZnVuY3Rpb24gZm4oZSxuKXtyZXR1cm4gb24oNCw0LGUsbil9ZnVuY3Rpb24gZG4oZSxuKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKXtlPWUoKTt2YXIgdD1uKGUpO3JldHVybiBmdW5jdGlvbigpe1wiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dCgpOm4obnVsbCl9fWlmKG51bGwhPW4pcmV0dXJuIGU9ZSgpLG4uY3VycmVudD1lLGZ1bmN0aW9uKCl7bi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIHBuKGUsbix0KXt0PW51bGwhPXQ/dC5jb25jYXQoW2VdKTpudWxsLG9uKDQsNCxkbi5iaW5kKG51bGwsbixlKSx0KX1mdW5jdGlvbiBtbigpe31mdW5jdGlvbiBobihlLG4pe3ZhciB0PVJlKCk7bj12b2lkIDA9PT1uP251bGw6bjt2YXIgcj10Lm1lbW9pemVkU3RhdGU7cmV0dXJuIG51bGwhPT1uJiZTZShuLHJbMV0pP3JbMF06KHQubWVtb2l6ZWRTdGF0ZT1bZSxuXSxlKX1mdW5jdGlvbiBnbihlLG4pe3ZhciB0PVJlKCk7bj12b2lkIDA9PT1uP251bGw6bjt2YXIgcj10Lm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PW4mJlNlKG4sclsxXSkpcmV0dXJuIHJbMF07aWYocj1lKCksJG8pe3ooITApO3RyeXtlKCl9ZmluYWxseXt6KCExKX19cmV0dXJuIHQubWVtb2l6ZWRTdGF0ZT1bcixuXSxyfWZ1bmN0aW9uIHluKGUsbix0KXtyZXR1cm4gdm9pZCAwPT09dHx8MCE9KDEwNzM3NDE4MjQmam8pP2UubWVtb2l6ZWRTdGF0ZT1uOihlLm1lbW9pemVkU3RhdGU9dCxlPW1yKCksQW8ubGFuZXN8PWUsSHV8PWUsdCl9ZnVuY3Rpb24gYm4oZSxuLHQscil7cmV0dXJuIEphKHQsbik/dDpudWxsIT09SW8uY3VycmVudD8oZT15bihlLHQsciksSmEoZSxuKXx8KGx1PSEwKSxlKTowPT0oNDImam8pPyhsdT0hMCxlLm1lbW9pemVkU3RhdGU9dCk6KGU9bXIoKSxBby5sYW5lc3w9ZSxIdXw9ZSxuKX1mdW5jdGlvbiB2bihlLG4sdCxyLGwpe3ZhciBhPXFsKCk7JGwoMCE9PWEmJjg+YT9hOjgpO3ZhciBvLHUsaSxzPVBsLlQsYz17fTtQbC5UPWMsUG4oZSwhMSxuLHQpO3RyeXt2YXIgZj1sKCksZD1QbC5TO251bGwhPT1kJiZkKGMsZiksbnVsbCE9PWYmJlwib2JqZWN0XCI9PXR5cGVvZiBmJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBmLnRoZW4/RW4oZSxuLChvPXIsdT1bXSxpPXtzdGF0dXM6XCJwZW5kaW5nXCIsdmFsdWU6bnVsbCxyZWFzb246bnVsbCx0aGVuOmZ1bmN0aW9uKGUpe3UucHVzaChlKX19LGYudGhlbigoZnVuY3Rpb24oKXtpLnN0YXR1cz1cImZ1bGZpbGxlZFwiLGkudmFsdWU9bztmb3IodmFyIGU9MDtlPHUubGVuZ3RoO2UrKykoMCx1W2VdKShvKX0pLChmdW5jdGlvbihlKXtmb3IoaS5zdGF0dXM9XCJyZWplY3RlZFwiLGkucmVhc29uPWUsZT0wO2U8dS5sZW5ndGg7ZSsrKSgwLHVbZV0pKHZvaWQgMCl9KSksaSkscHIoKSk6RW4oZSxuLHIscHIoKSl9Y2F0Y2godCl7RW4oZSxuLHt0aGVuOmZ1bmN0aW9uKCl7fSxzdGF0dXM6XCJyZWplY3RlZFwiLHJlYXNvbjp0fSxwcigpKX1maW5hbGx5eyRsKGEpLFBsLlQ9c319ZnVuY3Rpb24gU24oKXtyZXR1cm4gZ3QocmEpfWZ1bmN0aW9uIGtuKCl7cmV0dXJuIFJlKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiB3bigpe3JldHVybiBSZSgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24geG4oZSl7Zm9yKHZhciBuPWUucmV0dXJuO251bGwhPT1uOyl7c3dpdGNoKG4udGFnKXtjYXNlIDI0OmNhc2UgMzp2YXIgdD1wcigpLHI9WShuLGU9cSh0KSx0KTtyZXR1cm4gbnVsbCE9PXImJihocihyLDAsdCksRyhyLG4sdCkpLG49e2NhY2hlOnZ0KCl9LHZvaWQoZS5wYXlsb2FkPW4pfW49bi5yZXR1cm59fWZ1bmN0aW9uIHpuKGUsbix0KXt2YXIgcj1wcigpO3Q9e2xhbmU6cixyZXZlcnRMYW5lOjAsYWN0aW9uOnQsaGFzRWFnZXJTdGF0ZTohMSxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxfbihlKT9SbihuLHQpOm51bGwhPT0odD1VKGUsbix0LHIpKSYmKGhyKHQsMCxyKSxUbih0LG4scikpfWZ1bmN0aW9uIENuKGUsbix0KXtFbihlLG4sdCxwcigpKX1mdW5jdGlvbiBFbihlLG4sdCxyKXt2YXIgbD17bGFuZTpyLHJldmVydExhbmU6MCxhY3Rpb246dCxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKF9uKGUpKVJuKG4sbCk7ZWxzZXt2YXIgYT1lLmFsdGVybmF0ZTtpZigwPT09ZS5sYW5lcyYmKG51bGw9PT1hfHwwPT09YS5sYW5lcykmJm51bGwhPT0oYT1uLmxhc3RSZW5kZXJlZFJlZHVjZXIpKXRyeXt2YXIgbz1uLmxhc3RSZW5kZXJlZFN0YXRlLHU9YShvLHQpO2lmKGwuaGFzRWFnZXJTdGF0ZT0hMCxsLmVhZ2VyU3RhdGU9dSxKYSh1LG8pKXJldHVybiBMKGUsbixsLDApLG51bGw9PT1UdSYmTigpLCExfWNhdGNoKGUpe31pZihudWxsIT09KHQ9VShlLG4sbCxyKSkpcmV0dXJuIGhyKHQsMCxyKSxUbih0LG4sciksITB9cmV0dXJuITF9ZnVuY3Rpb24gUG4oZSxuLHQsbCl7aWYobD17bGFuZToyLHJldmVydExhbmU6TygpLGFjdGlvbjpsLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sX24oZSkpe2lmKG4pdGhyb3cgRXJyb3Iocig0NzkpKX1lbHNlIG51bGwhPT0obj1VKGUsdCxsLDIpKSYmaHIobiwwLDIpfWZ1bmN0aW9uIF9uKGUpe3ZhciBuPWUuYWx0ZXJuYXRlO3JldHVybiBlPT09QW98fG51bGwhPT1uJiZuPT09QW99ZnVuY3Rpb24gUm4oZSxuKXtWbz1Cbz0hMDt2YXIgdD1lLnBlbmRpbmc7bnVsbD09PXQ/bi5uZXh0PW46KG4ubmV4dD10Lm5leHQsdC5uZXh0PW4pLGUucGVuZGluZz1ufWZ1bmN0aW9uIFRuKGUsbix0KXtpZigwIT0oNDE5NDE3NiZ0KSl7dmFyIHI9bi5sYW5lczt0fD1yJj1lLnBlbmRpbmdMYW5lcyxuLmxhbmVzPXQsdyhlLHQpfX1mdW5jdGlvbiBObihlLG4sdCxyKXt0PW51bGw9PSh0PXQocixuPWUubWVtb2l6ZWRTdGF0ZSkpP246aWwoe30sbix0KSxlLm1lbW9pemVkU3RhdGU9dCwwPT09ZS5sYW5lcyYmKGUudXBkYXRlUXVldWUuYmFzZVN0YXRlPXQpfWZ1bmN0aW9uIExuKGUsbix0LHIsbCxhLG8pe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mKGU9ZS5zdGF0ZU5vZGUpLnNob3VsZENvbXBvbmVudFVwZGF0ZT9lLnNob3VsZENvbXBvbmVudFVwZGF0ZShyLGEsbyk6IShuLnByb3RvdHlwZSYmbi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQmJm5lKHQscikmJm5lKGwsYSkpfWZ1bmN0aW9uIFVuKGUsbix0LHIpe2U9bi5zdGF0ZSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJm4uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyh0LHIpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG4uVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJm4uVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHModCxyKSxuLnN0YXRlIT09ZSYmdHUuZW5xdWV1ZVJlcGxhY2VTdGF0ZShuLG4uc3RhdGUsbnVsbCl9ZnVuY3Rpb24gRG4oZSxuKXt2YXIgdD1uO2lmKFwicmVmXCJpbiBuKWZvcih2YXIgciBpbiB0PXt9LG4pXCJyZWZcIiE9PXImJih0W3JdPW5bcl0pO2lmKGU9ZS5kZWZhdWx0UHJvcHMpZm9yKHZhciBsIGluIHQ9PT1uJiYodD1pbCh7fSx0KSksZSl2b2lkIDA9PT10W2xdJiYodFtsXT1lW2xdKTtyZXR1cm4gdH1mdW5jdGlvbiBJbihlLG4pe3RyeXsoMCxlLm9uVW5jYXVnaHRFcnJvcikobi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bi5zdGFja30pfWNhdGNoKGUpe3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dGhyb3cgZX0pKX19ZnVuY3Rpb24gRm4oZSxuLHQpe3RyeXsoMCxlLm9uQ2F1Z2h0RXJyb3IpKHQudmFsdWUse2NvbXBvbmVudFN0YWNrOnQuc3RhY2ssZXJyb3JCb3VuZGFyeToxPT09bi50YWc/bi5zdGF0ZU5vZGU6bnVsbH0pfWNhdGNoKGUpe3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dGhyb3cgZX0pKX19ZnVuY3Rpb24gTW4oZSxuLHQpe3JldHVybih0PXEodCkpLnRhZz0zLHQucGF5bG9hZD17ZWxlbWVudDpudWxsfSx0LmNhbGxiYWNrPWZ1bmN0aW9uKCl7SW4oZSxuKX0sdH1mdW5jdGlvbiBXbihlKXtyZXR1cm4oZT1xKGUpKS50YWc9MyxlfWZ1bmN0aW9uIEhuKGUsbix0LHIpe3ZhciBsPXQudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbCl7dmFyIGE9ci52YWx1ZTtlLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gbChhKX0sZS5jYWxsYmFjaz1mdW5jdGlvbigpe0ZuKG4sdCxyKX19dmFyIG89dC5zdGF0ZU5vZGU7bnVsbCE9PW8mJlwiZnVuY3Rpb25cIj09dHlwZW9mIG8uY29tcG9uZW50RGlkQ2F0Y2gmJihlLmNhbGxiYWNrPWZ1bmN0aW9uKCl7Rm4obix0LHIpLFwiZnVuY3Rpb25cIiE9dHlwZW9mIGwmJihudWxsPT09SnU/SnU9bmV3IFNldChbdGhpc10pOkp1LmFkZCh0aGlzKSk7dmFyIGU9ci5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKHIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSl9ZnVuY3Rpb24gam4oZSxuLHQscil7bi5jaGlsZD1udWxsPT09ZT9EbyhuLG51bGwsdCxyKTpVbyhuLGUuY2hpbGQsdCxyKX1mdW5jdGlvbiBBbihlLG4sdCxyLGwpe3Q9dC5yZW5kZXI7dmFyIGE9bi5yZWY7aWYoXCJyZWZcImluIHIpe3ZhciBvPXt9O2Zvcih2YXIgdSBpbiByKVwicmVmXCIhPT11JiYob1t1XT1yW3VdKX1lbHNlIG89cjtyZXR1cm4gaHQobikscj1rZShlLG4sdCxvLGEsbCksdT1DZSgpLG51bGw9PT1lfHxsdT8obi5mbGFnc3w9MSxqbihlLG4scixsKSxuLmNoaWxkKTooRWUoZSxuLGwpLGF0KGUsbixsKSl9ZnVuY3Rpb24gUW4oZSxuLHQscixsKXtpZihudWxsPT09ZSl7dmFyIGE9dC50eXBlO3JldHVyblwiZnVuY3Rpb25cIiE9dHlwZW9mIGF8fHFyKGEpfHx2b2lkIDAhPT1hLmRlZmF1bHRQcm9wc3x8bnVsbCE9PXQuY29tcGFyZT8oKGU9SnIodC50eXBlLG51bGwscixuLG4ubW9kZSxsKSkucmVmPW4ucmVmLGUucmV0dXJuPW4sbi5jaGlsZD1lKToobi50YWc9MTUsbi50eXBlPWEsT24oZSxuLGEscixsKSl9aWYoYT1lLmNoaWxkLCFvdChlLGwpKXt2YXIgbz1hLm1lbW9pemVkUHJvcHM7aWYoKHQ9bnVsbCE9PSh0PXQuY29tcGFyZSk/dDpuZSkobyxyKSYmZS5yZWY9PT1uLnJlZilyZXR1cm4gYXQoZSxuLGwpfXJldHVybiBuLmZsYWdzfD0xLChlPVlyKGEscikpLnJlZj1uLnJlZixlLnJldHVybj1uLG4uY2hpbGQ9ZX1mdW5jdGlvbiBPbihlLG4sdCxyLGwpe2lmKG51bGwhPT1lKXt2YXIgYT1lLm1lbW9pemVkUHJvcHM7aWYobmUoYSxyKSYmZS5yZWY9PT1uLnJlZil7aWYobHU9ITEsbi5wZW5kaW5nUHJvcHM9cj1hLCFvdChlLGwpKXJldHVybiBuLmxhbmVzPWUubGFuZXMsYXQoZSxuLGwpOzAhPSgxMzEwNzImZS5mbGFncykmJihsdT0hMCl9fXJldHVybiBxbihlLG4sdCxyLGwpfWZ1bmN0aW9uIEJuKGUsbix0KXt2YXIgcj1uLnBlbmRpbmdQcm9wcyxsPXIuY2hpbGRyZW4sYT0wIT0oMiZuLnN0YXRlTm9kZS5fcGVuZGluZ1Zpc2liaWxpdHkpLG89bnVsbCE9PWU/ZS5tZW1vaXplZFN0YXRlOm51bGw7aWYoJG4oZSxuKSxcImhpZGRlblwiPT09ci5tb2RlfHxhKXtpZigwIT0oMTI4Jm4uZmxhZ3MpKXtpZihyPW51bGwhPT1vP28uYmFzZUxhbmVzfHQ6dCxudWxsIT09ZSl7Zm9yKGw9bi5jaGlsZD1lLmNoaWxkLGE9MDtudWxsIT09bDspYT1hfGwubGFuZXN8bC5jaGlsZExhbmVzLGw9bC5zaWJsaW5nO24uY2hpbGRMYW5lcz1hJn5yfWVsc2Ugbi5jaGlsZExhbmVzPTAsbi5jaGlsZD1udWxsO3JldHVybiBWbihlLG4scix0KX1pZigwPT0oNTM2ODcwOTEyJnQpKXJldHVybiBuLmxhbmVzPW4uY2hpbGRMYW5lcz01MzY4NzA5MTIsVm4oZSxuLG51bGwhPT1vP28uYmFzZUxhbmVzfHQ6dCx0KTtuLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsfSxudWxsIT09ZSYmd3QoMCxudWxsIT09bz9vLmNhY2hlUG9vbDpudWxsKSxudWxsIT09bz9mZShuLG8pOmRlKCksaGUobil9ZWxzZSBudWxsIT09bz8od3QoMCxvLmNhY2hlUG9vbCksZmUobixvKSxnZSgpLG4ubWVtb2l6ZWRTdGF0ZT1udWxsKToobnVsbCE9PWUmJnd0KDAsbnVsbCksZGUoKSxnZSgpKTtyZXR1cm4gam4oZSxuLGwsdCksbi5jaGlsZH1mdW5jdGlvbiBWbihlLG4sdCxyKXt2YXIgbD1rdCgpO3JldHVybiBsPW51bGw9PT1sP251bGw6e3BhcmVudDpwdS5fY3VycmVudFZhbHVlMixwb29sOmx9LG4ubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOnQsY2FjaGVQb29sOmx9LG51bGwhPT1lJiZ3dCgwLG51bGwpLGRlKCksaGUobiksbnVsbCE9PWUmJnB0KGUsbixyLCEwKSxudWxsfWZ1bmN0aW9uICRuKGUsbil7dmFyIHQ9bi5yZWY7aWYobnVsbD09PXQpbnVsbCE9PWUmJm51bGwhPT1lLnJlZiYmKG4uZmxhZ3N8PTIwOTc2NjQpO2Vsc2V7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmXCJvYmplY3RcIiE9dHlwZW9mIHQpdGhyb3cgRXJyb3IocigyODQpKTtudWxsIT09ZSYmZS5yZWY9PT10fHwobi5mbGFnc3w9MjA5NzY2NCl9fWZ1bmN0aW9uIHFuKGUsbix0LHIsbCl7cmV0dXJuIGh0KG4pLHQ9a2UoZSxuLHQscix2b2lkIDAsbCkscj1DZSgpLG51bGw9PT1lfHxsdT8obi5mbGFnc3w9MSxqbihlLG4sdCxsKSxuLmNoaWxkKTooRWUoZSxuLGwpLGF0KGUsbixsKSl9ZnVuY3Rpb24gWW4oZSxuLHQscixsLGEpe3JldHVybiBodChuKSxuLnVwZGF0ZVF1ZXVlPW51bGwsdD14ZShuLHIsdCxsKSx3ZShlKSxyPUNlKCksbnVsbD09PWV8fGx1PyhuLmZsYWdzfD0xLGpuKGUsbix0LGEpLG4uY2hpbGQpOihFZShlLG4sYSksYXQoZSxuLGEpKX1mdW5jdGlvbiBHbihlLG4sdCxyLGwpe2lmKGh0KG4pLG51bGw9PT1uLnN0YXRlTm9kZSl7dmFyIGE9TGEsbz10LmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PXR5cGVvZiBvJiZudWxsIT09byYmKGE9Z3QobykpLGE9bmV3IHQocixhKSxuLm1lbW9pemVkU3RhdGU9bnVsbCE9PWEuc3RhdGUmJnZvaWQgMCE9PWEuc3RhdGU/YS5zdGF0ZTpudWxsLGEudXBkYXRlcj10dSxuLnN0YXRlTm9kZT1hLGEuX3JlYWN0SW50ZXJuYWxzPW4sKGE9bi5zdGF0ZU5vZGUpLnByb3BzPXIsYS5zdGF0ZT1uLm1lbW9pemVkU3RhdGUsYS5yZWZzPXt9LFYobiksbz10LmNvbnRleHRUeXBlLGEuY29udGV4dD1cIm9iamVjdFwiPT10eXBlb2YgbyYmbnVsbCE9PW8/Z3Qobyk6TGEsYS5zdGF0ZT1uLm1lbW9pemVkU3RhdGUsXCJmdW5jdGlvblwiPT10eXBlb2Yobz10LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcykmJihObihuLHQsbyxyKSxhLnN0YXRlPW4ubWVtb2l6ZWRTdGF0ZSksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT10eXBlb2YgYS5jb21wb25lbnRXaWxsTW91bnR8fChvPWEuc3RhdGUsXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb21wb25lbnRXaWxsTW91bnQmJmEuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT10eXBlb2YgYS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZhLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxvIT09YS5zdGF0ZSYmdHUuZW5xdWV1ZVJlcGxhY2VTdGF0ZShhLGEuc3RhdGUsbnVsbCksWChuLHIsYSxsKSxLKCksYS5zdGF0ZT1uLm1lbW9pemVkU3RhdGUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuY29tcG9uZW50RGlkTW91bnQmJihuLmZsYWdzfD00MTk0MzA4KSxyPSEwfWVsc2UgaWYobnVsbD09PWUpe2E9bi5zdGF0ZU5vZGU7dmFyIHU9bi5tZW1vaXplZFByb3BzLGk9RG4odCx1KTthLnByb3BzPWk7dmFyIHM9YS5jb250ZXh0LGM9dC5jb250ZXh0VHlwZTtvPUxhLFwib2JqZWN0XCI9PXR5cGVvZiBjJiZudWxsIT09YyYmKG89Z3QoYykpO3ZhciBmPXQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO2M9XCJmdW5jdGlvblwiPT10eXBlb2YgZnx8XCJmdW5jdGlvblwiPT10eXBlb2YgYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSx1PW4ucGVuZGluZ1Byb3BzIT09dSxjfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fCh1fHxzIT09bykmJlVuKG4sYSxyLG8pLHpvPSExO3ZhciBkPW4ubWVtb2l6ZWRTdGF0ZTthLnN0YXRlPWQsWChuLHIsYSxsKSxLKCkscz1uLm1lbW9pemVkU3RhdGUsdXx8ZCE9PXN8fHpvPyhcImZ1bmN0aW9uXCI9PXR5cGVvZiBmJiYoTm4obix0LGYscikscz1uLm1lbW9pemVkU3RhdGUpLChpPXpvfHxMbihuLHQsaSxyLGQscyxvKSk/KGN8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT10eXBlb2YgYS5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxNb3VudCYmYS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmEuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZE1vdW50JiYobi5mbGFnc3w9NDE5NDMwOCkpOihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZE1vdW50JiYobi5mbGFnc3w9NDE5NDMwOCksbi5tZW1vaXplZFByb3BzPXIsbi5tZW1vaXplZFN0YXRlPXMpLGEucHJvcHM9cixhLnN0YXRlPXMsYS5jb250ZXh0PW8scj1pKTooXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb21wb25lbnREaWRNb3VudCYmKG4uZmxhZ3N8PTQxOTQzMDgpLHI9ITEpfWVsc2V7YT1uLnN0YXRlTm9kZSwkKGUsbiksYz1Ebih0LG89bi5tZW1vaXplZFByb3BzKSxhLnByb3BzPWMsZj1uLnBlbmRpbmdQcm9wcyxkPWEuY29udGV4dCxzPXQuY29udGV4dFR5cGUsaT1MYSxcIm9iamVjdFwiPT10eXBlb2YgcyYmbnVsbCE9PXMmJihpPWd0KHMpKSwocz1cImZ1bmN0aW9uXCI9PXR5cGVvZih1PXQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKXx8XCJmdW5jdGlvblwiPT10eXBlb2YgYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KG8hPT1mfHxkIT09aSkmJlVuKG4sYSxyLGkpLHpvPSExLGQ9bi5tZW1vaXplZFN0YXRlLGEuc3RhdGU9ZCxYKG4scixhLGwpLEsoKTt2YXIgcD1uLm1lbW9pemVkU3RhdGU7byE9PWZ8fGQhPT1wfHx6b3x8bnVsbCE9PWUmJm51bGwhPT1lLmRlcGVuZGVuY2llcyYmbXQoZS5kZXBlbmRlbmNpZXMpPyhcImZ1bmN0aW9uXCI9PXR5cGVvZiB1JiYoTm4obix0LHUscikscD1uLm1lbW9pemVkU3RhdGUpLChjPXpvfHxMbihuLHQsYyxyLGQscCxpKXx8bnVsbCE9PWUmJm51bGwhPT1lLmRlcGVuZGVuY2llcyYmbXQoZS5kZXBlbmRlbmNpZXMpKT8oc3x8XCJmdW5jdGlvblwiIT10eXBlb2YgYS5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT10eXBlb2YgYS5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb21wb25lbnRXaWxsVXBkYXRlJiZhLmNvbXBvbmVudFdpbGxVcGRhdGUocixwLGkpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmEuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUocixwLGkpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZFVwZGF0ZSYmKG4uZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihuLmZsYWdzfD0xMDI0KSk6KFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuY29tcG9uZW50RGlkVXBkYXRlfHxvPT09ZS5tZW1vaXplZFByb3BzJiZkPT09ZS5tZW1vaXplZFN0YXRlfHwobi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT10eXBlb2YgYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8bz09PWUubWVtb2l6ZWRQcm9wcyYmZD09PWUubWVtb2l6ZWRTdGF0ZXx8KG4uZmxhZ3N8PTEwMjQpLG4ubWVtb2l6ZWRQcm9wcz1yLG4ubWVtb2l6ZWRTdGF0ZT1wKSxhLnByb3BzPXIsYS5zdGF0ZT1wLGEuY29udGV4dD1pLHI9Yyk6KFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuY29tcG9uZW50RGlkVXBkYXRlfHxvPT09ZS5tZW1vaXplZFByb3BzJiZkPT09ZS5tZW1vaXplZFN0YXRlfHwobi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT10eXBlb2YgYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8bz09PWUubWVtb2l6ZWRQcm9wcyYmZD09PWUubWVtb2l6ZWRTdGF0ZXx8KG4uZmxhZ3N8PTEwMjQpLHI9ITEpfXJldHVybiBhPXIsJG4oZSxuKSxyPTAhPSgxMjgmbi5mbGFncyksYXx8cj8oYT1uLnN0YXRlTm9kZSx0PXImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6YS5yZW5kZXIoKSxuLmZsYWdzfD0xLG51bGwhPT1lJiZyPyhuLmNoaWxkPVVvKG4sZS5jaGlsZCxudWxsLGwpLG4uY2hpbGQ9VW8obixudWxsLHQsbCkpOmpuKGUsbix0LGwpLG4ubWVtb2l6ZWRTdGF0ZT1hLnN0YXRlLGU9bi5jaGlsZCk6ZT1hdChlLG4sbCksZX1mdW5jdGlvbiBKbihlKXtyZXR1cm57YmFzZUxhbmVzOmUsY2FjaGVQb29sOnh0KCl9fWZ1bmN0aW9uIEtuKGUsbix0KXtyZXR1cm4gZT1udWxsIT09ZT9lLmNoaWxkTGFuZXMmfnQ6MCxuJiYoZXw9UXUpLGV9ZnVuY3Rpb24gWG4oZSxuLHQpe3ZhciBsLGEsbyx1LGk9bi5wZW5kaW5nUHJvcHMscz0hMSxjPTAhPSgxMjgmbi5mbGFncyk7aWYoKGw9Yyl8fChsPShudWxsPT09ZXx8bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSkmJjAhPSgyJkhvLmN1cnJlbnQpKSxsJiYocz0hMCxuLmZsYWdzJj0tMTI5KSxsPTAhPSgzMiZuLmZsYWdzKSxuLmZsYWdzJj0tMzMsbnVsbD09PWUpcmV0dXJuIGE9aS5jaGlsZHJlbixpPWkuZmFsbGJhY2sscz8oZ2UoKSxhPWV0KHttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46YX0scz1uLm1vZGUpLGk9S3IoaSxzLHQsbnVsbCksYS5yZXR1cm49bixpLnJldHVybj1uLGEuc2libGluZz1pLG4uY2hpbGQ9YSwocz1uLmNoaWxkKS5tZW1vaXplZFN0YXRlPUpuKHQpLHMuY2hpbGRMYW5lcz1LbihlLGwsdCksbi5tZW1vaXplZFN0YXRlPWF1LGkpOihtZShuKSxabihuLGEpKTtpZihudWxsIT09KG89ZS5tZW1vaXplZFN0YXRlKSYmbnVsbCE9PShhPW8uZGVoeWRyYXRlZCkpe2lmKGMpMjU2Jm4uZmxhZ3M/KG1lKG4pLG4uZmxhZ3MmPS0yNTcsbj1udChlLG4sdCkpOm51bGwhPT1uLm1lbW9pemVkU3RhdGU/KGdlKCksbi5jaGlsZD1lLmNoaWxkLG4uZmxhZ3N8PTEyOCxuPW51bGwpOihnZSgpLHM9aS5mYWxsYmFjayxhPW4ubW9kZSxpPWV0KHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmkuY2hpbGRyZW59LGEpLChzPUtyKHMsYSx0LG51bGwpKS5mbGFnc3w9MixpLnJldHVybj1uLHMucmV0dXJuPW4saS5zaWJsaW5nPXMsbi5jaGlsZD1pLFVvKG4sZS5jaGlsZCxudWxsLHQpLChpPW4uY2hpbGQpLm1lbW9pemVkU3RhdGU9Sm4odCksaS5jaGlsZExhbmVzPUtuKGUsbCx0KSxuLm1lbW9pemVkU3RhdGU9YXUsbj1zKTtlbHNlIGlmKG1lKG4pLGthKGEpKWw9d2EoYSkuZGlnZXN0LChpPUVycm9yKHIoNDE5KSkpLnN0YWNrPVwiXCIsaS5kaWdlc3Q9bCx1PXt2YWx1ZTppLHNvdXJjZTpudWxsLHN0YWNrOm51bGx9LG51bGw9PT1zbz9zbz1bdV06c28ucHVzaCh1KSxuPW50KGUsbix0KTtlbHNlIGlmKGx1fHxwdChlLG4sdCwhMSksbD0wIT0odCZlLmNoaWxkTGFuZXMpLGx1fHxsKXtpZihudWxsIT09KGw9VHUpKXtpZigwIT0oNDImKGk9dCYtdCkpKWk9MTtlbHNlIHN3aXRjaChpKXtjYXNlIDI6aT0xO2JyZWFrO2Nhc2UgODppPTQ7YnJlYWs7Y2FzZSAzMjppPTE2O2JyZWFrO2Nhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOmNhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmk9NjQ7YnJlYWs7Y2FzZSAyNjg0MzU0NTY6aT0xMzQyMTc3Mjg7YnJlYWs7ZGVmYXVsdDppPTB9aWYoMCE9PShpPTAhPShpJihsLnN1c3BlbmRlZExhbmVzfHQpKT8wOmkpJiZpIT09by5yZXRyeUxhbmUpdGhyb3cgby5yZXRyeUxhbmU9aSxEKGUsaSksaHIobCwwLGkpLHJ1fVNhKGEpfHxQcigpLG49bnQoZSxuLHQpfWVsc2UgU2EoYSk/KG4uZmxhZ3N8PTEyOCxuLmNoaWxkPWUuY2hpbGQsbj1Cci5iaW5kKG51bGwsZSkseGEoYSxuKSxuPW51bGwpOihlPW8udHJlZUNvbnRleHQsKG49Wm4obixpLmNoaWxkcmVuKSkuZmxhZ3N8PTQwOTYpO3JldHVybiBufXJldHVybiBzPyhnZSgpLHM9aS5mYWxsYmFjayxhPW4ubW9kZSxjPShvPWUuY2hpbGQpLnNpYmxpbmcsKGk9WXIobyx7bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmkuY2hpbGRyZW59KSkuc3VidHJlZUZsYWdzPTMxNDU3MjgwJm8uc3VidHJlZUZsYWdzLG51bGwhPT1jP3M9WXIoYyxzKToocz1LcihzLGEsdCxudWxsKSkuZmxhZ3N8PTIscy5yZXR1cm49bixpLnJldHVybj1uLGkuc2libGluZz1zLG4uY2hpbGQ9aSxpPXMscz1uLmNoaWxkLG51bGw9PT0oYT1lLmNoaWxkLm1lbW9pemVkU3RhdGUpP2E9Sm4odCk6KG51bGwhPT0obz1hLmNhY2hlUG9vbCk/KGM9cHUuX2N1cnJlbnRWYWx1ZTIsbz1vLnBhcmVudCE9PWM/e3BhcmVudDpjLHBvb2w6Y306byk6bz14dCgpLGE9e2Jhc2VMYW5lczphLmJhc2VMYW5lc3x0LGNhY2hlUG9vbDpvfSkscy5tZW1vaXplZFN0YXRlPWEscy5jaGlsZExhbmVzPUtuKGUsbCx0KSxuLm1lbW9pemVkU3RhdGU9YXUsaSk6KG1lKG4pLGU9KHQ9ZS5jaGlsZCkuc2libGluZywodD1Zcih0LHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmkuY2hpbGRyZW59KSkucmV0dXJuPW4sdC5zaWJsaW5nPW51bGwsbnVsbCE9PWUmJihudWxsPT09KGw9bi5kZWxldGlvbnMpPyhuLmRlbGV0aW9ucz1bZV0sbi5mbGFnc3w9MTYpOmwucHVzaChlKSksbi5jaGlsZD10LG4ubWVtb2l6ZWRTdGF0ZT1udWxsLHQpfWZ1bmN0aW9uIFpuKGUsbil7cmV0dXJuKG49ZXQoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46bn0sZS5tb2RlKSkucmV0dXJuPWUsZS5jaGlsZD1ufWZ1bmN0aW9uIGV0KGUsbil7cmV0dXJuIFhyKGUsbiwwLG51bGwpfWZ1bmN0aW9uIG50KGUsbix0KXtyZXR1cm4gVW8obixlLmNoaWxkLG51bGwsdCksKGU9Wm4obixuLnBlbmRpbmdQcm9wcy5jaGlsZHJlbikpLmZsYWdzfD0yLG4ubWVtb2l6ZWRTdGF0ZT1udWxsLGV9ZnVuY3Rpb24gdHQoZSxuLHQpe2UubGFuZXN8PW47dmFyIHI9ZS5hbHRlcm5hdGU7bnVsbCE9PXImJihyLmxhbmVzfD1uKSxmdChlLnJldHVybixuLHQpfWZ1bmN0aW9uIHJ0KGUsbix0LHIsbCl7dmFyIGE9ZS5tZW1vaXplZFN0YXRlO251bGw9PT1hP2UubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6bixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OnIsdGFpbDp0LHRhaWxNb2RlOmx9OihhLmlzQmFja3dhcmRzPW4sYS5yZW5kZXJpbmc9bnVsbCxhLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGEubGFzdD1yLGEudGFpbD10LGEudGFpbE1vZGU9bCl9ZnVuY3Rpb24gbHQoZSxuLHQpe3ZhciByPW4ucGVuZGluZ1Byb3BzLGw9ci5yZXZlYWxPcmRlcixhPXIudGFpbDtpZihqbihlLG4sci5jaGlsZHJlbix0KSwwIT0oMiYocj1Iby5jdXJyZW50KSkpcj0xJnJ8MixuLmZsYWdzfD0xMjg7ZWxzZXtpZihudWxsIT09ZSYmMCE9KDEyOCZlLmZsYWdzKSllOmZvcihlPW4uY2hpbGQ7bnVsbCE9PWU7KXtpZigxMz09PWUudGFnKW51bGwhPT1lLm1lbW9pemVkU3RhdGUmJnR0KGUsdCxuKTtlbHNlIGlmKDE5PT09ZS50YWcpdHQoZSx0LG4pO2Vsc2UgaWYobnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWUsZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1uKWJyZWFrIGU7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PW4pYnJlYWsgZTtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm4sZT1lLnNpYmxpbmd9ciY9MX1zd2l0Y2gocChIbyxyKSxsKXtjYXNlXCJmb3J3YXJkc1wiOmZvcih0PW4uY2hpbGQsbD1udWxsO251bGwhPT10OyludWxsIT09KGU9dC5hbHRlcm5hdGUpJiZudWxsPT09YmUoZSkmJihsPXQpLHQ9dC5zaWJsaW5nO251bGw9PT0odD1sKT8obD1uLmNoaWxkLG4uY2hpbGQ9bnVsbCk6KGw9dC5zaWJsaW5nLHQuc2libGluZz1udWxsKSxydChuLCExLGwsdCxhKTticmVhaztjYXNlXCJiYWNrd2FyZHNcIjpmb3IodD1udWxsLGw9bi5jaGlsZCxuLmNoaWxkPW51bGw7bnVsbCE9PWw7KXtpZihudWxsIT09KGU9bC5hbHRlcm5hdGUpJiZudWxsPT09YmUoZSkpe24uY2hpbGQ9bDticmVha31lPWwuc2libGluZyxsLnNpYmxpbmc9dCx0PWwsbD1lfXJ0KG4sITAsdCxudWxsLGEpO2JyZWFrO2Nhc2VcInRvZ2V0aGVyXCI6cnQobiwhMSxudWxsLG51bGwsdm9pZCAwKTticmVhaztkZWZhdWx0Om4ubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBuLmNoaWxkfWZ1bmN0aW9uIGF0KGUsbix0KXtpZihudWxsIT09ZSYmKG4uZGVwZW5kZW5jaWVzPWUuZGVwZW5kZW5jaWVzKSxIdXw9bi5sYW5lcywwPT0odCZuLmNoaWxkTGFuZXMpKXtpZihudWxsPT09ZSlyZXR1cm4gbnVsbDtpZihwdChlLG4sdCwhMSksMD09KHQmbi5jaGlsZExhbmVzKSlyZXR1cm4gbnVsbH1pZihudWxsIT09ZSYmbi5jaGlsZCE9PWUuY2hpbGQpdGhyb3cgRXJyb3IocigxNTMpKTtpZihudWxsIT09bi5jaGlsZCl7Zm9yKHQ9WXIoZT1uLmNoaWxkLGUucGVuZGluZ1Byb3BzKSxuLmNoaWxkPXQsdC5yZXR1cm49bjtudWxsIT09ZS5zaWJsaW5nOyllPWUuc2libGluZywodD10LnNpYmxpbmc9WXIoZSxlLnBlbmRpbmdQcm9wcykpLnJldHVybj1uO3Quc2libGluZz1udWxsfXJldHVybiBuLmNoaWxkfWZ1bmN0aW9uIG90KGUsbil7cmV0dXJuIDAhPShlLmxhbmVzJm4pfHwhKG51bGw9PT0oZT1lLmRlcGVuZGVuY2llcyl8fCFtdChlKSl9ZnVuY3Rpb24gdXQoZSxuLHQpe2lmKG51bGwhPT1lKWlmKGUubWVtb2l6ZWRQcm9wcyE9PW4ucGVuZGluZ1Byb3BzKWx1PSEwO2Vsc2V7aWYoIW90KGUsdCkmJjA9PSgxMjgmbi5mbGFncykpcmV0dXJuIGx1PSExLGZ1bmN0aW9uKGUsbix0KXtzd2l0Y2gobi50YWcpe2Nhc2UgMzpQKG4sbi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksc3QoMCxwdSxlLm1lbW9pemVkU3RhdGUuY2FjaGUpO2JyZWFrO2Nhc2UgMjc6Y2FzZSA1OlIobik7YnJlYWs7Y2FzZSA0OlAobixuLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnN0KDAsbi50eXBlLG4ubWVtb2l6ZWRQcm9wcy52YWx1ZSk7YnJlYWs7Y2FzZSAxMzp2YXIgcj1uLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXIpcmV0dXJuIG51bGwhPT1yLmRlaHlkcmF0ZWQ/KG1lKG4pLG4uZmxhZ3N8PTEyOCxudWxsKTowIT0odCZuLmNoaWxkLmNoaWxkTGFuZXMpP1huKGUsbix0KToobWUobiksbnVsbCE9PShlPWF0KGUsbix0KSk/ZS5zaWJsaW5nOm51bGwpO21lKG4pO2JyZWFrO2Nhc2UgMTk6dmFyIGw9MCE9KDEyOCZlLmZsYWdzKTtpZigocj0wIT0odCZuLmNoaWxkTGFuZXMpKXx8KHB0KGUsbix0LCExKSxyPTAhPSh0Jm4uY2hpbGRMYW5lcykpLGwpe2lmKHIpcmV0dXJuIGx0KGUsbix0KTtuLmZsYWdzfD0xMjh9aWYobnVsbCE9PShsPW4ubWVtb2l6ZWRTdGF0ZSkmJihsLnJlbmRlcmluZz1udWxsLGwudGFpbD1udWxsLGwubGFzdEVmZmVjdD1udWxsKSxwKEhvLEhvLmN1cnJlbnQpLHIpYnJlYWs7cmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBuLmxhbmVzPTAsQm4oZSxuLHQpO2Nhc2UgMjQ6c3QoMCxwdSxlLm1lbW9pemVkU3RhdGUuY2FjaGUpfXJldHVybiBhdChlLG4sdCl9KGUsbix0KTtsdT0wIT0oMTMxMDcyJmUuZmxhZ3MpfWVsc2UgbHU9ITE7c3dpdGNoKG4ubGFuZXM9MCxuLnRhZyl7Y2FzZSAxNjplOntlPW4ucGVuZGluZ1Byb3BzO3ZhciBsPW4uZWxlbWVudFR5cGUsbz1sLl9pbml0O2lmKGw9byhsLl9wYXlsb2FkKSxuLnR5cGU9bCxcImZ1bmN0aW9uXCIhPXR5cGVvZiBsKXtpZihudWxsIT1sKXtpZigobz1sLiQkdHlwZW9mKT09PWJsKXtuLnRhZz0xMSxuPUFuKG51bGwsbixsLGUsdCk7YnJlYWsgZX1pZihvPT09a2wpe24udGFnPTE0LG49UW4obnVsbCxuLGwsZSx0KTticmVhayBlfX10aHJvdyBuPWEobCl8fGwsRXJyb3IocigzMDYsbixcIlwiKSl9cXIobCk/KGU9RG4obCxlKSxuLnRhZz0xLG49R24obnVsbCxuLGwsZSx0KSk6KG4udGFnPTAsbj1xbihudWxsLG4sbCxlLHQpKX1yZXR1cm4gbjtjYXNlIDA6cmV0dXJuIHFuKGUsbixuLnR5cGUsbi5wZW5kaW5nUHJvcHMsdCk7Y2FzZSAxOnJldHVybiBHbihlLG4sbD1uLnR5cGUsbz1EbihsLG4ucGVuZGluZ1Byb3BzKSx0KTtjYXNlIDM6aWYoUChuLG4uc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLG51bGw9PT1lKXRocm93IEVycm9yKHIoMzg3KSk7dmFyIHU9bi5wZW5kaW5nUHJvcHM7bD0obz1uLm1lbW9pemVkU3RhdGUpLmVsZW1lbnQsJChlLG4pLFgobix1LG51bGwsdCk7dmFyIGk9bi5tZW1vaXplZFN0YXRlO3JldHVybiB1PWkuY2FjaGUsc3QoMCxwdSx1KSx1IT09by5jYWNoZSYmZHQobixbcHVdLHQsITApLEsoKSwodT1pLmVsZW1lbnQpIT09bD8oam4oZSxuLHUsdCksbj1uLmNoaWxkKTpuPWF0KGUsbix0KSxuO2Nhc2UgMjY6Y2FzZSAyNzpjYXNlIDU6cmV0dXJuIFIobiksbz1uLnR5cGUsdT1uLnBlbmRpbmdQcm9wcyxpPW51bGwhPT1lP2UubWVtb2l6ZWRQcm9wczpudWxsLGw9dS5jaGlsZHJlbixXbChvLHUpP2w9bnVsbDpudWxsIT09aSYmV2wobyxpKSYmKG4uZmxhZ3N8PTMyKSxudWxsIT09bi5tZW1vaXplZFN0YXRlJiYobz1rZShlLG4semUsbnVsbCxudWxsLHQpLHJhLl9jdXJyZW50VmFsdWUyPW8pLCRuKGUsbiksam4oZSxuLGwsdCksbi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw7Y2FzZSAxMzpyZXR1cm4gWG4oZSxuLHQpO2Nhc2UgNDpyZXR1cm4gUChuLG4uc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGw9bi5wZW5kaW5nUHJvcHMsbnVsbD09PWU/bi5jaGlsZD1VbyhuLG51bGwsbCx0KTpqbihlLG4sbCx0KSxuLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIEFuKGUsbixuLnR5cGUsbi5wZW5kaW5nUHJvcHMsdCk7Y2FzZSA3OnJldHVybiBqbihlLG4sbi5wZW5kaW5nUHJvcHMsdCksbi5jaGlsZDtjYXNlIDg6Y2FzZSAxMjpyZXR1cm4gam4oZSxuLG4ucGVuZGluZ1Byb3BzLmNoaWxkcmVuLHQpLG4uY2hpbGQ7Y2FzZSAxMDpyZXR1cm4gbD1uLnBlbmRpbmdQcm9wcyxzdCgwLG4udHlwZSxsLnZhbHVlKSxqbihlLG4sbC5jaGlsZHJlbix0KSxuLmNoaWxkO2Nhc2UgOTpyZXR1cm4gbz1uLnR5cGUuX2NvbnRleHQsbD1uLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixodChuKSxsPWwobz1ndChvKSksbi5mbGFnc3w9MSxqbihlLG4sbCx0KSxuLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIFFuKGUsbixuLnR5cGUsbi5wZW5kaW5nUHJvcHMsdCk7Y2FzZSAxNTpyZXR1cm4gT24oZSxuLG4udHlwZSxuLnBlbmRpbmdQcm9wcyx0KTtjYXNlIDE5OnJldHVybiBsdChlLG4sdCk7Y2FzZSAyMjpyZXR1cm4gQm4oZSxuLHQpO2Nhc2UgMjQ6cmV0dXJuIGh0KG4pLGw9Z3QocHUpLG51bGw9PT1lPyhudWxsPT09KG89a3QoKSkmJihvPVR1LHU9dnQoKSxvLnBvb2xlZENhY2hlPXUsdS5yZWZDb3VudCsrLG51bGwhPT11JiYoby5wb29sZWRDYWNoZUxhbmVzfD10KSxvPXUpLG4ubWVtb2l6ZWRTdGF0ZT17cGFyZW50OmwsY2FjaGU6b30sVihuKSxzdCgwLHB1LG8pKTooMCE9KGUubGFuZXMmdCkmJigkKGUsbiksWChuLG51bGwsbnVsbCx0KSxLKCkpLG89ZS5tZW1vaXplZFN0YXRlLHU9bi5tZW1vaXplZFN0YXRlLG8ucGFyZW50IT09bD8obz17cGFyZW50OmwsY2FjaGU6bH0sbi5tZW1vaXplZFN0YXRlPW8sMD09PW4ubGFuZXMmJihuLm1lbW9pemVkU3RhdGU9bi51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9byksc3QoMCxwdSxsKSk6KGw9dS5jYWNoZSxzdCgwLHB1LGwpLGwhPT1vLmNhY2hlJiZkdChuLFtwdV0sdCwhMCkpKSxqbihlLG4sbi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sdCksbi5jaGlsZDtjYXNlIDI5OnRocm93IG4ucGVuZGluZ1Byb3BzfXRocm93IEVycm9yKHIoMTU2LG4udGFnKSl9ZnVuY3Rpb24gaXQoKXtzdT1pdT11dT1udWxsfWZ1bmN0aW9uIHN0KGUsbix0KXtwKG91LG4uX2N1cnJlbnRWYWx1ZTIpLG4uX2N1cnJlbnRWYWx1ZTI9dH1mdW5jdGlvbiBjdChlKXt2YXIgbj1vdS5jdXJyZW50O2UuX2N1cnJlbnRWYWx1ZTI9bixkKG91KX1mdW5jdGlvbiBmdChlLG4sdCl7Zm9yKDtudWxsIT09ZTspe3ZhciByPWUuYWx0ZXJuYXRlO2lmKChlLmNoaWxkTGFuZXMmbikhPT1uPyhlLmNoaWxkTGFuZXN8PW4sbnVsbCE9PXImJihyLmNoaWxkTGFuZXN8PW4pKTpudWxsIT09ciYmKHIuY2hpbGRMYW5lcyZuKSE9PW4mJihyLmNoaWxkTGFuZXN8PW4pLGU9PT10KWJyZWFrO2U9ZS5yZXR1cm59fWZ1bmN0aW9uIGR0KGUsbix0LGwpe3ZhciBhPWUuY2hpbGQ7Zm9yKG51bGwhPT1hJiYoYS5yZXR1cm49ZSk7bnVsbCE9PWE7KXt2YXIgbz1hLmRlcGVuZGVuY2llcztpZihudWxsIT09byl7dmFyIHU9YS5jaGlsZDtvPW8uZmlyc3RDb250ZXh0O2U6Zm9yKDtudWxsIT09bzspe3ZhciBpPW87bz1hO2Zvcih2YXIgcz0wO3M8bi5sZW5ndGg7cysrKWlmKGkuY29udGV4dD09PW5bc10pe28ubGFuZXN8PXQsbnVsbCE9PShpPW8uYWx0ZXJuYXRlKSYmKGkubGFuZXN8PXQpLGZ0KG8ucmV0dXJuLHQsZSksbHx8KHU9bnVsbCk7YnJlYWsgZX1vPWkubmV4dH19ZWxzZSBpZigxOD09PWEudGFnKXtpZihudWxsPT09KHU9YS5yZXR1cm4pKXRocm93IEVycm9yKHIoMzQxKSk7dS5sYW5lc3w9dCxudWxsIT09KG89dS5hbHRlcm5hdGUpJiYoby5sYW5lc3w9dCksZnQodSx0LGUpLHU9bnVsbH1lbHNlIHU9YS5jaGlsZDtpZihudWxsIT09dSl1LnJldHVybj1hO2Vsc2UgZm9yKHU9YTtudWxsIT09dTspe2lmKHU9PT1lKXt1PW51bGw7YnJlYWt9aWYobnVsbCE9PShhPXUuc2libGluZykpe2EucmV0dXJuPXUucmV0dXJuLHU9YTticmVha311PXUucmV0dXJufWE9dX19ZnVuY3Rpb24gcHQoZSxuLHQsbCl7ZT1udWxsO2Zvcih2YXIgYT1uLG89ITE7bnVsbCE9PWE7KXtpZighbylpZigwIT0oNTI0Mjg4JmEuZmxhZ3MpKW89ITA7ZWxzZSBpZigwIT0oMjYyMTQ0JmEuZmxhZ3MpKWJyZWFrO2lmKDEwPT09YS50YWcpe3ZhciB1PWEuYWx0ZXJuYXRlO2lmKG51bGw9PT11KXRocm93IEVycm9yKHIoMzg3KSk7aWYobnVsbCE9PSh1PXUubWVtb2l6ZWRQcm9wcykpe3ZhciBpPWEudHlwZTtKYShhLnBlbmRpbmdQcm9wcy52YWx1ZSx1LnZhbHVlKXx8KG51bGwhPT1lP2UucHVzaChpKTplPVtpXSl9fWVsc2UgaWYoYT09PXVvLmN1cnJlbnQpe2lmKG51bGw9PT0odT1hLmFsdGVybmF0ZSkpdGhyb3cgRXJyb3IocigzODcpKTt1Lm1lbW9pemVkU3RhdGUubWVtb2l6ZWRTdGF0ZSE9PWEubWVtb2l6ZWRTdGF0ZS5tZW1vaXplZFN0YXRlJiYobnVsbCE9PWU/ZS5wdXNoKHJhKTplPVtyYV0pfWE9YS5yZXR1cm59bnVsbCE9PWUmJmR0KG4sZSx0LGwpLG4uZmxhZ3N8PTI2MjE0NH1mdW5jdGlvbiBtdChlKXtmb3IoZT1lLmZpcnN0Q29udGV4dDtudWxsIT09ZTspe3ZhciBuPWUuY29udGV4dDtpZighSmEobi5fY3VycmVudFZhbHVlMixlLm1lbW9pemVkVmFsdWUpKXJldHVybiEwO2U9ZS5uZXh0fXJldHVybiExfWZ1bmN0aW9uIGh0KGUpe3V1PWUsc3U9aXU9bnVsbCxudWxsIT09KGU9ZS5kZXBlbmRlbmNpZXMpJiYoZS5maXJzdENvbnRleHQ9bnVsbCl9ZnVuY3Rpb24gZ3QoZSl7cmV0dXJuIGJ0KHV1LGUpfWZ1bmN0aW9uIHl0KGUsbil7cmV0dXJuIG51bGw9PT11dSYmaHQoZSksYnQoZSxuKX1mdW5jdGlvbiBidChlLG4pe3ZhciB0PW4uX2N1cnJlbnRWYWx1ZTI7aWYoc3UhPT1uKWlmKG49e2NvbnRleHQ6bixtZW1vaXplZFZhbHVlOnQsbmV4dDpudWxsfSxudWxsPT09aXUpe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHIoMzA4KSk7aXU9bixlLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6bn0sZS5mbGFnc3w9NTI0Mjg4fWVsc2UgaXU9aXUubmV4dD1uO3JldHVybiB0fWZ1bmN0aW9uIHZ0KCl7cmV0dXJue2NvbnRyb2xsZXI6bmV3IGN1LGRhdGE6bmV3IE1hcCxyZWZDb3VudDowfX1mdW5jdGlvbiBTdChlKXtlLnJlZkNvdW50LS0sMD09PWUucmVmQ291bnQmJmZ1KGR1LChmdW5jdGlvbigpe2UuY29udHJvbGxlci5hYm9ydCgpfSkpfWZ1bmN0aW9uIGt0KCl7dmFyIGU9aHUuY3VycmVudDtyZXR1cm4gbnVsbCE9PWU/ZTpUdS5wb29sZWRDYWNoZX1mdW5jdGlvbiB3dChlLG4pe3AoaHUsbnVsbD09PW4/aHUuY3VycmVudDpuLnBvb2wpfWZ1bmN0aW9uIHh0KCl7dmFyIGU9a3QoKTtyZXR1cm4gbnVsbD09PWU/bnVsbDp7cGFyZW50OnB1Ll9jdXJyZW50VmFsdWUyLHBvb2w6ZX19ZnVuY3Rpb24genQoZSl7ZS5mbGFnc3w9NH1mdW5jdGlvbiBDdChlLG4pe251bGwhPT1uJiYoZS5mbGFnc3w9NCksMTYzODQmZS5mbGFncyYmKG49MjIhPT1lLnRhZz9iKCk6NTM2ODcwOTEyLGUubGFuZXN8PW4pfWZ1bmN0aW9uIEV0KGUsbil7c3dpdGNoKGUudGFpbE1vZGUpe2Nhc2VcImhpZGRlblwiOm49ZS50YWlsO2Zvcih2YXIgdD1udWxsO251bGwhPT1uOyludWxsIT09bi5hbHRlcm5hdGUmJih0PW4pLG49bi5zaWJsaW5nO251bGw9PT10P2UudGFpbD1udWxsOnQuc2libGluZz1udWxsO2JyZWFrO2Nhc2VcImNvbGxhcHNlZFwiOnQ9ZS50YWlsO2Zvcih2YXIgcj1udWxsO251bGwhPT10OyludWxsIT09dC5hbHRlcm5hdGUmJihyPXQpLHQ9dC5zaWJsaW5nO251bGw9PT1yP258fG51bGw9PT1lLnRhaWw/ZS50YWlsPW51bGw6ZS50YWlsLnNpYmxpbmc9bnVsbDpyLnNpYmxpbmc9bnVsbH19ZnVuY3Rpb24gUHQoZSl7dmFyIG49bnVsbCE9PWUuYWx0ZXJuYXRlJiZlLmFsdGVybmF0ZS5jaGlsZD09PWUuY2hpbGQsdD0wLHI9MDtpZihuKWZvcih2YXIgbD1lLmNoaWxkO251bGwhPT1sOyl0fD1sLmxhbmVzfGwuY2hpbGRMYW5lcyxyfD0zMTQ1NzI4MCZsLnN1YnRyZWVGbGFncyxyfD0zMTQ1NzI4MCZsLmZsYWdzLGwucmV0dXJuPWUsbD1sLnNpYmxpbmc7ZWxzZSBmb3IobD1lLmNoaWxkO251bGwhPT1sOyl0fD1sLmxhbmVzfGwuY2hpbGRMYW5lcyxyfD1sLnN1YnRyZWVGbGFncyxyfD1sLmZsYWdzLGwucmV0dXJuPWUsbD1sLnNpYmxpbmc7cmV0dXJuIGUuc3VidHJlZUZsYWdzfD1yLGUuY2hpbGRMYW5lcz10LG59ZnVuY3Rpb24gX3QoZSxuLHQpe3ZhciBsPW4ucGVuZGluZ1Byb3BzO3N3aXRjaChFKG4pLG4udGFnKXtjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OmNhc2UgMTpyZXR1cm4gUHQobiksbnVsbDtjYXNlIDM6cmV0dXJuIHQ9bi5zdGF0ZU5vZGUsbD1udWxsLG51bGwhPT1lJiYobD1lLm1lbW9pemVkU3RhdGUuY2FjaGUpLG4ubWVtb2l6ZWRTdGF0ZS5jYWNoZSE9PWwmJihuLmZsYWdzfD0yMDQ4KSxjdChwdSksXygpLHQucGVuZGluZ0NvbnRleHQmJih0LmNvbnRleHQ9dC5wZW5kaW5nQ29udGV4dCx0LnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1lJiZudWxsIT09ZS5jaGlsZHx8bnVsbD09PWV8fGUubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJjA9PSgyNTYmbi5mbGFncyl8fChuLmZsYWdzfD0xMDI0LG51bGwhPT1zbyYmKHlyKHNvKSxzbz1udWxsKSksUHQobiksbnVsbDtjYXNlIDI2OnZhciBhO2Nhc2UgMjc6Y2FzZSA1OmlmKFQobiksdD1uLnR5cGUsbnVsbCE9PWUmJm51bGwhPW4uc3RhdGVOb2RlKSFmdW5jdGlvbihlLG4sdCxyKXtlLm1lbW9pemVkUHJvcHMhPT1yJiZ6dChuKX0oZSxuLDAsbCk7ZWxzZXtpZighbCl7aWYobnVsbD09PW4uc3RhdGVOb2RlKXRocm93IEVycm9yKHIoMTY2KSk7cmV0dXJuIFB0KG4pLG51bGx9ZT1sby5jdXJyZW50LGZ1bmN0aW9uKGUsbix0LHIpe2Zvcih0PW4uY2hpbGQ7bnVsbCE9PXQ7KXtpZig1PT09dC50YWd8fDY9PT10LnRhZylGbChlLHQuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT10LnRhZyYmIVJhJiZudWxsIT09dC5jaGlsZCl7dC5jaGlsZC5yZXR1cm49dCx0PXQuY2hpbGQ7Y29udGludWV9aWYodD09PW4pYnJlYWs7Zm9yKDtudWxsPT09dC5zaWJsaW5nOyl7aWYobnVsbD09PXQucmV0dXJufHx0LnJldHVybj09PW4pcmV0dXJuO3Q9dC5yZXR1cm59dC5zaWJsaW5nLnJldHVybj10LnJldHVybix0PXQuc2libGluZ319KGE9SWwodCxsLG9vLmN1cnJlbnQsZSxuKSxuLCExKSxuLnN0YXRlTm9kZT1hLE1sKGEsdCxsLGUpJiZ6dChuKX1yZXR1cm4gUHQobiksZnVuY3Rpb24oZSxuLHQpe2lmKEtsKG4sdCkpe2lmKGUuZmxhZ3N8PTE2Nzc3MjE2LCFYbChuLHQpKXtpZighenIoKSl0aHJvdyBUbz1SbyxfbztlLmZsYWdzfD04MTkyfX1lbHNlIGUuZmxhZ3MmPS0xNjc3NzIxN30obixuLnR5cGUsbi5wZW5kaW5nUHJvcHMpLG51bGw7Y2FzZSA2OmlmKGUmJm51bGwhPW4uc3RhdGVOb2RlKSh0PWUubWVtb2l6ZWRQcm9wcykhPT1sJiZ6dChuKTtlbHNle2lmKFwic3RyaW5nXCIhPXR5cGVvZiBsJiZudWxsPT09bi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocigxNjYpKTtlPW9vLmN1cnJlbnQsdD1sby5jdXJyZW50LG4uc3RhdGVOb2RlPUhsKGwsZSx0LG4pfXJldHVybiBQdChuKSxudWxsO2Nhc2UgMTM6aWYobD1uLm1lbW9pemVkU3RhdGUsbnVsbD09PWV8fG51bGwhPT1lLm1lbW9pemVkU3RhdGUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7aWYoYT0hMSxudWxsIT09bCYmbnVsbCE9PWwuZGVoeWRyYXRlZCl7aWYobnVsbD09PWUpe2lmKCFhKXRocm93IEVycm9yKHIoMzE4KSk7dGhyb3cgRXJyb3IocigzNDQpKX0wPT0oMTI4Jm4uZmxhZ3MpJiYobi5tZW1vaXplZFN0YXRlPW51bGwpLG4uZmxhZ3N8PTQsUHQobiksYT0hMX1lbHNlIG51bGwhPT1zbyYmKHlyKHNvKSxzbz1udWxsKSxhPSEwO2lmKCFhKXJldHVybiAyNTYmbi5mbGFncz8oeWUobiksbik6KHllKG4pLG51bGwpfWlmKHllKG4pLDAhPSgxMjgmbi5mbGFncykpcmV0dXJuIG4ubGFuZXM9dCxuO2lmKHQ9bnVsbCE9PWwsZT1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSx0KXthPW51bGwsbnVsbCE9PShsPW4uY2hpbGQpLmFsdGVybmF0ZSYmbnVsbCE9PWwuYWx0ZXJuYXRlLm1lbW9pemVkU3RhdGUmJm51bGwhPT1sLmFsdGVybmF0ZS5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbCYmKGE9bC5hbHRlcm5hdGUubWVtb2l6ZWRTdGF0ZS5jYWNoZVBvb2wucG9vbCk7dmFyIG89bnVsbDtudWxsIT09bC5tZW1vaXplZFN0YXRlJiZudWxsIT09bC5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbCYmKG89bC5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbC5wb29sKSxvIT09YSYmKGwuZmxhZ3N8PTIwNDgpfXJldHVybiB0IT09ZSYmdCYmKG4uY2hpbGQuZmxhZ3N8PTgxOTIpLEN0KG4sbi51cGRhdGVRdWV1ZSksUHQobiksbnVsbDtjYXNlIDQ6cmV0dXJuIF8oKSxudWxsPT09ZSYmVmwobi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksUHQobiksbnVsbDtjYXNlIDEwOnJldHVybiBjdChuLnR5cGUpLFB0KG4pLG51bGw7Y2FzZSAxOTppZihkKEhvKSxudWxsPT09KGE9bi5tZW1vaXplZFN0YXRlKSlyZXR1cm4gUHQobiksbnVsbDtpZihsPTAhPSgxMjgmbi5mbGFncyksbnVsbD09PShvPWEucmVuZGVyaW5nKSlpZihsKUV0KGEsITEpO2Vsc2V7aWYoMCE9PVd1fHxudWxsIT09ZSYmMCE9KDEyOCZlLmZsYWdzKSlmb3IoZT1uLmNoaWxkO251bGwhPT1lOyl7aWYobnVsbCE9PShvPWJlKGUpKSl7Zm9yKG4uZmxhZ3N8PTEyOCxFdChhLCExKSxlPW8udXBkYXRlUXVldWUsbi51cGRhdGVRdWV1ZT1lLEN0KG4sZSksbi5zdWJ0cmVlRmxhZ3M9MCxlPXQsdD1uLmNoaWxkO251bGwhPT10OylHcih0LGUpLHQ9dC5zaWJsaW5nO3JldHVybiBwKEhvLDEmSG8uY3VycmVudHwyKSxuLmNoaWxkfWU9ZS5zaWJsaW5nfW51bGwhPT1hLnRhaWwmJlFhKCk+WXUmJihuLmZsYWdzfD0xMjgsbD0hMCxFdChhLCExKSxuLmxhbmVzPTQxOTQzMDQpfWVsc2V7aWYoIWwpaWYobnVsbCE9PShlPWJlKG8pKSl7aWYobi5mbGFnc3w9MTI4LGw9ITAsZT1lLnVwZGF0ZVF1ZXVlLG4udXBkYXRlUXVldWU9ZSxDdChuLGUpLEV0KGEsITApLG51bGw9PT1hLnRhaWwmJlwiaGlkZGVuXCI9PT1hLnRhaWxNb2RlJiYhby5hbHRlcm5hdGUpcmV0dXJuIFB0KG4pLG51bGx9ZWxzZSAyKlFhKCktYS5yZW5kZXJpbmdTdGFydFRpbWU+WXUmJjUzNjg3MDkxMiE9PXQmJihuLmZsYWdzfD0xMjgsbD0hMCxFdChhLCExKSxuLmxhbmVzPTQxOTQzMDQpO2EuaXNCYWNrd2FyZHM/KG8uc2libGluZz1uLmNoaWxkLG4uY2hpbGQ9byk6KG51bGwhPT0oZT1hLmxhc3QpP2Uuc2libGluZz1vOm4uY2hpbGQ9byxhLmxhc3Q9byl9cmV0dXJuIG51bGwhPT1hLnRhaWw/KG49YS50YWlsLGEucmVuZGVyaW5nPW4sYS50YWlsPW4uc2libGluZyxhLnJlbmRlcmluZ1N0YXJ0VGltZT1RYSgpLG4uc2libGluZz1udWxsLGU9SG8uY3VycmVudCxwKEhvLGw/MSZlfDI6MSZlKSxuKTooUHQobiksbnVsbCk7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiB5ZShuKSxwZSgpLGw9bnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZSxudWxsIT09ZT9udWxsIT09ZS5tZW1vaXplZFN0YXRlIT09bCYmKG4uZmxhZ3N8PTgxOTIpOmwmJihuLmZsYWdzfD04MTkyKSxsPzAhPSg1MzY4NzA5MTImdCkmJjA9PSgxMjgmbi5mbGFncykmJihQdChuKSw2Jm4uc3VidHJlZUZsYWdzJiYobi5mbGFnc3w9ODE5MikpOlB0KG4pLG51bGwhPT0odD1uLnVwZGF0ZVF1ZXVlKSYmQ3Qobix0LnJldHJ5UXVldWUpLHQ9bnVsbCxudWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZS5jYWNoZVBvb2wmJih0PWUubWVtb2l6ZWRTdGF0ZS5jYWNoZVBvb2wucG9vbCksbD1udWxsLG51bGwhPT1uLm1lbW9pemVkU3RhdGUmJm51bGwhPT1uLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sJiYobD1uLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sLnBvb2wpLGwhPT10JiYobi5mbGFnc3w9MjA0OCksbnVsbCE9PWUmJmQoaHUpLG51bGw7Y2FzZSAyNDpyZXR1cm4gdD1udWxsLG51bGwhPT1lJiYodD1lLm1lbW9pemVkU3RhdGUuY2FjaGUpLG4ubWVtb2l6ZWRTdGF0ZS5jYWNoZSE9PXQmJihuLmZsYWdzfD0yMDQ4KSxjdChwdSksUHQobiksbnVsbDtjYXNlIDI1OnJldHVybiBudWxsfXRocm93IEVycm9yKHIoMTU2LG4udGFnKSl9ZnVuY3Rpb24gUnQoZSxuKXtzd2l0Y2goRShuKSxuLnRhZyl7Y2FzZSAxOnJldHVybiA2NTUzNiYoZT1uLmZsYWdzKT8obi5mbGFncz0tNjU1MzcmZXwxMjgsbik6bnVsbDtjYXNlIDM6cmV0dXJuIGN0KHB1KSxfKCksMCE9KDY1NTM2JihlPW4uZmxhZ3MpKSYmMD09KDEyOCZlKT8obi5mbGFncz0tNjU1MzcmZXwxMjgsbik6bnVsbDtjYXNlIDI2OmNhc2UgMjc6Y2FzZSA1OnJldHVybiBUKG4pLG51bGw7Y2FzZSAxMzppZih5ZShuKSxudWxsIT09KGU9bi5tZW1vaXplZFN0YXRlKSYmbnVsbCE9PWUuZGVoeWRyYXRlZCYmbnVsbD09PW4uYWx0ZXJuYXRlKXRocm93IEVycm9yKHIoMzQwKSk7cmV0dXJuIDY1NTM2JihlPW4uZmxhZ3MpPyhuLmZsYWdzPS02NTUzNyZlfDEyOCxuKTpudWxsO2Nhc2UgMTk6cmV0dXJuIGQoSG8pLG51bGw7Y2FzZSA0OnJldHVybiBfKCksbnVsbDtjYXNlIDEwOnJldHVybiBjdChuLnR5cGUpLG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiB5ZShuKSxwZSgpLG51bGwhPT1lJiZkKGh1KSw2NTUzNiYoZT1uLmZsYWdzKT8obi5mbGFncz0tNjU1MzcmZXwxMjgsbik6bnVsbDtjYXNlIDI0OnJldHVybiBjdChwdSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBUdChlLG4pe3N3aXRjaChFKG4pLG4udGFnKXtjYXNlIDM6Y3QocHUpLF8oKTticmVhaztjYXNlIDI2OmNhc2UgMjc6Y2FzZSA1OlQobik7YnJlYWs7Y2FzZSA0Ol8oKTticmVhaztjYXNlIDEzOnllKG4pO2JyZWFrO2Nhc2UgMTk6ZChIbyk7YnJlYWs7Y2FzZSAxMDpjdChuLnR5cGUpO2JyZWFrO2Nhc2UgMjI6Y2FzZSAyMzp5ZShuKSxwZSgpLG51bGwhPT1lJiZkKGh1KTticmVhaztjYXNlIDI0OmN0KHB1KX19ZnVuY3Rpb24gTnQoZSxuKXt0cnl7dmFyIHQ9bi51cGRhdGVRdWV1ZSxyPW51bGwhPT10P3QubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1yKXt2YXIgbD1yLm5leHQ7dD1sO2Rve2lmKCh0LnRhZyZlKT09PWUpe3I9dm9pZCAwO3ZhciBhPXQuY3JlYXRlLG89dC5pbnN0O3I9YSgpLG8uZGVzdHJveT1yfXQ9dC5uZXh0fXdoaWxlKHQhPT1sKX19Y2F0Y2goZSl7anIobixuLnJldHVybixlKX19ZnVuY3Rpb24gTHQoZSxuLHQpe3RyeXt2YXIgcj1uLnVwZGF0ZVF1ZXVlLGw9bnVsbCE9PXI/ci5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWwpe3ZhciBhPWwubmV4dDtyPWE7ZG97aWYoKHIudGFnJmUpPT09ZSl7dmFyIG89ci5pbnN0LHU9by5kZXN0cm95O2lmKHZvaWQgMCE9PXUpe28uZGVzdHJveT12b2lkIDAsbD1uO3ZhciBpPXQ7dHJ5e3UoKX1jYXRjaChlKXtqcihsLGksZSl9fX1yPXIubmV4dH13aGlsZShyIT09YSl9fWNhdGNoKGUpe2pyKG4sbi5yZXR1cm4sZSl9fWZ1bmN0aW9uIFV0KGUpe3ZhciBuPWUudXBkYXRlUXVldWU7aWYobnVsbCE9PW4pe3ZhciB0PWUuc3RhdGVOb2RlO3RyeXtlZShuLHQpfWNhdGNoKG4pe2pyKGUsZS5yZXR1cm4sbil9fX1mdW5jdGlvbiBEdChlLG4sdCl7dC5wcm9wcz1EbihlLnR5cGUsZS5tZW1vaXplZFByb3BzKSx0LnN0YXRlPWUubWVtb2l6ZWRTdGF0ZTt0cnl7dC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKHQpe2pyKGUsbix0KX19ZnVuY3Rpb24gSXQoZSxuKXt0cnl7dmFyIHQ9ZS5yZWY7aWYobnVsbCE9PXQpe3ZhciByPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSAyNjpjYXNlIDI3OmNhc2UgNTp2YXIgbD1UbChyKTticmVhaztkZWZhdWx0Omw9cn1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2UucmVmQ2xlYW51cD10KGwpOnQuY3VycmVudD1sfX1jYXRjaCh0KXtqcihlLG4sdCl9fWZ1bmN0aW9uIEZ0KGUsbil7dmFyIHQ9ZS5yZWYscj1lLnJlZkNsZWFudXA7aWYobnVsbCE9PXQpaWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygcil0cnl7cigpfWNhdGNoKHQpe2pyKGUsbix0KX1maW5hbGx5e2UucmVmQ2xlYW51cD1udWxsLG51bGwhPShlPWUuYWx0ZXJuYXRlKSYmKGUucmVmQ2xlYW51cD1udWxsKX1lbHNlIGlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQpdHJ5e3QobnVsbCl9Y2F0Y2godCl7anIoZSxuLHQpfWVsc2UgdC5jdXJyZW50PW51bGx9ZnVuY3Rpb24gTXQoZSl7dmFyIG49ZS50eXBlLHQ9ZS5tZW1vaXplZFByb3BzLHI9ZS5zdGF0ZU5vZGU7dHJ5e2lhKHIsbix0LGUpfWNhdGNoKG4pe2pyKGUsZS5yZXR1cm4sbil9fWZ1bmN0aW9uIFd0KGUpe3JldHVybiA1PT09ZS50YWd8fDM9PT1lLnRhZ3x8ND09PWUudGFnfWZ1bmN0aW9uIEh0KGUpe2U6Zm9yKDs7KXtmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fFd0KGUucmV0dXJuKSlyZXR1cm4gbnVsbDtlPWUucmV0dXJufWZvcihlLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuLGU9ZS5zaWJsaW5nOzUhPT1lLnRhZyYmNiE9PWUudGFnJiYxOCE9PWUudGFnOyl7aWYoMiZlLmZsYWdzKWNvbnRpbnVlIGU7aWYobnVsbD09PWUuY2hpbGR8fDQ9PT1lLnRhZyljb250aW51ZSBlO2UuY2hpbGQucmV0dXJuPWUsZT1lLmNoaWxkfWlmKCEoMiZlLmZsYWdzKSlyZXR1cm4gZS5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGp0KGUsbix0KXt2YXIgcj1lLnRhZztpZig1PT09cnx8Nj09PXIpZT1lLnN0YXRlTm9kZSxuP2ZhKHQsZSxuKTpvYSh0LGUpO2Vsc2UgaWYoNCE9PXImJiFSYSYmbnVsbCE9PShlPWUuY2hpbGQpKWZvcihqdChlLG4sdCksZT1lLnNpYmxpbmc7bnVsbCE9PWU7KWp0KGUsbix0KSxlPWUuc2libGluZ31mdW5jdGlvbiBBdChlLG4sdCl7dmFyIHI9ZS50YWc7aWYoNT09PXJ8fDY9PT1yKWU9ZS5zdGF0ZU5vZGUsbj9jYSh0LGUsbik6YWEodCxlKTtlbHNlIGlmKDQhPT1yJiYhUmEmJm51bGwhPT0oZT1lLmNoaWxkKSlmb3IoQXQoZSxuLHQpLGU9ZS5zaWJsaW5nO251bGwhPT1lOylBdChlLG4sdCksZT1lLnNpYmxpbmd9ZnVuY3Rpb24gUXQoZSxuLHQpe3ZhciByPXQuZmxhZ3M7c3dpdGNoKHQudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1Okt0KGUsdCksNCZyJiZOdCg1LHQpO2JyZWFrO2Nhc2UgMTppZihLdChlLHQpLDQmcilpZihlPXQuc3RhdGVOb2RlLG51bGw9PT1uKXRyeXtlLmNvbXBvbmVudERpZE1vdW50KCl9Y2F0Y2goZSl7anIodCx0LnJldHVybixlKX1lbHNle3ZhciBsPURuKHQudHlwZSxuLm1lbW9pemVkUHJvcHMpO249bi5tZW1vaXplZFN0YXRlO3RyeXtlLmNvbXBvbmVudERpZFVwZGF0ZShsLG4sZS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9Y2F0Y2goZSl7anIodCx0LnJldHVybixlKX19NjQmciYmVXQodCksNTEyJnImJkl0KHQsdC5yZXR1cm4pO2JyZWFrO2Nhc2UgMzppZihLdChlLHQpLDY0JnImJm51bGwhPT0ocj10LnVwZGF0ZVF1ZXVlKSl7aWYoZT1udWxsLG51bGwhPT10LmNoaWxkKXN3aXRjaCh0LmNoaWxkLnRhZyl7Y2FzZSAyNzpjYXNlIDU6ZT1UbCh0LmNoaWxkLnN0YXRlTm9kZSk7YnJlYWs7Y2FzZSAxOmU9dC5jaGlsZC5zdGF0ZU5vZGV9dHJ5e2VlKHIsZSl9Y2F0Y2goZSl7anIodCx0LnJldHVybixlKX19YnJlYWs7Y2FzZSAyNjpjYXNlIDI3OmNhc2UgNTpLdChlLHQpLG51bGw9PT1uJiY0JnImJk10KHQpLDUxMiZyJiZJdCh0LHQucmV0dXJuKTticmVhaztjYXNlIDEyOmNhc2UgMTM6ZGVmYXVsdDpLdChlLHQpO2JyZWFrO2Nhc2UgMjI6aWYoIShsPW51bGwhPT10Lm1lbW9pemVkU3RhdGV8fGd1KSl7bj1udWxsIT09biYmbnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZXx8eXU7dmFyIGE9Z3Usbz15dTtndT1sLCh5dT1uKSYmIW8/WnQoZSx0LDAhPSg4NzcyJnQuc3VidHJlZUZsYWdzKSk6S3QoZSx0KSxndT1hLHl1PW99NTEyJnImJihcIm1hbnVhbFwiPT09dC5tZW1vaXplZFByb3BzLm1vZGU/SXQodCx0LnJldHVybik6RnQodCx0LnJldHVybikpfX1mdW5jdGlvbiBPdChlKXt2YXIgbj1lLmFsdGVybmF0ZTtudWxsIT09biYmKGUuYWx0ZXJuYXRlPW51bGwsT3QobikpLGUuY2hpbGQ9bnVsbCxlLmRlbGV0aW9ucz1udWxsLGUuc2libGluZz1udWxsLDU9PT1lLnRhZyYmbnVsbCE9PShuPWUuc3RhdGVOb2RlKSYmSmwobiksZS5zdGF0ZU5vZGU9bnVsbCxlLnJldHVybj1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS5wZW5kaW5nUHJvcHM9bnVsbCxlLnN0YXRlTm9kZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBCdChlLG4sdCl7Zm9yKHQ9dC5jaGlsZDtudWxsIT09dDspVnQoZSxuLHQpLHQ9dC5zaWJsaW5nfWZ1bmN0aW9uIFZ0KGUsbix0KXtzd2l0Y2godC50YWcpe2Nhc2UgMjY6Y2FzZSAyNzp2YXIgcixsO2Nhc2UgNTp5dXx8RnQodCxuKTtjYXNlIDY6aWYocj13dSxsPXh1LHd1PW51bGwsQnQoZSxuLHQpLHh1PWwsbnVsbCE9PSh3dT1yKSlpZih4dSl0cnl7cGEod3UsdC5zdGF0ZU5vZGUpfWNhdGNoKGUpe2pyKHQsbixlKX1lbHNlIHRyeXtkYSh3dSx0LnN0YXRlTm9kZSl9Y2F0Y2goZSl7anIodCxuLGUpfWJyZWFrO2Nhc2UgMTg6bnVsbCE9PXd1JiYoeHU/Q2Eod3UsdC5zdGF0ZU5vZGUpOnphKHd1LHQuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSA0OnI9d3UsbD14dSx3dT10LnN0YXRlTm9kZS5jb250YWluZXJJbmZvLHh1PSEwLEJ0KGUsbix0KSx3dT1yLHh1PWw7YnJlYWs7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1Onl1fHxMdCgyLHQsbikseXV8fEx0KDQsdCxuKSxCdChlLG4sdCk7YnJlYWs7Y2FzZSAxOnl1fHwoRnQodCxuKSxcImZ1bmN0aW9uXCI9PXR5cGVvZihyPXQuc3RhdGVOb2RlKS5jb21wb25lbnRXaWxsVW5tb3VudCYmRHQodCxuLHIpKSxCdChlLG4sdCk7YnJlYWs7Y2FzZSAyMTpCdChlLG4sdCk7YnJlYWs7Y2FzZSAyMjpGdCh0LG4pLHl1PShyPXl1KXx8bnVsbCE9PXQubWVtb2l6ZWRTdGF0ZSxCdChlLG4sdCkseXU9cjticmVhaztkZWZhdWx0OkJ0KGUsbix0KX19ZnVuY3Rpb24gJHQoZSxuKXt2YXIgdD1mdW5jdGlvbihlKXtzd2l0Y2goZS50YWcpe2Nhc2UgMTM6Y2FzZSAxOTp2YXIgbj1lLnN0YXRlTm9kZTtyZXR1cm4gbnVsbD09PW4mJihuPWUuc3RhdGVOb2RlPW5ldyB2dSksbjtjYXNlIDIyOnJldHVybiBudWxsPT09KG49KGU9ZS5zdGF0ZU5vZGUpLl9yZXRyeUNhY2hlKSYmKG49ZS5fcmV0cnlDYWNoZT1uZXcgdnUpLG47ZGVmYXVsdDp0aHJvdyBFcnJvcihyKDQzNSxlLnRhZykpfX0oZSk7bi5mb3JFYWNoKChmdW5jdGlvbihuKXt2YXIgcj1Wci5iaW5kKG51bGwsZSxuKTt0LmhhcyhuKXx8KHQuYWRkKG4pLG4udGhlbihyLHIpKX0pKX1mdW5jdGlvbiBxdChlLG4pe3ZhciB0PW4uZGVsZXRpb25zO2lmKG51bGwhPT10KWZvcih2YXIgbD0wO2w8dC5sZW5ndGg7bCsrKXt2YXIgYT10W2xdLG89ZSx1PW4saT11O2U6Zm9yKDtudWxsIT09aTspe3N3aXRjaChpLnRhZyl7Y2FzZSAyNzpjYXNlIDU6d3U9aS5zdGF0ZU5vZGUseHU9ITE7YnJlYWsgZTtjYXNlIDM6Y2FzZSA0Ond1PWkuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8seHU9ITA7YnJlYWsgZX1pPWkucmV0dXJufWlmKG51bGw9PT13dSl0aHJvdyBFcnJvcihyKDE2MCkpO1Z0KG8sdSxhKSx3dT1udWxsLHh1PSExLG51bGwhPT0obz1hLmFsdGVybmF0ZSkmJihvLnJldHVybj1udWxsKSxhLnJldHVybj1udWxsfWlmKDEzODc4Jm4uc3VidHJlZUZsYWdzKWZvcihuPW4uY2hpbGQ7bnVsbCE9PW47KVl0KG4sZSksbj1uLnNpYmxpbmd9ZnVuY3Rpb24gWXQoZSxuKXt2YXIgdD1lLmFsdGVybmF0ZSxsPWUuZmxhZ3M7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6cXQobixlKSxHdChlKSw0JmwmJihMdCgzLGUsZS5yZXR1cm4pLE50KDMsZSksTHQoNSxlLGUucmV0dXJuKSk7YnJlYWs7Y2FzZSAxOnF0KG4sZSksR3QoZSksNTEyJmwmJm51bGwhPT10JiZGdCh0LHQucmV0dXJuKSw2NCZsJiZndSYmbnVsbCE9PShlPWUudXBkYXRlUXVldWUpJiZudWxsIT09KGw9ZS5jYWxsYmFja3MpJiYodD1lLnNoYXJlZC5oaWRkZW5DYWxsYmFja3MsZS5zaGFyZWQuaGlkZGVuQ2FsbGJhY2tzPW51bGw9PT10P2w6dC5jb25jYXQobCkpO2JyZWFrO2Nhc2UgMjY6dmFyIGE7Y2FzZSAyNzp2YXIgbztjYXNlIDU6aWYocXQobixlKSxHdChlKSw1MTImbCYmbnVsbCE9PXQmJkZ0KHQsdC5yZXR1cm4pLDMyJmUuZmxhZ3Mpe249ZS5zdGF0ZU5vZGU7dHJ5e21hKG4pfWNhdGNoKG4pe2pyKGUsZS5yZXR1cm4sbil9fTQmbCYmbnVsbCE9ZS5zdGF0ZU5vZGUmJmZ1bmN0aW9uKGUsbix0KXt0cnl7c2EoZS5zdGF0ZU5vZGUsZS50eXBlLHQsbixlKX1jYXRjaChuKXtqcihlLGUucmV0dXJuLG4pfX0oZSxuPWUubWVtb2l6ZWRQcm9wcyxudWxsIT09dD90Lm1lbW9pemVkUHJvcHM6biksMTAyNCZsJiYoYnU9ITApO2JyZWFrO2Nhc2UgNjppZihxdChuLGUpLEd0KGUpLDQmbCYmT2wpe2lmKG51bGw9PT1lLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihyKDE2MikpO2w9ZS5tZW1vaXplZFByb3BzLHQ9bnVsbCE9PXQ/dC5tZW1vaXplZFByb3BzOmwsbj1lLnN0YXRlTm9kZTt0cnl7dWEobix0LGwpfWNhdGNoKG4pe2pyKGUsZS5yZXR1cm4sbil9fWJyZWFrO2Nhc2UgMzpxdChuLGUpLEd0KGUpLGJ1JiYoYnU9ITEsSnQoZSkpO2JyZWFrO2Nhc2UgNDpjYXNlIDEyOnF0KG4sZSksR3QoZSk7YnJlYWs7Y2FzZSAxMzpxdChuLGUpLEd0KGUpLDgxOTImZS5jaGlsZC5mbGFncyYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSE9KG51bGwhPT10JiZudWxsIT09dC5tZW1vaXplZFN0YXRlKSYmKHF1PVFhKCkpLDQmbCYmbnVsbCE9PShsPWUudXBkYXRlUXVldWUpJiYoZS51cGRhdGVRdWV1ZT1udWxsLCR0KGUsbCkpO2JyZWFrO2Nhc2UgMjI6NTEyJmwmJm51bGwhPT10JiZGdCh0LHQucmV0dXJuKSxhPW51bGwhPT1lLm1lbW9pemVkU3RhdGU7dmFyIHU9bnVsbCE9PXQmJm51bGwhPT10Lm1lbW9pemVkU3RhdGUsaT1ndSxzPXl1O2lmKGd1PWl8fGEseXU9c3x8dSxxdChuLGUpLHl1PXMsZ3U9aSxHdChlKSwobj1lLnN0YXRlTm9kZSkuX2N1cnJlbnQ9ZSxuLl92aXNpYmlsaXR5Jj0tMyxuLl92aXNpYmlsaXR5fD0yJm4uX3BlbmRpbmdWaXNpYmlsaXR5LDgxOTImbCYmKG4uX3Zpc2liaWxpdHk9YT8tMiZuLl92aXNpYmlsaXR5OjF8bi5fdmlzaWJpbGl0eSxhJiYobj1ndXx8eXUsbnVsbD09PXR8fHV8fG58fFh0KGUpKSxudWxsPT09ZS5tZW1vaXplZFByb3BzfHxcIm1hbnVhbFwiIT09ZS5tZW1vaXplZFByb3BzLm1vZGUpKWU6aWYodD1udWxsLE9sKWZvcihuPWU7Oyl7aWYoNT09PW4udGFnfHxFYXx8UmEpe2lmKG51bGw9PT10KXt1PXQ9bjt0cnl7bz11LnN0YXRlTm9kZSxhP2hhKG8pOnlhKHUuc3RhdGVOb2RlLHUubWVtb2l6ZWRQcm9wcyl9Y2F0Y2goZSl7anIodSx1LnJldHVybixlKX19fWVsc2UgaWYoNj09PW4udGFnKXtpZihudWxsPT09dCl7dT1uO3RyeXt2YXIgYz11LnN0YXRlTm9kZTthP2dhKGMpOmJhKGMsdS5tZW1vaXplZFByb3BzKX1jYXRjaChlKXtqcih1LHUucmV0dXJuLGUpfX19ZWxzZSBpZigoMjIhPT1uLnRhZyYmMjMhPT1uLnRhZ3x8bnVsbD09PW4ubWVtb2l6ZWRTdGF0ZXx8bj09PWUpJiZudWxsIT09bi5jaGlsZCl7bi5jaGlsZC5yZXR1cm49bixuPW4uY2hpbGQ7Y29udGludWV9aWYobj09PWUpYnJlYWsgZTtmb3IoO251bGw9PT1uLnNpYmxpbmc7KXtpZihudWxsPT09bi5yZXR1cm58fG4ucmV0dXJuPT09ZSlicmVhayBlO3Q9PT1uJiYodD1udWxsKSxuPW4ucmV0dXJufXQ9PT1uJiYodD1udWxsKSxuLnNpYmxpbmcucmV0dXJuPW4ucmV0dXJuLG49bi5zaWJsaW5nfTQmbCYmbnVsbCE9PShsPWUudXBkYXRlUXVldWUpJiZudWxsIT09KHQ9bC5yZXRyeVF1ZXVlKSYmKGwucmV0cnlRdWV1ZT1udWxsLCR0KGUsdCkpO2JyZWFrO2Nhc2UgMTk6cXQobixlKSxHdChlKSw0JmwmJm51bGwhPT0obD1lLnVwZGF0ZVF1ZXVlKSYmKGUudXBkYXRlUXVldWU9bnVsbCwkdChlLGwpKTticmVhaztjYXNlIDIxOmJyZWFrO2RlZmF1bHQ6cXQobixlKSxHdChlKX19ZnVuY3Rpb24gR3QoZSl7dmFyIG49ZS5mbGFncztpZigyJm4pe3RyeXtpZihPbCYmKCFSYXx8MjchPT1lLnRhZykpe2U6e2Zvcih2YXIgdD1lLnJldHVybjtudWxsIT09dDspe2lmKFd0KHQpKXt2YXIgbD10O2JyZWFrIGV9dD10LnJldHVybn10aHJvdyBFcnJvcihyKDE2MCkpfXN3aXRjaChsLnRhZyl7Y2FzZSAyNzpjYXNlIDU6dmFyIGE9bC5zdGF0ZU5vZGU7MzImbC5mbGFncyYmKG1hKGEpLGwuZmxhZ3MmPS0zMyksQXQoZSxIdChlKSxhKTticmVhaztjYXNlIDM6Y2FzZSA0OnZhciBvPWwuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87anQoZSxIdChlKSxvKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHIoMTYxKSl9fX1jYXRjaChuKXtqcihlLGUucmV0dXJuLG4pfWUuZmxhZ3MmPS0zfTQwOTYmbiYmKGUuZmxhZ3MmPS00MDk3KX1mdW5jdGlvbiBKdChlKXtpZigxMDI0JmUuc3VidHJlZUZsYWdzKWZvcihlPWUuY2hpbGQ7bnVsbCE9PWU7KXt2YXIgbj1lO0p0KG4pLDU9PT1uLnRhZyYmMTAyNCZuLmZsYWdzJiZsYShuLnN0YXRlTm9kZSksZT1lLnNpYmxpbmd9fWZ1bmN0aW9uIEt0KGUsbil7aWYoODc3MiZuLnN1YnRyZWVGbGFncylmb3Iobj1uLmNoaWxkO251bGwhPT1uOylRdChlLG4uYWx0ZXJuYXRlLG4pLG49bi5zaWJsaW5nfWZ1bmN0aW9uIFh0KGUpe2ZvcihlPWUuY2hpbGQ7bnVsbCE9PWU7KXt2YXIgbj1lO3N3aXRjaChuLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1Okx0KDQsbixuLnJldHVybiksWHQobik7YnJlYWs7Y2FzZSAxOkZ0KG4sbi5yZXR1cm4pO3ZhciB0PW4uc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09dHlwZW9mIHQuY29tcG9uZW50V2lsbFVubW91bnQmJkR0KG4sbi5yZXR1cm4sdCksWHQobik7YnJlYWs7Y2FzZSAyNjpjYXNlIDI3OmNhc2UgNTpGdChuLG4ucmV0dXJuKSxYdChuKTticmVhaztjYXNlIDIyOkZ0KG4sbi5yZXR1cm4pLG51bGw9PT1uLm1lbW9pemVkU3RhdGUmJlh0KG4pO2JyZWFrO2RlZmF1bHQ6WHQobil9ZT1lLnNpYmxpbmd9fWZ1bmN0aW9uIFp0KGUsbix0KXtmb3IodD10JiYwIT0oODc3MiZuLnN1YnRyZWVGbGFncyksbj1uLmNoaWxkO251bGwhPT1uOyl7dmFyIHI9bi5hbHRlcm5hdGUsbD1lLGE9bixvPWEuZmxhZ3M7c3dpdGNoKGEudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1Olp0KGwsYSx0KSxOdCg0LGEpO2JyZWFrO2Nhc2UgMTppZihadChsLGEsdCksXCJmdW5jdGlvblwiPT10eXBlb2YobD0ocj1hKS5zdGF0ZU5vZGUpLmNvbXBvbmVudERpZE1vdW50KXRyeXtsLmNvbXBvbmVudERpZE1vdW50KCl9Y2F0Y2goZSl7anIocixyLnJldHVybixlKX1pZihudWxsIT09KGw9KHI9YSkudXBkYXRlUXVldWUpKXt2YXIgdT1yLnN0YXRlTm9kZTt0cnl7dmFyIGk9bC5zaGFyZWQuaGlkZGVuQ2FsbGJhY2tzO2lmKG51bGwhPT1pKWZvcihsLnNoYXJlZC5oaWRkZW5DYWxsYmFja3M9bnVsbCxsPTA7bDxpLmxlbmd0aDtsKyspWihpW2xdLHUpfWNhdGNoKGUpe2pyKHIsci5yZXR1cm4sZSl9fXQmJjY0Jm8mJlV0KGEpLEl0KGEsYS5yZXR1cm4pO2JyZWFrO2Nhc2UgMjY6Y2FzZSAyNzpjYXNlIDU6WnQobCxhLHQpLHQmJm51bGw9PT1yJiY0Jm8mJk10KGEpLEl0KGEsYS5yZXR1cm4pO2JyZWFrO2Nhc2UgMTI6Y2FzZSAxMzpkZWZhdWx0Olp0KGwsYSx0KTticmVhaztjYXNlIDIyOm51bGw9PT1hLm1lbW9pemVkU3RhdGUmJlp0KGwsYSx0KSxJdChhLGEucmV0dXJuKX1uPW4uc2libGluZ319ZnVuY3Rpb24gZXIoZSxuKXt2YXIgdD1udWxsO251bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbCYmKHQ9ZS5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbC5wb29sKSxlPW51bGwsbnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZSYmbnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZS5jYWNoZVBvb2wmJihlPW4ubWVtb2l6ZWRTdGF0ZS5jYWNoZVBvb2wucG9vbCksZSE9PXQmJihudWxsIT1lJiZlLnJlZkNvdW50KyssbnVsbCE9dCYmU3QodCkpfWZ1bmN0aW9uIG5yKGUsbil7ZT1udWxsLG51bGwhPT1uLmFsdGVybmF0ZSYmKGU9bi5hbHRlcm5hdGUubWVtb2l6ZWRTdGF0ZS5jYWNoZSksKG49bi5tZW1vaXplZFN0YXRlLmNhY2hlKSE9PWUmJihuLnJlZkNvdW50KyssbnVsbCE9ZSYmU3QoZSkpfWZ1bmN0aW9uIHRyKGUsbix0LHIpe2lmKDEwMjU2Jm4uc3VidHJlZUZsYWdzKWZvcihuPW4uY2hpbGQ7bnVsbCE9PW47KXJyKGUsbix0LHIpLG49bi5zaWJsaW5nfWZ1bmN0aW9uIHJyKGUsbix0LHIpe3ZhciBsPW4uZmxhZ3M7c3dpdGNoKG4udGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRyKGUsbix0LHIpLDIwNDgmbCYmTnQoOSxuKTticmVhaztjYXNlIDM6dHIoZSxuLHQsciksMjA0OCZsJiYoZT1udWxsLG51bGwhPT1uLmFsdGVybmF0ZSYmKGU9bi5hbHRlcm5hdGUubWVtb2l6ZWRTdGF0ZS5jYWNoZSksKG49bi5tZW1vaXplZFN0YXRlLmNhY2hlKSE9PWUmJihuLnJlZkNvdW50KyssbnVsbCE9ZSYmU3QoZSkpKTticmVhaztjYXNlIDEyOmlmKDIwNDgmbCl7dHIoZSxuLHQsciksZT1uLnN0YXRlTm9kZTt0cnl7dmFyIGE9bi5tZW1vaXplZFByb3BzLG89YS5pZCx1PWEub25Qb3N0Q29tbWl0O1wiZnVuY3Rpb25cIj09dHlwZW9mIHUmJnUobyxudWxsPT09bi5hbHRlcm5hdGU/XCJtb3VudFwiOlwidXBkYXRlXCIsZS5wYXNzaXZlRWZmZWN0RHVyYXRpb24sLTApfWNhdGNoKGUpe2pyKG4sbi5yZXR1cm4sZSl9fWVsc2UgdHIoZSxuLHQscik7YnJlYWs7Y2FzZSAyMzpicmVhaztjYXNlIDIyOmE9bi5zdGF0ZU5vZGUsbnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZT80JmEuX3Zpc2liaWxpdHk/dHIoZSxuLHQscik6YXIoZSxuKTo0JmEuX3Zpc2liaWxpdHk/dHIoZSxuLHQscik6KGEuX3Zpc2liaWxpdHl8PTQsbHIoZSxuLHQsciwwIT0oMTAyNTYmbi5zdWJ0cmVlRmxhZ3MpKSksMjA0OCZsJiZlcihuLmFsdGVybmF0ZSxuKTticmVhaztjYXNlIDI0OnRyKGUsbix0LHIpLDIwNDgmbCYmbnIobi5hbHRlcm5hdGUsbik7YnJlYWs7ZGVmYXVsdDp0cihlLG4sdCxyKX19ZnVuY3Rpb24gbHIoZSxuLHQscixsKXtmb3IobD1sJiYwIT0oMTAyNTYmbi5zdWJ0cmVlRmxhZ3MpLG49bi5jaGlsZDtudWxsIT09bjspe3ZhciBhPWUsbz1uLHU9dCxpPXIscz1vLmZsYWdzO3N3aXRjaChvLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpscihhLG8sdSxpLGwpLE50KDgsbyk7YnJlYWs7Y2FzZSAyMzpicmVhaztjYXNlIDIyOnZhciBjPW8uc3RhdGVOb2RlO251bGwhPT1vLm1lbW9pemVkU3RhdGU/NCZjLl92aXNpYmlsaXR5P2xyKGEsbyx1LGksbCk6YXIoYSxvKTooYy5fdmlzaWJpbGl0eXw9NCxscihhLG8sdSxpLGwpKSxsJiYyMDQ4JnMmJmVyKG8uYWx0ZXJuYXRlLG8pO2JyZWFrO2Nhc2UgMjQ6bHIoYSxvLHUsaSxsKSxsJiYyMDQ4JnMmJm5yKG8uYWx0ZXJuYXRlLG8pO2JyZWFrO2RlZmF1bHQ6bHIoYSxvLHUsaSxsKX1uPW4uc2libGluZ319ZnVuY3Rpb24gYXIoZSxuKXtpZigxMDI1NiZuLnN1YnRyZWVGbGFncylmb3Iobj1uLmNoaWxkO251bGwhPT1uOyl7dmFyIHQ9ZSxyPW4sbD1yLmZsYWdzO3N3aXRjaChyLnRhZyl7Y2FzZSAyMjphcih0LHIpLDIwNDgmbCYmZXIoci5hbHRlcm5hdGUscik7YnJlYWs7Y2FzZSAyNDphcih0LHIpLDIwNDgmbCYmbnIoci5hbHRlcm5hdGUscik7YnJlYWs7ZGVmYXVsdDphcih0LHIpfW49bi5zaWJsaW5nfX1mdW5jdGlvbiBvcihlKXtpZihlLnN1YnRyZWVGbGFncyZDdSlmb3IoZT1lLmNoaWxkO251bGwhPT1lOyl1cihlKSxlPWUuc2libGluZ31mdW5jdGlvbiB1cihlKXtzd2l0Y2goZS50YWcpe2Nhc2UgMjY6b3IoZSksZS5mbGFncyZDdSYmKG51bGwhPT1lLm1lbW9pemVkU3RhdGU/X2EoenUsZS5tZW1vaXplZFN0YXRlLGUubWVtb2l6ZWRQcm9wcyk6ZWEoZS50eXBlLGUubWVtb2l6ZWRQcm9wcykpO2JyZWFrO2Nhc2UgNTpvcihlKSxlLmZsYWdzJkN1JiZlYShlLnR5cGUsZS5tZW1vaXplZFByb3BzKTticmVhaztjYXNlIDM6Y2FzZSA0OnZhciBuO29yKGUpO2JyZWFrO2Nhc2UgMjI6bnVsbD09PWUubWVtb2l6ZWRTdGF0ZSYmKG51bGwhPT0obj1lLmFsdGVybmF0ZSkmJm51bGwhPT1uLm1lbW9pemVkU3RhdGU/KG49Q3UsQ3U9MTY3NzcyMTYsb3IoZSksQ3U9bik6b3IoZSkpO2JyZWFrO2RlZmF1bHQ6b3IoZSl9fWZ1bmN0aW9uIGlyKGUpe3ZhciBuPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1uJiZudWxsIT09KGU9bi5jaGlsZCkpe24uY2hpbGQ9bnVsbDtkb3tuPWUuc2libGluZyxlLnNpYmxpbmc9bnVsbCxlPW59d2hpbGUobnVsbCE9PWUpfX1mdW5jdGlvbiBzcihlKXt2YXIgbj1lLmRlbGV0aW9ucztpZigwIT0oMTYmZS5mbGFncykpe2lmKG51bGwhPT1uKWZvcih2YXIgdD0wO3Q8bi5sZW5ndGg7dCsrKXt2YXIgcj1uW3RdO1N1PXIsZHIocixlKX1pcihlKX1pZigxMDI1NiZlLnN1YnRyZWVGbGFncylmb3IoZT1lLmNoaWxkO251bGwhPT1lOyljcihlKSxlPWUuc2libGluZ31mdW5jdGlvbiBjcihlKXtzd2l0Y2goZS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6c3IoZSksMjA0OCZlLmZsYWdzJiZMdCg5LGUsZS5yZXR1cm4pO2JyZWFrO2Nhc2UgMzpjYXNlIDEyOmRlZmF1bHQ6c3IoZSk7YnJlYWs7Y2FzZSAyMjp2YXIgbj1lLnN0YXRlTm9kZTtudWxsIT09ZS5tZW1vaXplZFN0YXRlJiY0Jm4uX3Zpc2liaWxpdHkmJihudWxsPT09ZS5yZXR1cm58fDEzIT09ZS5yZXR1cm4udGFnKT8obi5fdmlzaWJpbGl0eSY9LTUsZnIoZSkpOnNyKGUpfX1mdW5jdGlvbiBmcihlKXt2YXIgbj1lLmRlbGV0aW9ucztpZigwIT0oMTYmZS5mbGFncykpe2lmKG51bGwhPT1uKWZvcih2YXIgdD0wO3Q8bi5sZW5ndGg7dCsrKXt2YXIgcj1uW3RdO1N1PXIsZHIocixlKX1pcihlKX1mb3IoZT1lLmNoaWxkO251bGwhPT1lOyl7c3dpdGNoKChuPWUpLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpMdCg4LG4sbi5yZXR1cm4pLGZyKG4pO2JyZWFrO2Nhc2UgMjI6NCYodD1uLnN0YXRlTm9kZSkuX3Zpc2liaWxpdHkmJih0Ll92aXNpYmlsaXR5Jj0tNSxmcihuKSk7YnJlYWs7ZGVmYXVsdDpmcihuKX1lPWUuc2libGluZ319ZnVuY3Rpb24gZHIoZSxuKXtmb3IoO251bGwhPT1TdTspe3ZhciB0PVN1O3N3aXRjaCh0LnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpMdCg4LHQsbik7YnJlYWs7Y2FzZSAyMzpjYXNlIDIyOmlmKG51bGwhPT10Lm1lbW9pemVkU3RhdGUmJm51bGwhPT10Lm1lbW9pemVkU3RhdGUuY2FjaGVQb29sKXt2YXIgcj10Lm1lbW9pemVkU3RhdGUuY2FjaGVQb29sLnBvb2w7bnVsbCE9ciYmci5yZWZDb3VudCsrfWJyZWFrO2Nhc2UgMjQ6U3QodC5tZW1vaXplZFN0YXRlLmNhY2hlKX1pZihudWxsIT09KHI9dC5jaGlsZCkpci5yZXR1cm49dCxTdT1yO2Vsc2UgZTpmb3IodD1lO251bGwhPT1TdTspe3ZhciBsPShyPVN1KS5zaWJsaW5nLGE9ci5yZXR1cm47aWYoT3Qocikscj09PXQpe1N1PW51bGw7YnJlYWsgZX1pZihudWxsIT09bCl7bC5yZXR1cm49YSxTdT1sO2JyZWFrIGV9U3U9YX19fWZ1bmN0aW9uIHByKCl7cmV0dXJuIDAhPSgyJlJ1KSYmMCE9PUx1P0x1Ji1MdTpudWxsIT09UGwuVD8wIT09d28/d286TygpOllsKCl9ZnVuY3Rpb24gbXIoKXswPT09UXUmJihRdT0wPT0oNTM2ODcwOTEyJkx1KXx8aW8/eSgpOjUzNjg3MDkxMik7dmFyIGU9TW8uY3VycmVudDtyZXR1cm4gbnVsbCE9PWUmJihlLmZsYWdzfD0zMiksUXV9ZnVuY3Rpb24gaHIoZSxuLHQpeyhlPT09VHUmJjI9PT1VdXx8bnVsbCE9PWUuY2FuY2VsUGVuZGluZ0NvbW1pdCkmJih3cihlLDApLFNyKGUsTHUsUXUpKSxTKGUsdCksMCE9KDImUnUpJiZlPT09VHV8fChlPT09VHUmJigwPT0oMiZSdSkmJihqdXw9dCksND09PVd1JiZTcihlLEx1LFF1KSksTShlKSl9ZnVuY3Rpb24gZ3IoZSxuLHQpe2lmKDAhPSg2JlJ1KSl0aHJvdyBFcnJvcihyKDMyNykpO3ZhciBsPSh0PSF0JiYwPT0oNjAmbikmJjA9PShuJmUuZXhwaXJlZExhbmVzKSk/ZnVuY3Rpb24oZSxuKXt2YXIgdD1SdTtSdXw9Mjt2YXIgbD1DcigpLGE9RXIoKTtUdT09PWUmJkx1PT09bnx8KEd1PW51bGwsWXU9UWEoKSs1MDAsd3IoZSxuKSk7ZTpmb3IoOzspdHJ5e2lmKDAhPT1VdSYmbnVsbCE9PU51KXtuPU51O3ZhciBvPUR1O246c3dpdGNoKFV1KXtjYXNlIDE6Y2FzZSA2OlV1PTAsRHU9bnVsbCxVcihlLG4sbyk7YnJlYWs7Y2FzZSAyOmlmKHRlKG8pKXtVdT0wLER1PW51bGwsTHIobik7YnJlYWt9bj1mdW5jdGlvbigpezI9PT1VdSYmVHU9PT1lJiYoVXU9NyksTShlKX0sby50aGVuKG4sbik7YnJlYWsgZTtjYXNlIDM6VXU9NzticmVhayBlO2Nhc2UgNDpVdT01O2JyZWFrIGU7Y2FzZSA3OnRlKG8pPyhVdT0wLER1PW51bGwsTHIobikpOihVdT0wLER1PW51bGwsVXIoZSxuLG8pKTticmVhaztjYXNlIDU6dmFyIHU9bnVsbDtzd2l0Y2goTnUudGFnKXtjYXNlIDI2OnU9TnUubWVtb2l6ZWRTdGF0ZTtjYXNlIDU6Y2FzZSAyNzp2YXIgaT1OdSxzPWkudHlwZSxjPWkucGVuZGluZ1Byb3BzO2lmKHU/UGEodSk6WGwocyxjKSl7VXU9MCxEdT1udWxsO3ZhciBmPWkuc2libGluZztpZihudWxsIT09ZilOdT1mO2Vsc2V7dmFyIGQ9aS5yZXR1cm47bnVsbCE9PWQ/KE51PWQsRHIoZCkpOk51PW51bGx9YnJlYWsgbn19VXU9MCxEdT1udWxsLFVyKGUsbixvKTticmVhaztjYXNlIDg6a3IoKSxXdT02O2JyZWFrIGU7ZGVmYXVsdDp0aHJvdyBFcnJvcihyKDQ2MikpfX1UcigpO2JyZWFrfWNhdGNoKG4pe3hyKGUsbil9cmV0dXJuIGl0KCksUGwuSD1sLFBsLkE9YSxSdT10LG51bGwhPT1OdT8wOihUdT1udWxsLEx1PTAsTigpLFd1KX0oZSxuKTpfcihlLG4pO2lmKDAhPT1sKWZvcih2YXIgYT10Ozspe2lmKDY9PT1sKVNyKGUsbiwwKTtlbHNle2lmKHQ9ZS5jdXJyZW50LmFsdGVybmF0ZSxhJiYhdnIodCkpe2w9X3IoZSxuKSxhPSExO2NvbnRpbnVlfWlmKDI9PT1sKXtpZihhPW4sZS5lcnJvclJlY292ZXJ5RGlzYWJsZWRMYW5lcyZhKXZhciBvPTA7ZWxzZSBvPTAhPShvPS01MzY4NzA5MTMmZS5wZW5kaW5nTGFuZXMpP286NTM2ODcwOTEyJm8/NTM2ODcwOTEyOjA7aWYoMCE9PW8pe249bztlOnt2YXIgdT1lO2w9QnU7dmFyIGk9Qmw7aWYoaSYmKHdyKHUsbykuZmxhZ3N8PTI1NiksMiE9PShvPV9yKHUsbykpKXtpZihGdSYmIWkpe3UuZXJyb3JSZWNvdmVyeURpc2FibGVkTGFuZXN8PWEsanV8PWEsbD00O2JyZWFrIGV9YT1WdSxWdT1sLG51bGwhPT1hJiZ5cihhKX1sPW99aWYoYT0hMSwyIT09bCljb250aW51ZX19aWYoMT09PWwpe3dyKGUsMCksU3IoZSxuLDApO2JyZWFrfWU6e3N3aXRjaChhPWUsbCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcihyKDM0NSkpO2Nhc2UgNDppZigoNDE5NDE3NiZuKT09PW4pe1NyKGEsbixRdSk7YnJlYWsgZX1icmVhaztjYXNlIDI6VnU9bnVsbDticmVhaztjYXNlIDM6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocigzMjkpKX1pZihhLmZpbmlzaGVkV29yaz10LGEuZmluaXNoZWRMYW5lcz1uLCg2MjkxNDU2MCZuKT09PW4mJjEwPChsPXF1KzMwMC1RYSgpKSl7aWYoU3IoYSxuLFF1KSwwIT09aChhLDApKWJyZWFrIGU7YS50aW1lb3V0SGFuZGxlPWpsKGJyLmJpbmQobnVsbCxhLHQsVnUsR3UsJHUsbixRdSxqdSxPdSxJdSwyLC0wLDApLGwpfWVsc2UgYnIoYSx0LFZ1LEd1LCR1LG4sUXUsanUsT3UsSXUsMCwtMCwwKX19YnJlYWt9TShlKX1mdW5jdGlvbiB5cihlKXtudWxsPT09VnU/VnU9ZTpWdS5wdXNoLmFwcGx5KFZ1LGUpfWZ1bmN0aW9uIGJyKGUsbix0LHIsbCxhLG8sdSxpLHMsYyxmLGQpe2lmKCg4MTkyJihzPW4uc3VidHJlZUZsYWdzKXx8MTY3ODU0MDg9PSgxNjc4NTQwOCZzKSkmJihabCgpLHVyKG4pLG51bGwhPT0obj1uYSgpKSkpcmV0dXJuIGUuY2FuY2VsUGVuZGluZ0NvbW1pdD1uKEZyLmJpbmQobnVsbCxlLHQscixsLG8sdSxpLDEsZixkKSksdm9pZCBTcihlLGEsbyk7RnIoZSx0LHIsbCxvKX1mdW5jdGlvbiB2cihlKXtmb3IodmFyIG49ZTs7KXt2YXIgdD1uLnRhZztpZigoMD09PXR8fDExPT09dHx8MTU9PT10KSYmMTYzODQmbi5mbGFncyYmbnVsbCE9PSh0PW4udXBkYXRlUXVldWUpJiZudWxsIT09KHQ9dC5zdG9yZXMpKWZvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbD10W3JdLGE9bC5nZXRTbmFwc2hvdDtsPWwudmFsdWU7dHJ5e2lmKCFKYShhKCksbCkpcmV0dXJuITF9Y2F0Y2goZSl7cmV0dXJuITF9fWlmKHQ9bi5jaGlsZCwxNjM4NCZuLnN1YnRyZWVGbGFncyYmbnVsbCE9PXQpdC5yZXR1cm49bixuPXQ7ZWxzZXtpZihuPT09ZSlicmVhaztmb3IoO251bGw9PT1uLnNpYmxpbmc7KXtpZihudWxsPT09bi5yZXR1cm58fG4ucmV0dXJuPT09ZSlyZXR1cm4hMDtuPW4ucmV0dXJufW4uc2libGluZy5yZXR1cm49bi5yZXR1cm4sbj1uLnNpYmxpbmd9fXJldHVybiEwfWZ1bmN0aW9uIFNyKGUsbix0KXtuJj1+QXUsbiY9fmp1LGUuc3VzcGVuZGVkTGFuZXN8PW4sZS5waW5nZWRMYW5lcyY9fm47Zm9yKHZhciByPWUuZXhwaXJhdGlvblRpbWVzLGw9bjswPGw7KXt2YXIgYT0zMS1VYShsKSxvPTE8PGE7clthXT0tMSxsJj1+b30wIT09dCYmayhlLHQsbil9ZnVuY3Rpb24ga3IoKXtpZihudWxsIT09TnUpe2lmKDA9PT1VdSl2YXIgZT1OdS5yZXR1cm47ZWxzZSBlPU51LGl0KCksUGUoZSksTm89bnVsbCxMbz0wLGU9TnU7Zm9yKDtudWxsIT09ZTspVHQoZS5hbHRlcm5hdGUsZSksZT1lLnJldHVybjtOdT1udWxsfX1mdW5jdGlvbiB3cihlLG4pe2UuZmluaXNoZWRXb3JrPW51bGwsZS5maW5pc2hlZExhbmVzPTA7dmFyIHQ9ZS50aW1lb3V0SGFuZGxlO3QhPT1RbCYmKGUudGltZW91dEhhbmRsZT1RbCxBbCh0KSksbnVsbCE9PSh0PWUuY2FuY2VsUGVuZGluZ0NvbW1pdCkmJihlLmNhbmNlbFBlbmRpbmdDb21taXQ9bnVsbCx0KCkpLGtyKCksVHU9ZSxOdT10PVlyKGUuY3VycmVudCxudWxsKSxMdT1uLFV1PTAsRHU9bnVsbCxGdT1JdT0hMSxPdT1RdT1BdT1qdT1IdT1XdT0wLFZ1PUJ1PW51bGwsJHU9ITEsMCE9KDgmbikmJihufD0zMiZuKTt2YXIgcj1lLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1yKWZvcihlPWUuZW50YW5nbGVtZW50cyxyJj1uOzA8cjspe3ZhciBsPTMxLVVhKHIpLGE9MTw8bDtufD1lW2xdLHImPX5hfXJldHVybiBNdT1uLE4oKSx0fWZ1bmN0aW9uIHhyKGUsbil7QW89bnVsbCxQbC5IPVhvLG49PT1Qbz8obj1hZSgpLFV1PXpyKCkmJjA9PSgxMzQyMTc3MjcmSHUpJiYwPT0oMTM0MjE3NzI3Jmp1KT8yOjMpOm49PT1fbz8obj1hZSgpLFV1PTQpOlV1PW49PT1ydT84Om51bGwhPT1uJiZcIm9iamVjdFwiPT10eXBlb2YgbiYmXCJmdW5jdGlvblwiPT10eXBlb2Ygbi50aGVuPzY6MSxEdT1uLG51bGw9PT1OdSYmKFd1PTEsSW4oZSxDKG4sZS5jdXJyZW50KSkpfWZ1bmN0aW9uIHpyKCl7dmFyIGU9TW8uY3VycmVudDtyZXR1cm4gbnVsbD09PWV8fCgoNDE5NDE3NiZMdSk9PT1MdT9udWxsPT09V286KCg2MjkxNDU2MCZMdSk9PT1MdXx8MCE9KDUzNjg3MDkxMiZMdSkpJiZlPT09V28pfWZ1bmN0aW9uIENyKCl7dmFyIGU9UGwuSDtyZXR1cm4gUGwuSD1YbyxudWxsPT09ZT9YbzplfWZ1bmN0aW9uIEVyKCl7dmFyIGU9UGwuQTtyZXR1cm4gUGwuQT1FdSxlfWZ1bmN0aW9uIFByKCl7V3U9NCwwPT0oMTM0MjE3NzI3Jkh1KSYmMD09KDEzNDIxNzcyNyZqdSl8fG51bGw9PT1UdXx8U3IoVHUsTHUsUXUpfWZ1bmN0aW9uIF9yKGUsbil7dmFyIHQ9UnU7UnV8PTI7dmFyIGw9Q3IoKSxhPUVyKCk7VHU9PT1lJiZMdT09PW58fChHdT1udWxsLHdyKGUsbikpLG49ITE7ZTpmb3IoOzspdHJ5e2lmKDAhPT1VdSYmbnVsbCE9PU51KXt2YXIgbz1OdSx1PUR1O3N3aXRjaChVdSl7Y2FzZSA4OmtyKCksV3U9NjticmVhayBlO2Nhc2UgMzpjYXNlIDI6bnx8bnVsbCE9PU1vLmN1cnJlbnR8fChuPSEwKTtkZWZhdWx0OlV1PTAsRHU9bnVsbCxVcihlLG8sdSl9fVJyKCk7YnJlYWt9Y2F0Y2gobil7eHIoZSxuKX1pZihuJiZlLnNoZWxsU3VzcGVuZENvdW50ZXIrKyxpdCgpLFJ1PXQsUGwuSD1sLFBsLkE9YSxudWxsIT09TnUpdGhyb3cgRXJyb3IocigyNjEpKTtyZXR1cm4gVHU9bnVsbCxMdT0wLE4oKSxXdX1mdW5jdGlvbiBScigpe2Zvcig7bnVsbCE9PU51OylOcihOdSl9ZnVuY3Rpb24gVHIoKXtmb3IoO251bGwhPT1OdSYmIWphKCk7KU5yKE51KX1mdW5jdGlvbiBOcihlKXt2YXIgbj11dChlLmFsdGVybmF0ZSxlLE11KTtlLm1lbW9pemVkUHJvcHM9ZS5wZW5kaW5nUHJvcHMsbnVsbD09PW4/RHIoZSk6TnU9bn1mdW5jdGlvbiBMcihlKXt2YXIgbj1lLHQ9bi5hbHRlcm5hdGU7c3dpdGNoKG4udGFnKXtjYXNlIDE1OmNhc2UgMDpuPVluKHQsbixuLnBlbmRpbmdQcm9wcyxuLnR5cGUsdm9pZCAwLEx1KTticmVhaztjYXNlIDExOm49WW4odCxuLG4ucGVuZGluZ1Byb3BzLG4udHlwZS5yZW5kZXIsbi5yZWYsTHUpO2JyZWFrO2Nhc2UgNTpQZShuKTtkZWZhdWx0OlR0KHQsbiksbj11dCh0LG49TnU9R3IobixNdSksTXUpfWUubWVtb2l6ZWRQcm9wcz1lLnBlbmRpbmdQcm9wcyxudWxsPT09bj9EcihlKTpOdT1ufWZ1bmN0aW9uIFVyKGUsbix0KXtpdCgpLFBlKG4pLE5vPW51bGwsTG89MDt2YXIgbD1uLnJldHVybjt0cnl7aWYoZnVuY3Rpb24oZSxuLHQsbCxhKXtpZih0LmZsYWdzfD0zMjc2OCxudWxsIT09bCYmXCJvYmplY3RcIj09dHlwZW9mIGwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwudGhlbil7aWYobnVsbCE9PShuPXQuYWx0ZXJuYXRlKSYmcHQobix0LGEsITApLG51bGwhPT0odD1Nby5jdXJyZW50KSl7c3dpdGNoKHQudGFnKXtjYXNlIDEzOnJldHVybiBudWxsPT09V28/UHIoKTpudWxsPT09dC5hbHRlcm5hdGUmJjA9PT1XdSYmKFd1PTMpLHQuZmxhZ3MmPS0yNTcsdC5mbGFnc3w9NjU1MzYsdC5sYW5lcz1hLGw9PT1Sbz90LmZsYWdzfD0xNjM4NDoobnVsbD09PShuPXQudXBkYXRlUXVldWUpP3QudXBkYXRlUXVldWU9bmV3IFNldChbbF0pOm4uYWRkKGwpLEFyKGUsbCxhKSksITE7Y2FzZSAyMjpyZXR1cm4gdC5mbGFnc3w9NjU1MzYsbD09PVJvP3QuZmxhZ3N8PTE2Mzg0OihudWxsPT09KG49dC51cGRhdGVRdWV1ZSk/KG49e3RyYW5zaXRpb25zOm51bGwsbWFya2VySW5zdGFuY2VzOm51bGwscmV0cnlRdWV1ZTpuZXcgU2V0KFtsXSl9LHQudXBkYXRlUXVldWU9bik6bnVsbD09PSh0PW4ucmV0cnlRdWV1ZSk/bi5yZXRyeVF1ZXVlPW5ldyBTZXQoW2xdKTp0LmFkZChsKSxBcihlLGwsYSkpLCExfXRocm93IEVycm9yKHIoNDM1LHQudGFnKSl9cmV0dXJuIEFyKGUsbCxhKSxQcigpLCExfXZhciBvPUVycm9yKHIoNTIwKSx7Y2F1c2U6bH0pO2lmKG89QyhvLHQpLG51bGw9PT1CdT9CdT1bb106QnUucHVzaChvKSw0IT09V3UmJihXdT0yKSxudWxsPT09bilyZXR1cm4hMDtsPUMobCx0KSx0PW47ZG97c3dpdGNoKHQudGFnKXtjYXNlIDM6cmV0dXJuIHQuZmxhZ3N8PTY1NTM2LGU9YSYtYSx0LmxhbmVzfD1lLEoodCxlPU1uKHQuc3RhdGVOb2RlLGwsZSkpLCExO2Nhc2UgMTppZihuPXQudHlwZSxvPXQuc3RhdGVOb2RlLDA9PSgxMjgmdC5mbGFncykmJihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PW8mJlwiZnVuY3Rpb25cIj09dHlwZW9mIG8uY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09SnV8fCFKdS5oYXMobykpKSlyZXR1cm4gdC5mbGFnc3w9NjU1MzYsYSY9LWEsdC5sYW5lc3w9YSxIbihhPVduKGEpLGUsdCxsKSxKKHQsYSksITF9dD10LnJldHVybn13aGlsZShudWxsIT09dCk7cmV0dXJuITF9KGUsbCxuLHQsTHUpKXJldHVybiBXdT0xLEluKGUsQyh0LGUuY3VycmVudCkpLHZvaWQoTnU9bnVsbCl9Y2F0Y2gobil7aWYobnVsbCE9PWwpdGhyb3cgTnU9bCxuO3JldHVybiBXdT0xLEluKGUsQyh0LGUuY3VycmVudCkpLHZvaWQoTnU9bnVsbCl9MzI3Njgmbi5mbGFncz9JcihuLCEwKTpEcihuKX1mdW5jdGlvbiBEcihlKXt2YXIgbj1lO2Rve2lmKDAhPSgzMjc2OCZuLmZsYWdzKSlyZXR1cm4gdm9pZCBJcihuLEl1KTtlPW4ucmV0dXJuO3ZhciB0PV90KG4uYWx0ZXJuYXRlLG4sTXUpO2lmKG51bGwhPT10KXJldHVybiB2b2lkKE51PXQpO2lmKG51bGwhPT0obj1uLnNpYmxpbmcpKXJldHVybiB2b2lkKE51PW4pO051PW49ZX13aGlsZShudWxsIT09bik7MD09PVd1JiYoV3U9NSl9ZnVuY3Rpb24gSXIoZSxuKXtkb3t2YXIgdD1SdChlLmFsdGVybmF0ZSxlKTtpZihudWxsIT09dClyZXR1cm4gdC5mbGFncyY9MzI3Njcsdm9pZChOdT10KTtpZihudWxsIT09KHQ9ZS5yZXR1cm4pJiYodC5mbGFnc3w9MzI3NjgsdC5zdWJ0cmVlRmxhZ3M9MCx0LmRlbGV0aW9ucz1udWxsKSwhbiYmbnVsbCE9PShlPWUuc2libGluZykpcmV0dXJuIHZvaWQoTnU9ZSk7TnU9ZT10fXdoaWxlKG51bGwhPT1lKTtXdT02LE51PW51bGx9ZnVuY3Rpb24gRnIoZSxuLHQsbCxhLG8sdSxpLHMsYyl7dmFyIGY9UGwuVCxkPXFsKCk7dHJ5eyRsKDIpLFBsLlQ9bnVsbCxmdW5jdGlvbihlLG4sdCxsLGEsbyl7ZG97V3IoKX13aGlsZShudWxsIT09WHUpO2lmKDAhPSg2JlJ1KSl0aHJvdyBFcnJvcihyKDMyNykpO3ZhciB1PWUuZmluaXNoZWRXb3JrO2lmKGw9ZS5maW5pc2hlZExhbmVzLG51bGw9PT11KXJldHVybiBudWxsO2lmKGUuZmluaXNoZWRXb3JrPW51bGwsZS5maW5pc2hlZExhbmVzPTAsdT09PWUuY3VycmVudCl0aHJvdyBFcnJvcihyKDE3NykpO2UuY2FsbGJhY2tOb2RlPW51bGwsZS5jYWxsYmFja1ByaW9yaXR5PTAsZS5jYW5jZWxQZW5kaW5nQ29tbWl0PW51bGw7dmFyIGk9dS5sYW5lc3x1LmNoaWxkTGFuZXM7aWYoZnVuY3Rpb24oZSxuLHQscil7dmFyIGw9ZS5wZW5kaW5nTGFuZXM7ZS5wZW5kaW5nTGFuZXM9dCxlLnN1c3BlbmRlZExhbmVzPTAsZS5waW5nZWRMYW5lcz0wLGUud2FybUxhbmVzPTAsZS5leHBpcmVkTGFuZXMmPXQsZS5lbnRhbmdsZWRMYW5lcyY9dCxlLmVycm9yUmVjb3ZlcnlEaXNhYmxlZExhbmVzJj10LGUuc2hlbGxTdXNwZW5kQ291bnRlcj0wLG49ZS5lbnRhbmdsZW1lbnRzO3ZhciBhPWUuZXhwaXJhdGlvblRpbWVzLG89ZS5oaWRkZW5VcGRhdGVzO2Zvcih0PWwmfnQ7MDx0Oyl7dmFyIHU9MzEtVWEodCk7bD0xPDx1LG5bdV09MCxhW3VdPS0xO3ZhciBpPW9bdV07aWYobnVsbCE9PWkpZm9yKG9bdV09bnVsbCx1PTA7dTxpLmxlbmd0aDt1Kyspe3ZhciBzPWlbdV07bnVsbCE9PXMmJihzLmxhbmUmPS01MzY4NzA5MTMpfXQmPX5sfTAhPT1yJiZrKGUsciwwKX0oZSxsLGl8PXBvLG8pLGU9PT1UdSYmKE51PVR1PW51bGwsTHU9MCksMD09KDEwMjU2JnUuc3VidHJlZUZsYWdzKSYmMD09KDEwMjU2JnUuZmxhZ3MpfHxLdXx8KEt1PSEwLGVpPWksbmk9dCxXYShWYSwoZnVuY3Rpb24oKXtyZXR1cm4gV3IoKSxudWxsfSkpKSx0PTAhPSgxNTk5MCZ1LmZsYWdzKSwwIT0oMTU5OTAmdS5zdWJ0cmVlRmxhZ3MpfHx0KXt0PVBsLlQsUGwuVD1udWxsLG89cWwoKSwkbCgyKTt2YXIgcz1SdTtSdXw9NCxmdW5jdGlvbihlLG4pe2ZvcihVbChlLmNvbnRhaW5lckluZm8pLFN1PW47bnVsbCE9PVN1OylpZihuPShlPVN1KS5jaGlsZCwwIT0oMTAyOCZlLnN1YnRyZWVGbGFncykmJm51bGwhPT1uKW4ucmV0dXJuPWUsU3U9bjtlbHNlIGZvcig7bnVsbCE9PVN1Oyl7dmFyIHQ9KGU9U3UpLmFsdGVybmF0ZTtzd2l0Y2gobj1lLmZsYWdzLGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgNTpjYXNlIDI2OmNhc2UgMjc6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2Nhc2UgMTppZigwIT0oMTAyNCZuKSYmbnVsbCE9PXQpe249dm9pZCAwO3ZhciBsPWUsYT10Lm1lbW9pemVkUHJvcHM7dD10Lm1lbW9pemVkU3RhdGU7dmFyIG89bC5zdGF0ZU5vZGU7dHJ5e3ZhciB1PURuKGwudHlwZSxhLChsLmVsZW1lbnRUeXBlLGwudHlwZSkpO249by5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSh1LHQpLG8uX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9bn1jYXRjaChlKXtqcihsLGwucmV0dXJuLGUpfX1icmVhaztjYXNlIDM6MCE9KDEwMjQmbikmJk9sJiZ2YShlLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztkZWZhdWx0OmlmKDAhPSgxMDI0Jm4pKXRocm93IEVycm9yKHIoMTYzKSl9aWYobnVsbCE9PShuPWUuc2libGluZykpe24ucmV0dXJuPWUucmV0dXJuLFN1PW47YnJlYWt9U3U9ZS5yZXR1cm59dT1rdSxrdT0hMX0oZSx1KSxZdCh1LGUpLERsKGUuY29udGFpbmVySW5mbyksZS5jdXJyZW50PXUsUXQoZSx1LmFsdGVybmF0ZSx1KSxBYSgpLFJ1PXMsJGwobyksUGwuVD10fWVsc2UgZS5jdXJyZW50PXU7aWYoS3U/KEt1PSExLFh1PWUsWnU9bCk6TXIoZSxpKSwwPT09KGk9ZS5wZW5kaW5nTGFuZXMpJiYoSnU9bnVsbCksdS5zdGF0ZU5vZGUsTShlKSxudWxsIT09bilmb3IoYT1lLm9uUmVjb3ZlcmFibGVFcnJvcix1PTA7dTxuLmxlbmd0aDt1KyspYSgoaT1uW3VdKS52YWx1ZSx7Y29tcG9uZW50U3RhY2s6aS5zdGFja30pOzAhPSgzJlp1KSYmV3IoKSxpPWUucGVuZGluZ0xhbmVzLDAhPSg0MTk0MjE4JmwpJiYwIT0oNDImaSk/ZT09PXJpP3RpKys6KHRpPTAscmk9ZSk6dGk9MCxXKDApfShlLG4sdCxsLGQsYSl9ZmluYWxseXtQbC5UPWYsJGwoZCl9fWZ1bmN0aW9uIE1yKGUsbil7MD09KGUucG9vbGVkQ2FjaGVMYW5lcyY9bikmJm51bGwhPShuPWUucG9vbGVkQ2FjaGUpJiYoZS5wb29sZWRDYWNoZT1udWxsLFN0KG4pKX1mdW5jdGlvbiBXcigpe2lmKG51bGwhPT1YdSl7dmFyIGU9WHUsbj1laTtlaT0wO3ZhciB0PXgoWnUpLGw9MzI+dD8zMjp0O3Q9UGwuVDt2YXIgYT1xbCgpO3RyeXtpZigkbChsKSxQbC5UPW51bGwsbnVsbD09PVh1KXZhciBvPSExO2Vsc2V7bD1uaSxuaT1udWxsO3ZhciB1PVh1LGk9WnU7aWYoWHU9bnVsbCxadT0wLDAhPSg2JlJ1KSl0aHJvdyBFcnJvcihyKDMzMSkpO3ZhciBzPVJ1O1J1fD00LGNyKHUuY3VycmVudCkscnIodSx1LmN1cnJlbnQsaSxsKSxSdT1zLFcoMCksR2EmJkdhLm9uUG9zdENvbW1pdEZpYmVyUm9vdCxvPSEwfXJldHVybiBvfWZpbmFsbHl7JGwoYSksUGwuVD10LE1yKGUsbil9fXJldHVybiExfWZ1bmN0aW9uIEhyKGUsbix0KXtuPUModCxuKSxudWxsIT09KGU9WShlLG49TW4oZS5zdGF0ZU5vZGUsbiwyKSwyKSkmJihTKGUsMiksTShlKSl9ZnVuY3Rpb24ganIoZSxuLHQpe2lmKDM9PT1lLnRhZylIcihlLGUsdCk7ZWxzZSBmb3IoO251bGwhPT1uOyl7aWYoMz09PW4udGFnKXtIcihuLGUsdCk7YnJlYWt9aWYoMT09PW4udGFnKXt2YXIgcj1uLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUp1fHwhSnUuaGFzKHIpKSl7ZT1DKHQsZSksbnVsbCE9PShyPVkobix0PVduKDIpLDIpKSYmKEhuKHQscixuLGUpLFMociwyKSxNKHIpKTticmVha319bj1uLnJldHVybn19ZnVuY3Rpb24gQXIoZSxuLHQpe3ZhciByPWUucGluZ0NhY2hlO2lmKG51bGw9PT1yKXtyPWUucGluZ0NhY2hlPW5ldyBfdTt2YXIgbD1uZXcgU2V0O3Iuc2V0KG4sbCl9ZWxzZSB2b2lkIDA9PT0obD1yLmdldChuKSkmJihsPW5ldyBTZXQsci5zZXQobixsKSk7bC5oYXModCl8fChGdT0hMCxsLmFkZCh0KSxlPVFyLmJpbmQobnVsbCxlLG4sdCksbi50aGVuKGUsZSkpfWZ1bmN0aW9uIFFyKGUsbix0KXt2YXIgcj1lLnBpbmdDYWNoZTtudWxsIT09ciYmci5kZWxldGUobiksZS5waW5nZWRMYW5lc3w9ZS5zdXNwZW5kZWRMYW5lcyZ0LGUud2FybUxhbmVzJj1+dCxUdT09PWUmJihMdSZ0KT09PXQmJig0PT09V3V8fDM9PT1XdSYmKDYyOTE0NTYwJkx1KT09PUx1JiYzMDA+UWEoKS1xdT8wPT0oMiZSdSkmJndyKGUsMCk6QXV8PXQsT3U9PT1MdSYmKE91PTApKSxNKGUpfWZ1bmN0aW9uIE9yKGUsbil7MD09PW4mJihuPWIoKSksbnVsbCE9PShlPUQoZSxuKSkmJihTKGUsbiksTShlKSl9ZnVuY3Rpb24gQnIoZSl7dmFyIG49ZS5tZW1vaXplZFN0YXRlLHQ9MDtudWxsIT09biYmKHQ9bi5yZXRyeUxhbmUpLE9yKGUsdCl9ZnVuY3Rpb24gVnIoZSxuKXt2YXIgdD0wO3N3aXRjaChlLnRhZyl7Y2FzZSAxMzp2YXIgbD1lLnN0YXRlTm9kZSxhPWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmKHQ9YS5yZXRyeUxhbmUpO2JyZWFrO2Nhc2UgMTk6bD1lLnN0YXRlTm9kZTticmVhaztjYXNlIDIyOmw9ZS5zdGF0ZU5vZGUuX3JldHJ5Q2FjaGU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihyKDMxNCkpfW51bGwhPT1sJiZsLmRlbGV0ZShuKSxPcihlLHQpfWZ1bmN0aW9uICRyKGUsbix0LHIpe3RoaXMudGFnPWUsdGhpcy5rZXk9dCx0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsLHRoaXMuaW5kZXg9MCx0aGlzLnJlZkNsZWFudXA9dGhpcy5yZWY9bnVsbCx0aGlzLnBlbmRpbmdQcm9wcz1uLHRoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsLHRoaXMubW9kZT1yLHRoaXMuc3VidHJlZUZsYWdzPXRoaXMuZmxhZ3M9MCx0aGlzLmRlbGV0aW9ucz1udWxsLHRoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTAsdGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBxcihlKXtyZXR1cm4hKCEoZT1lLnByb3RvdHlwZSl8fCFlLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFlyKGUsbil7dmFyIHI9ZS5hbHRlcm5hdGU7cmV0dXJuIG51bGw9PT1yPygocj10KGUudGFnLG4sZS5rZXksZS5tb2RlKSkuZWxlbWVudFR5cGU9ZS5lbGVtZW50VHlwZSxyLnR5cGU9ZS50eXBlLHIuc3RhdGVOb2RlPWUuc3RhdGVOb2RlLHIuYWx0ZXJuYXRlPWUsZS5hbHRlcm5hdGU9cik6KHIucGVuZGluZ1Byb3BzPW4sci50eXBlPWUudHlwZSxyLmZsYWdzPTAsci5zdWJ0cmVlRmxhZ3M9MCxyLmRlbGV0aW9ucz1udWxsKSxyLmZsYWdzPTMxNDU3MjgwJmUuZmxhZ3Msci5jaGlsZExhbmVzPWUuY2hpbGRMYW5lcyxyLmxhbmVzPWUubGFuZXMsci5jaGlsZD1lLmNoaWxkLHIubWVtb2l6ZWRQcm9wcz1lLm1lbW9pemVkUHJvcHMsci5tZW1vaXplZFN0YXRlPWUubWVtb2l6ZWRTdGF0ZSxyLnVwZGF0ZVF1ZXVlPWUudXBkYXRlUXVldWUsbj1lLmRlcGVuZGVuY2llcyxyLmRlcGVuZGVuY2llcz1udWxsPT09bj9udWxsOntsYW5lczpuLmxhbmVzLGZpcnN0Q29udGV4dDpuLmZpcnN0Q29udGV4dH0sci5zaWJsaW5nPWUuc2libGluZyxyLmluZGV4PWUuaW5kZXgsci5yZWY9ZS5yZWYsci5yZWZDbGVhbnVwPWUucmVmQ2xlYW51cCxyfWZ1bmN0aW9uIEdyKGUsbil7ZS5mbGFncyY9MzE0NTcyODI7dmFyIHQ9ZS5hbHRlcm5hdGU7cmV0dXJuIG51bGw9PT10PyhlLmNoaWxkTGFuZXM9MCxlLmxhbmVzPW4sZS5jaGlsZD1udWxsLGUuc3VidHJlZUZsYWdzPTAsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwsZS5zdGF0ZU5vZGU9bnVsbCk6KGUuY2hpbGRMYW5lcz10LmNoaWxkTGFuZXMsZS5sYW5lcz10LmxhbmVzLGUuY2hpbGQ9dC5jaGlsZCxlLnN1YnRyZWVGbGFncz0wLGUuZGVsZXRpb25zPW51bGwsZS5tZW1vaXplZFByb3BzPXQubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9dC5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9dC51cGRhdGVRdWV1ZSxlLnR5cGU9dC50eXBlLG49dC5kZXBlbmRlbmNpZXMsZS5kZXBlbmRlbmNpZXM9bnVsbD09PW4/bnVsbDp7bGFuZXM6bi5sYW5lcyxmaXJzdENvbnRleHQ6bi5maXJzdENvbnRleHR9KSxlfWZ1bmN0aW9uIEpyKGUsbixsLGEsbyx1KXt2YXIgaT0wO2lmKGE9ZSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlKXFyKGUpJiYoaT0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiBlKWk9NTtlbHNlIGU6c3dpdGNoKGUpe2Nhc2UgZGw6cmV0dXJuIEtyKGwuY2hpbGRyZW4sbyx1LG4pO2Nhc2UgcGw6aT04LG98PTI0O2JyZWFrO2Nhc2UgbWw6cmV0dXJuKGU9dCgxMixsLG4sMnxvKSkuZWxlbWVudFR5cGU9bWwsZS5sYW5lcz11LGU7Y2FzZSB2bDpyZXR1cm4oZT10KDEzLGwsbixvKSkuZWxlbWVudFR5cGU9dmwsZS5sYW5lcz11LGU7Y2FzZSBTbDpyZXR1cm4oZT10KDE5LGwsbixvKSkuZWxlbWVudFR5cGU9U2wsZS5sYW5lcz11LGU7Y2FzZSB4bDpyZXR1cm4gWHIobCxvLHUsbik7ZGVmYXVsdDppZihcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWUpc3dpdGNoKGUuJCR0eXBlb2Ype2Nhc2UgaGw6Y2FzZSB5bDppPTEwO2JyZWFrIGU7Y2FzZSBnbDppPTk7YnJlYWsgZTtjYXNlIGJsOmk9MTE7YnJlYWsgZTtjYXNlIGtsOmk9MTQ7YnJlYWsgZTtjYXNlIHdsOmk9MTYsYT1udWxsO2JyZWFrIGV9aT0yOSxsPUVycm9yKHIoMTMwLG51bGw9PT1lP1wibnVsbFwiOnR5cGVvZiBlLFwiXCIpKSxhPW51bGx9cmV0dXJuKG49dChpLGwsbixvKSkuZWxlbWVudFR5cGU9ZSxuLnR5cGU9YSxuLmxhbmVzPXUsbn1mdW5jdGlvbiBLcihlLG4scixsKXtyZXR1cm4oZT10KDcsZSxsLG4pKS5sYW5lcz1yLGV9ZnVuY3Rpb24gWHIoZSxuLGwsYSl7KGU9dCgyMixlLGEsbikpLmVsZW1lbnRUeXBlPXhsLGUubGFuZXM9bDt2YXIgbz17X3Zpc2liaWxpdHk6MSxfcGVuZGluZ1Zpc2liaWxpdHk6MSxfcGVuZGluZ01hcmtlcnM6bnVsbCxfcmV0cnlDYWNoZTpudWxsLF90cmFuc2l0aW9uczpudWxsLF9jdXJyZW50Om51bGwsZGV0YWNoOmZ1bmN0aW9uKCl7dmFyIGU9by5fY3VycmVudDtpZihudWxsPT09ZSl0aHJvdyBFcnJvcihyKDQ1NikpO2lmKDA9PSgyJm8uX3BlbmRpbmdWaXNpYmlsaXR5KSl7dmFyIG49RChlLDIpO251bGwhPT1uJiYoby5fcGVuZGluZ1Zpc2liaWxpdHl8PTIsaHIobiwwLDIpKX19LGF0dGFjaDpmdW5jdGlvbigpe3ZhciBlPW8uX2N1cnJlbnQ7aWYobnVsbD09PWUpdGhyb3cgRXJyb3Iocig0NTYpKTtpZigwIT0oMiZvLl9wZW5kaW5nVmlzaWJpbGl0eSkpe3ZhciBuPUQoZSwyKTtudWxsIT09biYmKG8uX3BlbmRpbmdWaXNpYmlsaXR5Jj0tMyxocihuLDAsMikpfX19O3JldHVybiBlLnN0YXRlTm9kZT1vLGV9ZnVuY3Rpb24gWnIoZSxuLHIpe3JldHVybihlPXQoNixlLG51bGwsbikpLmxhbmVzPXIsZX1mdW5jdGlvbiBlbChlLG4scil7cmV0dXJuKG49dCg0LG51bGwhPT1lLmNoaWxkcmVuP2UuY2hpbGRyZW46W10sZS5rZXksbikpLmxhbmVzPXIsbi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86ZS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmUuaW1wbGVtZW50YXRpb259LG59ZnVuY3Rpb24gbmwoZSxuLHQscixsLGEsbyx1KXt0aGlzLnRhZz0xLHRoaXMuY29udGFpbmVySW5mbz1lLHRoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsLHRoaXMudGltZW91dEhhbmRsZT1RbCx0aGlzLmNhbGxiYWNrTm9kZT10aGlzLm5leHQ9dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9dGhpcy5jYW5jZWxQZW5kaW5nQ29tbWl0PW51bGwsdGhpcy5jYWxsYmFja1ByaW9yaXR5PTAsdGhpcy5leHBpcmF0aW9uVGltZXM9digtMSksdGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLnNoZWxsU3VzcGVuZENvdW50ZXI9dGhpcy5lcnJvclJlY292ZXJ5RGlzYWJsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy53YXJtTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTAsdGhpcy5lbnRhbmdsZW1lbnRzPXYoMCksdGhpcy5oaWRkZW5VcGRhdGVzPXYobnVsbCksdGhpcy5pZGVudGlmaWVyUHJlZml4PXIsdGhpcy5vblVuY2F1Z2h0RXJyb3I9bCx0aGlzLm9uQ2F1Z2h0RXJyb3I9YSx0aGlzLm9uUmVjb3ZlcmFibGVFcnJvcj1vLHRoaXMucG9vbGVkQ2FjaGU9bnVsbCx0aGlzLnBvb2xlZENhY2hlTGFuZXM9MCx0aGlzLmZvcm1TdGF0ZT11LHRoaXMuaW5jb21wbGV0ZVRyYW5zaXRpb25zPW5ldyBNYXB9ZnVuY3Rpb24gdGwoZSxuLHQscixsLGEpe2w9ZnVuY3Rpb24oZSl7cmV0dXJuIGU/ZT1MYTpMYX0obCksbnVsbD09PXIuY29udGV4dD9yLmNvbnRleHQ9bDpyLnBlbmRpbmdDb250ZXh0PWwsKHI9cShuKSkucGF5bG9hZD17ZWxlbWVudDp0fSxudWxsIT09KGE9dm9pZCAwPT09YT9udWxsOmEpJiYoci5jYWxsYmFjaz1hKSxudWxsIT09KHQ9WShlLHIsbikpJiYoaHIodCwwLG4pLEcodCxlLG4pKX12YXIgcmwsbGwsYWw9e30sb2w9ZSx1bD11LGlsPU9iamVjdC5hc3NpZ24sc2w9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksY2w9U3ltYm9sLmZvcihcInJlYWN0LnRyYW5zaXRpb25hbC5lbGVtZW50XCIpLGZsPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksZGw9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLHBsPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSxtbD1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksaGw9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLGdsPVN5bWJvbC5mb3IoXCJyZWFjdC5jb25zdW1lclwiKSx5bD1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxibD1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksdmw9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLFNsPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLGtsPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLHdsPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLHhsPVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIiksemw9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9fY2FjaGVfc2VudGluZWxcIiksQ2w9U3ltYm9sLml0ZXJhdG9yLEVsPVN5bWJvbC5mb3IoXCJyZWFjdC5jbGllbnQucmVmZXJlbmNlXCIpLFBsPW9sLl9fQ0xJRU5UX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1dBUk5fVVNFUlNfVEhFWV9DQU5OT1RfVVBHUkFERSxfbD0hMSxSbD1BcnJheS5pc0FycmF5LFRsPW4uZ2V0UHVibGljSW5zdGFuY2UsTmw9bi5nZXRSb290SG9zdENvbnRleHQsTGw9bi5nZXRDaGlsZEhvc3RDb250ZXh0LFVsPW4ucHJlcGFyZUZvckNvbW1pdCxEbD1uLnJlc2V0QWZ0ZXJDb21taXQsSWw9bi5jcmVhdGVJbnN0YW5jZSxGbD1uLmFwcGVuZEluaXRpYWxDaGlsZCxNbD1uLmZpbmFsaXplSW5pdGlhbENoaWxkcmVuLFdsPW4uc2hvdWxkU2V0VGV4dENvbnRlbnQsSGw9bi5jcmVhdGVUZXh0SW5zdGFuY2Usamw9bnVsbCxBbD1udWxsLFFsPW4ubm9UaW1lb3V0LE9sPSEwLEJsPW51bGwsVmw9bnVsbCwkbD1uLnNldEN1cnJlbnRVcGRhdGVQcmlvcml0eSxxbD1uLmdldEN1cnJlbnRVcGRhdGVQcmlvcml0eSxZbD1uLnJlc29sdmVVcGRhdGVQcmlvcml0eSxHbD1uLnNob3VsZEF0dGVtcHRFYWdlclRyYW5zaXRpb24sSmw9bnVsbDtuLnJlcXVlc3RQb3N0UGFpbnRDYWxsYmFjazt2YXIgS2w9bi5tYXlTdXNwZW5kQ29tbWl0LFhsPW51bGwsWmw9bnVsbCxlYT1udWxsLG5hPW51bGwsdGE9bnVsbCxyYT1udWxsLGxhPW51bGwsYWE9bi5hcHBlbmRDaGlsZCxvYT1uLmFwcGVuZENoaWxkVG9Db250YWluZXIsdWE9bi5jb21taXRUZXh0VXBkYXRlLGlhPW51bGwsc2E9bi5jb21taXRVcGRhdGUsY2E9bi5pbnNlcnRCZWZvcmUsZmE9bnVsbCxkYT1uLnJlbW92ZUNoaWxkLHBhPW4ucmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyLG1hPW4ucmVzZXRUZXh0Q29udGVudCxoYT1udWxsLGdhPW51bGwseWE9bnVsbCxiYT1udWxsLHZhPW4uY2xlYXJDb250YWluZXIsU2E9bnVsbCxrYT1udWxsLHdhPW51bGwseGE9bnVsbCx6YT1udWxsLENhPW51bGwsRWE9bnVsbCxQYT1udWxsLF9hPW51bGwsUmE9bnVsbCxUYT1bXSxOYT0tMSxMYT17fSxVYT1NYXRoLmNsejMyP01hdGguY2x6MzI6ZnVuY3Rpb24oZSl7cmV0dXJuIDA9PShlPj4+PTApPzMyOjMxLShEYShlKS9JYXwwKXwwfSxEYT1NYXRoLmxvZyxJYT1NYXRoLkxOMixGYT0xMjgsTWE9NDE5NDMwNCxXYT11bC51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEhhPXVsLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLGphPXVsLnVuc3RhYmxlX3Nob3VsZFlpZWxkLEFhPXVsLnVuc3RhYmxlX3JlcXVlc3RQYWludCxRYT11bC51bnN0YWJsZV9ub3csT2E9dWwudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksQmE9dWwudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksVmE9dWwudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksJGE9dWwudW5zdGFibGVfSWRsZVByaW9yaXR5LHFhPXVsLmxvZyxZYT11bC51bnN0YWJsZV9zZXREaXNhYmxlWWllbGRWYWx1ZSxHYT1udWxsLEphPVwiZnVuY3Rpb25cIj09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gZT09PW4mJigwIT09ZXx8MS9lPT0xL24pfHxlIT1lJiZuIT1ufSxLYT1uZXcgV2Vha01hcCxYYT1bXSxaYT0wLGVvPW51bGwsbm89W10sdG89MCxybz1udWxsLGxvPWYobnVsbCksYW89ZihudWxsKSxvbz1mKG51bGwpLHVvPWYobnVsbCksaW89ITEsc289bnVsbDtFcnJvcihyKDUxOSkpO3ZhciBjbz1bXSxmbz0wLHBvPTAsbW89bnVsbCxobz1udWxsLGdvPSExLHlvPSExLGJvPSExLHZvPTAsU289bnVsbCxrbz0wLHdvPTAseG89bnVsbCx6bz0hMSxDbz0hMSxFbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFBvPUVycm9yKHIoNDYwKSksX289RXJyb3Iocig0NzQpKSxSbz17dGhlbjpmdW5jdGlvbigpe319LFRvPW51bGwsTm89bnVsbCxMbz0wLFVvPWNlKCEwKSxEbz1jZSghMSksSW89ZihudWxsKSxGbz1mKDApLE1vPWYobnVsbCksV289bnVsbCxIbz1mKDApLGpvPTAsQW89bnVsbCxRbz1udWxsLE9vPW51bGwsQm89ITEsVm89ITEsJG89ITEscW89MCxZbz0wLEdvPW51bGwsSm89MCxLbz1mdW5jdGlvbigpe3JldHVybntsYXN0RWZmZWN0Om51bGwsZXZlbnRzOm51bGwsc3RvcmVzOm51bGwsbWVtb0NhY2hlOm51bGx9fSxYbz17cmVhZENvbnRleHQ6Z3QsdXNlOk5lLHVzZUNhbGxiYWNrOnZlLHVzZUNvbnRleHQ6dmUsdXNlRWZmZWN0OnZlLHVzZUltcGVyYXRpdmVIYW5kbGU6dmUsdXNlTGF5b3V0RWZmZWN0OnZlLHVzZUluc2VydGlvbkVmZmVjdDp2ZSx1c2VNZW1vOnZlLHVzZVJlZHVjZXI6dmUsdXNlUmVmOnZlLHVzZVN0YXRlOnZlLHVzZURlYnVnVmFsdWU6dmUsdXNlRGVmZXJyZWRWYWx1ZTp2ZSx1c2VUcmFuc2l0aW9uOnZlLHVzZVN5bmNFeHRlcm5hbFN0b3JlOnZlLHVzZUlkOnZlfTtYby51c2VDYWNoZVJlZnJlc2g9dmUsWG8udXNlTWVtb0NhY2hlPXZlLFhvLnVzZUhvc3RUcmFuc2l0aW9uU3RhdHVzPXZlLFhvLnVzZUZvcm1TdGF0ZT12ZSxYby51c2VBY3Rpb25TdGF0ZT12ZSxYby51c2VPcHRpbWlzdGljPXZlO3ZhciBabz17cmVhZENvbnRleHQ6Z3QsdXNlOk5lLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGUsbil7cmV0dXJuIF9lKCkubWVtb2l6ZWRTdGF0ZT1bZSx2b2lkIDA9PT1uP251bGw6bl0sZX0sdXNlQ29udGV4dDpndCx1c2VFZmZlY3Q6dW4sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihlLG4sdCl7dD1udWxsIT10P3QuY29uY2F0KFtlXSk6bnVsbCxhbig0MTk0MzA4LDQsZG4uYmluZChudWxsLG4sZSksdCl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihlLG4pe3JldHVybiBhbig0MTk0MzA4LDQsZSxuKX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGUsbil7YW4oNCwyLGUsbil9LHVzZU1lbW86ZnVuY3Rpb24oZSxuKXt2YXIgdD1fZSgpO249dm9pZCAwPT09bj9udWxsOm47dmFyIHI9ZSgpO2lmKCRvKXt6KCEwKTt0cnl7ZSgpfWZpbmFsbHl7eighMSl9fXJldHVybiB0Lm1lbW9pemVkU3RhdGU9W3Isbl0scn0sdXNlUmVkdWNlcjpmdW5jdGlvbihlLG4sdCl7dmFyIHI9X2UoKTtpZih2b2lkIDAhPT10KXt2YXIgbD10KG4pO2lmKCRvKXt6KCEwKTt0cnl7dChuKX1maW5hbGx5e3ooITEpfX19ZWxzZSBsPW47cmV0dXJuIHIubWVtb2l6ZWRTdGF0ZT1yLmJhc2VTdGF0ZT1sLGU9e3BlbmRpbmc6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjplLGxhc3RSZW5kZXJlZFN0YXRlOmx9LHIucXVldWU9ZSxlPWUuZGlzcGF0Y2g9em4uYmluZChudWxsLEFvLGUpLFtyLm1lbW9pemVkU3RhdGUsZV19LHVzZVJlZjpmdW5jdGlvbihlKXtyZXR1cm4gZT17Y3VycmVudDplfSxfZSgpLm1lbW9pemVkU3RhdGU9ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oZSl7dmFyIG49KGU9T2UoZSkpLnF1ZXVlLHQ9Q24uYmluZChudWxsLEFvLG4pO3JldHVybiBuLmRpc3BhdGNoPXQsW2UubWVtb2l6ZWRTdGF0ZSx0XX0sdXNlRGVidWdWYWx1ZTptbix1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGUsbil7cmV0dXJuIHluKF9lKCksZSxuKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBlPU9lKCExKTtyZXR1cm4gZT12bi5iaW5kKG51bGwsQW8sZS5xdWV1ZSwhMCwhMSksX2UoKS5tZW1vaXplZFN0YXRlPWUsWyExLGVdfSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpmdW5jdGlvbihlLG4sdCl7dmFyIGw9QW8sYT1fZSgpO2lmKHQ9bigpLG51bGw9PT1UdSl0aHJvdyBFcnJvcihyKDM0OSkpOzAhPSg2MCZMdSl8fFdlKGwsbix0KSxhLm1lbW9pemVkU3RhdGU9dDt2YXIgbz17dmFsdWU6dCxnZXRTbmFwc2hvdDpufTtyZXR1cm4gYS5xdWV1ZT1vLHVuKGplLmJpbmQobnVsbCxsLG8sZSksW2VdKSxsLmZsYWdzfD0yMDQ4LHJuKDksSGUuYmluZChudWxsLGwsbyx0LG4pLHtkZXN0cm95OnZvaWQgMH0sbnVsbCksdH0sdXNlSWQ6ZnVuY3Rpb24oKXt2YXIgZT1fZSgpLG49VHUuaWRlbnRpZmllclByZWZpeDtyZXR1cm4gbj1cIjpcIituK1wiclwiKyhKbysrKS50b1N0cmluZygzMikrXCI6XCIsZS5tZW1vaXplZFN0YXRlPW59LHVzZUNhY2hlUmVmcmVzaDpmdW5jdGlvbigpe3JldHVybiBfZSgpLm1lbW9pemVkU3RhdGU9eG4uYmluZChudWxsLEFvKX19O1pvLnVzZU1lbW9DYWNoZT1MZSxaby51c2VIb3N0VHJhbnNpdGlvblN0YXR1cz1Tbixaby51c2VGb3JtU3RhdGU9WGUsWm8udXNlQWN0aW9uU3RhdGU9WGUsWm8udXNlT3B0aW1pc3RpYz1mdW5jdGlvbihlKXt2YXIgbj1fZSgpO24ubWVtb2l6ZWRTdGF0ZT1uLmJhc2VTdGF0ZT1lO3ZhciB0PXtwZW5kaW5nOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6bnVsbCxsYXN0UmVuZGVyZWRTdGF0ZTpudWxsfTtyZXR1cm4gbi5xdWV1ZT10LG49UG4uYmluZChudWxsLEFvLCEwLHQpLHQuZGlzcGF0Y2g9bixbZSxuXX07dmFyIGV1PXtyZWFkQ29udGV4dDpndCx1c2U6TmUsdXNlQ2FsbGJhY2s6aG4sdXNlQ29udGV4dDpndCx1c2VFZmZlY3Q6c24sdXNlSW1wZXJhdGl2ZUhhbmRsZTpwbix1c2VJbnNlcnRpb25FZmZlY3Q6Y24sdXNlTGF5b3V0RWZmZWN0OmZuLHVzZU1lbW86Z24sdXNlUmVkdWNlcjpEZSx1c2VSZWY6bG4sdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gRGUoVWUpfSx1c2VEZWJ1Z1ZhbHVlOm1uLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gYm4oUmUoKSxRby5tZW1vaXplZFN0YXRlLGUsbil9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgZT1EZShVZSlbMF0sbj1SZSgpLm1lbW9pemVkU3RhdGU7cmV0dXJuW1wiYm9vbGVhblwiPT10eXBlb2YgZT9lOlRlKGUpLG5dfSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpNZSx1c2VJZDprbn07ZXUudXNlQ2FjaGVSZWZyZXNoPXduLGV1LnVzZU1lbW9DYWNoZT1MZSxldS51c2VIb3N0VHJhbnNpdGlvblN0YXR1cz1TbixldS51c2VGb3JtU3RhdGU9WmUsZXUudXNlQWN0aW9uU3RhdGU9WmUsZXUudXNlT3B0aW1pc3RpYz1mdW5jdGlvbihlLG4pe3JldHVybiBCZShSZSgpLDAsZSxuKX07dmFyIG51PXtyZWFkQ29udGV4dDpndCx1c2U6TmUsdXNlQ2FsbGJhY2s6aG4sdXNlQ29udGV4dDpndCx1c2VFZmZlY3Q6c24sdXNlSW1wZXJhdGl2ZUhhbmRsZTpwbix1c2VJbnNlcnRpb25FZmZlY3Q6Y24sdXNlTGF5b3V0RWZmZWN0OmZuLHVzZU1lbW86Z24sdXNlUmVkdWNlcjpGZSx1c2VSZWY6bG4sdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gRmUoVWUpfSx1c2VEZWJ1Z1ZhbHVlOm1uLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSxuKXt2YXIgdD1SZSgpO3JldHVybiBudWxsPT09UW8/eW4odCxlLG4pOmJuKHQsUW8ubWVtb2l6ZWRTdGF0ZSxlLG4pfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGU9RmUoVWUpWzBdLG49UmUoKS5tZW1vaXplZFN0YXRlO3JldHVybltcImJvb2xlYW5cIj09dHlwZW9mIGU/ZTpUZShlKSxuXX0sdXNlU3luY0V4dGVybmFsU3RvcmU6TWUsdXNlSWQ6a259O251LnVzZUNhY2hlUmVmcmVzaD13bixudS51c2VNZW1vQ2FjaGU9TGUsbnUudXNlSG9zdFRyYW5zaXRpb25TdGF0dXM9U24sbnUudXNlRm9ybVN0YXRlPXRuLG51LnVzZUFjdGlvblN0YXRlPXRuLG51LnVzZU9wdGltaXN0aWM9ZnVuY3Rpb24oZSxuKXt2YXIgdD1SZSgpO3JldHVybiBudWxsIT09UW8/QmUodCwwLGUsbik6KHQuYmFzZVN0YXRlPWUsW2UsdC5xdWV1ZS5kaXNwYXRjaF0pfTt2YXIgdHU9e2lzTW91bnRlZDpmdW5jdGlvbihlKXtyZXR1cm4hIShlPWUuX3JlYWN0SW50ZXJuYWxzKSYmZnVuY3Rpb24oZSl7dmFyIG49ZSx0PWU7aWYoZS5hbHRlcm5hdGUpZm9yKDtuLnJldHVybjspbj1uLnJldHVybjtlbHNle2U9bjtkb3swIT0oNDA5OCYobj1lKS5mbGFncykmJih0PW4ucmV0dXJuKSxlPW4ucmV0dXJufXdoaWxlKGUpfXJldHVybiAzPT09bi50YWc/dDpudWxsfShlKT09PWV9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihlLG4sdCl7ZT1lLl9yZWFjdEludGVybmFsczt2YXIgcj1wcigpLGw9cShyKTtsLnBheWxvYWQ9bixudWxsIT10JiYobC5jYWxsYmFjaz10KSxudWxsIT09KG49WShlLGwscikpJiYoaHIobiwwLHIpLEcobixlLHIpKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihlLG4sdCl7ZT1lLl9yZWFjdEludGVybmFsczt2YXIgcj1wcigpLGw9cShyKTtsLnRhZz0xLGwucGF5bG9hZD1uLG51bGwhPXQmJihsLmNhbGxiYWNrPXQpLG51bGwhPT0obj1ZKGUsbCxyKSkmJihocihuLDAsciksRyhuLGUscikpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oZSxuKXtlPWUuX3JlYWN0SW50ZXJuYWxzO3ZhciB0PXByKCkscj1xKHQpO3IudGFnPTIsbnVsbCE9biYmKHIuY2FsbGJhY2s9biksbnVsbCE9PShuPVkoZSxyLHQpKSYmKGhyKG4sMCx0KSxHKG4sZSx0KSl9fTtcImZ1bmN0aW9uXCI9PXR5cGVvZiByZXBvcnRFcnJvciYmcmVwb3J0RXJyb3I7dmFyIHJ1PUVycm9yKHIoNDYxKSksbHU9ITEsYXU9e2RlaHlkcmF0ZWQ6bnVsbCx0cmVlQ29udGV4dDpudWxsLHJldHJ5TGFuZTowfSxvdT1mKG51bGwpLHV1PW51bGwsaXU9bnVsbCxzdT1udWxsLGN1PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBBYm9ydENvbnRyb2xsZXI/QWJvcnRDb250cm9sbGVyOmZ1bmN0aW9uKCl7dmFyIGU9W10sbj10aGlzLnNpZ25hbD17YWJvcnRlZDohMSxhZGRFdmVudExpc3RlbmVyOmZ1bmN0aW9uKG4sdCl7ZS5wdXNoKHQpfX07dGhpcy5hYm9ydD1mdW5jdGlvbigpe24uYWJvcnRlZD0hMCxlLmZvckVhY2goKGZ1bmN0aW9uKGUpe3JldHVybiBlKCl9KSl9fSxmdT11bC51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLGR1PXVsLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LHB1PXskJHR5cGVvZjp5bCxDb25zdW1lcjpudWxsLFByb3ZpZGVyOm51bGwsX2N1cnJlbnRWYWx1ZTpudWxsLF9jdXJyZW50VmFsdWUyOm51bGwsX3RocmVhZENvdW50OjB9LG11PVBsLlM7UGwuUz1mdW5jdGlvbihlLG4pe1wib2JqZWN0XCI9PXR5cGVvZiBuJiZudWxsIT09biYmXCJmdW5jdGlvblwiPT10eXBlb2Ygbi50aGVuJiZmdW5jdGlvbihlLG4pe2lmKG51bGw9PT1Tbyl7dmFyIHQ9U289W107a289MCx3bz1PKCkseG89e3N0YXR1czpcInBlbmRpbmdcIix2YWx1ZTp2b2lkIDAsdGhlbjpmdW5jdGlvbihlKXt0LnB1c2goZSl9fX1rbysrLG4udGhlbihCLEIpfSgwLG4pLG51bGwhPT1tdSYmbXUoZSxuKX07dmFyIGh1PWYobnVsbCksZ3U9ITEseXU9ITEsYnU9ITEsdnU9XCJmdW5jdGlvblwiPT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldCxTdT1udWxsLGt1PSExLHd1PW51bGwseHU9ITEsenU9bnVsbCxDdT04MTkyLEV1PXtnZXRDYWNoZUZvclR5cGU6ZnVuY3Rpb24oZSl7dmFyIG49Z3QocHUpLHQ9bi5kYXRhLmdldChlKTtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9ZSgpLG4uZGF0YS5zZXQoZSx0KSksdH19O2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIFB1PVN5bWJvbC5mb3I7UHUoXCJzZWxlY3Rvci5jb21wb25lbnRcIiksUHUoXCJzZWxlY3Rvci5oYXNfcHNldWRvX2NsYXNzXCIpLFB1KFwic2VsZWN0b3Iucm9sZVwiKSxQdShcInNlbGVjdG9yLnRlc3RfaWRcIiksUHUoXCJzZWxlY3Rvci50ZXh0XCIpfXZhciBfdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwLFJ1PTAsVHU9bnVsbCxOdT1udWxsLEx1PTAsVXU9MCxEdT1udWxsLEl1PSExLEZ1PSExLE11PTAsV3U9MCxIdT0wLGp1PTAsQXU9MCxRdT0wLE91PTAsQnU9bnVsbCxWdT1udWxsLCR1PSExLHF1PTAsWXU9MS8wLEd1PW51bGwsSnU9bnVsbCxLdT0hMSxYdT1udWxsLFp1PTAsZWk9MCxuaT1udWxsLHRpPTAscmk9bnVsbDtyZXR1cm4gYWwuY3JlYXRlQ29udGFpbmVyPWZ1bmN0aW9uKGUsbixyLGwsYSxvLHUsaSxzLGMpe3JldHVybiBmdW5jdGlvbihlLG4scixsLGEsbyx1LGkscyxjLGYsZCl7cmV0dXJuIGU9bmV3IG5sKGUsbixyLHUsaSxzLGMsbnVsbCksbj0xLCEwPT09byYmKG58PTI0KSxvPXQoMyxudWxsLG51bGwsbiksZS5jdXJyZW50PW8sby5zdGF0ZU5vZGU9ZSwobj12dCgpKS5yZWZDb3VudCsrLGUucG9vbGVkQ2FjaGU9bixuLnJlZkNvdW50Kyssby5tZW1vaXplZFN0YXRlPXtlbGVtZW50OmwsaXNEZWh5ZHJhdGVkOnIsY2FjaGU6bn0sVihvKSxlfShlLG4sITEsbnVsbCwwLGwsbyx1LGkscyl9LGFsLmZsdXNoU3luY1dvcms9ZnVuY3Rpb24oKXtyZXR1cm4gMCE9KDYmUnUpfHwoVygwKSwhMSl9LGFsLnVwZGF0ZUNvbnRhaW5lcj1mdW5jdGlvbihlLG4sdCxyKXt2YXIgbD1uLmN1cnJlbnQsYT1wcigpO3JldHVybiB0bChsLGEsZSxuLHQsciksYX0sYWwudXBkYXRlQ29udGFpbmVyU3luYz1mdW5jdGlvbihlLG4sdCxyKXtyZXR1cm4gMD09PW4udGFnJiZXcigpLHRsKG4uY3VycmVudCwyLGUsbix0LHIpLDJ9LGFsfSxzLmV4cG9ydHMuZGVmYXVsdD1zLmV4cG9ydHMsT2JqZWN0LmRlZmluZVByb3BlcnR5KHMuZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSksby5leHBvcnRzKTphLmV4cG9ydHM9ZnVuY3Rpb24oKXtyZXR1cm4gaXx8KGk9MSxuPWMsXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKG4uZXhwb3J0cz1mdW5jdGlvbihuKXtmdW5jdGlvbiB0KGUsbix0LHIpe3JldHVybiBuZXcgc2EoZSxuLHQscil9ZnVuY3Rpb24gcigpe2NvbnNvbGUuZXJyb3IoXCJEbyBub3QgY2FsbCBIb29rcyBpbnNpZGUgdXNlRWZmZWN0KC4uLiksIHVzZU1lbW8oLi4uKSwgb3Igb3RoZXIgYnVpbHQtaW4gSG9va3MuIFlvdSBjYW4gb25seSBjYWxsIEhvb2tzIGF0IHRoZSB0b3AgbGV2ZWwgb2YgeW91ciBSZWFjdCBmdW5jdGlvbi4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSBodHRwczovL3JlYWN0LmRldi9saW5rL3J1bGVzLW9mLWhvb2tzXCIpfWZ1bmN0aW9uIGwoKXtjb25zb2xlLmVycm9yKFwiQ29udGV4dCBjYW4gb25seSBiZSByZWFkIHdoaWxlIFJlYWN0IGlzIHJlbmRlcmluZy4gSW4gY2xhc3NlcywgeW91IGNhbiByZWFkIGl0IGluIHRoZSByZW5kZXIgbWV0aG9kIG9yIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcy4gSW4gZnVuY3Rpb24gY29tcG9uZW50cywgeW91IGNhbiByZWFkIGl0IGRpcmVjdGx5IGluIHRoZSBmdW5jdGlvbiBib2R5LCBidXQgbm90IGluc2lkZSBIb29rcyBsaWtlIHVzZVJlZHVjZXIoKSBvciB1c2VNZW1vKCkuXCIpfWZ1bmN0aW9uIGEoKXt9ZnVuY3Rpb24gbyhlKXt2YXIgbj1bXTtyZXR1cm4gZS5mb3JFYWNoKChmdW5jdGlvbihlKXtuLnB1c2goZSl9KSksbi5zb3J0KCkuam9pbihcIiwgXCIpfWZ1bmN0aW9uIGkoZSl7cmV0dXJuIG51bGw9PT1lfHxcIm9iamVjdFwiIT10eXBlb2YgZT9udWxsOlwiZnVuY3Rpb25cIj09dHlwZW9mKGU9WWEmJmVbWWFdfHxlW1wiQEBpdGVyYXRvclwiXSk/ZTpudWxsfWZ1bmN0aW9uIHMoZSl7aWYobnVsbD09ZSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlKXJldHVybiBlLiQkdHlwZW9mPT09R2E/bnVsbDplLmRpc3BsYXlOYW1lfHxlLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGU7c3dpdGNoKGUpe2Nhc2UgSWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgRGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIE1hOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIEZhOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgUWE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgT2E6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT10eXBlb2YgZSlzd2l0Y2goXCJudW1iZXJcIj09dHlwZW9mIGUudGFnJiZjb25zb2xlLmVycm9yKFwiUmVjZWl2ZWQgYW4gdW5leHBlY3RlZCBvYmplY3QgaW4gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKCkuIFRoaXMgaXMgbGlrZWx5IGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIiksZS4kJHR5cGVvZil7Y2FzZSBqYTpyZXR1cm4oZS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBIYTpyZXR1cm4oZS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSBBYTp2YXIgbj1lLnJlbmRlcjtyZXR1cm4oZT1lLmRpc3BsYXlOYW1lKXx8KGU9XCJcIiE9PShlPW4uZGlzcGxheU5hbWV8fG4ubmFtZXx8XCJcIik/XCJGb3J3YXJkUmVmKFwiK2UrXCIpXCI6XCJGb3J3YXJkUmVmXCIpLGU7Y2FzZSBCYTpyZXR1cm4gbnVsbCE9PShuPWUuZGlzcGxheU5hbWV8fG51bGwpP246cyhlLnR5cGUpfHxcIk1lbW9cIjtjYXNlIFZhOm49ZS5fcGF5bG9hZCxlPWUuX2luaXQ7dHJ5e3JldHVybiBzKGUobikpfWNhdGNoKGUpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gYyhlKXt2YXIgbj1lLnR5cGU7c3dpdGNoKGUudGFnKXtjYXNlIDI0OnJldHVyblwiQ2FjaGVcIjtjYXNlIDk6cmV0dXJuKG4uX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgMTA6cmV0dXJuKG4uZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgMTg6cmV0dXJuXCJEZWh5ZHJhdGVkRnJhZ21lbnRcIjtjYXNlIDExOnJldHVybiBlPShlPW4ucmVuZGVyKS5kaXNwbGF5TmFtZXx8ZS5uYW1lfHxcIlwiLG4uZGlzcGxheU5hbWV8fChcIlwiIT09ZT9cIkZvcndhcmRSZWYoXCIrZStcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSA3OnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIDI2OmNhc2UgMjc6Y2FzZSA1OnJldHVybiBuO2Nhc2UgNDpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgMzpyZXR1cm5cIlJvb3RcIjtjYXNlIDY6cmV0dXJuXCJUZXh0XCI7Y2FzZSAxNjpyZXR1cm4gcyhuKTtjYXNlIDg6cmV0dXJuIG49PT1GYT9cIlN0cmljdE1vZGVcIjpcIk1vZGVcIjtjYXNlIDIyOnJldHVyblwiT2Zmc2NyZWVuXCI7Y2FzZSAxMjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSAyMTpyZXR1cm5cIlNjb3BlXCI7Y2FzZSAxMzpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSAxOTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwiO2Nhc2UgMjU6cmV0dXJuXCJUcmFjaW5nTWFya2VyXCI7Y2FzZSAxOmNhc2UgMDpjYXNlIDE0OmNhc2UgMTU6aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbilyZXR1cm4gbi5kaXNwbGF5TmFtZXx8bi5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBuKXJldHVybiBuO2JyZWFrO2Nhc2UgMjk6aWYobnVsbCE9KG49ZS5fZGVidWdJbmZvKSlmb3IodmFyIHQ9bi5sZW5ndGgtMTswPD10O3QtLSlpZihcInN0cmluZ1wiPT10eXBlb2Ygblt0XS5uYW1lKXJldHVybiBuW3RdLm5hbWU7aWYobnVsbCE9PWUucmV0dXJuKXJldHVybiBjKGUucmV0dXJuKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBmKCl7fWZ1bmN0aW9uIGQoZSl7aWYodm9pZCAwPT09WGEpdHJ5e3Rocm93IEVycm9yKCl9Y2F0Y2goZSl7dmFyIG49ZS5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtYYT1uJiZuWzFdfHxcIlwiLFphPS0xPGUuc3RhY2suaW5kZXhPZihcIlxcbiAgICBhdFwiKT9cIiAoPGFub255bW91cz4pXCI6LTE8ZS5zdGFjay5pbmRleE9mKFwiQFwiKT9cIkB1bmtub3duOjA6MFwiOlwiXCJ9cmV0dXJuXCJcXG5cIitYYStlK1phfWZ1bmN0aW9uIHAoZSxuKXtpZighZXx8ZW8pcmV0dXJuXCJcIjt2YXIgdCxyPW5vLmdldChlKTtpZih2b2lkIDAhPT1yKXJldHVybiByO2VvPSEwLHI9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2UsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwLHQ9SmEuSCxKYS5IPW51bGwsZnVuY3Rpb24oKXtpZigwPT09S2Epe2thPWNvbnNvbGUubG9nLHdhPWNvbnNvbGUuaW5mbyx4YT1jb25zb2xlLndhcm4semE9Y29uc29sZS5lcnJvcixDYT1jb25zb2xlLmdyb3VwLEVhPWNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQsUGE9Y29uc29sZS5ncm91cEVuZDt2YXIgZT17Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsdmFsdWU6Zix3cml0YWJsZTohMH07T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoY29uc29sZSx7aW5mbzplLGxvZzplLHdhcm46ZSxlcnJvcjplLGdyb3VwOmUsZ3JvdXBDb2xsYXBzZWQ6ZSxncm91cEVuZDplfSl9S2ErK30oKTt0cnl7dmFyIGw9e0RldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdDpmdW5jdGlvbigpe3RyeXtpZihuKXt2YXIgdD1mdW5jdGlvbigpe3Rocm93IEVycm9yKCl9O2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCl9fSksXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QodCxbXSl9Y2F0Y2goZSl7dmFyIHI9ZX1SZWZsZWN0LmNvbnN0cnVjdChlLFtdLHQpfWVsc2V7dHJ5e3QuY2FsbCgpfWNhdGNoKGUpe3I9ZX1lLmNhbGwodC5wcm90b3R5cGUpfX1lbHNle3RyeXt0aHJvdyBFcnJvcigpfWNhdGNoKGUpe3I9ZX0odD1lKCkpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNhdGNoJiZ0LmNhdGNoKChmdW5jdGlvbigpe30pKX19Y2F0Y2goZSl7aWYoZSYmciYmXCJzdHJpbmdcIj09dHlwZW9mIGUuc3RhY2spcmV0dXJuW2Uuc3RhY2ssci5zdGFja119cmV0dXJuW251bGwsbnVsbF19fTtsLkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdC5kaXNwbGF5TmFtZT1cIkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdFwiO3ZhciBhPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobC5EZXRlcm1pbmVDb21wb25lbnRGcmFtZVJvb3QsXCJuYW1lXCIpO2EmJmEuY29uZmlndXJhYmxlJiZPYmplY3QuZGVmaW5lUHJvcGVydHkobC5EZXRlcm1pbmVDb21wb25lbnRGcmFtZVJvb3QsXCJuYW1lXCIse3ZhbHVlOlwiRGV0ZXJtaW5lQ29tcG9uZW50RnJhbWVSb290XCJ9KTt2YXIgbz1sLkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdCgpLHU9b1swXSxpPW9bMV07aWYodSYmaSl7dmFyIHM9dS5zcGxpdChcIlxcblwiKSxjPWkuc3BsaXQoXCJcXG5cIik7Zm9yKG89YT0wO2E8cy5sZW5ndGgmJiFzW2FdLmluY2x1ZGVzKFwiRGV0ZXJtaW5lQ29tcG9uZW50RnJhbWVSb290XCIpOylhKys7Zm9yKDtvPGMubGVuZ3RoJiYhY1tvXS5pbmNsdWRlcyhcIkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdFwiKTspbysrO2lmKGE9PT1zLmxlbmd0aHx8bz09PWMubGVuZ3RoKWZvcihhPXMubGVuZ3RoLTEsbz1jLmxlbmd0aC0xOzE8PWEmJjA8PW8mJnNbYV0hPT1jW29dOylvLS07Zm9yKDsxPD1hJiYwPD1vO2EtLSxvLS0paWYoc1thXSE9PWNbb10pe2lmKDEhPT1hfHwxIT09bylkb3tpZihhLS0sMD4tLW98fHNbYV0hPT1jW29dKXt2YXIgcD1cIlxcblwiK3NbYV0ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO3JldHVybiBlLmRpc3BsYXlOYW1lJiZwLmluY2x1ZGVzKFwiPGFub255bW91cz5cIikmJihwPXAucmVwbGFjZShcIjxhbm9ueW1vdXM+XCIsZS5kaXNwbGF5TmFtZSkpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJm5vLnNldChlLHApLHB9fXdoaWxlKDE8PWEmJjA8PW8pO2JyZWFrfX19ZmluYWxseXtlbz0hMSxKYS5IPXQsZnVuY3Rpb24oKXtpZigwPT0tLUthKXt2YXIgZT17Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsd3JpdGFibGU6ITB9O09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGNvbnNvbGUse2xvZzpOYSh7fSxlLHt2YWx1ZTprYX0pLGluZm86TmEoe30sZSx7dmFsdWU6d2F9KSx3YXJuOk5hKHt9LGUse3ZhbHVlOnhhfSksZXJyb3I6TmEoe30sZSx7dmFsdWU6emF9KSxncm91cDpOYSh7fSxlLHt2YWx1ZTpDYX0pLGdyb3VwQ29sbGFwc2VkOk5hKHt9LGUse3ZhbHVlOkVhfSksZ3JvdXBFbmQ6TmEoe30sZSx7dmFsdWU6UGF9KX0pfTA+S2EmJmNvbnNvbGUuZXJyb3IoXCJkaXNhYmxlZERlcHRoIGZlbGwgYmVsb3cgemVyby4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpfSgpLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPXJ9cmV0dXJuIHM9KHM9ZT9lLmRpc3BsYXlOYW1lfHxlLm5hbWU6XCJcIik/ZChzKTpcIlwiLFwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJm5vLnNldChlLHMpLHN9ZnVuY3Rpb24gbShlKXtzd2l0Y2goZS50YWcpe2Nhc2UgMjY6Y2FzZSAyNzpjYXNlIDU6cmV0dXJuIGQoZS50eXBlKTtjYXNlIDE2OnJldHVybiBkKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBkKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gZChcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAxNTpyZXR1cm4gcChlLnR5cGUsITEpO2Nhc2UgMTE6cmV0dXJuIHAoZS50eXBlLnJlbmRlciwhMSk7Y2FzZSAxOnJldHVybiBwKGUudHlwZSwhMCk7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBoKGUpe3RyeXt2YXIgbj1cIlwiO2Rve24rPW0oZSk7dmFyIHQ9ZS5fZGVidWdJbmZvO2lmKHQpZm9yKHZhciByPXQubGVuZ3RoLTE7MDw9cjtyLS0pe3ZhciBsPXRbcl07aWYoXCJzdHJpbmdcIj09dHlwZW9mIGwubmFtZSl7dmFyIGE9bixvPWwuZW52O249YStkKGwubmFtZSsobz9cIiBbXCIrbytcIl1cIjpcIlwiKSl9fWU9ZS5yZXR1cm59d2hpbGUoZSk7cmV0dXJuIG59Y2F0Y2goZSl7cmV0dXJuXCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitlLm1lc3NhZ2UrXCJcXG5cIitlLnN0YWNrfX1mdW5jdGlvbiBnKCl7cmV0dXJuIG51bGw9PT10bz9cIlwiOmgodG8pfWZ1bmN0aW9uIHkoZSxuLHQscixsLGEsbyl7dmFyIHU9dG87SmEuZ2V0Q3VycmVudFN0YWNrPW51bGw9PT1lP251bGw6Zyxybz0hMSx0bz1lO3RyeXtyZXR1cm4gbih0LHIsbCxhLG8pfWZpbmFsbHl7dG89dX10aHJvdyBFcnJvcihcInJ1bldpdGhGaWJlckluREVWIHNob3VsZCBuZXZlciBiZSBjYWxsZWQgaW4gcHJvZHVjdGlvbi4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC5cIil9ZnVuY3Rpb24gYihlKXtyZXR1cm57Y3VycmVudDplfX1mdW5jdGlvbiB2KGUsbil7MD5pdT9jb25zb2xlLmVycm9yKFwiVW5leHBlY3RlZCBwb3AuXCIpOihuIT09dXVbaXVdJiZjb25zb2xlLmVycm9yKFwiVW5leHBlY3RlZCBGaWJlciBwb3BwZWQuXCIpLGUuY3VycmVudD1vdVtpdV0sb3VbaXVdPW51bGwsdXVbaXVdPW51bGwsaXUtLSl9ZnVuY3Rpb24gUyhlLG4sdCl7aXUrKyxvdVtpdV09ZS5jdXJyZW50LHV1W2l1XT10LGUuY3VycmVudD1ufWZ1bmN0aW9uIGsoZSl7dmFyIG49NDImZTtpZigwIT09bilyZXR1cm4gbjtzd2l0Y2goZSYtZSl7Y2FzZSAxOnJldHVybiAxO2Nhc2UgMjpyZXR1cm4gMjtjYXNlIDQ6cmV0dXJuIDQ7Y2FzZSA4OnJldHVybiA4O2Nhc2UgMTY6cmV0dXJuIDE2O2Nhc2UgMzI6cmV0dXJuIDMyO2Nhc2UgNjQ6cmV0dXJuIDY0O2Nhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOnJldHVybiA0MTk0MTc2JmU7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6cmV0dXJuIDYyOTE0NTYwJmU7Y2FzZSA2NzEwODg2NDpyZXR1cm4gNjcxMDg4NjQ7Y2FzZSAxMzQyMTc3Mjg6cmV0dXJuIDEzNDIxNzcyODtjYXNlIDI2ODQzNTQ1NjpyZXR1cm4gMjY4NDM1NDU2O2Nhc2UgNTM2ODcwOTEyOnJldHVybiA1MzY4NzA5MTI7Y2FzZSAxMDczNzQxODI0OnJldHVybiAwO2RlZmF1bHQ6cmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJTaG91bGQgaGF2ZSBmb3VuZCBtYXRjaGluZyBsYW5lcy4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC5cIiksZX19ZnVuY3Rpb24gdyhlLG4pe3ZhciB0PWUucGVuZGluZ0xhbmVzO2lmKDA9PT10KXJldHVybiAwO3ZhciByPTAsbD1lLnN1c3BlbmRlZExhbmVzO2U9ZS5waW5nZWRMYW5lczt2YXIgYT0xMzQyMTc3MjcmdDtyZXR1cm4gMCE9PWE/MCE9KHQ9YSZ+bCk/cj1rKHQpOjAhPShlJj1hKSYmKHI9ayhlKSk6MCE9KHQmPX5sKT9yPWsodCk6MCE9PWUmJihyPWsoZSkpLDA9PT1yPzA6MCE9PW4mJm4hPT1yJiYwPT0obiZsKSYmKChsPXImLXIpPj0oZT1uJi1uKXx8MzI9PT1sJiYwIT0oNDE5NDE3NiZlKSk/bjpyfWZ1bmN0aW9uIHgoZSxuKXtzd2l0Y2goZSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6Y2FzZSA4OnJldHVybiBuKzI1MDtjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gbis1ZTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4gY29uc29sZS5lcnJvcihcIlNob3VsZCBoYXZlIGZvdW5kIG1hdGNoaW5nIGxhbmVzLiBUaGlzIGlzIGEgYnVnIGluIFJlYWN0LlwiKSwtMX19ZnVuY3Rpb24geigpe3ZhciBlPXB1O3JldHVybiAwPT0oNDE5NDE3NiYocHU8PD0xKSkmJihwdT0xMjgpLGV9ZnVuY3Rpb24gQygpe3ZhciBlPW11O3JldHVybiAwPT0oNjI5MTQ1NjAmKG11PDw9MSkpJiYobXU9NDE5NDMwNCksZX1mdW5jdGlvbiBFKGUpe2Zvcih2YXIgbj1bXSx0PTA7MzE+dDt0Kyspbi5wdXNoKGUpO3JldHVybiBufWZ1bmN0aW9uIFAoZSxuKXtlLnBlbmRpbmdMYW5lc3w9biwyNjg0MzU0NTYhPT1uJiYoZS5zdXNwZW5kZWRMYW5lcz0wLGUucGluZ2VkTGFuZXM9MCxlLndhcm1MYW5lcz0wKX1mdW5jdGlvbiBfKGUsbix0KXtlLnBlbmRpbmdMYW5lc3w9bixlLnN1c3BlbmRlZExhbmVzJj1+bjt2YXIgcj0zMS1jdShuKTtlLmVudGFuZ2xlZExhbmVzfD1uLGUuZW50YW5nbGVtZW50c1tyXT0xMDczNzQxODI0fGUuZW50YW5nbGVtZW50c1tyXXw0MTk0MjE4JnR9ZnVuY3Rpb24gUihlLG4pe3ZhciB0PWUuZW50YW5nbGVkTGFuZXN8PW47Zm9yKGU9ZS5lbnRhbmdsZW1lbnRzO3Q7KXt2YXIgcj0zMS1jdSh0KSxsPTE8PHI7bCZufGVbcl0mbiYmKGVbcl18PW4pLHQmPX5sfX1mdW5jdGlvbiBUKGUsbix0KXtpZihfdSlmb3IoZT1lLnBlbmRpbmdVcGRhdGVyc0xhbmVNYXA7MDx0Oyl7dmFyIHI9MzEtY3UodCksbD0xPDxyO2Vbcl0uYWRkKG4pLHQmPX5sfX1mdW5jdGlvbiBOKGUsbil7aWYoX3UpZm9yKHZhciB0PWUucGVuZGluZ1VwZGF0ZXJzTGFuZU1hcCxyPWUubWVtb2l6ZWRVcGRhdGVyczswPG47KXt2YXIgbD0zMS1jdShuKTtlPTE8PGwsMDwobD10W2xdKS5zaXplJiYobC5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgbj1lLmFsdGVybmF0ZTtudWxsIT09biYmci5oYXMobil8fHIuYWRkKGUpfSkpLGwuY2xlYXIoKSksbiY9fmV9fWZ1bmN0aW9uIEwoZSl7cmV0dXJuIDI8KGUmPS1lKT84PGU/MCE9KDEzNDIxNzcyNyZlKT8zMjoyNjg0MzU0NTY6ODoyfWZ1bmN0aW9uIFUoZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgenUmJkN1KGUpfWZ1bmN0aW9uIEQoZSxuKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWUpe3ZhciB0PVR1LmdldChlKTtyZXR1cm4gdm9pZCAwIT09dD90OihuPXt2YWx1ZTplLHNvdXJjZTpuLHN0YWNrOmgobil9LFR1LnNldChlLG4pLG4pfXJldHVybnt2YWx1ZTplLHNvdXJjZTpuLHN0YWNrOmgobil9fWZ1bmN0aW9uIEkoZSl7Zm9yKDtlPT09VXU7KVV1PU51Wy0tTHVdLE51W0x1XT1udWxsLER1PU51Wy0tTHVdLE51W0x1XT1udWxsO2Zvcig7ZT09PU11OylNdT1JdVstLUZ1XSxJdVtGdV09bnVsbCxIdT1JdVstLUZ1XSxJdVtGdV09bnVsbCxXdT1JdVstLUZ1XSxJdVtGdV09bnVsbH1mdW5jdGlvbiBGKCl7Y29uc29sZS5lcnJvcihcIkV4cGVjdGVkIHRvIGJlIGh5ZHJhdGluZy4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpfWZ1bmN0aW9uIE0oZSl7cmV0dXJuIG51bGw9PT1lJiZjb25zb2xlLmVycm9yKFwiRXhwZWN0ZWQgaG9zdCBjb250ZXh0IHRvIGV4aXN0LiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKSxlfWZ1bmN0aW9uIFcoZSxuKXtTKFF1LG4sZSksUyhBdSxlLGUpLFMoanUsbnVsbCxlKSxuPW9vKG4pLHYoanUsZSksUyhqdSxuLGUpfWZ1bmN0aW9uIEgoZSl7dihqdSxlKSx2KEF1LGUpLHYoUXUsZSl9ZnVuY3Rpb24gaigpe3JldHVybiBNKGp1LmN1cnJlbnQpfWZ1bmN0aW9uIEEoZSl7bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSYmUyhPdSxlLGUpO3ZhciBuPU0oanUuY3VycmVudCksdD11byhuLGUudHlwZSk7biE9PXQmJihTKEF1LGUsZSksUyhqdSx0LGUpKX1mdW5jdGlvbiBRKGUpe0F1LmN1cnJlbnQ9PT1lJiYodihqdSxlKSx2KEF1LGUpKSxPdS5jdXJyZW50PT09ZSYmKHYoT3UsZSksVW8uX2N1cnJlbnRWYWx1ZTI9TG8pfWZ1bmN0aW9uIE8oKXtmb3IodmFyIGU9WXUsbj1HdT1ZdT0wO248ZTspe3ZhciB0PXF1W25dO3F1W24rK109bnVsbDt2YXIgcj1xdVtuXTtxdVtuKytdPW51bGw7dmFyIGw9cXVbbl07cXVbbisrXT1udWxsO3ZhciBhPXF1W25dO2lmKHF1W24rK109bnVsbCxudWxsIT09ciYmbnVsbCE9PWwpe3ZhciBvPXIucGVuZGluZztudWxsPT09bz9sLm5leHQ9bDoobC5uZXh0PW8ubmV4dCxvLm5leHQ9bCksci5wZW5kaW5nPWx9MCE9PWEmJnEodCxsLGEpfX1mdW5jdGlvbiBCKGUsbix0LHIpe3F1W1l1KytdPWUscXVbWXUrK109bixxdVtZdSsrXT10LHF1W1l1KytdPXIsR3V8PXIsZS5sYW5lc3w9cixudWxsIT09KGU9ZS5hbHRlcm5hdGUpJiYoZS5sYW5lc3w9cil9ZnVuY3Rpb24gVihlLG4sdCxyKXtyZXR1cm4gQihlLG4sdCxyKSxZKGUpfWZ1bmN0aW9uICQoZSxuKXtyZXR1cm4gQihlLG51bGwsbnVsbCxuKSxZKGUpfWZ1bmN0aW9uIHEoZSxuLHQpe2UubGFuZXN8PXQ7dmFyIHI9ZS5hbHRlcm5hdGU7bnVsbCE9PXImJihyLmxhbmVzfD10KTtmb3IodmFyIGw9ITEsYT1lLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD10LG51bGwhPT0ocj1hLmFsdGVybmF0ZSkmJihyLmNoaWxkTGFuZXN8PXQpLDIyPT09YS50YWcmJihudWxsPT09KGU9YS5zdGF0ZU5vZGUpfHwxJmUuX3Zpc2liaWxpdHl8fChsPSEwKSksZT1hLGE9YS5yZXR1cm47bCYmbnVsbCE9PW4mJjM9PT1lLnRhZyYmKGE9ZS5zdGF0ZU5vZGUsbD0zMS1jdSh0KSxudWxsPT09KGU9KGE9YS5oaWRkZW5VcGRhdGVzKVtsXSk/YVtsXT1bbl06ZS5wdXNoKG4pLG4ubGFuZT01MzY4NzA5MTJ8dCl9ZnVuY3Rpb24gWShlKXtpZihZZj5xZil0aHJvdyBaZj1ZZj0wLGVkPUdmPW51bGwsRXJyb3IoXCJNYXhpbXVtIHVwZGF0ZSBkZXB0aCBleGNlZWRlZC4gVGhpcyBjYW4gaGFwcGVuIHdoZW4gYSBjb21wb25lbnQgcmVwZWF0ZWRseSBjYWxscyBzZXRTdGF0ZSBpbnNpZGUgY29tcG9uZW50V2lsbFVwZGF0ZSBvciBjb21wb25lbnREaWRVcGRhdGUuIFJlYWN0IGxpbWl0cyB0aGUgbnVtYmVyIG9mIG5lc3RlZCB1cGRhdGVzIHRvIHByZXZlbnQgaW5maW5pdGUgbG9vcHMuXCIpO1pmPlhmJiYoWmY9MCxlZD1udWxsLGNvbnNvbGUuZXJyb3IoXCJNYXhpbXVtIHVwZGF0ZSBkZXB0aCBleGNlZWRlZC4gVGhpcyBjYW4gaGFwcGVuIHdoZW4gYSBjb21wb25lbnQgY2FsbHMgc2V0U3RhdGUgaW5zaWRlIHVzZUVmZmVjdCwgYnV0IHVzZUVmZmVjdCBlaXRoZXIgZG9lc24ndCBoYXZlIGEgZGVwZW5kZW5jeSBhcnJheSwgb3Igb25lIG9mIHRoZSBkZXBlbmRlbmNpZXMgY2hhbmdlcyBvbiBldmVyeSByZW5kZXIuXCIpKSxudWxsPT09ZS5hbHRlcm5hdGUmJjAhPSg0MDk4JmUuZmxhZ3MpJiZ1YShlKTtmb3IodmFyIG49ZSx0PW4ucmV0dXJuO251bGwhPT10OyludWxsPT09bi5hbHRlcm5hdGUmJjAhPSg0MDk4Jm4uZmxhZ3MpJiZ1YShlKSx0PShuPXQpLnJldHVybjtyZXR1cm4gMz09PW4udGFnP24uc3RhdGVOb2RlOm51bGx9ZnVuY3Rpb24gRygpe3ZhciBlPVp1O3JldHVybiBadT0wLGV9ZnVuY3Rpb24gSihlKXt2YXIgbj1adTtyZXR1cm4gWnU9ZSxufWZ1bmN0aW9uIEsoZSl7dmFyIG49WnU7cmV0dXJuIFp1Kz1lLG59ZnVuY3Rpb24gWChlKXtYdT1KdSgpLDA+ZS5hY3R1YWxTdGFydFRpbWUmJihlLmFjdHVhbFN0YXJ0VGltZT1YdSl9ZnVuY3Rpb24gWihlKXtpZigwPD1YdSl7dmFyIG49SnUoKS1YdTtlLmFjdHVhbER1cmF0aW9uKz1uLGUuc2VsZkJhc2VEdXJhdGlvbj1uLFh1PS0xfX1mdW5jdGlvbiBlZShlKXtpZigwPD1YdSl7dmFyIG49SnUoKS1YdTtlLmFjdHVhbER1cmF0aW9uKz1uLFh1PS0xfX1mdW5jdGlvbiBuZSgpe2lmKDA8PVh1KXt2YXIgZT1KdSgpLVh1O1h1PS0xLFp1Kz1lfX1mdW5jdGlvbiB0ZSgpe1h1PUp1KCl9ZnVuY3Rpb24gcmUoZSl7Zm9yKHZhciBuPWUuY2hpbGQ7bjspZS5hY3R1YWxEdXJhdGlvbis9bi5hY3R1YWxEdXJhdGlvbixuPW4uc2libGluZ31mdW5jdGlvbiBsZShlKXtlIT09cmkmJm51bGw9PT1lLm5leHQmJihudWxsPT09cmk/dGk9cmk9ZTpyaT1yaS5uZXh0PWUpLG9pPSEwLG51bGwhPT1KYS5hY3RRdWV1ZT9haXx8KGFpPSEwLGZlKG9lKSk6bGl8fChsaT0hMCxmZShvZSkpfWZ1bmN0aW9uIGFlKGUsbil7aWYoIXVpJiZvaSl7dWk9ITA7ZG97Zm9yKHZhciB0PSExLHI9dGk7bnVsbCE9PXI7KXtpZigwIT09ZSl7dmFyIGw9ci5wZW5kaW5nTGFuZXM7aWYoMD09PWwpdmFyIGE9MDtlbHNle3ZhciBvPXIuc3VzcGVuZGVkTGFuZXMsdT1yLnBpbmdlZExhbmVzO2E9KDE8PDMxLWN1KDQyfGUpKzEpLTEsYT0yMDEzMjY2NzcmKGEmPWwmfihvJn51KSk/MjAxMzI2Njc3JmF8MTphPzJ8YTowfTAhPT1hJiYodD0hMCxzZShyLGEpKX1lbHNlIGE9ZGYsMCE9KDMmKGE9dyhyLHI9PT1jZj9hOjApKSkmJih0PSEwLHNlKHIsYSkpO3I9ci5uZXh0fX13aGlsZSh0KTt1aT0hMX19ZnVuY3Rpb24gb2UoKXtvaT1haT1saT0hMTt2YXIgZT0wOzAhPT1paSYmKENvKCkmJihlPWlpKSxpaT0wKTtmb3IodmFyIG49dnUoKSx0PW51bGwscj10aTtudWxsIT09cjspe3ZhciBsPXIubmV4dCxhPXVlKHIsbik7MD09PWE/KHIubmV4dD1udWxsLG51bGw9PT10P3RpPWw6dC5uZXh0PWwsbnVsbD09PWwmJihyaT10KSk6KHQ9ciwoMCE9PWV8fDAhPSgzJmEpKSYmKG9pPSEwKSkscj1sfWFlKGUpfWZ1bmN0aW9uIHVlKGUsbil7Zm9yKHZhciB0PWUuc3VzcGVuZGVkTGFuZXMscj1lLnBpbmdlZExhbmVzLGw9ZS5leHBpcmF0aW9uVGltZXMsYT0tNjI5MTQ1NjEmZS5wZW5kaW5nTGFuZXM7MDxhOyl7dmFyIG89MzEtY3UoYSksdT0xPDxvLGk9bFtvXTstMT09PWk/MCE9KHUmdCkmJjA9PSh1JnIpfHwobFtvXT14KHUsbikpOmk8PW4mJihlLmV4cGlyZWRMYW5lc3w9dSksYSY9fnV9aWYodD1kZix0PXcoZSxlPT09KG49Y2YpP3Q6MCkscj1lLmNhbGxiYWNrTm9kZSwwPT09dHx8ZT09PW4mJndmPT09aGZ8fG51bGwhPT1lLmNhbmNlbFBlbmRpbmdDb21taXQpcmV0dXJuIG51bGwhPT1yJiZjZShyKSxlLmNhbGxiYWNrTm9kZT1udWxsLGUuY2FsbGJhY2tQcmlvcml0eT0wO2lmKDAhPSgzJnQpKXJldHVybiBudWxsIT09ciYmY2UociksZS5jYWxsYmFja1ByaW9yaXR5PTIsZS5jYWxsYmFja05vZGU9bnVsbCwyO2lmKChuPXQmLXQpPT09ZS5jYWxsYmFja1ByaW9yaXR5JiYobnVsbD09PUphLmFjdFF1ZXVlfHxyPT09c2kpKXJldHVybiBuO3N3aXRjaChjZShyKSxMKHQpKXtjYXNlIDI6dD1TdTticmVhaztjYXNlIDg6dD1rdTticmVhaztjYXNlIDMyOmRlZmF1bHQ6dD13dTticmVhaztjYXNlIDI2ODQzNTQ1Njp0PXh1fXJldHVybiByPWllLmJpbmQobnVsbCxlKSxudWxsIT09SmEuYWN0UXVldWU/KEphLmFjdFF1ZXVlLnB1c2gociksdD1zaSk6dD1odSh0LHIpLGUuY2FsbGJhY2tQcmlvcml0eT1uLGUuY2FsbGJhY2tOb2RlPXQsbn1mdW5jdGlvbiBpZShlLG4pe25pPWVpPSExO3ZhciB0PWUuY2FsbGJhY2tOb2RlO2lmKEpsKCkmJmUuY2FsbGJhY2tOb2RlIT09dClyZXR1cm4gbnVsbDt2YXIgcj1kZjtyZXR1cm4gMD09PShyPXcoZSxlPT09Y2Y/cjowKSk/bnVsbDooRWwoZSxyLG4pLHVlKGUsdnUoKSksZS5jYWxsYmFja05vZGU9PT10P2llLmJpbmQobnVsbCxlKTpudWxsKX1mdW5jdGlvbiBzZShlLG4pe2lmKEpsKCkpcmV0dXJuIG51bGw7ZWk9bmksbmk9ITEsRWwoZSxuLCEwKX1mdW5jdGlvbiBjZShlKXtlIT09c2kmJm51bGwhPT1lJiZndShlKX1mdW5jdGlvbiBmZShlKXtudWxsIT09SmEuYWN0UXVldWUmJkphLmFjdFF1ZXVlLnB1c2goKGZ1bmN0aW9uKCl7cmV0dXJuIGUoKSxudWxsfSkpLGh1KFN1LGUpfWZ1bmN0aW9uIGRlKCl7cmV0dXJuIDA9PT1paSYmKGlpPXooKSksaWl9ZnVuY3Rpb24gcGUoKXtpZigwPT0tLWZpJiZudWxsIT09Y2kpe251bGwhPT1waSYmKHBpLnN0YXR1cz1cImZ1bGZpbGxlZFwiKTt2YXIgZT1jaTtjaT1udWxsLGRpPTAscGk9bnVsbDtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKykoMCxlW25dKSgpfX1mdW5jdGlvbiBtZShlKXtlLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6ZS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGwsbGFuZXM6MCxoaWRkZW5DYWxsYmFja3M6bnVsbH0sY2FsbGJhY2tzOm51bGx9fWZ1bmN0aW9uIGhlKGUsbil7ZT1lLnVwZGF0ZVF1ZXVlLG4udXBkYXRlUXVldWU9PT1lJiYobi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmUuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTplLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDplLnNoYXJlZCxjYWxsYmFja3M6bnVsbH0pfWZ1bmN0aW9uIGdlKGUpe3JldHVybntsYW5lOmUsdGFnOm1pLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24geWUoZSxuLHQpe3ZhciByPWUudXBkYXRlUXVldWU7aWYobnVsbD09PXIpcmV0dXJuIG51bGw7aWYocj1yLnNoYXJlZCxTaT09PXImJiF2aSl7dmFyIGw9YyhlKTtjb25zb2xlLmVycm9yKFwiQW4gdXBkYXRlIChzZXRTdGF0ZSwgcmVwbGFjZVN0YXRlLCBvciBmb3JjZVVwZGF0ZSkgd2FzIHNjaGVkdWxlZCBmcm9tIGluc2lkZSBhbiB1cGRhdGUgZnVuY3Rpb24uIFVwZGF0ZSBmdW5jdGlvbnMgc2hvdWxkIGJlIHB1cmUsIHdpdGggemVybyBzaWRlLWVmZmVjdHMuIENvbnNpZGVyIHVzaW5nIGNvbXBvbmVudERpZFVwZGF0ZSBvciBhIGNhbGxiYWNrLlxcblxcblBsZWFzZSB1cGRhdGUgdGhlIGZvbGxvd2luZyBjb21wb25lbnQ6ICVzXCIsbCksdmk9ITB9cmV0dXJuKHNmJlpjKSE9PVhjPyhudWxsPT09KGw9ci5wZW5kaW5nKT9uLm5leHQ9bjoobi5uZXh0PWwubmV4dCxsLm5leHQ9biksci5wZW5kaW5nPW4sbj1ZKGUpLHEoZSxudWxsLHQpLG4pOihCKGUscixuLHQpLFkoZSkpfWZ1bmN0aW9uIGJlKGUsbix0KXtpZihudWxsIT09KG49bi51cGRhdGVRdWV1ZSkmJihuPW4uc2hhcmVkLDAhPSg0MTk0MTc2JnQpKSl7dmFyIHI9bi5sYW5lczt0fD1yJj1lLnBlbmRpbmdMYW5lcyxuLmxhbmVzPXQsUihlLHQpfX1mdW5jdGlvbiB2ZShlLG4pe3ZhciB0PWUudXBkYXRlUXVldWUscj1lLmFsdGVybmF0ZTtpZihudWxsIT09ciYmdD09PShyPXIudXBkYXRlUXVldWUpKXt2YXIgbD1udWxsLGE9bnVsbDtpZihudWxsIT09KHQ9dC5maXJzdEJhc2VVcGRhdGUpKXtkb3t2YXIgbz17bGFuZTp0LmxhbmUsdGFnOnQudGFnLHBheWxvYWQ6dC5wYXlsb2FkLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfTtudWxsPT09YT9sPWE9bzphPWEubmV4dD1vLHQ9dC5uZXh0fXdoaWxlKG51bGwhPT10KTtudWxsPT09YT9sPWE9bjphPWEubmV4dD1ufWVsc2UgbD1hPW47cmV0dXJuIHQ9e2Jhc2VTdGF0ZTpyLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bCxsYXN0QmFzZVVwZGF0ZTphLHNoYXJlZDpyLnNoYXJlZCxjYWxsYmFja3M6ci5jYWxsYmFja3N9LHZvaWQoZS51cGRhdGVRdWV1ZT10KX1udWxsPT09KGU9dC5sYXN0QmFzZVVwZGF0ZSk/dC5maXJzdEJhc2VVcGRhdGU9bjplLm5leHQ9bix0Lmxhc3RCYXNlVXBkYXRlPW59ZnVuY3Rpb24gU2UoKXtpZihraSYmbnVsbCE9PXBpKXRocm93IHBpfWZ1bmN0aW9uIGtlKGUsbix0LHIpe2tpPSExO3ZhciBsPWUudXBkYXRlUXVldWU7Ymk9ITEsU2k9bC5zaGFyZWQ7dmFyIGE9bC5maXJzdEJhc2VVcGRhdGUsbz1sLmxhc3RCYXNlVXBkYXRlLHU9bC5zaGFyZWQucGVuZGluZztpZihudWxsIT09dSl7bC5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBpPXUscz1pLm5leHQ7aS5uZXh0PW51bGwsbnVsbD09PW8/YT1zOm8ubmV4dD1zLG89aTt2YXIgYz1lLmFsdGVybmF0ZTtudWxsIT09YyYmKHU9KGM9Yy51cGRhdGVRdWV1ZSkubGFzdEJhc2VVcGRhdGUpIT09byYmKG51bGw9PT11P2MuZmlyc3RCYXNlVXBkYXRlPXM6dS5uZXh0PXMsYy5sYXN0QmFzZVVwZGF0ZT1pKX1pZihudWxsIT09YSl7dmFyIGY9bC5iYXNlU3RhdGU7Zm9yKG89MCxjPXM9aT1udWxsLHU9YTs7KXt2YXIgZD0tNTM2ODcwOTEzJnUubGFuZSxwPWQhPT11LmxhbmU7aWYocD8oZGYmZCk9PT1kOihyJmQpPT09ZCl7MCE9PWQmJmQ9PT1kaSYmKGtpPSEwKSxudWxsIT09YyYmKGM9Yy5uZXh0PXtsYW5lOjAsdGFnOnUudGFnLHBheWxvYWQ6dS5wYXlsb2FkLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7ZTp7ZD1lO3ZhciBtPXUsaD1uLGc9dDtzd2l0Y2gobS50YWcpe2Nhc2UgaGk6aWYoXCJmdW5jdGlvblwiPT10eXBlb2YobT1tLnBheWxvYWQpKXtSYz0hMDt2YXIgeT1tLmNhbGwoZyxmLGgpO2lmKDgmZC5tb2RlKXtVKCEwKTt0cnl7bS5jYWxsKGcsZixoKX1maW5hbGx5e1UoITEpfX1SYz0hMSxmPXk7YnJlYWsgZX1mPW07YnJlYWsgZTtjYXNlIHlpOmQuZmxhZ3M9LTY1NTM3JmQuZmxhZ3N8MTI4O2Nhc2UgbWk6aWYoXCJmdW5jdGlvblwiPT10eXBlb2YoeT1tLnBheWxvYWQpKXtpZihSYz0hMCxtPXkuY2FsbChnLGYsaCksOCZkLm1vZGUpe1UoITApO3RyeXt5LmNhbGwoZyxmLGgpfWZpbmFsbHl7VSghMSl9fVJjPSExfWVsc2UgbT15O2lmKG51bGw9PW0pYnJlYWsgZTtmPU5hKHt9LGYsbSk7YnJlYWsgZTtjYXNlIGdpOmJpPSEwfX1udWxsIT09KGQ9dS5jYWxsYmFjaykmJihlLmZsYWdzfD02NCxwJiYoZS5mbGFnc3w9ODE5MiksbnVsbD09PShwPWwuY2FsbGJhY2tzKT9sLmNhbGxiYWNrcz1bZF06cC5wdXNoKGQpKX1lbHNlIHA9e2xhbmU6ZCx0YWc6dS50YWcscGF5bG9hZDp1LnBheWxvYWQsY2FsbGJhY2s6dS5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1jPyhzPWM9cCxpPWYpOmM9Yy5uZXh0PXAsb3w9ZDtpZihudWxsPT09KHU9dS5uZXh0KSl7aWYobnVsbD09PSh1PWwuc2hhcmVkLnBlbmRpbmcpKWJyZWFrO3U9KHA9dSkubmV4dCxwLm5leHQ9bnVsbCxsLmxhc3RCYXNlVXBkYXRlPXAsbC5zaGFyZWQucGVuZGluZz1udWxsfX1udWxsPT09YyYmKGk9ZiksbC5iYXNlU3RhdGU9aSxsLmZpcnN0QmFzZVVwZGF0ZT1zLGwubGFzdEJhc2VVcGRhdGU9YyxudWxsPT09YSYmKGwuc2hhcmVkLmxhbmVzPTApLF9mfD1vLGUubGFuZXM9byxlLm1lbW9pemVkU3RhdGU9Zn1TaT1udWxsfWZ1bmN0aW9uIHdlKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvdyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIGFzIGNhbGxiYWNrLiBFeHBlY3RlZCBhIGZ1bmN0aW9uLiBJbnN0ZWFkIHJlY2VpdmVkOiBcIitlKTtlLmNhbGwobil9ZnVuY3Rpb24geGUoZSxuKXt2YXIgdD1lLnNoYXJlZC5oaWRkZW5DYWxsYmFja3M7aWYobnVsbCE9PXQpZm9yKGUuc2hhcmVkLmhpZGRlbkNhbGxiYWNrcz1udWxsLGU9MDtlPHQubGVuZ3RoO2UrKyl3ZSh0W2VdLG4pfWZ1bmN0aW9uIHplKGUsbil7dmFyIHQ9ZS5jYWxsYmFja3M7aWYobnVsbCE9PXQpZm9yKGUuY2FsbGJhY2tzPW51bGwsZT0wO2U8dC5sZW5ndGg7ZSsrKXdlKHRbZV0sbil9ZnVuY3Rpb24gQ2UoZSxuKXtpZihSdShlLG4pKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlfHxudWxsPT09ZXx8XCJvYmplY3RcIiE9dHlwZW9mIG58fG51bGw9PT1uKXJldHVybiExO3ZhciB0PU9iamVjdC5rZXlzKGUpLHI9T2JqZWN0LmtleXMobik7aWYodC5sZW5ndGghPT1yLmxlbmd0aClyZXR1cm4hMTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbD10W3JdO2lmKCF3aS5jYWxsKG4sbCl8fCFSdShlW2xdLG5bbF0pKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIEVlKGUpe3JldHVyblwiZnVsZmlsbGVkXCI9PT0oZT1lLnN0YXR1cyl8fFwicmVqZWN0ZWRcIj09PWV9ZnVuY3Rpb24gUGUoKXt9ZnVuY3Rpb24gX2UoZSxuLHQpe251bGwhPT1KYS5hY3RRdWV1ZSYmKEphLmRpZFVzZVByb21pc2U9ITApO3ZhciByPWUudGhlbmFibGVzO3N3aXRjaCh2b2lkIDA9PT0odD1yW3RdKT9yLnB1c2gobik6dCE9PW4mJihlLmRpZFdhcm5BYm91dFVuY2FjaGVkUHJvbWlzZXx8KGUuZGlkV2FybkFib3V0VW5jYWNoZWRQcm9taXNlPSEwLGNvbnNvbGUuZXJyb3IoXCJBIGNvbXBvbmVudCB3YXMgc3VzcGVuZGVkIGJ5IGFuIHVuY2FjaGVkIHByb21pc2UuIENyZWF0aW5nIHByb21pc2VzIGluc2lkZSBhIENsaWVudCBDb21wb25lbnQgb3IgaG9vayBpcyBub3QgeWV0IHN1cHBvcnRlZCwgZXhjZXB0IHZpYSBhIFN1c3BlbnNlLWNvbXBhdGlibGUgbGlicmFyeSBvciBmcmFtZXdvcmsuXCIpKSxuLnRoZW4oUGUsUGUpLG49dCksbi5zdGF0dXMpe2Nhc2VcImZ1bGZpbGxlZFwiOnJldHVybiBuLnZhbHVlO2Nhc2VcInJlamVjdGVkXCI6dGhyb3cgVGUoZT1uLnJlYXNvbiksZTtkZWZhdWx0OmlmKFwic3RyaW5nXCI9PXR5cGVvZiBuLnN0YXR1cyluLnRoZW4oUGUsUGUpO2Vsc2V7aWYobnVsbCE9PShlPWNmKSYmMTAwPGUuc2hlbGxTdXNwZW5kQ291bnRlcil0aHJvdyBFcnJvcihcImFzeW5jL2F3YWl0IGlzIG5vdCB5ZXQgc3VwcG9ydGVkIGluIENsaWVudCBDb21wb25lbnRzLCBvbmx5IFNlcnZlciBDb21wb25lbnRzLiBUaGlzIGVycm9yIGlzIG9mdGVuIGNhdXNlZCBieSBhY2NpZGVudGFsbHkgYWRkaW5nIGAndXNlIGNsaWVudCdgIHRvIGEgbW9kdWxlIHRoYXQgd2FzIG9yaWdpbmFsbHkgd3JpdHRlbiBmb3IgdGhlIHNlcnZlci5cIik7KGU9bikuc3RhdHVzPVwicGVuZGluZ1wiLGUudGhlbigoZnVuY3Rpb24oZSl7aWYoXCJwZW5kaW5nXCI9PT1uLnN0YXR1cyl7dmFyIHQ9bjt0LnN0YXR1cz1cImZ1bGZpbGxlZFwiLHQudmFsdWU9ZX19KSwoZnVuY3Rpb24oZSl7aWYoXCJwZW5kaW5nXCI9PT1uLnN0YXR1cyl7dmFyIHQ9bjt0LnN0YXR1cz1cInJlamVjdGVkXCIsdC5yZWFzb249ZX19KSl9c3dpdGNoKG4uc3RhdHVzKXtjYXNlXCJmdWxmaWxsZWRcIjpyZXR1cm4gbi52YWx1ZTtjYXNlXCJyZWplY3RlZFwiOnRocm93IFRlKGU9bi5yZWFzb24pLGV9dGhyb3cgTWk9bixXaT0hMCxEaX19ZnVuY3Rpb24gUmUoKXtpZihudWxsPT09TWkpdGhyb3cgRXJyb3IoXCJFeHBlY3RlZCBhIHN1c3BlbmRlZCB0aGVuYWJsZS4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpO3ZhciBlPU1pO3JldHVybiBNaT1udWxsLFdpPSExLGV9ZnVuY3Rpb24gVGUoZSl7aWYoZT09PURpKXRocm93IEVycm9yKFwiSG9va3MgYXJlIG5vdCBzdXBwb3J0ZWQgaW5zaWRlIGFuIGFzeW5jIGNvbXBvbmVudC4gVGhpcyBlcnJvciBpcyBvZnRlbiBjYXVzZWQgYnkgYWNjaWRlbnRhbGx5IGFkZGluZyBgJ3VzZSBjbGllbnQnYCB0byBhIG1vZHVsZSB0aGF0IHdhcyBvcmlnaW5hbGx5IHdyaXR0ZW4gZm9yIHRoZSBzZXJ2ZXIuXCIpfWZ1bmN0aW9uIE5lKGUpe3ZhciBuPWFzO3JldHVybiBudWxsIT1lJiYoYXM9bnVsbD09PW4/ZTpuLmNvbmNhdChlKSksbn1mdW5jdGlvbiBMZShlLG4sdCl7Zm9yKHZhciByPU9iamVjdC5rZXlzKGUucHJvcHMpLGw9MDtsPHIubGVuZ3RoO2wrKyl7dmFyIGE9cltsXTtpZihcImNoaWxkcmVuXCIhPT1hJiZcImtleVwiIT09YSl7bnVsbD09PW4mJigobj1tYShlLHQubW9kZSwwKSkuX2RlYnVnSW5mbz1hcyxuLnJldHVybj10KSx5KG4sKGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoXCJJbnZhbGlkIHByb3AgYCVzYCBzdXBwbGllZCB0byBgUmVhY3QuRnJhZ21lbnRgLiBSZWFjdC5GcmFnbWVudCBjYW4gb25seSBoYXZlIGBrZXlgIGFuZCBgY2hpbGRyZW5gIHByb3BzLlwiLGUpfSksYSk7YnJlYWt9fX1mdW5jdGlvbiBVZShlKXt2YXIgbj1scztyZXR1cm4gbHMrPTEsbnVsbD09PXJzJiYocnM9e2RpZFdhcm5BYm91dFVuY2FjaGVkUHJvbWlzZTohMSx0aGVuYWJsZXM6W119KSxfZShycyxlLG4pfWZ1bmN0aW9uIERlKGUsbix0LHIpe2U9ci5wcm9wcy5yZWYsdC5yZWY9dm9pZCAwIT09ZT9lOm51bGx9ZnVuY3Rpb24gSWUoZSxuKXtpZihuLiQkdHlwZW9mPT09TGEpdGhyb3cgRXJyb3IoJ0EgUmVhY3QgRWxlbWVudCBmcm9tIGFuIG9sZGVyIHZlcnNpb24gb2YgUmVhY3Qgd2FzIHJlbmRlcmVkLiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQuIEl0IGNhbiBoYXBwZW4gaWY6XFxuLSBNdWx0aXBsZSBjb3BpZXMgb2YgdGhlIFwicmVhY3RcIiBwYWNrYWdlIGlzIHVzZWQuXFxuLSBBIGxpYnJhcnkgcHJlLWJ1bmRsZWQgYW4gb2xkIGNvcHkgb2YgXCJyZWFjdFwiIG9yIFwicmVhY3QvanN4LXJ1bnRpbWVcIi5cXG4tIEEgY29tcGlsZXIgdHJpZXMgdG8gXCJpbmxpbmVcIiBKU1ggaW5zdGVhZCBvZiB1c2luZyB0aGUgcnVudGltZS4nKTt0aHJvdyBlPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKSxFcnJvcihcIk9iamVjdHMgYXJlIG5vdCB2YWxpZCBhcyBhIFJlYWN0IGNoaWxkIChmb3VuZDogXCIrKFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMobikuam9pbihcIiwgXCIpK1wifVwiOmUpK1wiKS4gSWYgeW91IG1lYW50IHRvIHJlbmRlciBhIGNvbGxlY3Rpb24gb2YgY2hpbGRyZW4sIHVzZSBhbiBhcnJheSBpbnN0ZWFkLlwiKX1mdW5jdGlvbiBGZShlLG4pe3ZhciB0PWMoZSl8fFwiQ29tcG9uZW50XCI7aXNbdF18fChpc1t0XT0hMCxuPW4uZGlzcGxheU5hbWV8fG4ubmFtZXx8XCJDb21wb25lbnRcIiwzPT09ZS50YWc/Y29uc29sZS5lcnJvcihcIkZ1bmN0aW9ucyBhcmUgbm90IHZhbGlkIGFzIGEgUmVhY3QgY2hpbGQuIFRoaXMgbWF5IGhhcHBlbiBpZiB5b3UgcmV0dXJuICVzIGluc3RlYWQgb2YgPCVzIC8+IGZyb20gcmVuZGVyLiBPciBtYXliZSB5b3UgbWVhbnQgdG8gY2FsbCB0aGlzIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHJldHVybiBpdC5cXG4gIHJvb3QucmVuZGVyKCVzKVwiLG4sbixuKTpjb25zb2xlLmVycm9yKFwiRnVuY3Rpb25zIGFyZSBub3QgdmFsaWQgYXMgYSBSZWFjdCBjaGlsZC4gVGhpcyBtYXkgaGFwcGVuIGlmIHlvdSByZXR1cm4gJXMgaW5zdGVhZCBvZiA8JXMgLz4gZnJvbSByZW5kZXIuIE9yIG1heWJlIHlvdSBtZWFudCB0byBjYWxsIHRoaXMgZnVuY3Rpb24gcmF0aGVyIHRoYW4gcmV0dXJuIGl0LlxcbiAgPCVzPnslc308LyVzPlwiLG4sbix0LG4sdCkpfWZ1bmN0aW9uIE1lKGUsbil7dmFyIHQ9YyhlKXx8XCJDb21wb25lbnRcIjtzc1t0XXx8KHNzW3RdPSEwLG49U3RyaW5nKG4pLDM9PT1lLnRhZz9jb25zb2xlLmVycm9yKFwiU3ltYm9scyBhcmUgbm90IHZhbGlkIGFzIGEgUmVhY3QgY2hpbGQuXFxuICByb290LnJlbmRlciglcylcIixuKTpjb25zb2xlLmVycm9yKFwiU3ltYm9scyBhcmUgbm90IHZhbGlkIGFzIGEgUmVhY3QgY2hpbGQuXFxuICA8JXM+JXM8LyVzPlwiLHQsbix0KSl9ZnVuY3Rpb24gV2UoZSl7ZnVuY3Rpb24gbihuLHQpe2lmKGUpe3ZhciByPW4uZGVsZXRpb25zO251bGw9PT1yPyhuLmRlbGV0aW9ucz1bdF0sbi5mbGFnc3w9MTYpOnIucHVzaCh0KX19ZnVuY3Rpb24gcih0LHIpe2lmKCFlKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PXI7KW4odCxyKSxyPXIuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBsKGUpe2Zvcih2YXIgbj1uZXcgTWFwO251bGwhPT1lOyludWxsIT09ZS5rZXk/bi5zZXQoZS5rZXksZSk6bi5zZXQoZS5pbmRleCxlKSxlPWUuc2libGluZztyZXR1cm4gbn1mdW5jdGlvbiBvKGUsbil7cmV0dXJuKGU9ZmEoZSxuKSkuaW5kZXg9MCxlLnNpYmxpbmc9bnVsbCxlfWZ1bmN0aW9uIHUobix0LHIpe3JldHVybiBuLmluZGV4PXIsZT9udWxsIT09KHI9bi5hbHRlcm5hdGUpPyhyPXIuaW5kZXgpPHQ/KG4uZmxhZ3N8PTMzNTU0NDM0LHQpOnI6KG4uZmxhZ3N8PTMzNTU0NDM0LHQpOihuLmZsYWdzfD0xMDQ4NTc2LHQpfWZ1bmN0aW9uIHMobil7cmV0dXJuIGUmJm51bGw9PT1uLmFsdGVybmF0ZSYmKG4uZmxhZ3N8PTMzNTU0NDM0KSxufWZ1bmN0aW9uIGMoZSxuLHQscil7cmV0dXJuIG51bGw9PT1ufHw2IT09bi50YWc/KChuPXlhKHQsZS5tb2RlLHIpKS5yZXR1cm49ZSxuLl9kZWJ1Z093bmVyPWUsbi5fZGVidWdJbmZvPWFzLG4pOigobj1vKG4sdCkpLnJldHVybj1lLG4uX2RlYnVnSW5mbz1hcyxuKX1mdW5jdGlvbiBmKGUsbix0LHIpe3ZhciBsPXQudHlwZTtyZXR1cm4gbD09PUlhPyhMZSh0LG49cChlLG4sdC5wcm9wcy5jaGlsZHJlbixyLHQua2V5KSxlKSxuKTpudWxsIT09biYmKG4uZWxlbWVudFR5cGU9PT1sfHxcIm9iamVjdFwiPT10eXBlb2YgbCYmbnVsbCE9PWwmJmwuJCR0eXBlb2Y9PT1WYSYmdHMobCk9PT1uLnR5cGUpPyhEZShlLDAscj1vKG4sdC5wcm9wcyksdCksci5yZXR1cm49ZSxyLl9kZWJ1Z093bmVyPXQuX293bmVyLHIuX2RlYnVnSW5mbz1hcyxyKTooRGUoZSwwLHI9bWEodCxlLm1vZGUsciksdCksci5yZXR1cm49ZSxyLl9kZWJ1Z0luZm89YXMscil9ZnVuY3Rpb24gZChlLG4sdCxyKXtyZXR1cm4gbnVsbD09PW58fDQhPT1uLnRhZ3x8bi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PXQuY29udGFpbmVySW5mb3x8bi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT10LmltcGxlbWVudGF0aW9uPygobj1iYSh0LGUubW9kZSxyKSkucmV0dXJuPWUsbi5fZGVidWdJbmZvPWFzLG4pOigobj1vKG4sdC5jaGlsZHJlbnx8W10pKS5yZXR1cm49ZSxuLl9kZWJ1Z0luZm89YXMsbil9ZnVuY3Rpb24gcChlLG4sdCxyLGwpe3JldHVybiBudWxsPT09bnx8NyE9PW4udGFnPygobj1oYSh0LGUubW9kZSxyLGwpKS5yZXR1cm49ZSxuLl9kZWJ1Z093bmVyPWUsbi5fZGVidWdJbmZvPWFzLG4pOigobj1vKG4sdCkpLnJldHVybj1lLG4uX2RlYnVnSW5mbz1hcyxuKX1mdW5jdGlvbiBtKGUsbix0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgbiYmXCJcIiE9PW58fFwibnVtYmVyXCI9PXR5cGVvZiBufHxcImJpZ2ludFwiPT10eXBlb2YgbilyZXR1cm4obj15YShcIlwiK24sZS5tb2RlLHQpKS5yZXR1cm49ZSxuLl9kZWJ1Z093bmVyPWUsbi5fZGVidWdJbmZvPWFzLG47aWYoXCJvYmplY3RcIj09dHlwZW9mIG4mJm51bGwhPT1uKXtzd2l0Y2gobi4kJHR5cGVvZil7Y2FzZSBVYTpyZXR1cm4gRGUoZSwwLHQ9bWEobixlLm1vZGUsdCksbiksdC5yZXR1cm49ZSxlPU5lKG4uX2RlYnVnSW5mbyksdC5fZGVidWdJbmZvPWFzLGFzPWUsdDtjYXNlIERhOnJldHVybihuPWJhKG4sZS5tb2RlLHQpKS5yZXR1cm49ZSxuLl9kZWJ1Z0luZm89YXMsbjtjYXNlIFZhOnZhciByPU5lKG4uX2RlYnVnSW5mbyk7cmV0dXJuIGU9bShlLG49dHMobiksdCksYXM9cixlfWlmKGxvKG4pfHxpKG4pKXJldHVybih0PWhhKG4sZS5tb2RlLHQsbnVsbCkpLnJldHVybj1lLHQuX2RlYnVnT3duZXI9ZSxlPU5lKG4uX2RlYnVnSW5mbyksdC5fZGVidWdJbmZvPWFzLGFzPWUsdDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnRoZW4pcmV0dXJuIHI9TmUobi5fZGVidWdJbmZvKSxlPW0oZSxVZShuKSx0KSxhcz1yLGU7aWYobi4kJHR5cGVvZj09PWphKXJldHVybiBtKGUsY3IoZSxuKSx0KTtJZShlLG4pfXJldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIG4mJkZlKGUsbiksXCJzeW1ib2xcIj09dHlwZW9mIG4mJk1lKGUsbiksbnVsbH1mdW5jdGlvbiBoKGUsbix0LHIpe3ZhciBsPW51bGwhPT1uP24ua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJlwiXCIhPT10fHxcIm51bWJlclwiPT10eXBlb2YgdHx8XCJiaWdpbnRcIj09dHlwZW9mIHQpcmV0dXJuIG51bGwhPT1sP251bGw6YyhlLG4sXCJcIit0LHIpO2lmKFwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsIT09dCl7c3dpdGNoKHQuJCR0eXBlb2Ype2Nhc2UgVWE6cmV0dXJuIHQua2V5PT09bD8obD1OZSh0Ll9kZWJ1Z0luZm8pLGU9ZihlLG4sdCxyKSxhcz1sLGUpOm51bGw7Y2FzZSBEYTpyZXR1cm4gdC5rZXk9PT1sP2QoZSxuLHQscik6bnVsbDtjYXNlIFZhOnJldHVybiBsPU5lKHQuX2RlYnVnSW5mbyksZT1oKGUsbix0PXRzKHQpLHIpLGFzPWwsZX1pZihsbyh0KXx8aSh0KSlyZXR1cm4gbnVsbCE9PWw/bnVsbDoobD1OZSh0Ll9kZWJ1Z0luZm8pLGU9cChlLG4sdCxyLG51bGwpLGFzPWwsZSk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdC50aGVuKXJldHVybiBsPU5lKHQuX2RlYnVnSW5mbyksZT1oKGUsbixVZSh0KSxyKSxhcz1sLGU7aWYodC4kJHR5cGVvZj09PWphKXJldHVybiBoKGUsbixjcihlLHQpLHIpO0llKGUsdCl9cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmRmUoZSx0KSxcInN5bWJvbFwiPT10eXBlb2YgdCYmTWUoZSx0KSxudWxsfWZ1bmN0aW9uIGcoZSxuLHQscixsKXtpZihcInN0cmluZ1wiPT10eXBlb2YgciYmXCJcIiE9PXJ8fFwibnVtYmVyXCI9PXR5cGVvZiByfHxcImJpZ2ludFwiPT10eXBlb2YgcilyZXR1cm4gYyhuLGU9ZS5nZXQodCl8fG51bGwsXCJcIityLGwpO2lmKFwib2JqZWN0XCI9PXR5cGVvZiByJiZudWxsIT09cil7c3dpdGNoKHIuJCR0eXBlb2Ype2Nhc2UgVWE6cmV0dXJuIHQ9ZS5nZXQobnVsbD09PXIua2V5P3Q6ci5rZXkpfHxudWxsLGU9TmUoci5fZGVidWdJbmZvKSxuPWYobix0LHIsbCksYXM9ZSxuO2Nhc2UgRGE6cmV0dXJuIGQobixlPWUuZ2V0KG51bGw9PT1yLmtleT90OnIua2V5KXx8bnVsbCxyLGwpO2Nhc2UgVmE6dmFyIGE9TmUoci5fZGVidWdJbmZvKTtyZXR1cm4gbj1nKGUsbix0LHI9dHMociksbCksYXM9YSxufWlmKGxvKHIpfHxpKHIpKXJldHVybiB0PWUuZ2V0KHQpfHxudWxsLGU9TmUoci5fZGVidWdJbmZvKSxuPXAobix0LHIsbCxudWxsKSxhcz1lLG47aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygci50aGVuKXJldHVybiBhPU5lKHIuX2RlYnVnSW5mbyksbj1nKGUsbix0LFVlKHIpLGwpLGFzPWEsbjtpZihyLiQkdHlwZW9mPT09amEpcmV0dXJuIGcoZSxuLHQsY3IobixyKSxsKTtJZShuLHIpfXJldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHImJkZlKG4sciksXCJzeW1ib2xcIj09dHlwZW9mIHImJk1lKG4sciksbnVsbH1mdW5jdGlvbiBiKGUsbix0LHIpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiB0fHxudWxsPT09dClyZXR1cm4gcjtzd2l0Y2godC4kJHR5cGVvZil7Y2FzZSBVYTpjYXNlIERhOmEoZSxuLHQpO3ZhciBsPXQua2V5O2lmKFwic3RyaW5nXCIhPXR5cGVvZiBsKWJyZWFrO2lmKG51bGw9PT1yKXsocj1uZXcgU2V0KS5hZGQobCk7YnJlYWt9aWYoIXIuaGFzKGwpKXtyLmFkZChsKTticmVha315KG4sKGZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcihcIkVuY291bnRlcmVkIHR3byBjaGlsZHJlbiB3aXRoIHRoZSBzYW1lIGtleSwgYCVzYC4gS2V5cyBzaG91bGQgYmUgdW5pcXVlIHNvIHRoYXQgY29tcG9uZW50cyBtYWludGFpbiB0aGVpciBpZGVudGl0eSBhY3Jvc3MgdXBkYXRlcy4gTm9uLXVuaXF1ZSBrZXlzIG1heSBjYXVzZSBjaGlsZHJlbiB0byBiZSBkdXBsaWNhdGVkIGFuZC9vciBvbWl0dGVkIOKAlCB0aGUgYmVoYXZpb3IgaXMgdW5zdXBwb3J0ZWQgYW5kIGNvdWxkIGNoYW5nZSBpbiBhIGZ1dHVyZSB2ZXJzaW9uLlwiLGwpfSkpO2JyZWFrO2Nhc2UgVmE6YihlLG4sdD10cyh0KSxyKX1yZXR1cm4gcn1mdW5jdGlvbiB2KHQsYSxjLGYpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBjJiZudWxsIT09YyYmYy50eXBlPT09SWEmJm51bGw9PT1jLmtleSYmKExlKGMsbnVsbCx0KSxjPWMucHJvcHMuY2hpbGRyZW4pLFwib2JqZWN0XCI9PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgVWE6dmFyIGQ9TmUoYy5fZGVidWdJbmZvKTtlOntmb3IodmFyIHA9Yy5rZXkseT1hO251bGwhPT15Oyl7aWYoeS5rZXk9PT1wKXtpZigocD1jLnR5cGUpPT09SWEpe2lmKDc9PT15LnRhZyl7cih0LHkuc2libGluZyksKGE9byh5LGMucHJvcHMuY2hpbGRyZW4pKS5yZXR1cm49dCxhLl9kZWJ1Z093bmVyPWMuX293bmVyLGEuX2RlYnVnSW5mbz1hcyxMZShjLGEsdCksdD1hO2JyZWFrIGV9fWVsc2UgaWYoeS5lbGVtZW50VHlwZT09PXB8fFwib2JqZWN0XCI9PXR5cGVvZiBwJiZudWxsIT09cCYmcC4kJHR5cGVvZj09PVZhJiZ0cyhwKT09PXkudHlwZSl7cih0LHkuc2libGluZyksRGUodCwwLGE9byh5LGMucHJvcHMpLGMpLGEucmV0dXJuPXQsYS5fZGVidWdPd25lcj1jLl9vd25lcixhLl9kZWJ1Z0luZm89YXMsdD1hO2JyZWFrIGV9cih0LHkpO2JyZWFrfW4odCx5KSx5PXkuc2libGluZ31jLnR5cGU9PT1JYT8oKGE9aGEoYy5wcm9wcy5jaGlsZHJlbix0Lm1vZGUsZixjLmtleSkpLnJldHVybj10LGEuX2RlYnVnT3duZXI9dCxhLl9kZWJ1Z0luZm89YXMsTGUoYyxhLHQpLHQ9YSk6KERlKHQsMCxmPW1hKGMsdC5tb2RlLGYpLGMpLGYucmV0dXJuPXQsZi5fZGVidWdJbmZvPWFzLHQ9Zil9cmV0dXJuIHQ9cyh0KSxhcz1kLHQ7Y2FzZSBEYTplOntmb3IoYz0oZD1jKS5rZXk7bnVsbCE9PWE7KXtpZihhLmtleT09PWMpe2lmKDQ9PT1hLnRhZyYmYS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWQuY29udGFpbmVySW5mbyYmYS5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1kLmltcGxlbWVudGF0aW9uKXtyKHQsYS5zaWJsaW5nKSwoYT1vKGEsZC5jaGlsZHJlbnx8W10pKS5yZXR1cm49dCx0PWE7YnJlYWsgZX1yKHQsYSk7YnJlYWt9bih0LGEpLGE9YS5zaWJsaW5nfShhPWJhKGQsdC5tb2RlLGYpKS5yZXR1cm49dCx0PWF9cmV0dXJuIHModCk7Y2FzZSBWYTpyZXR1cm4gZD1OZShjLl9kZWJ1Z0luZm8pLHQ9dih0LGEsYz10cyhjKSxmKSxhcz1kLHR9aWYobG8oYykpcmV0dXJuIGQ9TmUoYy5fZGVidWdJbmZvKSx0PWZ1bmN0aW9uKHQsYSxvLGkpe2Zvcih2YXIgcz1udWxsLGM9bnVsbCxmPW51bGwsZD1hLHA9YT0wLHk9bnVsbDtudWxsIT09ZCYmcDxvLmxlbmd0aDtwKyspe2QuaW5kZXg+cD8oeT1kLGQ9bnVsbCk6eT1kLnNpYmxpbmc7dmFyIHY9aCh0LGQsb1twXSxpKTtpZihudWxsPT09dil7bnVsbD09PWQmJihkPXkpO2JyZWFrfXM9Yih0LHYsb1twXSxzKSxlJiZkJiZudWxsPT09di5hbHRlcm5hdGUmJm4odCxkKSxhPXUodixhLHApLG51bGw9PT1mP2M9djpmLnNpYmxpbmc9dixmPXYsZD15fWlmKHA9PT1vLmxlbmd0aClyZXR1cm4gcih0LGQpLGM7aWYobnVsbD09PWQpe2Zvcig7cDxvLmxlbmd0aDtwKyspbnVsbCE9PShkPW0odCxvW3BdLGkpKSYmKHM9Yih0LGQsb1twXSxzKSxhPXUoZCxhLHApLG51bGw9PT1mP2M9ZDpmLnNpYmxpbmc9ZCxmPWQpO3JldHVybiBjfWZvcihkPWwoZCk7cDxvLmxlbmd0aDtwKyspbnVsbCE9PSh5PWcoZCx0LHAsb1twXSxpKSkmJihzPWIodCx5LG9bcF0scyksZSYmbnVsbCE9PXkuYWx0ZXJuYXRlJiZkLmRlbGV0ZShudWxsPT09eS5rZXk/cDp5LmtleSksYT11KHksYSxwKSxudWxsPT09Zj9jPXk6Zi5zaWJsaW5nPXksZj15KTtyZXR1cm4gZSYmZC5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gbih0LGUpfSkpLGN9KHQsYSxjLGYpLGFzPWQsdDtpZihpKGMpKXtpZihkPU5lKGMuX2RlYnVnSW5mbyksXCJmdW5jdGlvblwiIT10eXBlb2YoeT1pKGMpKSl0aHJvdyBFcnJvcihcIkFuIG9iamVjdCBpcyBub3QgYW4gaXRlcmFibGUuIFRoaXMgZXJyb3IgaXMgbGlrZWx5IGNhdXNlZCBieSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpO3JldHVybihwPXkuY2FsbChjKSk9PT1jPzA9PT10LnRhZyYmXCJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQudHlwZSkmJlwiW29iamVjdCBHZW5lcmF0b3JdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocCl8fChvc3x8Y29uc29sZS5lcnJvcihcIlVzaW5nIEl0ZXJhdG9ycyBhcyBjaGlsZHJlbiBpcyB1bnN1cHBvcnRlZCBhbmQgd2lsbCBsaWtlbHkgeWllbGQgdW5leHBlY3RlZCByZXN1bHRzIGJlY2F1c2UgZW51bWVyYXRpbmcgYSBnZW5lcmF0b3IgbXV0YXRlcyBpdC4gWW91IG1heSBjb252ZXJ0IGl0IHRvIGFuIGFycmF5IHdpdGggYEFycmF5LmZyb20oKWAgb3IgdGhlIGBbLi4uc3ByZWFkXWAgb3BlcmF0b3IgYmVmb3JlIHJlbmRlcmluZy4gWW91IGNhbiBhbHNvIHVzZSBhbiBJdGVyYWJsZSB0aGF0IGNhbiBpdGVyYXRlIG11bHRpcGxlIHRpbWVzIG92ZXIgdGhlIHNhbWUgaXRlbXMuXCIpLG9zPSEwKTpjLmVudHJpZXMhPT15fHxVaXx8KGNvbnNvbGUuZXJyb3IoXCJVc2luZyBNYXBzIGFzIGNoaWxkcmVuIGlzIG5vdCBzdXBwb3J0ZWQuIFVzZSBhbiBhcnJheSBvZiBrZXllZCBSZWFjdEVsZW1lbnRzIGluc3RlYWQuXCIpLFVpPSEwKSx0PWZ1bmN0aW9uKHQsYSxvLGkpe2lmKG51bGw9PW8pdGhyb3cgRXJyb3IoXCJBbiBpdGVyYWJsZSBvYmplY3QgcHJvdmlkZWQgbm8gaXRlcmF0b3IuXCIpO2Zvcih2YXIgcz1udWxsLGM9bnVsbCxmPWEsZD1hPTAscD1udWxsLHk9bnVsbCx2PW8ubmV4dCgpO251bGwhPT1mJiYhdi5kb25lO2QrKyx2PW8ubmV4dCgpKXtmLmluZGV4PmQ/KHA9ZixmPW51bGwpOnA9Zi5zaWJsaW5nO3ZhciBTPWgodCxmLHYudmFsdWUsaSk7aWYobnVsbD09PVMpe251bGw9PT1mJiYoZj1wKTticmVha315PWIodCxTLHYudmFsdWUseSksZSYmZiYmbnVsbD09PVMuYWx0ZXJuYXRlJiZuKHQsZiksYT11KFMsYSxkKSxudWxsPT09Yz9zPVM6Yy5zaWJsaW5nPVMsYz1TLGY9cH1pZih2LmRvbmUpcmV0dXJuIHIodCxmKSxzO2lmKG51bGw9PT1mKXtmb3IoOyF2LmRvbmU7ZCsrLHY9by5uZXh0KCkpbnVsbCE9PShmPW0odCx2LnZhbHVlLGkpKSYmKHk9Yih0LGYsdi52YWx1ZSx5KSxhPXUoZixhLGQpLG51bGw9PT1jP3M9ZjpjLnNpYmxpbmc9ZixjPWYpO3JldHVybiBzfWZvcihmPWwoZik7IXYuZG9uZTtkKyssdj1vLm5leHQoKSludWxsIT09KHA9ZyhmLHQsZCx2LnZhbHVlLGkpKSYmKHk9Yih0LHAsdi52YWx1ZSx5KSxlJiZudWxsIT09cC5hbHRlcm5hdGUmJmYuZGVsZXRlKG51bGw9PT1wLmtleT9kOnAua2V5KSxhPXUocCxhLGQpLG51bGw9PT1jP3M9cDpjLnNpYmxpbmc9cCxjPXApO3JldHVybiBlJiZmLmZvckVhY2goKGZ1bmN0aW9uKGUpe3JldHVybiBuKHQsZSl9KSksc30odCxhLHAsZiksYXM9ZCx0fWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGMudGhlbilyZXR1cm4gZD1OZShjLl9kZWJ1Z0luZm8pLHQ9dih0LGEsVWUoYyksZiksYXM9ZCx0O2lmKGMuJCR0eXBlb2Y9PT1qYSlyZXR1cm4gdih0LGEsY3IodCxjKSxmKTtJZSh0LGMpfXJldHVyblwic3RyaW5nXCI9PXR5cGVvZiBjJiZcIlwiIT09Y3x8XCJudW1iZXJcIj09dHlwZW9mIGN8fFwiYmlnaW50XCI9PXR5cGVvZiBjPyhkPVwiXCIrYyxudWxsIT09YSYmNj09PWEudGFnPyhyKHQsYS5zaWJsaW5nKSwoYT1vKGEsZCkpLnJldHVybj10LHQ9YSk6KHIodCxhKSwoYT15YShkLHQubW9kZSxmKSkucmV0dXJuPXQsYS5fZGVidWdPd25lcj10LGEuX2RlYnVnSW5mbz1hcyx0PWEpLHModCkpOihcImZ1bmN0aW9uXCI9PXR5cGVvZiBjJiZGZSh0LGMpLFwic3ltYm9sXCI9PXR5cGVvZiBjJiZNZSh0LGMpLHIodCxhKSl9cmV0dXJuIGZ1bmN0aW9uKGUsbixyLGwpe3ZhciBhPWFzO2FzPW51bGw7dHJ5e2xzPTA7dmFyIG89dihlLG4scixsKTtyZXR1cm4gcnM9bnVsbCxvfWNhdGNoKG4pe2lmKG49PT1EaSl0aHJvdyBuO3ZhciB1PXQoMjksbixudWxsLGUubW9kZSk7dS5sYW5lcz1sLHUucmV0dXJuPWU7dmFyIGk9dS5fZGVidWdJbmZvPWFzO2lmKHUuX2RlYnVnT3duZXI9ZS5fZGVidWdPd25lcixudWxsIT1pKWZvcih2YXIgcz1pLmxlbmd0aC0xOzA8PXM7cy0tKWlmKFwic3RyaW5nXCI9PXR5cGVvZiBpW3NdLnN0YWNrKXt1Ll9kZWJ1Z093bmVyPWlbc107YnJlYWt9cmV0dXJuIHV9ZmluYWxseXthcz1hfX19ZnVuY3Rpb24gSGUoZSxuKXt2YXIgdD1FZjtTKG1zLHQsZSksUyhwcyxuLGUpLEVmPXR8bi5iYXNlTGFuZXN9ZnVuY3Rpb24gamUoZSl7UyhtcyxFZixlKSxTKHBzLHBzLmN1cnJlbnQsZSl9ZnVuY3Rpb24gQWUoZSl7RWY9bXMuY3VycmVudCx2KHBzLGUpLHYobXMsZSl9ZnVuY3Rpb24gUWUoZSl7dmFyIG49ZS5hbHRlcm5hdGU7Uyh2cyx2cy5jdXJyZW50JnlzLGUpLFMoaHMsZSxlKSxudWxsPT09Z3MmJihudWxsPT09bnx8bnVsbCE9PXBzLmN1cnJlbnR8fG51bGwhPT1uLm1lbW9pemVkU3RhdGUpJiYoZ3M9ZSl9ZnVuY3Rpb24gT2UoZSl7aWYoMjI9PT1lLnRhZyl7aWYoUyh2cyx2cy5jdXJyZW50LGUpLFMoaHMsZSxlKSxudWxsPT09Z3Mpe3ZhciBuPWUuYWx0ZXJuYXRlO251bGwhPT1uJiZudWxsIT09bi5tZW1vaXplZFN0YXRlJiYoZ3M9ZSl9fWVsc2UgQmUoZSl9ZnVuY3Rpb24gQmUoZSl7Uyh2cyx2cy5jdXJyZW50LGUpLFMoaHMsaHMuY3VycmVudCxlKX1mdW5jdGlvbiBWZShlKXt2KGhzLGUpLGdzPT09ZSYmKGdzPW51bGwpLHYodnMsZSl9ZnVuY3Rpb24gJGUoZSl7Zm9yKHZhciBuPWU7bnVsbCE9PW47KXtpZigxMz09PW4udGFnKXt2YXIgdD1uLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXQmJihudWxsPT09KHQ9dC5kZWh5ZHJhdGVkKXx8Sm8odCl8fEtvKHQpKSlyZXR1cm4gbn1lbHNlIGlmKDE5PT09bi50YWcmJnZvaWQgMCE9PW4ubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9KDEyOCZuLmZsYWdzKSlyZXR1cm4gbn1lbHNlIGlmKG51bGwhPT1uLmNoaWxkKXtuLmNoaWxkLnJldHVybj1uLG49bi5jaGlsZDtjb250aW51ZX1pZihuPT09ZSlicmVhaztmb3IoO251bGw9PT1uLnNpYmxpbmc7KXtpZihudWxsPT09bi5yZXR1cm58fG4ucmV0dXJuPT09ZSlyZXR1cm4gbnVsbDtuPW4ucmV0dXJufW4uc2libGluZy5yZXR1cm49bi5yZXR1cm4sbj1uLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcWUoKXt2YXIgZT1BcztudWxsPT09UXM/UXM9W2VdOlFzLnB1c2goZSl9ZnVuY3Rpb24gWWUoKXt2YXIgZT1BcztpZihudWxsIT09UXMmJihPcysrLFFzW09zXSE9PWUpKXt2YXIgbj1jKFRzKTtpZighQ3MuaGFzKG4pJiYoQ3MuYWRkKG4pLG51bGwhPT1Rcykpe2Zvcih2YXIgdD1cIlwiLHI9MDtyPD1PcztyKyspe3ZhciBsPVFzW3JdLGE9cj09PU9zP2U6bDtmb3IobD1yKzErXCIuIFwiK2w7MzA+bC5sZW5ndGg7KWwrPVwiIFwiO3QrPWwrPWErXCJcXG5cIn1jb25zb2xlLmVycm9yKFwiUmVhY3QgaGFzIGRldGVjdGVkIGEgY2hhbmdlIGluIHRoZSBvcmRlciBvZiBIb29rcyBjYWxsZWQgYnkgJXMuIFRoaXMgd2lsbCBsZWFkIHRvIGJ1Z3MgYW5kIGVycm9ycyBpZiBub3QgZml4ZWQuIEZvciBtb3JlIGluZm9ybWF0aW9uLCByZWFkIHRoZSBSdWxlcyBvZiBIb29rczogaHR0cHM6Ly9yZWFjdC5kZXYvbGluay9ydWxlcy1vZi1ob29rc1xcblxcbiAgIFByZXZpb3VzIHJlbmRlciAgICAgICAgICAgIE5leHQgcmVuZGVyXFxuICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXFxuJXMgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cXG5cIixuLHQpfX19ZnVuY3Rpb24gR2UoZSl7bnVsbD09ZXx8bG8oZSl8fGNvbnNvbGUuZXJyb3IoXCIlcyByZWNlaXZlZCBhIGZpbmFsIGFyZ3VtZW50IHRoYXQgaXMgbm90IGFuIGFycmF5IChpbnN0ZWFkLCByZWNlaXZlZCBgJXNgKS4gV2hlbiBzcGVjaWZpZWQsIHRoZSBmaW5hbCBhcmd1bWVudCBtdXN0IGJlIGFuIGFycmF5LlwiLEFzLHR5cGVvZiBlKX1mdW5jdGlvbiBKZSgpe3ZhciBlPWMoVHMpO19zLmhhcyhlKXx8KF9zLmFkZChlKSxjb25zb2xlLmVycm9yKFwiUmVhY3RET00udXNlRm9ybVN0YXRlIGhhcyBiZWVuIHJlbmFtZWQgdG8gUmVhY3QudXNlQWN0aW9uU3RhdGUuIFBsZWFzZSB1cGRhdGUgJXMgdG8gdXNlIFJlYWN0LnVzZUFjdGlvblN0YXRlLlwiLGUpKX1mdW5jdGlvbiBLZSgpe3Rocm93IEVycm9yKFwiSW52YWxpZCBob29rIGNhbGwuIEhvb2tzIGNhbiBvbmx5IGJlIGNhbGxlZCBpbnNpZGUgb2YgdGhlIGJvZHkgb2YgYSBmdW5jdGlvbiBjb21wb25lbnQuIFRoaXMgY291bGQgaGFwcGVuIGZvciBvbmUgb2YgdGhlIGZvbGxvd2luZyByZWFzb25zOlxcbjEuIFlvdSBtaWdodCBoYXZlIG1pc21hdGNoaW5nIHZlcnNpb25zIG9mIFJlYWN0IGFuZCB0aGUgcmVuZGVyZXIgKHN1Y2ggYXMgUmVhY3QgRE9NKVxcbjIuIFlvdSBtaWdodCBiZSBicmVha2luZyB0aGUgUnVsZXMgb2YgSG9va3NcXG4zLiBZb3UgbWlnaHQgaGF2ZSBtb3JlIHRoYW4gb25lIGNvcHkgb2YgUmVhY3QgaW4gdGhlIHNhbWUgYXBwXFxuU2VlIGh0dHBzOi8vcmVhY3QuZGV2L2xpbmsvaW52YWxpZC1ob29rLWNhbGwgZm9yIHRpcHMgYWJvdXQgaG93IHRvIGRlYnVnIGFuZCBmaXggdGhpcyBwcm9ibGVtLlwiKX1mdW5jdGlvbiBYZShlLG4pe2lmKEJzKXJldHVybiExO2lmKG51bGw9PT1uKXJldHVybiBjb25zb2xlLmVycm9yKFwiJXMgcmVjZWl2ZWQgYSBmaW5hbCBhcmd1bWVudCBkdXJpbmcgdGhpcyByZW5kZXIsIGJ1dCBub3QgZHVyaW5nIHRoZSBwcmV2aW91cyByZW5kZXIuIEV2ZW4gdGhvdWdoIHRoZSBmaW5hbCBhcmd1bWVudCBpcyBvcHRpb25hbCwgaXRzIHR5cGUgY2Fubm90IGNoYW5nZSBiZXR3ZWVuIHJlbmRlcnMuXCIsQXMpLCExO2UubGVuZ3RoIT09bi5sZW5ndGgmJmNvbnNvbGUuZXJyb3IoXCJUaGUgZmluYWwgYXJndW1lbnQgcGFzc2VkIHRvICVzIGNoYW5nZWQgc2l6ZSBiZXR3ZWVuIHJlbmRlcnMuIFRoZSBvcmRlciBhbmQgc2l6ZSBvZiB0aGlzIGFycmF5IG11c3QgcmVtYWluIGNvbnN0YW50LlxcblxcblByZXZpb3VzOiAlc1xcbkluY29taW5nOiAlc1wiLEFzLFwiW1wiK24uam9pbihcIiwgXCIpK1wiXVwiLFwiW1wiK2Uuam9pbihcIiwgXCIpK1wiXVwiKTtmb3IodmFyIHQ9MDt0PG4ubGVuZ3RoJiZ0PGUubGVuZ3RoO3QrKylpZighUnUoZVt0XSxuW3RdKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBaZShlLG4sdCxyLGwsYSl7UnM9YSxUcz1uLFFzPW51bGwhPT1lP2UuX2RlYnVnSG9va1R5cGVzOm51bGwsT3M9LTEsQnM9bnVsbCE9PWUmJmUudHlwZSE9PW4udHlwZSxcIltvYmplY3QgQXN5bmNGdW5jdGlvbl1cIiE9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSYmXCJbb2JqZWN0IEFzeW5jR2VuZXJhdG9yRnVuY3Rpb25dXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl8fChhPWMoVHMpLFBzLmhhcyhhKXx8KFBzLmFkZChhKSxjb25zb2xlLmVycm9yKFwiYXN5bmMvYXdhaXQgaXMgbm90IHlldCBzdXBwb3J0ZWQgaW4gQ2xpZW50IENvbXBvbmVudHMsIG9ubHkgU2VydmVyIENvbXBvbmVudHMuIFRoaXMgZXJyb3IgaXMgb2Z0ZW4gY2F1c2VkIGJ5IGFjY2lkZW50YWxseSBhZGRpbmcgYCd1c2UgY2xpZW50J2AgdG8gYSBtb2R1bGUgdGhhdCB3YXMgb3JpZ2luYWxseSB3cml0dGVuIGZvciB0aGUgc2VydmVyLlwiKSkpLG4ubWVtb2l6ZWRTdGF0ZT1udWxsLG4udXBkYXRlUXVldWU9bnVsbCxuLmxhbmVzPTAsSmEuSD1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZT9HczpudWxsIT09UXM/WXM6cXMsSXM9YT0oOCZuLm1vZGUpIT09JHU7dmFyIG89amkodCxyLGwpO2lmKElzPSExLERzJiYobz1ubihuLHQscixsKSksYSl7VSghMCk7dHJ5e289bm4obix0LHIsbCl9ZmluYWxseXtVKCExKX19cmV0dXJuIGVuKGUsbiksb31mdW5jdGlvbiBlbihlLG4pe24uX2RlYnVnSG9va1R5cGVzPVFzLG51bGw9PT1uLmRlcGVuZGVuY2llcz9udWxsIT09V3MmJihuLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6bnVsbCxfZGVidWdUaGVuYWJsZVN0YXRlOldzfSk6bi5kZXBlbmRlbmNpZXMuX2RlYnVnVGhlbmFibGVTdGF0ZT1XcyxKYS5IPSRzO3ZhciB0PW51bGwhPT1OcyYmbnVsbCE9PU5zLm5leHQ7aWYoUnM9MCxRcz1Bcz1Mcz1Ocz1Ucz1udWxsLE9zPS0xLG51bGwhPT1lJiYoMzE0NTcyODAmZS5mbGFncykhPSgzMTQ1NzI4MCZuLmZsYWdzKSYmY29uc29sZS5lcnJvcihcIkludGVybmFsIFJlYWN0IGVycm9yOiBFeHBlY3RlZCBzdGF0aWMgZmxhZyB3YXMgbWlzc2luZy4gUGxlYXNlIG5vdGlmeSB0aGUgUmVhY3QgdGVhbS5cIiksVXM9ITEsTXM9MCxXcz1udWxsLHQpdGhyb3cgRXJyb3IoXCJSZW5kZXJlZCBmZXdlciBob29rcyB0aGFuIGV4cGVjdGVkLiBUaGlzIG1heSBiZSBjYXVzZWQgYnkgYW4gYWNjaWRlbnRhbCBlYXJseSByZXR1cm4gc3RhdGVtZW50LlwiKTtudWxsPT09ZXx8cGN8fG51bGwhPT0oZT1lLmRlcGVuZGVuY2llcykmJnVyKGUpJiYocGM9ITApLFdpPyhXaT0hMSxlPSEwKTplPSExLGUmJihuPWMobil8fFwiVW5rbm93blwiLEVzLmhhcyhuKXx8UHMuaGFzKG4pfHwoRXMuYWRkKG4pLGNvbnNvbGUuZXJyb3IoXCJgdXNlYCB3YXMgY2FsbGVkIGZyb20gaW5zaWRlIGEgdHJ5L2NhdGNoIGJsb2NrLiBUaGlzIGlzIG5vdCBhbGxvd2VkIGFuZCBjYW4gbGVhZCB0byB1bmV4cGVjdGVkIGJlaGF2aW9yLiBUbyBoYW5kbGUgZXJyb3JzIHRyaWdnZXJlZCBieSBgdXNlYCwgd3JhcCB5b3VyIGNvbXBvbmVudCBpbiBhIGVycm9yIGJvdW5kYXJ5LlwiKSkpfWZ1bmN0aW9uIG5uKGUsbix0LHIpe1RzPWU7dmFyIGw9MDtkb3tpZihEcyYmKFdzPW51bGwpLE1zPTAsRHM9ITEsbD49anMpdGhyb3cgRXJyb3IoXCJUb28gbWFueSByZS1yZW5kZXJzLiBSZWFjdCBsaW1pdHMgdGhlIG51bWJlciBvZiByZW5kZXJzIHRvIHByZXZlbnQgYW4gaW5maW5pdGUgbG9vcC5cIik7aWYobCs9MSxCcz0hMSxMcz1Ocz1udWxsLG51bGwhPWUudXBkYXRlUXVldWUpe3ZhciBhPWUudXBkYXRlUXVldWU7YS5sYXN0RWZmZWN0PW51bGwsYS5ldmVudHM9bnVsbCxhLnN0b3Jlcz1udWxsLG51bGwhPWEubWVtb0NhY2hlJiYoYS5tZW1vQ2FjaGUuaW5kZXg9MCl9T3M9LTEsSmEuSD1KcyxhPWppKG4sdCxyKX13aGlsZShEcyk7cmV0dXJuIGF9ZnVuY3Rpb24gdG4oKXt2YXIgZT1KYS5ILG49ZS51c2VTdGF0ZSgpWzBdO3JldHVybiBuPVwiZnVuY3Rpb25cIj09dHlwZW9mIG4udGhlbj9zbihuKTpuLGU9ZS51c2VTdGF0ZSgpWzBdLChudWxsIT09TnM/TnMubWVtb2l6ZWRTdGF0ZTpudWxsKSE9PWUmJihUcy5mbGFnc3w9MTAyNCksbn1mdW5jdGlvbiBybigpe3ZhciBlPTAhPT1GcztyZXR1cm4gRnM9MCxlfWZ1bmN0aW9uIGxuKGUsbix0KXtuLnVwZGF0ZVF1ZXVlPWUudXBkYXRlUXVldWUsbi5mbGFncz0oMTYmbi5tb2RlKSE9PSR1Py0yMDEzMjg2NDUmbi5mbGFnczotMjA1MyZuLmZsYWdzLGUubGFuZXMmPX50fWZ1bmN0aW9uIGFuKGUpe2lmKFVzKXtmb3IoZT1lLm1lbW9pemVkU3RhdGU7bnVsbCE9PWU7KXt2YXIgbj1lLnF1ZXVlO251bGwhPT1uJiYobi5wZW5kaW5nPW51bGwpLGU9ZS5uZXh0fVVzPSExfVJzPTAsUXM9THM9TnM9VHM9bnVsbCxPcz0tMSxBcz1udWxsLERzPSExLE1zPUZzPTAsV3M9bnVsbH1mdW5jdGlvbiBvbigpe3ZhciBlPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O3JldHVybiBudWxsPT09THM/VHMubWVtb2l6ZWRTdGF0ZT1Mcz1lOkxzPUxzLm5leHQ9ZSxMc31mdW5jdGlvbiB1bigpe2lmKG51bGw9PT1Ocyl7dmFyIGU9VHMuYWx0ZXJuYXRlO2U9bnVsbCE9PWU/ZS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBlPU5zLm5leHQ7dmFyIG49bnVsbD09PUxzP1RzLm1lbW9pemVkU3RhdGU6THMubmV4dDtpZihudWxsIT09bilMcz1uLE5zPWU7ZWxzZXtpZihudWxsPT09ZSl7aWYobnVsbD09PVRzLmFsdGVybmF0ZSl0aHJvdyBFcnJvcihcIlVwZGF0ZSBob29rIGNhbGxlZCBvbiBpbml0aWFsIHJlbmRlci4gVGhpcyBpcyBsaWtlbHkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKTt0aHJvdyBFcnJvcihcIlJlbmRlcmVkIG1vcmUgaG9va3MgdGhhbiBkdXJpbmcgdGhlIHByZXZpb3VzIHJlbmRlci5cIil9ZT17bWVtb2l6ZWRTdGF0ZTooTnM9ZSkubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6TnMuYmFzZVN0YXRlLGJhc2VRdWV1ZTpOcy5iYXNlUXVldWUscXVldWU6TnMucXVldWUsbmV4dDpudWxsfSxudWxsPT09THM/VHMubWVtb2l6ZWRTdGF0ZT1Mcz1lOkxzPUxzLm5leHQ9ZX1yZXR1cm4gTHN9ZnVuY3Rpb24gc24oZSl7dmFyIG49TXM7cmV0dXJuIE1zKz0xLG51bGw9PT1XcyYmKFdzPXtkaWRXYXJuQWJvdXRVbmNhY2hlZFByb21pc2U6ITEsdGhlbmFibGVzOltdfSksZT1fZShXcyxlLG4pLG49VHMsbnVsbD09PShudWxsPT09THM/bi5tZW1vaXplZFN0YXRlOkxzLm5leHQpJiYobj1uLmFsdGVybmF0ZSxKYS5IPW51bGwhPT1uJiZudWxsIT09bi5tZW1vaXplZFN0YXRlP0dzOnFzKSxlfWZ1bmN0aW9uIGNuKGUpe2lmKG51bGwhPT1lJiZcIm9iamVjdFwiPT10eXBlb2YgZSl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZS50aGVuKXJldHVybiBzbihlKTtpZihlLiQkdHlwZW9mPT09amEpcmV0dXJuIHNyKGUpfXRocm93IEVycm9yKFwiQW4gdW5zdXBwb3J0ZWQgdHlwZSB3YXMgcGFzc2VkIHRvIHVzZSgpOiBcIitTdHJpbmcoZSkpfWZ1bmN0aW9uIGZuKGUpe3ZhciBuPW51bGwsdD1Ucy51cGRhdGVRdWV1ZTtpZihudWxsIT09dCYmKG49dC5tZW1vQ2FjaGUpLG51bGw9PW4pe3ZhciByPVRzLmFsdGVybmF0ZTtudWxsIT09ciYmbnVsbCE9PShyPXIudXBkYXRlUXVldWUpJiZudWxsIT0ocj1yLm1lbW9DYWNoZSkmJihuPXtkYXRhOnIuZGF0YS5tYXAoKGZ1bmN0aW9uKGUpe3JldHVybiBlLnNsaWNlKCl9KSksaW5kZXg6MH0pfWlmKG51bGw9PW4mJihuPXtkYXRhOltdLGluZGV4OjB9KSxudWxsPT09dCYmKHQ9VnMoKSxUcy51cGRhdGVRdWV1ZT10KSx0Lm1lbW9DYWNoZT1uLHZvaWQgMD09PSh0PW4uZGF0YVtuLmluZGV4XSl8fEJzKWZvcih0PW4uZGF0YVtuLmluZGV4XT1BcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPXFhO2Vsc2UgdC5sZW5ndGghPT1lJiZjb25zb2xlLmVycm9yKFwiRXhwZWN0ZWQgYSBjb25zdGFudCBzaXplIGFyZ3VtZW50IGZvciBlYWNoIGludm9jYXRpb24gb2YgdXNlTWVtb0NhY2hlLiBUaGUgcHJldmlvdXMgY2FjaGUgd2FzIGFsbG9jYXRlZCB3aXRoIHNpemUgJXMgYnV0IHNpemUgJXMgd2FzIHJlcXVlc3RlZC5cIix0Lmxlbmd0aCxlKTtyZXR1cm4gbi5pbmRleCsrLHR9ZnVuY3Rpb24gZG4oZSxuKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24oZSk6bn1mdW5jdGlvbiBwbihlLG4sdCl7dmFyIHI9b24oKTtpZih2b2lkIDAhPT10KXt2YXIgbD10KG4pO2lmKElzKXtVKCEwKTt0cnl7dChuKX1maW5hbGx5e1UoITEpfX19ZWxzZSBsPW47cmV0dXJuIHIubWVtb2l6ZWRTdGF0ZT1yLmJhc2VTdGF0ZT1sLGU9e3BlbmRpbmc6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjplLGxhc3RSZW5kZXJlZFN0YXRlOmx9LHIucXVldWU9ZSxlPWUuZGlzcGF0Y2g9bXQuYmluZChudWxsLFRzLGUpLFtyLm1lbW9pemVkU3RhdGUsZV19ZnVuY3Rpb24gbW4oZSl7cmV0dXJuIGhuKHVuKCksTnMsZSl9ZnVuY3Rpb24gaG4oZSxuLHQpe3ZhciByPWUucXVldWU7aWYobnVsbD09PXIpdGhyb3cgRXJyb3IoXCJTaG91bGQgaGF2ZSBhIHF1ZXVlLiBZb3UgYXJlIGxpa2VseSBjYWxsaW5nIEhvb2tzIGNvbmRpdGlvbmFsbHksIHdoaWNoIGlzIG5vdCBhbGxvd2VkLiAoaHR0cHM6Ly9yZWFjdC5kZXYvbGluay9pbnZhbGlkLWhvb2stY2FsbClcIik7ci5sYXN0UmVuZGVyZWRSZWR1Y2VyPXQ7dmFyIGw9ZS5iYXNlUXVldWUsYT1yLnBlbmRpbmc7aWYobnVsbCE9PWEpe2lmKG51bGwhPT1sKXt2YXIgbz1sLm5leHQ7bC5uZXh0PWEubmV4dCxhLm5leHQ9b31uLmJhc2VRdWV1ZSE9PWwmJmNvbnNvbGUuZXJyb3IoXCJJbnRlcm5hbCBlcnJvcjogRXhwZWN0ZWQgd29yay1pbi1wcm9ncmVzcyBxdWV1ZSB0byBiZSBhIGNsb25lLiBUaGlzIGlzIGEgYnVnIGluIFJlYWN0LlwiKSxuLmJhc2VRdWV1ZT1sPWEsci5wZW5kaW5nPW51bGx9aWYoYT1lLmJhc2VTdGF0ZSxudWxsPT09bCllLm1lbW9pemVkU3RhdGU9YTtlbHNle3ZhciB1PW89bnVsbCxpPW51bGwscz1uPWwubmV4dCxjPSExO2Rve3ZhciBmPS01MzY4NzA5MTMmcy5sYW5lO2lmKGYhPT1zLmxhbmU/KGRmJmYpPT09ZjooUnMmZik9PT1mKXt2YXIgZD1zLnJldmVydExhbmU7aWYoMD09PWQpbnVsbCE9PWkmJihpPWkubmV4dD17bGFuZTowLHJldmVydExhbmU6MCxhY3Rpb246cy5hY3Rpb24saGFzRWFnZXJTdGF0ZTpzLmhhc0VhZ2VyU3RhdGUsZWFnZXJTdGF0ZTpzLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZj09PWRpJiYoYz0hMCk7ZWxzZXtpZigoUnMmZCk9PT1kKXtzPXMubmV4dCxkPT09ZGkmJihjPSEwKTtjb250aW51ZX1mPXtsYW5lOjAscmV2ZXJ0TGFuZTpzLnJldmVydExhbmUsYWN0aW9uOnMuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6cy5oYXNFYWdlclN0YXRlLGVhZ2VyU3RhdGU6cy5lYWdlclN0YXRlLG5leHQ6bnVsbH0sbnVsbD09PWk/KHU9aT1mLG89YSk6aT1pLm5leHQ9ZixUcy5sYW5lc3w9ZCxfZnw9ZH1mPXMuYWN0aW9uLElzJiZ0KGEsZiksYT1zLmhhc0VhZ2VyU3RhdGU/cy5lYWdlclN0YXRlOnQoYSxmKX1lbHNlIGQ9e2xhbmU6ZixyZXZlcnRMYW5lOnMucmV2ZXJ0TGFuZSxhY3Rpb246cy5hY3Rpb24saGFzRWFnZXJTdGF0ZTpzLmhhc0VhZ2VyU3RhdGUsZWFnZXJTdGF0ZTpzLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSxudWxsPT09aT8odT1pPWQsbz1hKTppPWkubmV4dD1kLFRzLmxhbmVzfD1mLF9mfD1mO3M9cy5uZXh0fXdoaWxlKG51bGwhPT1zJiZzIT09bik7aWYobnVsbD09PWk/bz1hOmkubmV4dD11LCFSdShhLGUubWVtb2l6ZWRTdGF0ZSkmJihwYz0hMCxjJiZudWxsIT09KHQ9cGkpKSl0aHJvdyB0O2UubWVtb2l6ZWRTdGF0ZT1hLGUuYmFzZVN0YXRlPW8sZS5iYXNlUXVldWU9aSxyLmxhc3RSZW5kZXJlZFN0YXRlPWF9cmV0dXJuIG51bGw9PT1sJiYoci5sYW5lcz0wKSxbZS5tZW1vaXplZFN0YXRlLHIuZGlzcGF0Y2hdfWZ1bmN0aW9uIGduKGUpe3ZhciBuPXVuKCksdD1uLnF1ZXVlO2lmKG51bGw9PT10KXRocm93IEVycm9yKFwiU2hvdWxkIGhhdmUgYSBxdWV1ZS4gWW91IGFyZSBsaWtlbHkgY2FsbGluZyBIb29rcyBjb25kaXRpb25hbGx5LCB3aGljaCBpcyBub3QgYWxsb3dlZC4gKGh0dHBzOi8vcmVhY3QuZGV2L2xpbmsvaW52YWxpZC1ob29rLWNhbGwpXCIpO3QubGFzdFJlbmRlcmVkUmVkdWNlcj1lO3ZhciByPXQuZGlzcGF0Y2gsbD10LnBlbmRpbmcsYT1uLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWwpe3QucGVuZGluZz1udWxsO3ZhciBvPWw9bC5uZXh0O2Rve2E9ZShhLG8uYWN0aW9uKSxvPW8ubmV4dH13aGlsZShvIT09bCk7UnUoYSxuLm1lbW9pemVkU3RhdGUpfHwocGM9ITApLG4ubWVtb2l6ZWRTdGF0ZT1hLG51bGw9PT1uLmJhc2VRdWV1ZSYmKG4uYmFzZVN0YXRlPWEpLHQubGFzdFJlbmRlcmVkU3RhdGU9YX1yZXR1cm5bYSxyXX1mdW5jdGlvbiB5bihlLG4sdCl7dmFyIHIsbD1UcyxhPW9uKCk7aWYocj1uKCksY3N8fCh0PW4oKSxSdShyLHQpfHwoY29uc29sZS5lcnJvcihcIlRoZSByZXN1bHQgb2YgZ2V0U25hcHNob3Qgc2hvdWxkIGJlIGNhY2hlZCB0byBhdm9pZCBhbiBpbmZpbml0ZSBsb29wXCIpLGNzPSEwKSksbnVsbD09PWNmKXRocm93IEVycm9yKFwiRXhwZWN0ZWQgYSB3b3JrLWluLXByb2dyZXNzIHJvb3QuIFRoaXMgaXMgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKTtyZXR1cm4gMCE9KDYwJmRmKXx8dm4obCxuLHIpLGEubWVtb2l6ZWRTdGF0ZT1yLHQ9e3ZhbHVlOnIsZ2V0U25hcHNob3Q6bn0sYS5xdWV1ZT10LCRuKGtuLmJpbmQobnVsbCxsLHQsZSksW2VdKSxsLmZsYWdzfD0yMDQ4LFFuKGtzfHpzLFNuLmJpbmQobnVsbCxsLHQscixuKSx7ZGVzdHJveTp2b2lkIDB9LG51bGwpLHJ9ZnVuY3Rpb24gYm4oZSxuLHQpe3ZhciByPVRzLGw9dW4oKTtpZih0PW4oKSwhY3Mpe3ZhciBhPW4oKTtSdSh0LGEpfHwoY29uc29sZS5lcnJvcihcIlRoZSByZXN1bHQgb2YgZ2V0U25hcHNob3Qgc2hvdWxkIGJlIGNhY2hlZCB0byBhdm9pZCBhbiBpbmZpbml0ZSBsb29wXCIpLGNzPSEwKX0oYT0hUnUoKE5zfHxsKS5tZW1vaXplZFN0YXRlLHQpKSYmKGwubWVtb2l6ZWRTdGF0ZT10LHBjPSEwKSxsPWwucXVldWU7dmFyIG89a24uYmluZChudWxsLHIsbCxlKTtpZihWbigyMDQ4LHpzLG8sW2VdKSxsLmdldFNuYXBzaG90IT09bnx8YXx8bnVsbCE9PUxzJiZMcy5tZW1vaXplZFN0YXRlLnRhZyZrcyl7aWYoci5mbGFnc3w9MjA0OCxRbihrc3x6cyxTbi5iaW5kKG51bGwscixsLHQsbikse2Rlc3Ryb3k6dm9pZCAwfSxudWxsKSxudWxsPT09Y2YpdGhyb3cgRXJyb3IoXCJFeHBlY3RlZCBhIHdvcmstaW4tcHJvZ3Jlc3Mgcm9vdC4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpOzAhPSg2MCZScyl8fHZuKHIsbix0KX1yZXR1cm4gdH1mdW5jdGlvbiB2bihlLG4sdCl7ZS5mbGFnc3w9MTYzODQsZT17Z2V0U25hcHNob3Q6bix2YWx1ZTp0fSxudWxsPT09KG49VHMudXBkYXRlUXVldWUpPyhuPVZzKCksVHMudXBkYXRlUXVldWU9bixuLnN0b3Jlcz1bZV0pOm51bGw9PT0odD1uLnN0b3Jlcyk/bi5zdG9yZXM9W2VdOnQucHVzaChlKX1mdW5jdGlvbiBTbihlLG4sdCxyKXtuLnZhbHVlPXQsbi5nZXRTbmFwc2hvdD1yLHduKG4pJiZ4bihlKX1mdW5jdGlvbiBrbihlLG4sdCl7cmV0dXJuIHQoKGZ1bmN0aW9uKCl7d24obikmJnhuKGUpfSkpfWZ1bmN0aW9uIHduKGUpe3ZhciBuPWUuZ2V0U25hcHNob3Q7ZT1lLnZhbHVlO3RyeXt2YXIgdD1uKCk7cmV0dXJuIVJ1KGUsdCl9Y2F0Y2goZSl7cmV0dXJuITB9fWZ1bmN0aW9uIHhuKGUpe3ZhciBuPSQoZSwyKTtudWxsIT09biYmQ2wobixlLDIpfWZ1bmN0aW9uIHpuKGUpe3ZhciBuPW9uKCk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZSl7dmFyIHQ9ZTtpZihlPXQoKSxJcyl7VSghMCk7dHJ5e3QoKX1maW5hbGx5e1UoITEpfX19cmV0dXJuIG4ubWVtb2l6ZWRTdGF0ZT1uLmJhc2VTdGF0ZT1lLG4ucXVldWU9e3BlbmRpbmc6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpkbixsYXN0UmVuZGVyZWRTdGF0ZTplfSxufWZ1bmN0aW9uIENuKGUpe3ZhciBuPShlPXpuKGUpKS5xdWV1ZSx0PWh0LmJpbmQobnVsbCxUcyxuKTtyZXR1cm4gbi5kaXNwYXRjaD10LFtlLm1lbW9pemVkU3RhdGUsdF19ZnVuY3Rpb24gRW4oZSl7dmFyIG49b24oKTtuLm1lbW9pemVkU3RhdGU9bi5iYXNlU3RhdGU9ZTt2YXIgdD17cGVuZGluZzpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOm51bGwsbGFzdFJlbmRlcmVkU3RhdGU6bnVsbH07cmV0dXJuIG4ucXVldWU9dCxuPXl0LmJpbmQobnVsbCxUcywhMCx0KSx0LmRpc3BhdGNoPW4sW2Usbl19ZnVuY3Rpb24gUG4oZSxuKXtyZXR1cm4gX24odW4oKSwwLGUsbil9ZnVuY3Rpb24gX24oZSxuLHQscil7cmV0dXJuIGUuYmFzZVN0YXRlPXQsaG4oZSxOcyxcImZ1bmN0aW9uXCI9PXR5cGVvZiByP3I6ZG4pfWZ1bmN0aW9uIFJuKGUsbil7dmFyIHQ9dW4oKTtyZXR1cm4gbnVsbCE9PU5zP19uKHQsMCxlLG4pOih0LmJhc2VTdGF0ZT1lLFtlLHQucXVldWUuZGlzcGF0Y2hdKX1mdW5jdGlvbiBUbihlLG4sdCxyLGwpe2lmKGJ0KGUpKXRocm93IEVycm9yKFwiQ2Fubm90IHVwZGF0ZSBmb3JtIHN0YXRlIHdoaWxlIHJlbmRlcmluZy5cIik7aWYobnVsbCE9PShlPW4uYWN0aW9uKSl7dmFyIGE9e3BheWxvYWQ6bCxhY3Rpb246ZSxuZXh0Om51bGwsaXNUcmFuc2l0aW9uOiEwLHN0YXR1czpcInBlbmRpbmdcIix2YWx1ZTpudWxsLHJlYXNvbjpudWxsLGxpc3RlbmVyczpbXSx0aGVuOmZ1bmN0aW9uKGUpe2EubGlzdGVuZXJzLnB1c2goZSl9fTtudWxsIT09SmEuVD90KCEwKTphLmlzVHJhbnNpdGlvbj0hMSxyKGEpLG51bGw9PT0odD1uLnBlbmRpbmcpPyhhLm5leHQ9bi5wZW5kaW5nPWEsTm4obixhKSk6KGEubmV4dD10Lm5leHQsbi5wZW5kaW5nPXQubmV4dD1hKX19ZnVuY3Rpb24gTm4oZSxuKXt2YXIgdD1uLmFjdGlvbixyPW4ucGF5bG9hZCxsPWUuc3RhdGU7aWYobi5pc1RyYW5zaXRpb24pe3ZhciBhPUphLlQsbz17fTtKYS5UPW8sSmEuVC5fdXBkYXRlZEZpYmVycz1uZXcgU2V0O3RyeXt2YXIgdT10KGwsciksaT1KYS5TO251bGwhPT1pJiZpKG8sdSksTG4oZSxuLHUpfWNhdGNoKHQpe0RuKGUsbix0KX1maW5hbGx5e0phLlQ9YSxudWxsPT09YSYmby5fdXBkYXRlZEZpYmVycyYmKGU9by5fdXBkYXRlZEZpYmVycy5zaXplLG8uX3VwZGF0ZWRGaWJlcnMuY2xlYXIoKSwxMDxlJiZjb25zb2xlLndhcm4oXCJEZXRlY3RlZCBhIGxhcmdlIG51bWJlciBvZiB1cGRhdGVzIGluc2lkZSBzdGFydFRyYW5zaXRpb24uIElmIHRoaXMgaXMgZHVlIHRvIGEgc3Vic2NyaXB0aW9uIHBsZWFzZSByZS13cml0ZSBpdCB0byB1c2UgUmVhY3QgcHJvdmlkZWQgaG9va3MuIE90aGVyd2lzZSBjb25jdXJyZW50IG1vZGUgZ3VhcmFudGVlcyBhcmUgb2ZmIHRoZSB0YWJsZS5cIikpfX1lbHNlIHRyeXtMbihlLG4sbz10KGwscikpfWNhdGNoKHQpe0RuKGUsbix0KX19ZnVuY3Rpb24gTG4oZSxuLHQpe251bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC50aGVuPyh0LnRoZW4oKGZ1bmN0aW9uKHQpe1VuKGUsbix0KX0pLChmdW5jdGlvbih0KXtyZXR1cm4gRG4oZSxuLHQpfSkpLG4uaXNUcmFuc2l0aW9ufHxjb25zb2xlLmVycm9yKFwiQW4gYXN5bmMgZnVuY3Rpb24gd2FzIHBhc3NlZCB0byB1c2VBY3Rpb25TdGF0ZSwgYnV0IGl0IHdhcyBkaXNwYXRjaGVkIG91dHNpZGUgb2YgYW4gYWN0aW9uIGNvbnRleHQuIFRoaXMgaXMgbGlrZWx5IG5vdCB3aGF0IHlvdSBpbnRlbmRlZC4gRWl0aGVyIHBhc3MgdGhlIGRpc3BhdGNoIGZ1bmN0aW9uIHRvIGFuIGBhY3Rpb25gIHByb3AsIG9yIGRpc3BhdGNoIG1hbnVhbGx5IGluc2lkZSBgc3RhcnRUcmFuc2l0aW9uYFwiKSk6VW4oZSxuLHQpfWZ1bmN0aW9uIFVuKGUsbix0KXtuLnN0YXR1cz1cImZ1bGZpbGxlZFwiLG4udmFsdWU9dCxJbihuKSxlLnN0YXRlPXQsbnVsbCE9PShuPWUucGVuZGluZykmJigodD1uLm5leHQpPT09bj9lLnBlbmRpbmc9bnVsbDoodD10Lm5leHQsbi5uZXh0PXQsTm4oZSx0KSkpfWZ1bmN0aW9uIERuKGUsbix0KXt2YXIgcj1lLnBlbmRpbmc7aWYoZS5wZW5kaW5nPW51bGwsbnVsbCE9PXIpe3I9ci5uZXh0O2Rve24uc3RhdHVzPVwicmVqZWN0ZWRcIixuLnJlYXNvbj10LEluKG4pLG49bi5uZXh0fXdoaWxlKG4hPT1yKX1lLmFjdGlvbj1udWxsfWZ1bmN0aW9uIEluKGUpe2U9ZS5saXN0ZW5lcnM7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspKDAsZVtuXSkoKX1mdW5jdGlvbiBGbihlLG4pe3JldHVybiBufWZ1bmN0aW9uIE1uKGUsbil7dmFyIHQscixsOyh0PW9uKCkpLm1lbW9pemVkU3RhdGU9dC5iYXNlU3RhdGU9bixyPXtwZW5kaW5nOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6Rm4sbGFzdFJlbmRlcmVkU3RhdGU6bn0sdC5xdWV1ZT1yLHQ9aHQuYmluZChudWxsLFRzLHIpLHIuZGlzcGF0Y2g9dCxyPXpuKCExKTt2YXIgYT15dC5iaW5kKG51bGwsVHMsITEsci5xdWV1ZSk7cmV0dXJuIGw9e3N0YXRlOm4sZGlzcGF0Y2g6bnVsbCxhY3Rpb246ZSxwZW5kaW5nOm51bGx9LChyPW9uKCkpLnF1ZXVlPWwsdD1Ubi5iaW5kKG51bGwsVHMsbCxhLHQpLGwuZGlzcGF0Y2g9dCxyLm1lbW9pemVkU3RhdGU9ZSxbbix0LCExXX1mdW5jdGlvbiBXbihlKXtyZXR1cm4gSG4odW4oKSxOcyxlKX1mdW5jdGlvbiBIbihlLG4sdCl7bj1obihlLG4sRm4pWzBdLGU9bW4oZG4pWzBdLG49XCJvYmplY3RcIj09dHlwZW9mIG4mJm51bGwhPT1uJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnRoZW4/c24obik6bjt2YXIgcj11bigpLGw9ci5xdWV1ZSxhPWwuZGlzcGF0Y2g7cmV0dXJuIHQhPT1yLm1lbW9pemVkU3RhdGUmJihUcy5mbGFnc3w9MjA0OCxRbihrc3x6cyxqbi5iaW5kKG51bGwsbCx0KSx7ZGVzdHJveTp2b2lkIDB9LG51bGwpKSxbbixhLGVdfWZ1bmN0aW9uIGpuKGUsbil7ZS5hY3Rpb249bn1mdW5jdGlvbiBBbihlKXt2YXIgbj11bigpLHQ9TnM7aWYobnVsbCE9PXQpcmV0dXJuIEhuKG4sdCxlKTt1bigpLG49bi5tZW1vaXplZFN0YXRlO3ZhciByPSh0PXVuKCkpLnF1ZXVlLmRpc3BhdGNoO3JldHVybiB0Lm1lbW9pemVkU3RhdGU9ZSxbbixyLCExXX1mdW5jdGlvbiBRbihlLG4sdCxyKXtyZXR1cm4gZT17dGFnOmUsY3JlYXRlOm4saW5zdDp0LGRlcHM6cixuZXh0Om51bGx9LG51bGw9PT0obj1Ucy51cGRhdGVRdWV1ZSkmJihuPVZzKCksVHMudXBkYXRlUXVldWU9biksbnVsbD09PSh0PW4ubGFzdEVmZmVjdCk/bi5sYXN0RWZmZWN0PWUubmV4dD1lOihyPXQubmV4dCx0Lm5leHQ9ZSxlLm5leHQ9cixuLmxhc3RFZmZlY3Q9ZSksZX1mdW5jdGlvbiBPbihlKXtyZXR1cm4gZT17Y3VycmVudDplfSxvbigpLm1lbW9pemVkU3RhdGU9ZX1mdW5jdGlvbiBCbihlLG4sdCxyKXt2YXIgbD1vbigpO1RzLmZsYWdzfD1lLGwubWVtb2l6ZWRTdGF0ZT1Rbihrc3xuLHQse2Rlc3Ryb3k6dm9pZCAwfSx2b2lkIDA9PT1yP251bGw6cil9ZnVuY3Rpb24gVm4oZSxuLHQscil7dmFyIGw9dW4oKTtyPXZvaWQgMD09PXI/bnVsbDpyO3ZhciBhPWwubWVtb2l6ZWRTdGF0ZS5pbnN0O251bGwhPT1OcyYmbnVsbCE9PXImJlhlKHIsTnMubWVtb2l6ZWRTdGF0ZS5kZXBzKT9sLm1lbW9pemVkU3RhdGU9UW4obix0LGEscik6KFRzLmZsYWdzfD1lLGwubWVtb2l6ZWRTdGF0ZT1Rbihrc3xuLHQsYSxyKSl9ZnVuY3Rpb24gJG4oZSxuKXsoMTYmVHMubW9kZSkhPT0kdSYmKDY0JlRzLm1vZGUpPT09JHU/Qm4oMTQyNjA4Mzg0LHpzLGUsbik6Qm4oODM5MDY1Nix6cyxlLG4pfWZ1bmN0aW9uIHFuKGUsbil7dmFyIHQ9NDE5NDMwODtyZXR1cm4oMTYmVHMubW9kZSkhPT0kdSYmKHR8PTY3MTA4ODY0KSxCbih0LHhzLGUsbil9ZnVuY3Rpb24gWW4oZSxuKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKXtlPWUoKTt2YXIgdD1uKGUpO3JldHVybiBmdW5jdGlvbigpe1wiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dCgpOm4obnVsbCl9fWlmKG51bGwhPW4pcmV0dXJuIG4uaGFzT3duUHJvcGVydHkoXCJjdXJyZW50XCIpfHxjb25zb2xlLmVycm9yKFwiRXhwZWN0ZWQgdXNlSW1wZXJhdGl2ZUhhbmRsZSgpIGZpcnN0IGFyZ3VtZW50IHRvIGVpdGhlciBiZSBhIHJlZiBjYWxsYmFjayBvciBSZWFjdC5jcmVhdGVSZWYoKSBvYmplY3QuIEluc3RlYWQgcmVjZWl2ZWQ6ICVzLlwiLFwiYW4gb2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMobikuam9pbihcIiwgXCIpK1wifVwiKSxlPWUoKSxuLmN1cnJlbnQ9ZSxmdW5jdGlvbigpe24uY3VycmVudD1udWxsfX1mdW5jdGlvbiBHbihlLG4sdCl7XCJmdW5jdGlvblwiIT10eXBlb2YgbiYmY29uc29sZS5lcnJvcihcIkV4cGVjdGVkIHVzZUltcGVyYXRpdmVIYW5kbGUoKSBzZWNvbmQgYXJndW1lbnQgdG8gYmUgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgYSBoYW5kbGUuIEluc3RlYWQgcmVjZWl2ZWQ6ICVzLlwiLG51bGwhPT1uP3R5cGVvZiBuOlwibnVsbFwiKSx0PW51bGwhPXQ/dC5jb25jYXQoW2VdKTpudWxsO3ZhciByPTQxOTQzMDg7KDE2JlRzLm1vZGUpIT09JHUmJihyfD02NzEwODg2NCksQm4ocix4cyxZbi5iaW5kKG51bGwsbixlKSx0KX1mdW5jdGlvbiBKbihlLG4sdCl7XCJmdW5jdGlvblwiIT10eXBlb2YgbiYmY29uc29sZS5lcnJvcihcIkV4cGVjdGVkIHVzZUltcGVyYXRpdmVIYW5kbGUoKSBzZWNvbmQgYXJndW1lbnQgdG8gYmUgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgYSBoYW5kbGUuIEluc3RlYWQgcmVjZWl2ZWQ6ICVzLlwiLG51bGwhPT1uP3R5cGVvZiBuOlwibnVsbFwiKSx0PW51bGwhPXQ/dC5jb25jYXQoW2VdKTpudWxsLFZuKDQseHMsWW4uYmluZChudWxsLG4sZSksdCl9ZnVuY3Rpb24gS24oZSxuKXtyZXR1cm4gb24oKS5tZW1vaXplZFN0YXRlPVtlLHZvaWQgMD09PW4/bnVsbDpuXSxlfWZ1bmN0aW9uIFhuKGUsbil7dmFyIHQ9dW4oKTtuPXZvaWQgMD09PW4/bnVsbDpuO3ZhciByPXQubWVtb2l6ZWRTdGF0ZTtyZXR1cm4gbnVsbCE9PW4mJlhlKG4sclsxXSk/clswXToodC5tZW1vaXplZFN0YXRlPVtlLG5dLGUpfWZ1bmN0aW9uIFpuKGUsbil7dmFyIHQ9b24oKTtuPXZvaWQgMD09PW4/bnVsbDpuO3ZhciByPWUoKTtpZihJcyl7VSghMCk7dHJ5e2UoKX1maW5hbGx5e1UoITEpfX1yZXR1cm4gdC5tZW1vaXplZFN0YXRlPVtyLG5dLHJ9ZnVuY3Rpb24gZXQoZSxuKXt2YXIgdD11bigpO249dm9pZCAwPT09bj9udWxsOm47dmFyIHI9dC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1uJiZYZShuLHJbMV0pKXJldHVybiByWzBdO2lmKHI9ZSgpLElzKXtVKCEwKTt0cnl7ZSgpfWZpbmFsbHl7VSghMSl9fXJldHVybiB0Lm1lbW9pemVkU3RhdGU9W3Isbl0scn1mdW5jdGlvbiBudChlLG4pe3JldHVybiBsdChvbigpLGUsbil9ZnVuY3Rpb24gdHQoZSxuKXtyZXR1cm4gYXQodW4oKSxOcy5tZW1vaXplZFN0YXRlLGUsbil9ZnVuY3Rpb24gcnQoZSxuKXt2YXIgdD11bigpO3JldHVybiBudWxsPT09TnM/bHQodCxlLG4pOmF0KHQsTnMubWVtb2l6ZWRTdGF0ZSxlLG4pfWZ1bmN0aW9uIGx0KGUsbix0KXtyZXR1cm4gdm9pZCAwPT09dHx8MCE9KDEwNzM3NDE4MjQmUnMpP2UubWVtb2l6ZWRTdGF0ZT1uOihlLm1lbW9pemVkU3RhdGU9dCxlPXpsKCksVHMubGFuZXN8PWUsX2Z8PWUsdCl9ZnVuY3Rpb24gYXQoZSxuLHQscil7cmV0dXJuIFJ1KHQsbik/dDpudWxsIT09cHMuY3VycmVudD8oZT1sdChlLHQsciksUnUoZSxuKXx8KHBjPSEwKSxlKTowPT0oNDImUnMpPyhwYz0hMCxlLm1lbW9pemVkU3RhdGU9dCk6KGU9emwoKSxUcy5sYW5lc3w9ZSxfZnw9ZSxuKX1mdW5jdGlvbiBvdChlLG4sdCxyLGwpe3ZhciBhPXhvKCk7d28oMCE9PWEmJjg+YT9hOjgpO3ZhciBvLHUsaSxzPUphLlQsYz17fTtKYS5UPWMseXQoZSwhMSxuLHQpLGMuX3VwZGF0ZWRGaWJlcnM9bmV3IFNldDt0cnl7dmFyIGY9bCgpLGQ9SmEuUztudWxsIT09ZCYmZChjLGYpLG51bGwhPT1mJiZcIm9iamVjdFwiPT10eXBlb2YgZiYmXCJmdW5jdGlvblwiPT10eXBlb2YgZi50aGVuP2d0KGUsbiwobz1yLHU9W10saT17c3RhdHVzOlwicGVuZGluZ1wiLHZhbHVlOm51bGwscmVhc29uOm51bGwsdGhlbjpmdW5jdGlvbihlKXt1LnB1c2goZSl9fSxmLnRoZW4oKGZ1bmN0aW9uKCl7aS5zdGF0dXM9XCJmdWxmaWxsZWRcIixpLnZhbHVlPW87Zm9yKHZhciBlPTA7ZTx1Lmxlbmd0aDtlKyspKDAsdVtlXSkobyl9KSwoZnVuY3Rpb24oZSl7Zm9yKGkuc3RhdHVzPVwicmVqZWN0ZWRcIixpLnJlYXNvbj1lLGU9MDtlPHUubGVuZ3RoO2UrKykoMCx1W2VdKSh2b2lkIDApfSkpLGkpLHhsKGUpKTpndChlLG4scix4bChlKSl9Y2F0Y2godCl7Z3QoZSxuLHt0aGVuOmZ1bmN0aW9uKCl7fSxzdGF0dXM6XCJyZWplY3RlZFwiLHJlYXNvbjp0fSx4bChlKSl9ZmluYWxseXt3byhhKSxKYS5UPXMsbnVsbD09PXMmJmMuX3VwZGF0ZWRGaWJlcnMmJihlPWMuX3VwZGF0ZWRGaWJlcnMuc2l6ZSxjLl91cGRhdGVkRmliZXJzLmNsZWFyKCksMTA8ZSYmY29uc29sZS53YXJuKFwiRGV0ZWN0ZWQgYSBsYXJnZSBudW1iZXIgb2YgdXBkYXRlcyBpbnNpZGUgc3RhcnRUcmFuc2l0aW9uLiBJZiB0aGlzIGlzIGR1ZSB0byBhIHN1YnNjcmlwdGlvbiBwbGVhc2UgcmUtd3JpdGUgaXQgdG8gdXNlIFJlYWN0IHByb3ZpZGVkIGhvb2tzLiBPdGhlcndpc2UgY29uY3VycmVudCBtb2RlIGd1YXJhbnRlZXMgYXJlIG9mZiB0aGUgdGFibGUuXCIpKX19ZnVuY3Rpb24gdXQoKXt2YXIgZT16bighMSk7cmV0dXJuIGU9b3QuYmluZChudWxsLFRzLGUucXVldWUsITAsITEpLG9uKCkubWVtb2l6ZWRTdGF0ZT1lLFshMSxlXX1mdW5jdGlvbiBpdCgpe3ZhciBlPW1uKGRuKVswXSxuPXVuKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bXCJib29sZWFuXCI9PXR5cGVvZiBlP2U6c24oZSksbl19ZnVuY3Rpb24gc3QoKXt2YXIgZT1nbihkbilbMF0sbj11bigpLm1lbW9pemVkU3RhdGU7cmV0dXJuW1wiYm9vbGVhblwiPT10eXBlb2YgZT9lOnNuKGUpLG5dfWZ1bmN0aW9uIGN0KCl7cmV0dXJuIHNyKFVvKX1mdW5jdGlvbiBmdCgpe3ZhciBlPW9uKCksbj1jZi5pZGVudGlmaWVyUHJlZml4O3JldHVybiBuPVwiOlwiK24rXCJyXCIrKEhzKyspLnRvU3RyaW5nKDMyKStcIjpcIixlLm1lbW9pemVkU3RhdGU9bn1mdW5jdGlvbiBkdCgpe3JldHVybiBvbigpLm1lbW9pemVkU3RhdGU9cHQuYmluZChudWxsLFRzKX1mdW5jdGlvbiBwdChlLG4pe2Zvcih2YXIgdD1lLnJldHVybjtudWxsIT09dDspe3N3aXRjaCh0LnRhZyl7Y2FzZSAyNDpjYXNlIDM6dmFyIHI9eGwodCksbD15ZSh0LGU9Z2Uocikscik7cmV0dXJuIG51bGwhPT1sJiYoQ2wobCx0LHIpLGJlKGwsdCxyKSksdD1kcigpLG51bGwhPW4mJm51bGwhPT1sJiZjb25zb2xlLmVycm9yKFwiVGhlIHNlZWQgYXJndW1lbnQgaXMgbm90IGVuYWJsZWQgb3V0c2lkZSBleHBlcmltZW50YWwgY2hhbm5lbHMuXCIpLHZvaWQoZS5wYXlsb2FkPXtjYWNoZTp0fSl9dD10LnJldHVybn19ZnVuY3Rpb24gbXQoZSxuLHQscil7XCJmdW5jdGlvblwiPT10eXBlb2YgciYmY29uc29sZS5lcnJvcihcIlN0YXRlIHVwZGF0ZXMgZnJvbSB0aGUgdXNlU3RhdGUoKSBhbmQgdXNlUmVkdWNlcigpIEhvb2tzIGRvbid0IHN1cHBvcnQgdGhlIHNlY29uZCBjYWxsYmFjayBhcmd1bWVudC4gVG8gZXhlY3V0ZSBhIHNpZGUgZWZmZWN0IGFmdGVyIHJlbmRlcmluZywgZGVjbGFyZSBpdCBpbiB0aGUgY29tcG9uZW50IGJvZHkgd2l0aCB1c2VFZmZlY3QoKS5cIiksdD17bGFuZTpyPXhsKGUpLHJldmVydExhbmU6MCxhY3Rpb246dCxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGJ0KGUpP3Z0KG4sdCk6bnVsbCE9PSh0PVYoZSxuLHQscikpJiYoQ2wodCxlLHIpLFN0KHQsbixyKSl9ZnVuY3Rpb24gaHQoZSxuLHQscil7XCJmdW5jdGlvblwiPT10eXBlb2YgciYmY29uc29sZS5lcnJvcihcIlN0YXRlIHVwZGF0ZXMgZnJvbSB0aGUgdXNlU3RhdGUoKSBhbmQgdXNlUmVkdWNlcigpIEhvb2tzIGRvbid0IHN1cHBvcnQgdGhlIHNlY29uZCBjYWxsYmFjayBhcmd1bWVudC4gVG8gZXhlY3V0ZSBhIHNpZGUgZWZmZWN0IGFmdGVyIHJlbmRlcmluZywgZGVjbGFyZSBpdCBpbiB0aGUgY29tcG9uZW50IGJvZHkgd2l0aCB1c2VFZmZlY3QoKS5cIiksZ3QoZSxuLHQscj14bChlKSl9ZnVuY3Rpb24gZ3QoZSxuLHQscil7dmFyIGw9e2xhbmU6cixyZXZlcnRMYW5lOjAsYWN0aW9uOnQsaGFzRWFnZXJTdGF0ZTohMSxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTtpZihidChlKSl2dChuLGwpO2Vsc2V7dmFyIGE9ZS5hbHRlcm5hdGU7aWYoMD09PWUubGFuZXMmJihudWxsPT09YXx8MD09PWEubGFuZXMpJiZudWxsIT09KGE9bi5sYXN0UmVuZGVyZWRSZWR1Y2VyKSl7dmFyIG89SmEuSDtKYS5IPVhzO3RyeXt2YXIgdT1uLmxhc3RSZW5kZXJlZFN0YXRlLGk9YSh1LHQpO2lmKGwuaGFzRWFnZXJTdGF0ZT0hMCxsLmVhZ2VyU3RhdGU9aSxSdShpLHUpKXJldHVybiBCKGUsbixsLDApLG51bGw9PT1jZiYmTygpLCExfWNhdGNoKGUpe31maW5hbGx5e0phLkg9b319aWYobnVsbCE9PSh0PVYoZSxuLGwscikpKXJldHVybiBDbCh0LGUsciksU3QodCxuLHIpLCEwfXJldHVybiExfWZ1bmN0aW9uIHl0KGUsbix0LHIpe2lmKG51bGw9PT1KYS5UJiYwPT09ZGkmJmNvbnNvbGUuZXJyb3IoXCJBbiBvcHRpbWlzdGljIHN0YXRlIHVwZGF0ZSBvY2N1cnJlZCBvdXRzaWRlIGEgdHJhbnNpdGlvbiBvciBhY3Rpb24uIFRvIGZpeCwgbW92ZSB0aGUgdXBkYXRlIHRvIGFuIGFjdGlvbiwgb3Igd3JhcCB3aXRoIHN0YXJ0VHJhbnNpdGlvbi5cIikscj17bGFuZToyLHJldmVydExhbmU6ZGUoKSxhY3Rpb246cixoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGJ0KGUpKXtpZihuKXRocm93IEVycm9yKFwiQ2Fubm90IHVwZGF0ZSBvcHRpbWlzdGljIHN0YXRlIHdoaWxlIHJlbmRlcmluZy5cIik7Y29uc29sZS5lcnJvcihcIkNhbm5vdCBjYWxsIHN0YXJ0VHJhbnNpdGlvbiB3aGlsZSByZW5kZXJpbmcuXCIpfWVsc2UgbnVsbCE9PShuPVYoZSx0LHIsMikpJiZDbChuLGUsMil9ZnVuY3Rpb24gYnQoZSl7dmFyIG49ZS5hbHRlcm5hdGU7cmV0dXJuIGU9PT1Uc3x8bnVsbCE9PW4mJm49PT1Uc31mdW5jdGlvbiB2dChlLG4pe0RzPVVzPSEwO3ZhciB0PWUucGVuZGluZztudWxsPT09dD9uLm5leHQ9bjoobi5uZXh0PXQubmV4dCx0Lm5leHQ9biksZS5wZW5kaW5nPW59ZnVuY3Rpb24gU3QoZSxuLHQpe2lmKDAhPSg0MTk0MTc2JnQpKXt2YXIgcj1uLmxhbmVzO3R8PXImPWUucGVuZGluZ0xhbmVzLG4ubGFuZXM9dCxSKGUsdCl9fWZ1bmN0aW9uIGt0KGUpe2lmKG51bGwhPT1lJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXt2YXIgbj1TdHJpbmcoZSk7Y2MuaGFzKG4pfHwoY2MuYWRkKG4pLGNvbnNvbGUuZXJyb3IoXCJFeHBlY3RlZCB0aGUgbGFzdCBvcHRpb25hbCBgY2FsbGJhY2tgIGFyZ3VtZW50IHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQgcmVjZWl2ZWQ6ICVzLlwiLGUpKX19ZnVuY3Rpb24gd3QoZSxuLHQscil7dmFyIGw9ZS5tZW1vaXplZFN0YXRlLGE9dChyLGwpO2lmKDgmZS5tb2RlKXtVKCEwKTt0cnl7YT10KHIsbCl9ZmluYWxseXtVKCExKX19dm9pZCAwPT09YSYmKG49cyhuKXx8XCJDb21wb25lbnRcIixvYy5oYXMobil8fChvYy5hZGQobiksY29uc29sZS5lcnJvcihcIiVzLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcygpOiBBIHZhbGlkIHN0YXRlIG9iamVjdCAob3IgbnVsbCkgbXVzdCBiZSByZXR1cm5lZC4gWW91IGhhdmUgcmV0dXJuZWQgdW5kZWZpbmVkLlwiLG4pKSksbD1udWxsPT1hP2w6TmEoe30sbCxhKSxlLm1lbW9pemVkU3RhdGU9bCwwPT09ZS5sYW5lcyYmKGUudXBkYXRlUXVldWUuYmFzZVN0YXRlPWwpfWZ1bmN0aW9uIHh0KGUsbix0LHIsbCxhLG8pe3ZhciB1PWUuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHUuc2hvdWxkQ29tcG9uZW50VXBkYXRlKXtpZih0PXUuc2hvdWxkQ29tcG9uZW50VXBkYXRlKHIsYSxvKSw4JmUubW9kZSl7VSghMCk7dHJ5e3Q9dS5zaG91bGRDb21wb25lbnRVcGRhdGUocixhLG8pfWZpbmFsbHl7VSghMSl9fXJldHVybiB2b2lkIDA9PT10JiZjb25zb2xlLmVycm9yKFwiJXMuc2hvdWxkQ29tcG9uZW50VXBkYXRlKCk6IFJldHVybmVkIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIGEgYm9vbGVhbiB2YWx1ZS4gTWFrZSBzdXJlIHRvIHJldHVybiB0cnVlIG9yIGZhbHNlLlwiLHMobil8fFwiQ29tcG9uZW50XCIpLHR9cmV0dXJuIShuLnByb3RvdHlwZSYmbi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQmJkNlKHQscikmJkNlKGwsYSkpfWZ1bmN0aW9uIHp0KGUsbix0LHIpe3ZhciBsPW4uc3RhdGU7XCJmdW5jdGlvblwiPT10eXBlb2Ygbi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZuLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHModCxyKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZuLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKHQsciksbi5zdGF0ZSE9PWwmJihlPWMoZSl8fFwiQ29tcG9uZW50XCIsbmMuaGFzKGUpfHwobmMuYWRkKGUpLGNvbnNvbGUuZXJyb3IoXCIlcy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKCk6IEFzc2lnbmluZyBkaXJlY3RseSB0byB0aGlzLnN0YXRlIGlzIGRlcHJlY2F0ZWQgKGV4Y2VwdCBpbnNpZGUgYSBjb21wb25lbnQncyBjb25zdHJ1Y3RvcikuIFVzZSBzZXRTdGF0ZSBpbnN0ZWFkLlwiLGUpKSxmYy5lbnF1ZXVlUmVwbGFjZVN0YXRlKG4sbi5zdGF0ZSxudWxsKSl9ZnVuY3Rpb24gQ3QoZSxuKXt2YXIgdD1uO2lmKFwicmVmXCJpbiBuKWZvcih2YXIgciBpbiB0PXt9LG4pXCJyZWZcIiE9PXImJih0W3JdPW5bcl0pO2lmKGU9ZS5kZWZhdWx0UHJvcHMpZm9yKHZhciBsIGluIHQ9PT1uJiYodD1OYSh7fSx0KSksZSl2b2lkIDA9PT10W2xdJiYodFtsXT1lW2xdKTtyZXR1cm4gdH1mdW5jdGlvbiBFdChlLG4pe3RyeXtuLnNvdXJjZSYmYyhuLnNvdXJjZSk7dmFyIHQ9bi52YWx1ZTtudWxsIT09SmEuYWN0UXVldWU/SmEudGhyb3duRXJyb3JzLnB1c2godCk6KDAsZS5vblVuY2F1Z2h0RXJyb3IpKHQse2NvbXBvbmVudFN0YWNrOm4uc3RhY2t9KX1jYXRjaChlKXtzZXRUaW1lb3V0KChmdW5jdGlvbigpe3Rocm93IGV9KSl9fWZ1bmN0aW9uIFB0KGUsbix0KXt0cnl7dC5zb3VyY2UmJmModC5zb3VyY2UpLGMobiksKDAsZS5vbkNhdWdodEVycm9yKSh0LnZhbHVlLHtjb21wb25lbnRTdGFjazp0LnN0YWNrLGVycm9yQm91bmRhcnk6MT09PW4udGFnP24uc3RhdGVOb2RlOm51bGx9KX1jYXRjaChlKXtzZXRUaW1lb3V0KChmdW5jdGlvbigpe3Rocm93IGV9KSl9fWZ1bmN0aW9uIF90KGUsbix0KXtyZXR1cm4odD1nZSh0KSkudGFnPXlpLHQucGF5bG9hZD17ZWxlbWVudDpudWxsfSx0LmNhbGxiYWNrPWZ1bmN0aW9uKCl7eShuLnNvdXJjZSxFdCxlLG4pfSx0fWZ1bmN0aW9uIFJ0KGUpe3JldHVybihlPWdlKGUpKS50YWc9eWksZX1mdW5jdGlvbiBUdChlLG4sdCxyKXt2YXIgbD10LnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGwpe3ZhciBhPXIudmFsdWU7ZS5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGwoYSl9LGUuY2FsbGJhY2s9ZnVuY3Rpb24oKXt5KHIuc291cmNlLFB0LG4sdCxyKX19dmFyIG89dC5zdGF0ZU5vZGU7bnVsbCE9PW8mJlwiZnVuY3Rpb25cIj09dHlwZW9mIG8uY29tcG9uZW50RGlkQ2F0Y2gmJihlLmNhbGxiYWNrPWZ1bmN0aW9uKCl7eShyLnNvdXJjZSxQdCxuLHQsciksXCJmdW5jdGlvblwiIT10eXBlb2YgbCYmKG51bGw9PT1BZj9BZj1uZXcgU2V0KFt0aGlzXSk6QWYuYWRkKHRoaXMpKSxZaSh0aGlzLHIpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGx8fDA9PSgyJnQubGFuZXMpJiZjb25zb2xlLmVycm9yKFwiJXM6IEVycm9yIGJvdW5kYXJpZXMgc2hvdWxkIGltcGxlbWVudCBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IoKS4gSW4gdGhhdCBtZXRob2QsIHJldHVybiBhIHN0YXRlIHVwZGF0ZSB0byBkaXNwbGF5IGFuIGVycm9yIG1lc3NhZ2Ugb3IgZmFsbGJhY2sgVUkuXCIsYyh0KXx8XCJVbmtub3duXCIpfSl9ZnVuY3Rpb24gTnQoZSxuLHQscil7bi5jaGlsZD1udWxsPT09ZT9kcyhuLG51bGwsdCxyKTpmcyhuLGUuY2hpbGQsdCxyKX1mdW5jdGlvbiBMdChlLG4sdCxyLGwpe3Q9dC5yZW5kZXI7dmFyIGE9bi5yZWY7aWYoXCJyZWZcImluIHIpe3ZhciBvPXt9O2Zvcih2YXIgdSBpbiByKVwicmVmXCIhPT11JiYob1t1XT1yW3VdKX1lbHNlIG89cjtyZXR1cm4gaXIobikscj1aZShlLG4sdCxvLGEsbCksdT1ybigpLG51bGw9PT1lfHxwYz8obi5mbGFnc3w9MSxOdChlLG4scixsKSxuLmNoaWxkKToobG4oZSxuLGwpLFh0KGUsbixsKSl9ZnVuY3Rpb24gVXQoZSxuLHQscixsKXtpZihudWxsPT09ZSl7dmFyIGE9dC50eXBlO3JldHVyblwiZnVuY3Rpb25cIiE9dHlwZW9mIGF8fGNhKGEpfHx2b2lkIDAhPT1hLmRlZmF1bHRQcm9wc3x8bnVsbCE9PXQuY29tcGFyZT8oKGU9cGEodC50eXBlLG51bGwscixuLG4ubW9kZSxsKSkucmVmPW4ucmVmLGUucmV0dXJuPW4sbi5jaGlsZD1lKToodD1hLG4udGFnPTE1LG4udHlwZT10LEF0KG4sYSksRHQoZSxuLHQscixsKSl9aWYoYT1lLmNoaWxkLCFadChlLGwpKXt2YXIgbz1hLm1lbW9pemVkUHJvcHM7aWYoKHQ9bnVsbCE9PSh0PXQuY29tcGFyZSk/dDpDZSkobyxyKSYmZS5yZWY9PT1uLnJlZilyZXR1cm4gWHQoZSxuLGwpfXJldHVybiBuLmZsYWdzfD0xLChlPWZhKGEscikpLnJlZj1uLnJlZixlLnJldHVybj1uLG4uY2hpbGQ9ZX1mdW5jdGlvbiBEdChlLG4sdCxyLGwpe2lmKG51bGwhPT1lKXt2YXIgYT1lLm1lbW9pemVkUHJvcHM7aWYoQ2UoYSxyKSYmZS5yZWY9PT1uLnJlZiYmbi50eXBlPT09ZS50eXBlKXtpZihwYz0hMSxuLnBlbmRpbmdQcm9wcz1yPWEsIVp0KGUsbCkpcmV0dXJuIG4ubGFuZXM9ZS5sYW5lcyxYdChlLG4sbCk7MCE9KDEzMTA3MiZlLmZsYWdzKSYmKHBjPSEwKX19cmV0dXJuIFd0KGUsbix0LHIsbCl9ZnVuY3Rpb24gSXQoZSxuLHQpe3ZhciByPW4ucGVuZGluZ1Byb3BzLGw9ci5jaGlsZHJlbixhPTAhPSgyJm4uc3RhdGVOb2RlLl9wZW5kaW5nVmlzaWJpbGl0eSksbz1udWxsIT09ZT9lLm1lbW9pemVkU3RhdGU6bnVsbDtpZihNdChlLG4pLFwiaGlkZGVuXCI9PT1yLm1vZGV8fGEpe2lmKDAhPSgxMjgmbi5mbGFncykpe2lmKHI9bnVsbCE9PW8/by5iYXNlTGFuZXN8dDp0LG51bGwhPT1lKXtmb3IobD1uLmNoaWxkPWUuY2hpbGQsYT0wO251bGwhPT1sOylhPWF8bC5sYW5lc3xsLmNoaWxkTGFuZXMsbD1sLnNpYmxpbmc7bi5jaGlsZExhbmVzPWEmfnJ9ZWxzZSBuLmNoaWxkTGFuZXM9MCxuLmNoaWxkPW51bGw7cmV0dXJuIEZ0KGUsbixyLHQpfWlmKDA9PSg1MzY4NzA5MTImdCkpcmV0dXJuIG4ubGFuZXM9bi5jaGlsZExhbmVzPTUzNjg3MDkxMixGdChlLG4sbnVsbCE9PW8/by5iYXNlTGFuZXN8dDp0LHQpO24ubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjAsY2FjaGVQb29sOm51bGx9LG51bGwhPT1lJiZncihuLG51bGwhPT1vP28uY2FjaGVQb29sOm51bGwpLG51bGwhPT1vP0hlKG4sbyk6amUobiksT2Uobil9ZWxzZSBudWxsIT09bz8oZ3IobixvLmNhY2hlUG9vbCksSGUobixvKSxCZShuKSxuLm1lbW9pemVkU3RhdGU9bnVsbCk6KG51bGwhPT1lJiZncihuLG51bGwpLGplKG4pLEJlKG4pKTtyZXR1cm4gTnQoZSxuLGwsdCksbi5jaGlsZH1mdW5jdGlvbiBGdChlLG4sdCxyKXt2YXIgbD1ocigpO3JldHVybiBsPW51bGw9PT1sP251bGw6e3BhcmVudDpVYy5fY3VycmVudFZhbHVlMixwb29sOmx9LG4ubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOnQsY2FjaGVQb29sOmx9LG51bGwhPT1lJiZncihuLG51bGwpLGplKG4pLE9lKG4pLG51bGwhPT1lJiZvcihlLG4sciwhMCksbnVsbH1mdW5jdGlvbiBNdChlLG4pe3ZhciB0PW4ucmVmO2lmKG51bGw9PT10KW51bGwhPT1lJiZudWxsIT09ZS5yZWYmJihuLmZsYWdzfD0yMDk3NjY0KTtlbHNle2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJlwib2JqZWN0XCIhPXR5cGVvZiB0KXRocm93IEVycm9yKFwiRXhwZWN0ZWQgcmVmIHRvIGJlIGEgZnVuY3Rpb24sIGFuIG9iamVjdCByZXR1cm5lZCBieSBSZWFjdC5jcmVhdGVSZWYoKSwgb3IgdW5kZWZpbmVkL251bGwuXCIpO251bGwhPT1lJiZlLnJlZj09PXR8fChuLmZsYWdzfD0yMDk3NjY0KX19ZnVuY3Rpb24gV3QoZSxuLHQscixsKXtpZih0LnByb3RvdHlwZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5wcm90b3R5cGUucmVuZGVyKXt2YXIgYT1zKHQpfHxcIlVua25vd25cIjttY1thXXx8KGNvbnNvbGUuZXJyb3IoXCJUaGUgPCVzIC8+IGNvbXBvbmVudCBhcHBlYXJzIHRvIGhhdmUgYSByZW5kZXIgbWV0aG9kLCBidXQgZG9lc24ndCBleHRlbmQgUmVhY3QuQ29tcG9uZW50LiBUaGlzIGlzIGxpa2VseSB0byBjYXVzZSBlcnJvcnMuIENoYW5nZSAlcyB0byBleHRlbmQgUmVhY3QuQ29tcG9uZW50IGluc3RlYWQuXCIsYSxhKSxtY1thXT0hMCl9cmV0dXJuIDgmbi5tb2RlJiZ4aS5yZWNvcmRMZWdhY3lDb250ZXh0V2FybmluZyhuLG51bGwpLG51bGw9PT1lJiYoQXQobixuLnR5cGUpLHQuY29udGV4dFR5cGVzJiYoYT1zKHQpfHxcIlVua25vd25cIixnY1thXXx8KGdjW2FdPSEwLGNvbnNvbGUuZXJyb3IoXCIlcyB1c2VzIHRoZSBsZWdhY3kgY29udGV4dFR5cGVzIEFQSSB3aGljaCB3YXMgcmVtb3ZlZCBpbiBSZWFjdCAxOS4gVXNlIFJlYWN0LmNyZWF0ZUNvbnRleHQoKSB3aXRoIFJlYWN0LnVzZUNvbnRleHQoKSBpbnN0ZWFkLiAoaHR0cHM6Ly9yZWFjdC5kZXYvbGluay9sZWdhY3ktY29udGV4dClcIixhKSkpKSxpcihuKSx0PVplKGUsbix0LHIsdm9pZCAwLGwpLHI9cm4oKSxudWxsPT09ZXx8cGM/KG4uZmxhZ3N8PTEsTnQoZSxuLHQsbCksbi5jaGlsZCk6KGxuKGUsbixsKSxYdChlLG4sbCkpfWZ1bmN0aW9uIEh0KGUsbix0LHIsbCxhKXtyZXR1cm4gaXIobiksT3M9LTEsQnM9bnVsbCE9PWUmJmUudHlwZSE9PW4udHlwZSxuLnVwZGF0ZVF1ZXVlPW51bGwsdD1ubihuLHIsdCxsKSxlbihlLG4pLHI9cm4oKSxudWxsPT09ZXx8cGM/KG4uZmxhZ3N8PTEsTnQoZSxuLHQsYSksbi5jaGlsZCk6KGxuKGUsbixhKSxYdChlLG4sYSkpfWZ1bmN0aW9uIGp0KGUsbix0LHIsbCl7dmFyIGEsbyx1O2lmKGlyKG4pLG51bGw9PT1uLnN0YXRlTm9kZSl7aWYobz1zdSxhPXQuY29udGV4dFR5cGUsXCJjb250ZXh0VHlwZVwiaW4gdCYmbnVsbCE9PWEmJih2b2lkIDA9PT1hfHxhLiQkdHlwZW9mIT09amEpJiYhc2MuaGFzKHQpJiYoc2MuYWRkKHQpLHU9dm9pZCAwPT09YT9cIiBIb3dldmVyLCBpdCBpcyBzZXQgdG8gdW5kZWZpbmVkLiBUaGlzIGNhbiBiZSBjYXVzZWQgYnkgYSB0eXBvIG9yIGJ5IG1peGluZyB1cCBuYW1lZCBhbmQgZGVmYXVsdCBpbXBvcnRzLiBUaGlzIGNhbiBhbHNvIGhhcHBlbiBkdWUgdG8gYSBjaXJjdWxhciBkZXBlbmRlbmN5LCBzbyB0cnkgbW92aW5nIHRoZSBjcmVhdGVDb250ZXh0KCkgY2FsbCB0byBhIHNlcGFyYXRlIGZpbGUuXCI6XCJvYmplY3RcIiE9dHlwZW9mIGE/XCIgSG93ZXZlciwgaXQgaXMgc2V0IHRvIGEgXCIrdHlwZW9mIGErXCIuXCI6YS4kJHR5cGVvZj09PUhhP1wiIERpZCB5b3UgYWNjaWRlbnRhbGx5IHBhc3MgdGhlIENvbnRleHQuQ29uc3VtZXIgaW5zdGVhZD9cIjpcIiBIb3dldmVyLCBpdCBpcyBzZXQgdG8gYW4gb2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifS5cIixjb25zb2xlLmVycm9yKFwiJXMgZGVmaW5lcyBhbiBpbnZhbGlkIGNvbnRleHRUeXBlLiBjb250ZXh0VHlwZSBzaG91bGQgcG9pbnQgdG8gdGhlIENvbnRleHQgb2JqZWN0IHJldHVybmVkIGJ5IFJlYWN0LmNyZWF0ZUNvbnRleHQoKS4lc1wiLHModCl8fFwiQ29tcG9uZW50XCIsdSkpLFwib2JqZWN0XCI9PXR5cGVvZiBhJiZudWxsIT09YSYmKG89c3IoYSkpLGE9bmV3IHQocixvKSw4Jm4ubW9kZSl7VSghMCk7dHJ5e2E9bmV3IHQocixvKX1maW5hbGx5e1UoITEpfX1pZihvPW4ubWVtb2l6ZWRTdGF0ZT1udWxsIT09YS5zdGF0ZSYmdm9pZCAwIT09YS5zdGF0ZT9hLnN0YXRlOm51bGwsYS51cGRhdGVyPWZjLG4uc3RhdGVOb2RlPWEsYS5fcmVhY3RJbnRlcm5hbHM9bixhLl9yZWFjdEludGVybmFsSW5zdGFuY2U9ZWMsXCJmdW5jdGlvblwiPT10eXBlb2YgdC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMmJm51bGw9PT1vJiYobz1zKHQpfHxcIkNvbXBvbmVudFwiLHRjLmhhcyhvKXx8KHRjLmFkZChvKSxjb25zb2xlLmVycm9yKFwiYCVzYCB1c2VzIGBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHNgIGJ1dCBpdHMgaW5pdGlhbCBzdGF0ZSBpcyAlcy4gVGhpcyBpcyBub3QgcmVjb21tZW5kZWQuIEluc3RlYWQsIGRlZmluZSB0aGUgaW5pdGlhbCBzdGF0ZSBieSBhc3NpZ25pbmcgYW4gb2JqZWN0IHRvIGB0aGlzLnN0YXRlYCBpbiB0aGUgY29uc3RydWN0b3Igb2YgYCVzYC4gVGhpcyBlbnN1cmVzIHRoYXQgYGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc2AgYXJndW1lbnRzIGhhdmUgYSBjb25zaXN0ZW50IHNoYXBlLlwiLG8sbnVsbD09PWEuc3RhdGU/XCJudWxsXCI6XCJ1bmRlZmluZWRcIixvKSkpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXt2YXIgaT11PW89bnVsbDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxNb3VudCYmITAhPT1hLmNvbXBvbmVudFdpbGxNb3VudC5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nP289XCJjb21wb25lbnRXaWxsTW91bnRcIjpcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJihvPVwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudFwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJiEwIT09YS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzLl9fc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmc/dT1cImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHNcIjpcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiYodT1cIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCIpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVwZGF0ZSYmITAhPT1hLmNvbXBvbmVudFdpbGxVcGRhdGUuX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZz9pPVwiY29tcG9uZW50V2lsbFVwZGF0ZVwiOlwiZnVuY3Rpb25cIj09dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJihpPVwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGVcIiksbnVsbCE9PW98fG51bGwhPT11fHxudWxsIT09aSl7YT1zKHQpfHxcIkNvbXBvbmVudFwiO3ZhciBmPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzP1wiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKClcIjpcImdldFNuYXBzaG90QmVmb3JlVXBkYXRlKClcIjtsYy5oYXMoYSl8fChsYy5hZGQoYSksY29uc29sZS5lcnJvcihcIlVuc2FmZSBsZWdhY3kgbGlmZWN5Y2xlcyB3aWxsIG5vdCBiZSBjYWxsZWQgZm9yIGNvbXBvbmVudHMgdXNpbmcgbmV3IGNvbXBvbmVudCBBUElzLlxcblxcbiVzIHVzZXMgJXMgYnV0IGFsc28gY29udGFpbnMgdGhlIGZvbGxvd2luZyBsZWdhY3kgbGlmZWN5Y2xlczolcyVzJXNcXG5cXG5UaGUgYWJvdmUgbGlmZWN5Y2xlcyBzaG91bGQgYmUgcmVtb3ZlZC4gTGVhcm4gbW9yZSBhYm91dCB0aGlzIHdhcm5pbmcgaGVyZTpcXG5odHRwczovL3JlYWN0LmRldi9saW5rL3Vuc2FmZS1jb21wb25lbnQtbGlmZWN5Y2xlc1wiLGEsZixudWxsIT09bz9cIlxcbiAgXCIrbzpcIlwiLG51bGwhPT11P1wiXFxuICBcIit1OlwiXCIsbnVsbCE9PWk/XCJcXG4gIFwiK2k6XCJcIikpfX1hPW4uc3RhdGVOb2RlLG89cyh0KXx8XCJDb21wb25lbnRcIixhLnJlbmRlcnx8KHQucHJvdG90eXBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnByb3RvdHlwZS5yZW5kZXI/Y29uc29sZS5lcnJvcihcIk5vIGByZW5kZXJgIG1ldGhvZCBmb3VuZCBvbiB0aGUgJXMgaW5zdGFuY2U6IGRpZCB5b3UgYWNjaWRlbnRhbGx5IHJldHVybiBhbiBvYmplY3QgZnJvbSB0aGUgY29uc3RydWN0b3I/XCIsbyk6Y29uc29sZS5lcnJvcihcIk5vIGByZW5kZXJgIG1ldGhvZCBmb3VuZCBvbiB0aGUgJXMgaW5zdGFuY2U6IHlvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gZGVmaW5lIGByZW5kZXJgLlwiLG8pKSwhYS5nZXRJbml0aWFsU3RhdGV8fGEuZ2V0SW5pdGlhbFN0YXRlLmlzUmVhY3RDbGFzc0FwcHJvdmVkfHxhLnN0YXRlfHxjb25zb2xlLmVycm9yKFwiZ2V0SW5pdGlhbFN0YXRlIHdhcyBkZWZpbmVkIG9uICVzLCBhIHBsYWluIEphdmFTY3JpcHQgY2xhc3MuIFRoaXMgaXMgb25seSBzdXBwb3J0ZWQgZm9yIGNsYXNzZXMgY3JlYXRlZCB1c2luZyBSZWFjdC5jcmVhdGVDbGFzcy4gRGlkIHlvdSBtZWFuIHRvIGRlZmluZSBhIHN0YXRlIHByb3BlcnR5IGluc3RlYWQ/XCIsbyksYS5nZXREZWZhdWx0UHJvcHMmJiFhLmdldERlZmF1bHRQcm9wcy5pc1JlYWN0Q2xhc3NBcHByb3ZlZCYmY29uc29sZS5lcnJvcihcImdldERlZmF1bHRQcm9wcyB3YXMgZGVmaW5lZCBvbiAlcywgYSBwbGFpbiBKYXZhU2NyaXB0IGNsYXNzLiBUaGlzIGlzIG9ubHkgc3VwcG9ydGVkIGZvciBjbGFzc2VzIGNyZWF0ZWQgdXNpbmcgUmVhY3QuY3JlYXRlQ2xhc3MuIFVzZSBhIHN0YXRpYyBwcm9wZXJ0eSB0byBkZWZpbmUgZGVmYXVsdFByb3BzIGluc3RlYWQuXCIsbyksYS5jb250ZXh0VHlwZSYmY29uc29sZS5lcnJvcihcImNvbnRleHRUeXBlIHdhcyBkZWZpbmVkIGFzIGFuIGluc3RhbmNlIHByb3BlcnR5IG9uICVzLiBVc2UgYSBzdGF0aWMgcHJvcGVydHkgdG8gZGVmaW5lIGNvbnRleHRUeXBlIGluc3RlYWQuXCIsbyksdC5jaGlsZENvbnRleHRUeXBlcyYmIWljLmhhcyh0KSYmKGljLmFkZCh0KSxjb25zb2xlLmVycm9yKFwiJXMgdXNlcyB0aGUgbGVnYWN5IGNoaWxkQ29udGV4dFR5cGVzIEFQSSB3aGljaCB3YXMgcmVtb3ZlZCBpbiBSZWFjdCAxOS4gVXNlIFJlYWN0LmNyZWF0ZUNvbnRleHQoKSBpbnN0ZWFkLiAoaHR0cHM6Ly9yZWFjdC5kZXYvbGluay9sZWdhY3ktY29udGV4dClcIixvKSksdC5jb250ZXh0VHlwZXMmJiF1Yy5oYXModCkmJih1Yy5hZGQodCksY29uc29sZS5lcnJvcihcIiVzIHVzZXMgdGhlIGxlZ2FjeSBjb250ZXh0VHlwZXMgQVBJIHdoaWNoIHdhcyByZW1vdmVkIGluIFJlYWN0IDE5LiBVc2UgUmVhY3QuY3JlYXRlQ29udGV4dCgpIHdpdGggc3RhdGljIGNvbnRleHRUeXBlIGluc3RlYWQuIChodHRwczovL3JlYWN0LmRldi9saW5rL2xlZ2FjeS1jb250ZXh0KVwiLG8pKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudFNob3VsZFVwZGF0ZSYmY29uc29sZS5lcnJvcihcIiVzIGhhcyBhIG1ldGhvZCBjYWxsZWQgY29tcG9uZW50U2hvdWxkVXBkYXRlKCkuIERpZCB5b3UgbWVhbiBzaG91bGRDb21wb25lbnRVcGRhdGUoKT8gVGhlIG5hbWUgaXMgcGhyYXNlZCBhcyBhIHF1ZXN0aW9uIGJlY2F1c2UgdGhlIGZ1bmN0aW9uIGlzIGV4cGVjdGVkIHRvIHJldHVybiBhIHZhbHVlLlwiLG8pLHQucHJvdG90eXBlJiZ0LnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudCYmdm9pZCAwIT09YS5zaG91bGRDb21wb25lbnRVcGRhdGUmJmNvbnNvbGUuZXJyb3IoXCIlcyBoYXMgYSBtZXRob2QgY2FsbGVkIHNob3VsZENvbXBvbmVudFVwZGF0ZSgpLiBzaG91bGRDb21wb25lbnRVcGRhdGUgc2hvdWxkIG5vdCBiZSB1c2VkIHdoZW4gZXh0ZW5kaW5nIFJlYWN0LlB1cmVDb21wb25lbnQuIFBsZWFzZSBleHRlbmQgUmVhY3QuQ29tcG9uZW50IGlmIHNob3VsZENvbXBvbmVudFVwZGF0ZSBpcyB1c2VkLlwiLHModCl8fFwiQSBwdXJlIGNvbXBvbmVudFwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZFVubW91bnQmJmNvbnNvbGUuZXJyb3IoXCIlcyBoYXMgYSBtZXRob2QgY2FsbGVkIGNvbXBvbmVudERpZFVubW91bnQoKS4gQnV0IHRoZXJlIGlzIG5vIHN1Y2ggbGlmZWN5Y2xlIG1ldGhvZC4gRGlkIHlvdSBtZWFuIGNvbXBvbmVudFdpbGxVbm1vdW50KCk/XCIsbyksXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb21wb25lbnREaWRSZWNlaXZlUHJvcHMmJmNvbnNvbGUuZXJyb3IoXCIlcyBoYXMgYSBtZXRob2QgY2FsbGVkIGNvbXBvbmVudERpZFJlY2VpdmVQcm9wcygpLiBCdXQgdGhlcmUgaXMgbm8gc3VjaCBsaWZlY3ljbGUgbWV0aG9kLiBJZiB5b3UgbWVhbnQgdG8gdXBkYXRlIHRoZSBzdGF0ZSBpbiByZXNwb25zZSB0byBjaGFuZ2luZyBwcm9wcywgdXNlIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoKS4gSWYgeW91IG1lYW50IHRvIGZldGNoIGRhdGEgb3IgcnVuIHNpZGUtZWZmZWN0cyBvciBtdXRhdGlvbnMgYWZ0ZXIgUmVhY3QgaGFzIHVwZGF0ZWQgdGhlIFVJLCB1c2UgY29tcG9uZW50RGlkVXBkYXRlKCkuXCIsbyksXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb21wb25lbnRXaWxsUmVjaWV2ZVByb3BzJiZjb25zb2xlLmVycm9yKFwiJXMgaGFzIGEgbWV0aG9kIGNhbGxlZCBjb21wb25lbnRXaWxsUmVjaWV2ZVByb3BzKCkuIERpZCB5b3UgbWVhbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKCk/XCIsbyksXCJmdW5jdGlvblwiPT10eXBlb2YgYS5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2lldmVQcm9wcyYmY29uc29sZS5lcnJvcihcIiVzIGhhcyBhIG1ldGhvZCBjYWxsZWQgVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNpZXZlUHJvcHMoKS4gRGlkIHlvdSBtZWFuIFVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKCk/XCIsbyksdT1hLnByb3BzIT09cix2b2lkIDAhPT1hLnByb3BzJiZ1JiZjb25zb2xlLmVycm9yKFwiV2hlbiBjYWxsaW5nIHN1cGVyKCkgaW4gYCVzYCwgbWFrZSBzdXJlIHRvIHBhc3MgdXAgdGhlIHNhbWUgcHJvcHMgdGhhdCB5b3VyIGNvbXBvbmVudCdzIGNvbnN0cnVjdG9yIHdhcyBwYXNzZWQuXCIsbyksYS5kZWZhdWx0UHJvcHMmJmNvbnNvbGUuZXJyb3IoXCJTZXR0aW5nIGRlZmF1bHRQcm9wcyBhcyBhbiBpbnN0YW5jZSBwcm9wZXJ0eSBvbiAlcyBpcyBub3Qgc3VwcG9ydGVkIGFuZCB3aWxsIGJlIGlnbm9yZWQuIEluc3RlYWQsIGRlZmluZSBkZWZhdWx0UHJvcHMgYXMgYSBzdGF0aWMgcHJvcGVydHkgb24gJXMuXCIsbyxvKSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZFVwZGF0ZXx8cmMuaGFzKHQpfHwocmMuYWRkKHQpLGNvbnNvbGUuZXJyb3IoXCIlczogZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoKSBzaG91bGQgYmUgdXNlZCB3aXRoIGNvbXBvbmVudERpZFVwZGF0ZSgpLiBUaGlzIGNvbXBvbmVudCBkZWZpbmVzIGdldFNuYXBzaG90QmVmb3JlVXBkYXRlKCkgb25seS5cIixzKHQpKSksXCJmdW5jdGlvblwiPT10eXBlb2YgYS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMmJmNvbnNvbGUuZXJyb3IoXCIlczogZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKCkgaXMgZGVmaW5lZCBhcyBhbiBpbnN0YW5jZSBtZXRob2QgYW5kIHdpbGwgYmUgaWdub3JlZC4gSW5zdGVhZCwgZGVjbGFyZSBpdCBhcyBhIHN0YXRpYyBtZXRob2QuXCIsbyksXCJmdW5jdGlvblwiPT10eXBlb2YgYS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3ImJmNvbnNvbGUuZXJyb3IoXCIlczogZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKCkgaXMgZGVmaW5lZCBhcyBhbiBpbnN0YW5jZSBtZXRob2QgYW5kIHdpbGwgYmUgaWdub3JlZC4gSW5zdGVhZCwgZGVjbGFyZSBpdCBhcyBhIHN0YXRpYyBtZXRob2QuXCIsbyksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmY29uc29sZS5lcnJvcihcIiVzOiBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSgpIGlzIGRlZmluZWQgYXMgYSBzdGF0aWMgbWV0aG9kIGFuZCB3aWxsIGJlIGlnbm9yZWQuIEluc3RlYWQsIGRlY2xhcmUgaXQgYXMgYW4gaW5zdGFuY2UgbWV0aG9kLlwiLG8pLCh1PWEuc3RhdGUpJiYoXCJvYmplY3RcIiE9dHlwZW9mIHV8fGxvKHUpKSYmY29uc29sZS5lcnJvcihcIiVzLnN0YXRlOiBtdXN0IGJlIHNldCB0byBhbiBvYmplY3Qgb3IgbnVsbFwiLG8pLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuZ2V0Q2hpbGRDb250ZXh0JiZcIm9iamVjdFwiIT10eXBlb2YgdC5jaGlsZENvbnRleHRUeXBlcyYmY29uc29sZS5lcnJvcihcIiVzLmdldENoaWxkQ29udGV4dCgpOiBjaGlsZENvbnRleHRUeXBlcyBtdXN0IGJlIGRlZmluZWQgaW4gb3JkZXIgdG8gdXNlIGdldENoaWxkQ29udGV4dCgpLlwiLG8pLChhPW4uc3RhdGVOb2RlKS5wcm9wcz1yLGEuc3RhdGU9bi5tZW1vaXplZFN0YXRlLGEucmVmcz17fSxtZShuKSxvPXQuY29udGV4dFR5cGUsYS5jb250ZXh0PVwib2JqZWN0XCI9PXR5cGVvZiBvJiZudWxsIT09bz9zcihvKTpzdSxhLnN0YXRlPT09ciYmKG89cyh0KXx8XCJDb21wb25lbnRcIixhYy5oYXMobyl8fChhYy5hZGQobyksY29uc29sZS5lcnJvcihcIiVzOiBJdCBpcyBub3QgcmVjb21tZW5kZWQgdG8gYXNzaWduIHByb3BzIGRpcmVjdGx5IHRvIHN0YXRlIGJlY2F1c2UgdXBkYXRlcyB0byBwcm9wcyB3b24ndCBiZSByZWZsZWN0ZWQgaW4gc3RhdGUuIEluIG1vc3QgY2FzZXMsIGl0IGlzIGJldHRlciB0byB1c2UgcHJvcHMgZGlyZWN0bHkuXCIsbykpKSw4Jm4ubW9kZSYmeGkucmVjb3JkTGVnYWN5Q29udGV4dFdhcm5pbmcobixhKSx4aS5yZWNvcmRVbnNhZmVMaWZlY3ljbGVXYXJuaW5ncyhuLGEpLGEuc3RhdGU9bi5tZW1vaXplZFN0YXRlLFwiZnVuY3Rpb25cIj09dHlwZW9mKG89dC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMpJiYod3Qobix0LG8sciksYS5zdGF0ZT1uLm1lbW9pemVkU3RhdGUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuY29tcG9uZW50V2lsbE1vdW50fHwobz1hLnN0YXRlLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuY29tcG9uZW50V2lsbE1vdW50JiZhLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmYS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksbyE9PWEuc3RhdGUmJihjb25zb2xlLmVycm9yKFwiJXMuY29tcG9uZW50V2lsbE1vdW50KCk6IEFzc2lnbmluZyBkaXJlY3RseSB0byB0aGlzLnN0YXRlIGlzIGRlcHJlY2F0ZWQgKGV4Y2VwdCBpbnNpZGUgYSBjb21wb25lbnQncyBjb25zdHJ1Y3RvcikuIFVzZSBzZXRTdGF0ZSBpbnN0ZWFkLlwiLGMobil8fFwiQ29tcG9uZW50XCIpLGZjLmVucXVldWVSZXBsYWNlU3RhdGUoYSxhLnN0YXRlLG51bGwpKSxrZShuLHIsYSxsKSxTZSgpLGEuc3RhdGU9bi5tZW1vaXplZFN0YXRlKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZE1vdW50JiYobi5mbGFnc3w9NDE5NDMwOCksKDE2Jm4ubW9kZSkhPT0kdSYmKG4uZmxhZ3N8PTY3MTA4ODY0KSxhPSEwfWVsc2UgaWYobnVsbD09PWUpe2E9bi5zdGF0ZU5vZGU7dmFyIGQ9bi5tZW1vaXplZFByb3BzO3U9Q3QodCxkKSxhLnByb3BzPXU7dmFyIHA9YS5jb250ZXh0O2k9dC5jb250ZXh0VHlwZSxvPXN1LFwib2JqZWN0XCI9PXR5cGVvZiBpJiZudWxsIT09aSYmKG89c3IoaSkpLGk9XCJmdW5jdGlvblwiPT10eXBlb2YoZj10LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyl8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUsZD1uLnBlbmRpbmdQcm9wcyE9PWQsaXx8XCJmdW5jdGlvblwiIT10eXBlb2YgYS5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT10eXBlb2YgYS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoZHx8cCE9PW8pJiZ6dChuLGEscixvKSxiaT0hMTt2YXIgbT1uLm1lbW9pemVkU3RhdGU7YS5zdGF0ZT1tLGtlKG4scixhLGwpLFNlKCkscD1uLm1lbW9pemVkU3RhdGUsZHx8bSE9PXB8fGJpPyhcImZ1bmN0aW9uXCI9PXR5cGVvZiBmJiYod3Qobix0LGYscikscD1uLm1lbW9pemVkU3RhdGUpLCh1PWJpfHx4dChuLHQsdSxyLG0scCxvKSk/KGl8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT10eXBlb2YgYS5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxNb3VudCYmYS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmEuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZE1vdW50JiYobi5mbGFnc3w9NDE5NDMwOCksKDE2Jm4ubW9kZSkhPT0kdSYmKG4uZmxhZ3N8PTY3MTA4ODY0KSk6KFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuY29tcG9uZW50RGlkTW91bnQmJihuLmZsYWdzfD00MTk0MzA4KSwoMTYmbi5tb2RlKSE9PSR1JiYobi5mbGFnc3w9NjcxMDg4NjQpLG4ubWVtb2l6ZWRQcm9wcz1yLG4ubWVtb2l6ZWRTdGF0ZT1wKSxhLnByb3BzPXIsYS5zdGF0ZT1wLGEuY29udGV4dD1vLGE9dSk6KFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuY29tcG9uZW50RGlkTW91bnQmJihuLmZsYWdzfD00MTk0MzA4KSwoMTYmbi5tb2RlKSE9PSR1JiYobi5mbGFnc3w9NjcxMDg4NjQpLGE9ITEpfWVsc2V7YT1uLnN0YXRlTm9kZSxoZShlLG4pLGk9Q3QodCxvPW4ubWVtb2l6ZWRQcm9wcyksYS5wcm9wcz1pLGY9bi5wZW5kaW5nUHJvcHMsbT1hLmNvbnRleHQscD10LmNvbnRleHRUeXBlLHU9c3UsXCJvYmplY3RcIj09dHlwZW9mIHAmJm51bGwhPT1wJiYodT1zcihwKSksKHA9XCJmdW5jdGlvblwiPT10eXBlb2YoZD10LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyl8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChvIT09Znx8bSE9PXUpJiZ6dChuLGEscix1KSxiaT0hMSxtPW4ubWVtb2l6ZWRTdGF0ZSxhLnN0YXRlPW0sa2UobixyLGEsbCksU2UoKTt2YXIgaD1uLm1lbW9pemVkU3RhdGU7byE9PWZ8fG0hPT1ofHxiaXx8bnVsbCE9PWUmJm51bGwhPT1lLmRlcGVuZGVuY2llcyYmdXIoZS5kZXBlbmRlbmNpZXMpPyhcImZ1bmN0aW9uXCI9PXR5cGVvZiBkJiYod3Qobix0LGQsciksaD1uLm1lbW9pemVkU3RhdGUpLChpPWJpfHx4dChuLHQsaSxyLG0saCx1KXx8bnVsbCE9PWUmJm51bGwhPT1lLmRlcGVuZGVuY2llcyYmdXIoZS5kZXBlbmRlbmNpZXMpKT8ocHx8XCJmdW5jdGlvblwiIT10eXBlb2YgYS5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT10eXBlb2YgYS5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb21wb25lbnRXaWxsVXBkYXRlJiZhLmNvbXBvbmVudFdpbGxVcGRhdGUocixoLHUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmEuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUocixoLHUpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbXBvbmVudERpZFVwZGF0ZSYmKG4uZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihuLmZsYWdzfD0xMDI0KSk6KFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuY29tcG9uZW50RGlkVXBkYXRlfHxvPT09ZS5tZW1vaXplZFByb3BzJiZtPT09ZS5tZW1vaXplZFN0YXRlfHwobi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT10eXBlb2YgYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8bz09PWUubWVtb2l6ZWRQcm9wcyYmbT09PWUubWVtb2l6ZWRTdGF0ZXx8KG4uZmxhZ3N8PTEwMjQpLG4ubWVtb2l6ZWRQcm9wcz1yLG4ubWVtb2l6ZWRTdGF0ZT1oKSxhLnByb3BzPXIsYS5zdGF0ZT1oLGEuY29udGV4dD11LGE9aSk6KFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuY29tcG9uZW50RGlkVXBkYXRlfHxvPT09ZS5tZW1vaXplZFByb3BzJiZtPT09ZS5tZW1vaXplZFN0YXRlfHwobi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT10eXBlb2YgYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8bz09PWUubWVtb2l6ZWRQcm9wcyYmbT09PWUubWVtb2l6ZWRTdGF0ZXx8KG4uZmxhZ3N8PTEwMjQpLGE9ITEpfWlmKHU9YSxNdChlLG4pLG89MCE9KDEyOCZuLmZsYWdzKSx1fHxvKXtpZih1PW4uc3RhdGVOb2RlLEphLmdldEN1cnJlbnRTdGFjaz1udWxsPT09bj9udWxsOmcscm89ITEsdG89bixvJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcil0PW51bGwsWHU9LTE7ZWxzZSBpZih0PVFpKHUpLDgmbi5tb2RlKXtVKCEwKTt0cnl7UWkodSl9ZmluYWxseXtVKCExKX19bi5mbGFnc3w9MSxudWxsIT09ZSYmbz8obi5jaGlsZD1mcyhuLGUuY2hpbGQsbnVsbCxsKSxuLmNoaWxkPWZzKG4sbnVsbCx0LGwpKTpOdChlLG4sdCxsKSxuLm1lbW9pemVkU3RhdGU9dS5zdGF0ZSxlPW4uY2hpbGR9ZWxzZSBlPVh0KGUsbixsKTtyZXR1cm4gbD1uLnN0YXRlTm9kZSxhJiZsLnByb3BzIT09ciYmKGJjfHxjb25zb2xlLmVycm9yKFwiSXQgbG9va3MgbGlrZSAlcyBpcyByZWFzc2lnbmluZyBpdHMgb3duIGB0aGlzLnByb3BzYCB3aGlsZSByZW5kZXJpbmcuIFRoaXMgaXMgbm90IHN1cHBvcnRlZCBhbmQgY2FuIGxlYWQgdG8gY29uZnVzaW5nIGJ1Z3MuXCIsYyhuKXx8XCJhIGNvbXBvbmVudFwiKSxiYz0hMCksZX1mdW5jdGlvbiBBdChlLG4pe24mJm4uY2hpbGRDb250ZXh0VHlwZXMmJmNvbnNvbGUuZXJyb3IoXCJjaGlsZENvbnRleHRUeXBlcyBjYW5ub3QgYmUgZGVmaW5lZCBvbiBhIGZ1bmN0aW9uIGNvbXBvbmVudC5cXG4gICVzLmNoaWxkQ29udGV4dFR5cGVzID0gLi4uXCIsbi5kaXNwbGF5TmFtZXx8bi5uYW1lfHxcIkNvbXBvbmVudFwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyYmKGU9cyhuKXx8XCJVbmtub3duXCIseWNbZV18fChjb25zb2xlLmVycm9yKFwiJXM6IEZ1bmN0aW9uIGNvbXBvbmVudHMgZG8gbm90IHN1cHBvcnQgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLlwiLGUpLHljW2VdPSEwKSksXCJvYmplY3RcIj09dHlwZW9mIG4uY29udGV4dFR5cGUmJm51bGwhPT1uLmNvbnRleHRUeXBlJiYobj1zKG4pfHxcIlVua25vd25cIixoY1tuXXx8KGNvbnNvbGUuZXJyb3IoXCIlczogRnVuY3Rpb24gY29tcG9uZW50cyBkbyBub3Qgc3VwcG9ydCBjb250ZXh0VHlwZS5cIixuKSxoY1tuXT0hMCkpfWZ1bmN0aW9uIFF0KGUpe3JldHVybntiYXNlTGFuZXM6ZSxjYWNoZVBvb2w6eXIoKX19ZnVuY3Rpb24gT3QoZSxuLHQpe3JldHVybiBlPW51bGwhPT1lP2UuY2hpbGRMYW5lcyZ+dDowLG4mJihlfD1OZiksZX1mdW5jdGlvbiBCdChlLG4sdCl7dmFyIHIsbCxhLG8sdT1uLnBlbmRpbmdQcm9wcyxpPSExLHM9MCE9KDEyOCZuLmZsYWdzKTtpZigocj1zKXx8KHI9KG51bGw9PT1lfHxudWxsIT09ZS5tZW1vaXplZFN0YXRlKSYmMCE9KHZzLmN1cnJlbnQmYnMpKSxyJiYoaT0hMCxuLmZsYWdzJj0tMTI5KSxyPTAhPSgzMiZuLmZsYWdzKSxuLmZsYWdzJj0tMzMsbnVsbD09PWUpcmV0dXJuIGw9dS5jaGlsZHJlbix1PXUuZmFsbGJhY2ssaT8oQmUobiksbD0kdCh7bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmx9LGk9bi5tb2RlKSx1PWhhKHUsaSx0LG51bGwpLGwucmV0dXJuPW4sdS5yZXR1cm49bixsLnNpYmxpbmc9dSxuLmNoaWxkPWwsKGk9bi5jaGlsZCkubWVtb2l6ZWRTdGF0ZT1RdCh0KSxpLmNoaWxkTGFuZXM9T3QoZSxyLHQpLG4ubWVtb2l6ZWRTdGF0ZT1rYyx1KTooUWUobiksVnQobixsKSk7aWYobnVsbCE9PShhPWUubWVtb2l6ZWRTdGF0ZSkmJm51bGwhPT0obD1hLmRlaHlkcmF0ZWQpKXtpZihzKTI1NiZuLmZsYWdzPyhRZShuKSxuLmZsYWdzJj0tMjU3LG49cXQoZSxuLHQpKTpudWxsIT09bi5tZW1vaXplZFN0YXRlPyhCZShuKSxuLmNoaWxkPWUuY2hpbGQsbi5mbGFnc3w9MTI4LG49bnVsbCk6KEJlKG4pLGk9dS5mYWxsYmFjayxsPW4ubW9kZSx1PSR0KHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOnUuY2hpbGRyZW59LGwpLChpPWhhKGksbCx0LG51bGwpKS5mbGFnc3w9Mix1LnJldHVybj1uLGkucmV0dXJuPW4sdS5zaWJsaW5nPWksbi5jaGlsZD11LGZzKG4sZS5jaGlsZCxudWxsLHQpLCh1PW4uY2hpbGQpLm1lbW9pemVkU3RhdGU9UXQodCksdS5jaGlsZExhbmVzPU90KGUscix0KSxuLm1lbW9pemVkU3RhdGU9a2Msbj1pKTtlbHNlIGlmKFFlKG4pLEtvKGwpKXI9KGw9WG8obCkpLmRpZ2VzdCxpPWwubWVzc2FnZSx1PWwuc3RhY2ssbD1sLmNvbXBvbmVudFN0YWNrLChpPWk/RXJyb3IoaSk6RXJyb3IoXCJUaGUgc2VydmVyIGNvdWxkIG5vdCBmaW5pc2ggdGhpcyBTdXNwZW5zZSBib3VuZGFyeSwgbGlrZWx5IGR1ZSB0byBhbiBlcnJvciBkdXJpbmcgc2VydmVyIHJlbmRlcmluZy4gU3dpdGNoZWQgdG8gY2xpZW50IHJlbmRlcmluZy5cIikpLnN0YWNrPXV8fFwiXCIsaS5kaWdlc3Q9cix1PXt2YWx1ZTppLHNvdXJjZTpudWxsLHN0YWNrOnI9dm9pZCAwPT09bD9udWxsOmx9LFwic3RyaW5nXCI9PXR5cGVvZiByJiZUdS5zZXQoaSx1KSxvPXUsbnVsbD09PVZ1P1Z1PVtvXTpWdS5wdXNoKG8pLG49cXQoZSxuLHQpO2Vsc2UgaWYocGN8fG9yKGUsbix0LCExKSxyPTAhPSh0JmUuY2hpbGRMYW5lcykscGN8fHIpe2lmKG51bGwhPT0ocj1jZikpe2lmKDAhPSg0MiYodT10Ji10KSkpdT0xO2Vsc2Ugc3dpdGNoKHUpe2Nhc2UgMjp1PTE7YnJlYWs7Y2FzZSA4OnU9NDticmVhaztjYXNlIDMyOnU9MTY7YnJlYWs7Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6dT02NDticmVhaztjYXNlIDI2ODQzNTQ1Njp1PTEzNDIxNzcyODticmVhaztkZWZhdWx0OnU9MH1pZigwIT09KHU9MCE9KHUmKHIuc3VzcGVuZGVkTGFuZXN8dCkpPzA6dSkmJnUhPT1hLnJldHJ5TGFuZSl0aHJvdyBhLnJldHJ5TGFuZT11LCQoZSx1KSxDbChyLGUsdSksZGN9Sm8obCl8fE1sKCksbj1xdChlLG4sdCl9ZWxzZSBKbyhsKT8obi5mbGFnc3w9MTI4LG4uY2hpbGQ9ZS5jaGlsZCxuPXRhLmJpbmQobnVsbCxlKSxabyhsLG4pLG49bnVsbCk6KGU9YS50cmVlQ29udGV4dCwobj1WdChuLHUuY2hpbGRyZW4pKS5mbGFnc3w9NDA5Nik7cmV0dXJuIG59cmV0dXJuIGk/KEJlKG4pLGk9dS5mYWxsYmFjayxsPW4ubW9kZSxzPShhPWUuY2hpbGQpLnNpYmxpbmcsKHU9ZmEoYSx7bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOnUuY2hpbGRyZW59KSkuc3VidHJlZUZsYWdzPTMxNDU3MjgwJmEuc3VidHJlZUZsYWdzLG51bGwhPT1zP2k9ZmEocyxpKTooaT1oYShpLGwsdCxudWxsKSkuZmxhZ3N8PTIsaS5yZXR1cm49bix1LnJldHVybj1uLHUuc2libGluZz1pLG4uY2hpbGQ9dSx1PWksaT1uLmNoaWxkLG51bGw9PT0obD1lLmNoaWxkLm1lbW9pemVkU3RhdGUpP2w9UXQodCk6KG51bGwhPT0oYT1sLmNhY2hlUG9vbCk/KHM9VWMuX2N1cnJlbnRWYWx1ZTIsYT1hLnBhcmVudCE9PXM/e3BhcmVudDpzLHBvb2w6c306YSk6YT15cigpLGw9e2Jhc2VMYW5lczpsLmJhc2VMYW5lc3x0LGNhY2hlUG9vbDphfSksaS5tZW1vaXplZFN0YXRlPWwsaS5jaGlsZExhbmVzPU90KGUscix0KSxuLm1lbW9pemVkU3RhdGU9a2MsdSk6KFFlKG4pLGU9KHQ9ZS5jaGlsZCkuc2libGluZywodD1mYSh0LHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOnUuY2hpbGRyZW59KSkucmV0dXJuPW4sdC5zaWJsaW5nPW51bGwsbnVsbCE9PWUmJihudWxsPT09KHI9bi5kZWxldGlvbnMpPyhuLmRlbGV0aW9ucz1bZV0sbi5mbGFnc3w9MTYpOnIucHVzaChlKSksbi5jaGlsZD10LG4ubWVtb2l6ZWRTdGF0ZT1udWxsLHQpfWZ1bmN0aW9uIFZ0KGUsbil7cmV0dXJuKG49JHQoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46bn0sZS5tb2RlKSkucmV0dXJuPWUsZS5jaGlsZD1ufWZ1bmN0aW9uICR0KGUsbil7cmV0dXJuIGdhKGUsbiwwLG51bGwpfWZ1bmN0aW9uIHF0KGUsbix0KXtyZXR1cm4gZnMobixlLmNoaWxkLG51bGwsdCksKGU9VnQobixuLnBlbmRpbmdQcm9wcy5jaGlsZHJlbikpLmZsYWdzfD0yLG4ubWVtb2l6ZWRTdGF0ZT1udWxsLGV9ZnVuY3Rpb24gWXQoZSxuLHQpe2UubGFuZXN8PW47dmFyIHI9ZS5hbHRlcm5hdGU7bnVsbCE9PXImJihyLmxhbmVzfD1uKSxscihlLnJldHVybixuLHQpfWZ1bmN0aW9uIEd0KGUsbil7dmFyIHQ9bG8oZSk7cmV0dXJuIGU9IXQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGkoZSksIXQmJiFlfHwodD10P1wiYXJyYXlcIjpcIml0ZXJhYmxlXCIsY29uc29sZS5lcnJvcihcIkEgbmVzdGVkICVzIHdhcyBwYXNzZWQgdG8gcm93ICMlcyBpbiA8U3VzcGVuc2VMaXN0IC8+LiBXcmFwIGl0IGluIGFuIGFkZGl0aW9uYWwgU3VzcGVuc2VMaXN0IHRvIGNvbmZpZ3VyZSBpdHMgcmV2ZWFsT3JkZXI6IDxTdXNwZW5zZUxpc3QgcmV2ZWFsT3JkZXI9Li4uPiAuLi4gPFN1c3BlbnNlTGlzdCByZXZlYWxPcmRlcj0uLi4+eyVzfTwvU3VzcGVuc2VMaXN0PiAuLi4gPC9TdXNwZW5zZUxpc3Q+XCIsdCxuLHQpLCExKX1mdW5jdGlvbiBKdChlLG4sdCxyLGwpe3ZhciBhPWUubWVtb2l6ZWRTdGF0ZTtudWxsPT09YT9lLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOm4scmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpyLHRhaWw6dCx0YWlsTW9kZTpsfTooYS5pc0JhY2t3YXJkcz1uLGEucmVuZGVyaW5nPW51bGwsYS5yZW5kZXJpbmdTdGFydFRpbWU9MCxhLmxhc3Q9cixhLnRhaWw9dCxhLnRhaWxNb2RlPWwpfWZ1bmN0aW9uIEt0KGUsbix0KXt2YXIgcj1uLnBlbmRpbmdQcm9wcyxsPXIucmV2ZWFsT3JkZXIsYT1yLnRhaWw7aWYocj1yLmNoaWxkcmVuLHZvaWQgMCE9PWwmJlwiZm9yd2FyZHNcIiE9PWwmJlwiYmFja3dhcmRzXCIhPT1sJiZcInRvZ2V0aGVyXCIhPT1sJiYhdmNbbF0paWYodmNbbF09ITAsXCJzdHJpbmdcIj09dHlwZW9mIGwpc3dpdGNoKGwudG9Mb3dlckNhc2UoKSl7Y2FzZVwidG9nZXRoZXJcIjpjYXNlXCJmb3J3YXJkc1wiOmNhc2VcImJhY2t3YXJkc1wiOmNvbnNvbGUuZXJyb3IoJ1wiJXNcIiBpcyBub3QgYSB2YWxpZCB2YWx1ZSBmb3IgcmV2ZWFsT3JkZXIgb24gPFN1c3BlbnNlTGlzdCAvPi4gVXNlIGxvd2VyY2FzZSBcIiVzXCIgaW5zdGVhZC4nLGwsbC50b0xvd2VyQ2FzZSgpKTticmVhaztjYXNlXCJmb3J3YXJkXCI6Y2FzZVwiYmFja3dhcmRcIjpjb25zb2xlLmVycm9yKCdcIiVzXCIgaXMgbm90IGEgdmFsaWQgdmFsdWUgZm9yIHJldmVhbE9yZGVyIG9uIDxTdXNwZW5zZUxpc3QgLz4uIFJlYWN0IHVzZXMgdGhlIC1zIHN1ZmZpeCBpbiB0aGUgc3BlbGxpbmcuIFVzZSBcIiVzc1wiIGluc3RlYWQuJyxsLGwudG9Mb3dlckNhc2UoKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKCdcIiVzXCIgaXMgbm90IGEgc3VwcG9ydGVkIHJldmVhbE9yZGVyIG9uIDxTdXNwZW5zZUxpc3QgLz4uIERpZCB5b3UgbWVhbiBcInRvZ2V0aGVyXCIsIFwiZm9yd2FyZHNcIiBvciBcImJhY2t3YXJkc1wiPycsbCl9ZWxzZSBjb25zb2xlLmVycm9yKCclcyBpcyBub3QgYSBzdXBwb3J0ZWQgdmFsdWUgZm9yIHJldmVhbE9yZGVyIG9uIDxTdXNwZW5zZUxpc3QgLz4uIERpZCB5b3UgbWVhbiBcInRvZ2V0aGVyXCIsIFwiZm9yd2FyZHNcIiBvciBcImJhY2t3YXJkc1wiPycsbCk7dm9pZCAwPT09YXx8U2NbYV18fChcImNvbGxhcHNlZFwiIT09YSYmXCJoaWRkZW5cIiE9PWE/KFNjW2FdPSEwLGNvbnNvbGUuZXJyb3IoJ1wiJXNcIiBpcyBub3QgYSBzdXBwb3J0ZWQgdmFsdWUgZm9yIHRhaWwgb24gPFN1c3BlbnNlTGlzdCAvPi4gRGlkIHlvdSBtZWFuIFwiY29sbGFwc2VkXCIgb3IgXCJoaWRkZW5cIj8nLGEpKTpcImZvcndhcmRzXCIhPT1sJiZcImJhY2t3YXJkc1wiIT09bCYmKFNjW2FdPSEwLGNvbnNvbGUuZXJyb3IoJzxTdXNwZW5zZUxpc3QgdGFpbD1cIiVzXCIgLz4gaXMgb25seSB2YWxpZCBpZiByZXZlYWxPcmRlciBpcyBcImZvcndhcmRzXCIgb3IgXCJiYWNrd2FyZHNcIi4gRGlkIHlvdSBtZWFuIHRvIHNwZWNpZnkgcmV2ZWFsT3JkZXI9XCJmb3J3YXJkc1wiPycsYSkpKTtlOmlmKChcImZvcndhcmRzXCI9PT1sfHxcImJhY2t3YXJkc1wiPT09bCkmJm51bGwhPXImJiExIT09cilpZihsbyhyKSl7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspaWYoIUd0KHJbb10sbykpYnJlYWsgZX1lbHNlIGlmKG89aShyKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvKXtpZihvPW8uY2FsbChyKSlmb3IodmFyIHU9by5uZXh0KCkscz0wOyF1LmRvbmU7dT1vLm5leHQoKSl7aWYoIUd0KHUudmFsdWUscykpYnJlYWsgZTtzKyt9fWVsc2UgY29uc29sZS5lcnJvcignQSBzaW5nbGUgcm93IHdhcyBwYXNzZWQgdG8gYSA8U3VzcGVuc2VMaXN0IHJldmVhbE9yZGVyPVwiJXNcIiAvPi4gVGhpcyBpcyBub3QgdXNlZnVsIHNpbmNlIGl0IG5lZWRzIG11bHRpcGxlIHJvd3MuIERpZCB5b3UgbWVhbiB0byBwYXNzIG11bHRpcGxlIGNoaWxkcmVuIG9yIGFuIGFycmF5PycsbCk7aWYoTnQoZSxuLHIsdCksMCE9KChyPXZzLmN1cnJlbnQpJmJzKSlyPXImeXN8YnMsbi5mbGFnc3w9MTI4O2Vsc2V7aWYobnVsbCE9PWUmJjAhPSgxMjgmZS5mbGFncykpZTpmb3IoZT1uLmNoaWxkO251bGwhPT1lOyl7aWYoMTM9PT1lLnRhZyludWxsIT09ZS5tZW1vaXplZFN0YXRlJiZZdChlLHQsbik7ZWxzZSBpZigxOT09PWUudGFnKVl0KGUsdCxuKTtlbHNlIGlmKG51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lLGU9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09bilicmVhayBlO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1uKWJyZWFrIGU7ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuLGU9ZS5zaWJsaW5nfXImPXlzfXN3aXRjaChTKHZzLHIsbiksbCl7Y2FzZVwiZm9yd2FyZHNcIjpmb3IodD1uLmNoaWxkLGw9bnVsbDtudWxsIT09dDspbnVsbCE9PShlPXQuYWx0ZXJuYXRlKSYmbnVsbD09PSRlKGUpJiYobD10KSx0PXQuc2libGluZztudWxsPT09KHQ9bCk/KGw9bi5jaGlsZCxuLmNoaWxkPW51bGwpOihsPXQuc2libGluZyx0LnNpYmxpbmc9bnVsbCksSnQobiwhMSxsLHQsYSk7YnJlYWs7Y2FzZVwiYmFja3dhcmRzXCI6Zm9yKHQ9bnVsbCxsPW4uY2hpbGQsbi5jaGlsZD1udWxsO251bGwhPT1sOyl7aWYobnVsbCE9PShlPWwuYWx0ZXJuYXRlKSYmbnVsbD09PSRlKGUpKXtuLmNoaWxkPWw7YnJlYWt9ZT1sLnNpYmxpbmcsbC5zaWJsaW5nPXQsdD1sLGw9ZX1KdChuLCEwLHQsbnVsbCxhKTticmVhaztjYXNlXCJ0b2dldGhlclwiOkp0KG4sITEsbnVsbCxudWxsLHZvaWQgMCk7YnJlYWs7ZGVmYXVsdDpuLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gbi5jaGlsZH1mdW5jdGlvbiBYdChlLG4sdCl7aWYobnVsbCE9PWUmJihuLmRlcGVuZGVuY2llcz1lLmRlcGVuZGVuY2llcyksWHU9LTEsX2Z8PW4ubGFuZXMsMD09KHQmbi5jaGlsZExhbmVzKSl7aWYobnVsbD09PWUpcmV0dXJuIG51bGw7aWYob3IoZSxuLHQsITEpLDA9PSh0Jm4uY2hpbGRMYW5lcykpcmV0dXJuIG51bGx9aWYobnVsbCE9PWUmJm4uY2hpbGQhPT1lLmNoaWxkKXRocm93IEVycm9yKFwiUmVzdW1pbmcgd29yayBub3QgeWV0IGltcGxlbWVudGVkLlwiKTtpZihudWxsIT09bi5jaGlsZCl7Zm9yKHQ9ZmEoZT1uLmNoaWxkLGUucGVuZGluZ1Byb3BzKSxuLmNoaWxkPXQsdC5yZXR1cm49bjtudWxsIT09ZS5zaWJsaW5nOyllPWUuc2libGluZywodD10LnNpYmxpbmc9ZmEoZSxlLnBlbmRpbmdQcm9wcykpLnJldHVybj1uO3Quc2libGluZz1udWxsfXJldHVybiBuLmNoaWxkfWZ1bmN0aW9uIFp0KGUsbil7cmV0dXJuIDAhPShlLmxhbmVzJm4pfHwhKG51bGw9PT0oZT1lLmRlcGVuZGVuY2llcyl8fCF1cihlKSl9ZnVuY3Rpb24gZXIoZSxuLHQpe2lmKG4uX2RlYnVnTmVlZHNSZW1vdW50JiZudWxsIT09ZSl7dD1wYShuLnR5cGUsbi5rZXksbi5wZW5kaW5nUHJvcHMsbi5fZGVidWdPd25lcnx8bnVsbCxuLm1vZGUsbi5sYW5lcyk7dmFyIHI9bi5yZXR1cm47aWYobnVsbD09PXIpdGhyb3cgRXJyb3IoXCJDYW5ub3Qgc3dhcCB0aGUgcm9vdCBmaWJlci5cIik7aWYoZS5hbHRlcm5hdGU9bnVsbCxuLmFsdGVybmF0ZT1udWxsLHQuaW5kZXg9bi5pbmRleCx0LnNpYmxpbmc9bi5zaWJsaW5nLHQucmV0dXJuPW4ucmV0dXJuLHQucmVmPW4ucmVmLHQuX2RlYnVnSW5mbz1uLl9kZWJ1Z0luZm8sbj09PXIuY2hpbGQpci5jaGlsZD10O2Vsc2V7dmFyIGw9ci5jaGlsZDtpZihudWxsPT09bCl0aHJvdyBFcnJvcihcIkV4cGVjdGVkIHBhcmVudCB0byBoYXZlIGEgY2hpbGQuXCIpO2Zvcig7bC5zaWJsaW5nIT09bjspaWYobnVsbD09PShsPWwuc2libGluZykpdGhyb3cgRXJyb3IoXCJFeHBlY3RlZCB0byBmaW5kIHRoZSBwcmV2aW91cyBzaWJsaW5nLlwiKTtsLnNpYmxpbmc9dH1yZXR1cm4gbnVsbD09PShuPXIuZGVsZXRpb25zKT8oci5kZWxldGlvbnM9W2VdLHIuZmxhZ3N8PTE2KTpuLnB1c2goZSksdC5mbGFnc3w9Mix0fWlmKG51bGwhPT1lKWlmKGUubWVtb2l6ZWRQcm9wcyE9PW4ucGVuZGluZ1Byb3BzfHxuLnR5cGUhPT1lLnR5cGUpcGM9ITA7ZWxzZXtpZighWnQoZSx0KSYmMD09KDEyOCZuLmZsYWdzKSlyZXR1cm4gcGM9ITEsZnVuY3Rpb24oZSxuLHQpe3N3aXRjaChuLnRhZyl7Y2FzZSAzOlcobixuLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSx0cihuLFVjLGUubWVtb2l6ZWRTdGF0ZS5jYWNoZSk7YnJlYWs7Y2FzZSAyNzpjYXNlIDU6QShuKTticmVhaztjYXNlIDQ6VyhuLG4uc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6dHIobixuLnR5cGUsbi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEyOjAhPSh0Jm4uY2hpbGRMYW5lcykmJihuLmZsYWdzfD00KSxuLmZsYWdzfD0yMDQ4O3ZhciByPW4uc3RhdGVOb2RlO3IuZWZmZWN0RHVyYXRpb249LTAsci5wYXNzaXZlRWZmZWN0RHVyYXRpb249LTA7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09KHI9bi5tZW1vaXplZFN0YXRlKSlyZXR1cm4gbnVsbCE9PXIuZGVoeWRyYXRlZD8oUWUobiksbi5mbGFnc3w9MTI4LG51bGwpOjAhPSh0Jm4uY2hpbGQuY2hpbGRMYW5lcyk/QnQoZSxuLHQpOihRZShuKSxudWxsIT09KGU9WHQoZSxuLHQpKT9lLnNpYmxpbmc6bnVsbCk7UWUobik7YnJlYWs7Y2FzZSAxOTp2YXIgbD0wIT0oMTI4JmUuZmxhZ3MpO2lmKChyPTAhPSh0Jm4uY2hpbGRMYW5lcykpfHwob3IoZSxuLHQsITEpLHI9MCE9KHQmbi5jaGlsZExhbmVzKSksbCl7aWYocilyZXR1cm4gS3QoZSxuLHQpO24uZmxhZ3N8PTEyOH1pZihudWxsIT09KGw9bi5tZW1vaXplZFN0YXRlKSYmKGwucmVuZGVyaW5nPW51bGwsbC50YWlsPW51bGwsbC5sYXN0RWZmZWN0PW51bGwpLFModnMsdnMuY3VycmVudCxuKSxyKWJyZWFrO3JldHVybiBudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gbi5sYW5lcz0wLEl0KGUsbix0KTtjYXNlIDI0OnRyKG4sVWMsZS5tZW1vaXplZFN0YXRlLmNhY2hlKX1yZXR1cm4gWHQoZSxuLHQpfShlLG4sdCk7cGM9MCE9KDEzMTA3MiZlLmZsYWdzKX1lbHNlIHBjPSExLChyPUJ1KSYmKEYoKSxyPTAhPSgxMDQ4NTc2Jm4uZmxhZ3MpKSxyJiYocj1uLmluZGV4LEYoKSxmdW5jdGlvbihlLG4sdCl7RigpLEl1W0Z1KytdPVd1LEl1W0Z1KytdPUh1LEl1W0Z1KytdPU11LE11PWU7dmFyIHI9V3U7ZT1IdTt2YXIgbD0zMi1jdShyKS0xO3ImPX4oMTw8bCksdCs9MTt2YXIgYT0zMi1jdShuKStsO2lmKDMwPGEpe3ZhciBvPWwtbCU1O2E9KHImKDE8PG8pLTEpLnRvU3RyaW5nKDMyKSxyPj49byxsLT1vLFd1PTE8PDMyLWN1KG4pK2x8dDw8bHxyLEh1PWErZX1lbHNlIFd1PTE8PGF8dDw8bHxyLEh1PWV9KG4sRHUscikpO3N3aXRjaChuLmxhbmVzPTAsbi50YWcpe2Nhc2UgMTY6ZTp7aWYocj1uLnBlbmRpbmdQcm9wcyxlPXRzKG4uZWxlbWVudFR5cGUpLG4udHlwZT1lLFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpe2lmKG51bGwhPWUpe2lmKChsPWUuJCR0eXBlb2YpPT09QWEpe24udGFnPTExLG4udHlwZT1lLG49THQobnVsbCxuLGUscix0KTticmVhayBlfWlmKGw9PT1CYSl7bi50YWc9MTQsbj1VdChudWxsLG4sZSxyLHQpO2JyZWFrIGV9fXRocm93IG49XCJcIixudWxsIT09ZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUuJCR0eXBlb2Y9PT1WYSYmKG49XCIgRGlkIHlvdSB3cmFwIGEgY29tcG9uZW50IGluIFJlYWN0LmxhenkoKSBtb3JlIHRoYW4gb25jZT9cIiksZT1zKGUpfHxlLEVycm9yKFwiRWxlbWVudCB0eXBlIGlzIGludmFsaWQuIFJlY2VpdmVkIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvOiBcIitlK1wiLiBMYXp5IGVsZW1lbnQgdHlwZSBtdXN0IHJlc29sdmUgdG8gYSBjbGFzcyBvciBmdW5jdGlvbi5cIituKX1jYShlKT8ocj1DdChlLHIpLG4udGFnPTEsbi50eXBlPWUsbj1qdChudWxsLG4sZSxyLHQpKToobi50YWc9MCxBdChuLGUpLG4udHlwZT1lLG49V3QobnVsbCxuLGUscix0KSl9cmV0dXJuIG47Y2FzZSAwOnJldHVybiBXdChlLG4sbi50eXBlLG4ucGVuZGluZ1Byb3BzLHQpO2Nhc2UgMTpyZXR1cm4ganQoZSxuLHI9bi50eXBlLGw9Q3QocixuLnBlbmRpbmdQcm9wcyksdCk7Y2FzZSAzOmlmKFcobixuLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxudWxsPT09ZSl0aHJvdyBFcnJvcihcIlNob3VsZCBoYXZlIGEgY3VycmVudCBmaWJlci4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC5cIik7dmFyIGE9bi5wZW5kaW5nUHJvcHM7cj0obD1uLm1lbW9pemVkU3RhdGUpLmVsZW1lbnQsaGUoZSxuKSxrZShuLGEsbnVsbCx0KTt2YXIgbz1uLm1lbW9pemVkU3RhdGU7cmV0dXJuIGE9by5jYWNoZSx0cihuLFVjLGEpLGEhPT1sLmNhY2hlJiZhcihuLFtVY10sdCwhMCksU2UoKSwoYT1vLmVsZW1lbnQpIT09cj8oTnQoZSxuLGEsdCksbj1uLmNoaWxkKTpuPVh0KGUsbix0KSxuO2Nhc2UgMjY6Y2FzZSAyNzpjYXNlIDU6cmV0dXJuIEEobiksbD1uLnR5cGUsYT1uLnBlbmRpbmdQcm9wcyxvPW51bGwhPT1lP2UubWVtb2l6ZWRQcm9wczpudWxsLHI9YS5jaGlsZHJlbixtbyhsLGEpP3I9bnVsbDpudWxsIT09byYmbW8obCxvKSYmKG4uZmxhZ3N8PTMyKSxudWxsIT09bi5tZW1vaXplZFN0YXRlJiYobD1aZShlLG4sdG4sbnVsbCxudWxsLHQpLFVvLl9jdXJyZW50VmFsdWUyPWwpLE10KGUsbiksTnQoZSxuLHIsdCksbi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw7Y2FzZSAxMzpyZXR1cm4gQnQoZSxuLHQpO2Nhc2UgNDpyZXR1cm4gVyhuLG4uc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHI9bi5wZW5kaW5nUHJvcHMsbnVsbD09PWU/bi5jaGlsZD1mcyhuLG51bGwscix0KTpOdChlLG4scix0KSxuLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIEx0KGUsbixuLnR5cGUsbi5wZW5kaW5nUHJvcHMsdCk7Y2FzZSA3OnJldHVybiBOdChlLG4sbi5wZW5kaW5nUHJvcHMsdCksbi5jaGlsZDtjYXNlIDg6cmV0dXJuIE50KGUsbixuLnBlbmRpbmdQcm9wcy5jaGlsZHJlbix0KSxuLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIG4uZmxhZ3N8PTQsbi5mbGFnc3w9MjA0OCwocj1uLnN0YXRlTm9kZSkuZWZmZWN0RHVyYXRpb249LTAsci5wYXNzaXZlRWZmZWN0RHVyYXRpb249LTAsTnQoZSxuLG4ucGVuZGluZ1Byb3BzLmNoaWxkcmVuLHQpLG4uY2hpbGQ7Y2FzZSAxMDpyZXR1cm4gcj1uLnR5cGUsYT0obD1uLnBlbmRpbmdQcm9wcykudmFsdWUsXCJ2YWx1ZVwiaW4gbHx8d2N8fCh3Yz0hMCxjb25zb2xlLmVycm9yKFwiVGhlIGB2YWx1ZWAgcHJvcCBpcyByZXF1aXJlZCBmb3IgdGhlIGA8Q29udGV4dC5Qcm92aWRlcj5gLiBEaWQgeW91IG1pc3NwZWxsIGl0IG9yIGZvcmdldCB0byBwYXNzIGl0P1wiKSksdHIobixyLGEpLE50KGUsbixsLmNoaWxkcmVuLHQpLG4uY2hpbGQ7Y2FzZSA5OnJldHVybiBsPW4udHlwZS5fY29udGV4dCxcImZ1bmN0aW9uXCIhPXR5cGVvZihyPW4ucGVuZGluZ1Byb3BzLmNoaWxkcmVuKSYmY29uc29sZS5lcnJvcihcIkEgY29udGV4dCBjb25zdW1lciB3YXMgcmVuZGVyZWQgd2l0aCBtdWx0aXBsZSBjaGlsZHJlbiwgb3IgYSBjaGlsZCB0aGF0IGlzbid0IGEgZnVuY3Rpb24uIEEgY29udGV4dCBjb25zdW1lciBleHBlY3RzIGEgc2luZ2xlIGNoaWxkIHRoYXQgaXMgYSBmdW5jdGlvbi4gSWYgeW91IGRpZCBwYXNzIGEgZnVuY3Rpb24sIG1ha2Ugc3VyZSB0aGVyZSBpcyBubyB0cmFpbGluZyBvciBsZWFkaW5nIHdoaXRlc3BhY2UgYXJvdW5kIGl0LlwiKSxpcihuKSxsPXNyKGwpLHI9amkocixsLHZvaWQgMCksbi5mbGFnc3w9MSxOdChlLG4scix0KSxuLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIFV0KGUsbixuLnR5cGUsbi5wZW5kaW5nUHJvcHMsdCk7Y2FzZSAxNTpyZXR1cm4gRHQoZSxuLG4udHlwZSxuLnBlbmRpbmdQcm9wcyx0KTtjYXNlIDE5OnJldHVybiBLdChlLG4sdCk7Y2FzZSAyMjpyZXR1cm4gSXQoZSxuLHQpO2Nhc2UgMjQ6cmV0dXJuIGlyKG4pLHI9c3IoVWMpLG51bGw9PT1lPyhudWxsPT09KGw9aHIoKSkmJihsPWNmLGE9ZHIoKSxsLnBvb2xlZENhY2hlPWEscHIoYSksbnVsbCE9PWEmJihsLnBvb2xlZENhY2hlTGFuZXN8PXQpLGw9YSksbi5tZW1vaXplZFN0YXRlPXtwYXJlbnQ6cixjYWNoZTpsfSxtZShuKSx0cihuLFVjLGwpKTooMCE9KGUubGFuZXMmdCkmJihoZShlLG4pLGtlKG4sbnVsbCxudWxsLHQpLFNlKCkpLGw9ZS5tZW1vaXplZFN0YXRlLGE9bi5tZW1vaXplZFN0YXRlLGwucGFyZW50IT09cj8obD17cGFyZW50OnIsY2FjaGU6cn0sbi5tZW1vaXplZFN0YXRlPWwsMD09PW4ubGFuZXMmJihuLm1lbW9pemVkU3RhdGU9bi51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9bCksdHIobixVYyxyKSk6KHI9YS5jYWNoZSx0cihuLFVjLHIpLHIhPT1sLmNhY2hlJiZhcihuLFtVY10sdCwhMCkpKSxOdChlLG4sbi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sdCksbi5jaGlsZDtjYXNlIDI5OnRocm93IG4ucGVuZGluZ1Byb3BzfXRocm93IEVycm9yKFwiVW5rbm93biB1bml0IG9mIHdvcmsgdGFnIChcIituLnRhZytcIikuIFRoaXMgZXJyb3IgaXMgbGlrZWx5IGNhdXNlZCBieSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpfWZ1bmN0aW9uIG5yKCl7X2M9UGM9RWM9bnVsbCxSYz0hMX1mdW5jdGlvbiB0cihlLG4sdCl7Uyh4YyxuLl9jdXJyZW50VmFsdWUyLGUpLG4uX2N1cnJlbnRWYWx1ZTI9dCxTKHpjLG4uX2N1cnJlbnRSZW5kZXJlcjIsZSksdm9pZCAwIT09bi5fY3VycmVudFJlbmRlcmVyMiYmbnVsbCE9PW4uX2N1cnJlbnRSZW5kZXJlcjImJm4uX2N1cnJlbnRSZW5kZXJlcjIhPT1DYyYmY29uc29sZS5lcnJvcihcIkRldGVjdGVkIG11bHRpcGxlIHJlbmRlcmVycyBjb25jdXJyZW50bHkgcmVuZGVyaW5nIHRoZSBzYW1lIGNvbnRleHQgcHJvdmlkZXIuIFRoaXMgaXMgY3VycmVudGx5IHVuc3VwcG9ydGVkLlwiKSxuLl9jdXJyZW50UmVuZGVyZXIyPUNjfWZ1bmN0aW9uIHJyKGUsbil7dmFyIHQ9eGMuY3VycmVudDtlLl9jdXJyZW50VmFsdWUyPXQsdD16Yy5jdXJyZW50LHYoemMsbiksZS5fY3VycmVudFJlbmRlcmVyMj10LHYoeGMsbil9ZnVuY3Rpb24gbHIoZSxuLHQpe2Zvcig7bnVsbCE9PWU7KXt2YXIgcj1lLmFsdGVybmF0ZTtpZigoZS5jaGlsZExhbmVzJm4pIT09bj8oZS5jaGlsZExhbmVzfD1uLG51bGwhPT1yJiYoci5jaGlsZExhbmVzfD1uKSk6bnVsbCE9PXImJihyLmNoaWxkTGFuZXMmbikhPT1uJiYoci5jaGlsZExhbmVzfD1uKSxlPT09dClicmVhaztlPWUucmV0dXJufWUhPT10JiZjb25zb2xlLmVycm9yKFwiRXhwZWN0ZWQgdG8gZmluZCB0aGUgcHJvcGFnYXRpb24gcm9vdCB3aGVuIHNjaGVkdWxpbmcgY29udGV4dCB3b3JrLiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKX1mdW5jdGlvbiBhcihlLG4sdCxyKXt2YXIgbD1lLmNoaWxkO2ZvcihudWxsIT09bCYmKGwucmV0dXJuPWUpO251bGwhPT1sOyl7dmFyIGE9bC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWEpe3ZhciBvPWwuY2hpbGQ7YT1hLmZpcnN0Q29udGV4dDtlOmZvcig7bnVsbCE9PWE7KXt2YXIgdT1hO2E9bDtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKylpZih1LmNvbnRleHQ9PT1uW2ldKXthLmxhbmVzfD10LG51bGwhPT0odT1hLmFsdGVybmF0ZSkmJih1LmxhbmVzfD10KSxscihhLnJldHVybix0LGUpLHJ8fChvPW51bGwpO2JyZWFrIGV9YT11Lm5leHR9fWVsc2UgaWYoMTg9PT1sLnRhZyl7aWYobnVsbD09PShvPWwucmV0dXJuKSl0aHJvdyBFcnJvcihcIldlIGp1c3QgY2FtZSBmcm9tIGEgcGFyZW50IHNvIHdlIG11c3QgaGF2ZSBoYWQgYSBwYXJlbnQuIFRoaXMgaXMgYSBidWcgaW4gUmVhY3QuXCIpO28ubGFuZXN8PXQsbnVsbCE9PShhPW8uYWx0ZXJuYXRlKSYmKGEubGFuZXN8PXQpLGxyKG8sdCxlKSxvPW51bGx9ZWxzZSBvPWwuY2hpbGQ7aWYobnVsbCE9PW8pby5yZXR1cm49bDtlbHNlIGZvcihvPWw7bnVsbCE9PW87KXtpZihvPT09ZSl7bz1udWxsO2JyZWFrfWlmKG51bGwhPT0obD1vLnNpYmxpbmcpKXtsLnJldHVybj1vLnJldHVybixvPWw7YnJlYWt9bz1vLnJldHVybn1sPW99fWZ1bmN0aW9uIG9yKGUsbix0LHIpe2U9bnVsbDtmb3IodmFyIGw9bixhPSExO251bGwhPT1sOyl7aWYoIWEpaWYoMCE9KDUyNDI4OCZsLmZsYWdzKSlhPSEwO2Vsc2UgaWYoMCE9KDI2MjE0NCZsLmZsYWdzKSlicmVhaztpZigxMD09PWwudGFnKXt2YXIgbz1sLmFsdGVybmF0ZTtpZihudWxsPT09byl0aHJvdyBFcnJvcihcIlNob3VsZCBoYXZlIGEgY3VycmVudCBmaWJlci4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC5cIik7aWYobnVsbCE9PShvPW8ubWVtb2l6ZWRQcm9wcykpe3ZhciB1PWwudHlwZTtSdShsLnBlbmRpbmdQcm9wcy52YWx1ZSxvLnZhbHVlKXx8KG51bGwhPT1lP2UucHVzaCh1KTplPVt1XSl9fWVsc2UgaWYobD09PU91LmN1cnJlbnQpe2lmKG51bGw9PT0obz1sLmFsdGVybmF0ZSkpdGhyb3cgRXJyb3IoXCJTaG91bGQgaGF2ZSBhIGN1cnJlbnQgZmliZXIuIFRoaXMgaXMgYSBidWcgaW4gUmVhY3QuXCIpO28ubWVtb2l6ZWRTdGF0ZS5tZW1vaXplZFN0YXRlIT09bC5tZW1vaXplZFN0YXRlLm1lbW9pemVkU3RhdGUmJihudWxsIT09ZT9lLnB1c2goVW8pOmU9W1VvXSl9bD1sLnJldHVybn1udWxsIT09ZSYmYXIobixlLHQsciksbi5mbGFnc3w9MjYyMTQ0fWZ1bmN0aW9uIHVyKGUpe2ZvcihlPWUuZmlyc3RDb250ZXh0O251bGwhPT1lOyl7dmFyIG49ZS5jb250ZXh0O2lmKCFSdShuLl9jdXJyZW50VmFsdWUyLGUubWVtb2l6ZWRWYWx1ZSkpcmV0dXJuITA7ZT1lLm5leHR9cmV0dXJuITF9ZnVuY3Rpb24gaXIoZSl7RWM9ZSxfYz1QYz1udWxsLG51bGwhPT0oZT1lLmRlcGVuZGVuY2llcykmJihlLmZpcnN0Q29udGV4dD1udWxsKX1mdW5jdGlvbiBzcihlKXtyZXR1cm4gUmMmJmNvbnNvbGUuZXJyb3IoXCJDb250ZXh0IGNhbiBvbmx5IGJlIHJlYWQgd2hpbGUgUmVhY3QgaXMgcmVuZGVyaW5nLiBJbiBjbGFzc2VzLCB5b3UgY2FuIHJlYWQgaXQgaW4gdGhlIHJlbmRlciBtZXRob2Qgb3IgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLiBJbiBmdW5jdGlvbiBjb21wb25lbnRzLCB5b3UgY2FuIHJlYWQgaXQgZGlyZWN0bHkgaW4gdGhlIGZ1bmN0aW9uIGJvZHksIGJ1dCBub3QgaW5zaWRlIEhvb2tzIGxpa2UgdXNlUmVkdWNlcigpIG9yIHVzZU1lbW8oKS5cIiksZnIoRWMsZSl9ZnVuY3Rpb24gY3IoZSxuKXtyZXR1cm4gbnVsbD09PUVjJiZpcihlKSxmcihlLG4pfWZ1bmN0aW9uIGZyKGUsbil7dmFyIHQ9bi5fY3VycmVudFZhbHVlMjtpZihfYyE9PW4paWYobj17Y29udGV4dDpuLG1lbW9pemVkVmFsdWU6dCxuZXh0Om51bGx9LG51bGw9PT1QYyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IoXCJDb250ZXh0IGNhbiBvbmx5IGJlIHJlYWQgd2hpbGUgUmVhY3QgaXMgcmVuZGVyaW5nLiBJbiBjbGFzc2VzLCB5b3UgY2FuIHJlYWQgaXQgaW4gdGhlIHJlbmRlciBtZXRob2Qgb3IgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLiBJbiBmdW5jdGlvbiBjb21wb25lbnRzLCB5b3UgY2FuIHJlYWQgaXQgZGlyZWN0bHkgaW4gdGhlIGZ1bmN0aW9uIGJvZHksIGJ1dCBub3QgaW5zaWRlIEhvb2tzIGxpa2UgdXNlUmVkdWNlcigpIG9yIHVzZU1lbW8oKS5cIik7UGM9bixlLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6bixfZGVidWdUaGVuYWJsZVN0YXRlOm51bGx9LGUuZmxhZ3N8PTUyNDI4OH1lbHNlIFBjPVBjLm5leHQ9bjtyZXR1cm4gdH1mdW5jdGlvbiBkcigpe3JldHVybntjb250cm9sbGVyOm5ldyBUYyxkYXRhOm5ldyBNYXAscmVmQ291bnQ6MH19ZnVuY3Rpb24gcHIoZSl7ZS5jb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkJiZjb25zb2xlLndhcm4oXCJBIGNhY2hlIGluc3RhbmNlIHdhcyByZXRhaW5lZCBhZnRlciBpdCB3YXMgYWxyZWFkeSBmcmVlZC4gVGhpcyBsaWtlbHkgaW5kaWNhdGVzIGEgYnVnIGluIFJlYWN0LlwiKSxlLnJlZkNvdW50Kyt9ZnVuY3Rpb24gbXIoZSl7ZS5yZWZDb3VudC0tLDA+ZS5yZWZDb3VudCYmY29uc29sZS53YXJuKFwiQSBjYWNoZSBpbnN0YW5jZSB3YXMgcmVsZWFzZWQgYWZ0ZXIgaXQgd2FzIGFscmVhZHkgZnJlZWQuIFRoaXMgbGlrZWx5IGluZGljYXRlcyBhIGJ1ZyBpbiBSZWFjdC5cIiksMD09PWUucmVmQ291bnQmJk5jKExjLChmdW5jdGlvbigpe2UuY29udHJvbGxlci5hYm9ydCgpfSkpfWZ1bmN0aW9uIGhyKCl7dmFyIGU9SWMuY3VycmVudDtyZXR1cm4gbnVsbCE9PWU/ZTpjZi5wb29sZWRDYWNoZX1mdW5jdGlvbiBncihlLG4pe1MoSWMsbnVsbD09PW4/SWMuY3VycmVudDpuLnBvb2wsZSl9ZnVuY3Rpb24geXIoKXt2YXIgZT1ocigpO3JldHVybiBudWxsPT09ZT9udWxsOntwYXJlbnQ6VWMuX2N1cnJlbnRWYWx1ZTIscG9vbDplfX1mdW5jdGlvbiBicihlKXtlLmZsYWdzfD00fWZ1bmN0aW9uIHZyKGUsbil7bnVsbCE9PW4mJihlLmZsYWdzfD00KSwxNjM4NCZlLmZsYWdzJiYobj0yMiE9PWUudGFnP0MoKTo1MzY4NzA5MTIsZS5sYW5lc3w9bil9ZnVuY3Rpb24gU3IoZSxuKXtzd2l0Y2goZS50YWlsTW9kZSl7Y2FzZVwiaGlkZGVuXCI6bj1lLnRhaWw7Zm9yKHZhciB0PW51bGw7bnVsbCE9PW47KW51bGwhPT1uLmFsdGVybmF0ZSYmKHQ9biksbj1uLnNpYmxpbmc7bnVsbD09PXQ/ZS50YWlsPW51bGw6dC5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZVwiY29sbGFwc2VkXCI6dD1lLnRhaWw7Zm9yKHZhciByPW51bGw7bnVsbCE9PXQ7KW51bGwhPT10LmFsdGVybmF0ZSYmKHI9dCksdD10LnNpYmxpbmc7bnVsbD09PXI/bnx8bnVsbD09PWUudGFpbD9lLnRhaWw9bnVsbDplLnRhaWwuc2libGluZz1udWxsOnIuc2libGluZz1udWxsfX1mdW5jdGlvbiBrcihlKXt2YXIgbj1udWxsIT09ZS5hbHRlcm5hdGUmJmUuYWx0ZXJuYXRlLmNoaWxkPT09ZS5jaGlsZCx0PTAscj0wO2lmKG4paWYoKDImZS5tb2RlKSE9PSR1KXtmb3IodmFyIGw9ZS5zZWxmQmFzZUR1cmF0aW9uLGE9ZS5jaGlsZDtudWxsIT09YTspdHw9YS5sYW5lc3xhLmNoaWxkTGFuZXMscnw9MzE0NTcyODAmYS5zdWJ0cmVlRmxhZ3Mscnw9MzE0NTcyODAmYS5mbGFncyxsKz1hLnRyZWVCYXNlRHVyYXRpb24sYT1hLnNpYmxpbmc7ZS50cmVlQmFzZUR1cmF0aW9uPWx9ZWxzZSBmb3IobD1lLmNoaWxkO251bGwhPT1sOyl0fD1sLmxhbmVzfGwuY2hpbGRMYW5lcyxyfD0zMTQ1NzI4MCZsLnN1YnRyZWVGbGFncyxyfD0zMTQ1NzI4MCZsLmZsYWdzLGwucmV0dXJuPWUsbD1sLnNpYmxpbmc7ZWxzZSBpZigoMiZlLm1vZGUpIT09JHUpe2w9ZS5hY3R1YWxEdXJhdGlvbixhPWUuc2VsZkJhc2VEdXJhdGlvbjtmb3IodmFyIG89ZS5jaGlsZDtudWxsIT09bzspdHw9by5sYW5lc3xvLmNoaWxkTGFuZXMscnw9by5zdWJ0cmVlRmxhZ3Mscnw9by5mbGFncyxsKz1vLmFjdHVhbER1cmF0aW9uLGErPW8udHJlZUJhc2VEdXJhdGlvbixvPW8uc2libGluZztlLmFjdHVhbER1cmF0aW9uPWwsZS50cmVlQmFzZUR1cmF0aW9uPWF9ZWxzZSBmb3IobD1lLmNoaWxkO251bGwhPT1sOyl0fD1sLmxhbmVzfGwuY2hpbGRMYW5lcyxyfD1sLnN1YnRyZWVGbGFncyxyfD1sLmZsYWdzLGwucmV0dXJuPWUsbD1sLnNpYmxpbmc7cmV0dXJuIGUuc3VidHJlZUZsYWdzfD1yLGUuY2hpbGRMYW5lcz10LG59ZnVuY3Rpb24gd3IoZSxuLHQpe3ZhciByPW4ucGVuZGluZ1Byb3BzO3N3aXRjaChJKG4pLG4udGFnKXtjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OmNhc2UgMTpyZXR1cm4ga3IobiksbnVsbDtjYXNlIDM6cmV0dXJuIHQ9bi5zdGF0ZU5vZGUscj1udWxsLG51bGwhPT1lJiYocj1lLm1lbW9pemVkU3RhdGUuY2FjaGUpLG4ubWVtb2l6ZWRTdGF0ZS5jYWNoZSE9PXImJihuLmZsYWdzfD0yMDQ4KSxycihVYyxuKSxIKG4pLHQucGVuZGluZ0NvbnRleHQmJih0LmNvbnRleHQ9dC5wZW5kaW5nQ29udGV4dCx0LnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1lJiZudWxsIT09ZS5jaGlsZHx8bnVsbD09PWV8fGUubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJjA9PSgyNTYmbi5mbGFncyl8fChuLmZsYWdzfD0xMDI0LG51bGwhPT1WdSYmKFBsKFZ1KSxWdT1udWxsKSksa3IobiksbnVsbDtjYXNlIDI2OnZhciBsO2Nhc2UgMjc6Y2FzZSA1OmlmKFEobiksdD1uLnR5cGUsbnVsbCE9PWUmJm51bGwhPW4uc3RhdGVOb2RlKSFmdW5jdGlvbihlLG4sdCxyKXtlLm1lbW9pemVkUHJvcHMhPT1yJiZicihuKX0oZSxuLDAscik7ZWxzZXtpZighcil7aWYobnVsbD09PW4uc3RhdGVOb2RlKXRocm93IEVycm9yKFwiV2UgbXVzdCBoYXZlIG5ldyBwcm9wcyBmb3IgbmV3IG1vdW50cy4gVGhpcyBlcnJvciBpcyBsaWtlbHkgY2F1c2VkIGJ5IGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIik7cmV0dXJuIGtyKG4pLG51bGx9ZT1qKCksbD1NKFF1LmN1cnJlbnQpLGZ1bmN0aW9uKGUsbix0LHIpe2Zvcih0PW4uY2hpbGQ7bnVsbCE9PXQ7KXtpZig1PT09dC50YWd8fDY9PT10LnRhZylmbyhlLHQuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT10LnRhZyYmIWF1JiZudWxsIT09dC5jaGlsZCl7dC5jaGlsZC5yZXR1cm49dCx0PXQuY2hpbGQ7Y29udGludWV9aWYodD09PW4pYnJlYWs7Zm9yKDtudWxsPT09dC5zaWJsaW5nOyl7aWYobnVsbD09PXQucmV0dXJufHx0LnJldHVybj09PW4pcmV0dXJuO3Q9dC5yZXR1cm59dC5zaWJsaW5nLnJldHVybj10LnJldHVybix0PXQuc2libGluZ319KGw9Y28odCxyLGwsZSxuKSxuLCExKSxuLnN0YXRlTm9kZT1sLHBvKGwsdCxyLGUpJiZicihuKX1yZXR1cm4ga3IobiksZnVuY3Rpb24oZSxuLHQpe2lmKFBvKG4sdCkpe2lmKGUuZmxhZ3N8PTE2Nzc3MjE2LCFfbyhuLHQpKXtpZighRGwoKSl0aHJvdyBNaT1GaSxJaTtlLmZsYWdzfD04MTkyfX1lbHNlIGUuZmxhZ3MmPS0xNjc3NzIxN30obixuLnR5cGUsbi5wZW5kaW5nUHJvcHMpLG51bGw7Y2FzZSA2OmlmKGUmJm51bGwhPW4uc3RhdGVOb2RlKSh0PWUubWVtb2l6ZWRQcm9wcykhPT1yJiZicihuKTtlbHNle2lmKFwic3RyaW5nXCIhPXR5cGVvZiByJiZudWxsPT09bi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoXCJXZSBtdXN0IGhhdmUgbmV3IHByb3BzIGZvciBuZXcgbW91bnRzLiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKTt2YXIgYTtlPU0oUXUuY3VycmVudCksdD1qKCksbi5zdGF0ZU5vZGU9aG8ocixlLHQsbil9cmV0dXJuIGtyKG4pLG51bGw7Y2FzZSAxMzppZihyPW4ubWVtb2l6ZWRTdGF0ZSxudWxsPT09ZXx8bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtpZihsPSExLG51bGwhPT1yJiZudWxsIT09ci5kZWh5ZHJhdGVkKXtpZihudWxsPT09ZSl7aWYoIWwpdGhyb3cgRXJyb3IoXCJBIGRlaHlkcmF0ZWQgc3VzcGVuc2UgY29tcG9uZW50IHdhcyBjb21wbGV0ZWQgd2l0aG91dCBhIGh5ZHJhdGVkIG5vZGUuIFRoaXMgaXMgcHJvYmFibHkgYSBidWcgaW4gUmVhY3QuXCIpO3Rocm93IEVycm9yKFwiRXhwZWN0ZWQgcHJlcGFyZVRvSHlkcmF0ZUhvc3RTdXNwZW5zZUluc3RhbmNlKCkgdG8gbmV2ZXIgYmUgY2FsbGVkLiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKX0wPT0oMTI4Jm4uZmxhZ3MpJiYobi5tZW1vaXplZFN0YXRlPW51bGwpLG4uZmxhZ3N8PTQsa3IobiksKDImbi5tb2RlKSE9PSR1JiZudWxsIT09ciYmbnVsbCE9PShsPW4uY2hpbGQpJiYobi50cmVlQmFzZUR1cmF0aW9uLT1sLnRyZWVCYXNlRHVyYXRpb24pLGw9ITF9ZWxzZSBudWxsIT09VnUmJihQbChWdSksVnU9bnVsbCksbD0hMDtpZighbClyZXR1cm4gMjU2Jm4uZmxhZ3M/KFZlKG4pLG4pOihWZShuKSxudWxsKX1yZXR1cm4gVmUobiksMCE9KDEyOCZuLmZsYWdzKT8obi5sYW5lcz10LCgyJm4ubW9kZSkhPT0kdSYmcmUobiksbik6KHQ9bnVsbCE9PXIsZT1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSx0JiYobD1udWxsLG51bGwhPT0ocj1uLmNoaWxkKS5hbHRlcm5hdGUmJm51bGwhPT1yLmFsdGVybmF0ZS5tZW1vaXplZFN0YXRlJiZudWxsIT09ci5hbHRlcm5hdGUubWVtb2l6ZWRTdGF0ZS5jYWNoZVBvb2wmJihsPXIuYWx0ZXJuYXRlLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sLnBvb2wpLGE9bnVsbCxudWxsIT09ci5tZW1vaXplZFN0YXRlJiZudWxsIT09ci5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbCYmKGE9ci5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbC5wb29sKSxhIT09bCYmKHIuZmxhZ3N8PTIwNDgpKSx0IT09ZSYmdCYmKG4uY2hpbGQuZmxhZ3N8PTgxOTIpLHZyKG4sbi51cGRhdGVRdWV1ZSksa3IobiksKDImbi5tb2RlKSE9PSR1JiZ0JiZudWxsIT09KGU9bi5jaGlsZCkmJihuLnRyZWVCYXNlRHVyYXRpb24tPWUudHJlZUJhc2VEdXJhdGlvbiksbnVsbCk7Y2FzZSA0OnJldHVybiBIKG4pLG51bGw9PT1lJiZrbyhuLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxrcihuKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJyKG4udHlwZSxuKSxrcihuKSxudWxsO2Nhc2UgMTk6aWYodih2cyxuKSxudWxsPT09KGw9bi5tZW1vaXplZFN0YXRlKSlyZXR1cm4ga3IobiksbnVsbDtpZihyPTAhPSgxMjgmbi5mbGFncyksbnVsbD09PShhPWwucmVuZGVyaW5nKSlpZihyKVNyKGwsITEpO2Vsc2V7aWYoUGYhPT1uZnx8bnVsbCE9PWUmJjAhPSgxMjgmZS5mbGFncykpZm9yKGU9bi5jaGlsZDtudWxsIT09ZTspe2lmKG51bGwhPT0oYT0kZShlKSkpe2ZvcihuLmZsYWdzfD0xMjgsU3IobCwhMSksZT1hLnVwZGF0ZVF1ZXVlLG4udXBkYXRlUXVldWU9ZSx2cihuLGUpLG4uc3VidHJlZUZsYWdzPTAsZT10LHQ9bi5jaGlsZDtudWxsIT09dDspZGEodCxlKSx0PXQuc2libGluZztyZXR1cm4gUyh2cyx2cy5jdXJyZW50JnlzfGJzLG4pLG4uY2hpbGR9ZT1lLnNpYmxpbmd9bnVsbCE9PWwudGFpbCYmdnUoKT5XZiYmKG4uZmxhZ3N8PTEyOCxyPSEwLFNyKGwsITEpLG4ubGFuZXM9NDE5NDMwNCl9ZWxzZXtpZighcilpZihudWxsIT09KGU9JGUoYSkpKXtpZihuLmZsYWdzfD0xMjgscj0hMCxlPWUudXBkYXRlUXVldWUsbi51cGRhdGVRdWV1ZT1lLHZyKG4sZSksU3IobCwhMCksbnVsbD09PWwudGFpbCYmXCJoaWRkZW5cIj09PWwudGFpbE1vZGUmJiFhLmFsdGVybmF0ZSlyZXR1cm4ga3IobiksbnVsbH1lbHNlIDIqdnUoKS1sLnJlbmRlcmluZ1N0YXJ0VGltZT5XZiYmNTM2ODcwOTEyIT09dCYmKG4uZmxhZ3N8PTEyOCxyPSEwLFNyKGwsITEpLG4ubGFuZXM9NDE5NDMwNCk7bC5pc0JhY2t3YXJkcz8oYS5zaWJsaW5nPW4uY2hpbGQsbi5jaGlsZD1hKToobnVsbCE9PShlPWwubGFzdCk/ZS5zaWJsaW5nPWE6bi5jaGlsZD1hLGwubGFzdD1hKX1yZXR1cm4gbnVsbCE9PWwudGFpbD8oZT1sLnRhaWwsbC5yZW5kZXJpbmc9ZSxsLnRhaWw9ZS5zaWJsaW5nLGwucmVuZGVyaW5nU3RhcnRUaW1lPXZ1KCksZS5zaWJsaW5nPW51bGwsdD12cy5jdXJyZW50LFModnMsdD1yP3QmeXN8YnM6dCZ5cyxuKSxlKTooa3IobiksbnVsbCk7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBWZShuKSxBZShuKSxyPW51bGwhPT1uLm1lbW9pemVkU3RhdGUsbnVsbCE9PWU/bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSE9PXImJihuLmZsYWdzfD04MTkyKTpyJiYobi5mbGFnc3w9ODE5Mikscj8wIT0oNTM2ODcwOTEyJnQpJiYwPT0oMTI4Jm4uZmxhZ3MpJiYoa3IobiksNiZuLnN1YnRyZWVGbGFncyYmKG4uZmxhZ3N8PTgxOTIpKTprcihuKSxudWxsIT09KHQ9bi51cGRhdGVRdWV1ZSkmJnZyKG4sdC5yZXRyeVF1ZXVlKSx0PW51bGwsbnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sJiYodD1lLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sLnBvb2wpLHI9bnVsbCxudWxsIT09bi5tZW1vaXplZFN0YXRlJiZudWxsIT09bi5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbCYmKHI9bi5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbC5wb29sKSxyIT09dCYmKG4uZmxhZ3N8PTIwNDgpLG51bGwhPT1lJiZ2KEljLG4pLG51bGw7Y2FzZSAyNDpyZXR1cm4gdD1udWxsLG51bGwhPT1lJiYodD1lLm1lbW9pemVkU3RhdGUuY2FjaGUpLG4ubWVtb2l6ZWRTdGF0ZS5jYWNoZSE9PXQmJihuLmZsYWdzfD0yMDQ4KSxycihVYyxuKSxrcihuKSxudWxsO2Nhc2UgMjU6cmV0dXJuIG51bGx9dGhyb3cgRXJyb3IoXCJVbmtub3duIHVuaXQgb2Ygd29yayB0YWcgKFwiK24udGFnK1wiKS4gVGhpcyBlcnJvciBpcyBsaWtlbHkgY2F1c2VkIGJ5IGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIil9ZnVuY3Rpb24geHIoZSxuKXtzd2l0Y2goSShuKSxuLnRhZyl7Y2FzZSAxOnJldHVybiA2NTUzNiYoZT1uLmZsYWdzKT8obi5mbGFncz0tNjU1MzcmZXwxMjgsKDImbi5tb2RlKSE9PSR1JiZyZShuKSxuKTpudWxsO2Nhc2UgMzpyZXR1cm4gcnIoVWMsbiksSChuKSwwIT0oNjU1MzYmKGU9bi5mbGFncykpJiYwPT0oMTI4JmUpPyhuLmZsYWdzPS02NTUzNyZlfDEyOCxuKTpudWxsO2Nhc2UgMjY6Y2FzZSAyNzpjYXNlIDU6cmV0dXJuIFEobiksbnVsbDtjYXNlIDEzOmlmKFZlKG4pLG51bGwhPT0oZT1uLm1lbW9pemVkU3RhdGUpJiZudWxsIT09ZS5kZWh5ZHJhdGVkJiZudWxsPT09bi5hbHRlcm5hdGUpdGhyb3cgRXJyb3IoXCJUaHJldyBpbiBuZXdseSBtb3VudGVkIGRlaHlkcmF0ZWQgY29tcG9uZW50LiBUaGlzIGlzIGxpa2VseSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpO3JldHVybiA2NTUzNiYoZT1uLmZsYWdzKT8obi5mbGFncz0tNjU1MzcmZXwxMjgsKDImbi5tb2RlKSE9PSR1JiZyZShuKSxuKTpudWxsO2Nhc2UgMTk6cmV0dXJuIHYodnMsbiksbnVsbDtjYXNlIDQ6cmV0dXJuIEgobiksbnVsbDtjYXNlIDEwOnJldHVybiBycihuLnR5cGUsbiksbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIFZlKG4pLEFlKG4pLG51bGwhPT1lJiZ2KEljLG4pLDY1NTM2JihlPW4uZmxhZ3MpPyhuLmZsYWdzPS02NTUzNyZlfDEyOCwoMiZuLm1vZGUpIT09JHUmJnJlKG4pLG4pOm51bGw7Y2FzZSAyNDpyZXR1cm4gcnIoVWMsbiksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiB6cihlLG4pe3N3aXRjaChJKG4pLG4udGFnKXtjYXNlIDM6cnIoVWMsbiksSChuKTticmVhaztjYXNlIDI2OmNhc2UgMjc6Y2FzZSA1OlEobik7YnJlYWs7Y2FzZSA0Okgobik7YnJlYWs7Y2FzZSAxMzpWZShuKTticmVhaztjYXNlIDE5OnYodnMsbik7YnJlYWs7Y2FzZSAxMDpycihuLnR5cGUsbik7YnJlYWs7Y2FzZSAyMjpjYXNlIDIzOlZlKG4pLEFlKG4pLG51bGwhPT1lJiZ2KEljLG4pO2JyZWFrO2Nhc2UgMjQ6cnIoVWMsbil9fWZ1bmN0aW9uIENyKGUpe3JldHVybigyJmUubW9kZSkhPT0kdX1mdW5jdGlvbiBFcihlLG4pe0NyKGUpPyh0ZSgpLF9yKG4sZSksbmUoKSk6X3IobixlKX1mdW5jdGlvbiBQcihlLG4sdCl7Q3IoZSk/KHRlKCksUnIodCxlLG4pLG5lKCkpOlJyKHQsZSxuKX1mdW5jdGlvbiBfcihlLG4pe3RyeXt2YXIgdD1uLnVwZGF0ZVF1ZXVlLHI9bnVsbCE9PXQ/dC5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PXIpe3ZhciBsPXIubmV4dDt0PWw7ZG97dmFyIGE7KHQudGFnJmUpPT09ZSYmKChlJnpzKSE9PVNzP251bGwhPT1QdSYmXCJmdW5jdGlvblwiPT10eXBlb2YgUHUubWFya0NvbXBvbmVudFBhc3NpdmVFZmZlY3RNb3VudFN0YXJ0ZWQmJlB1Lm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0TW91bnRTdGFydGVkKG4pOihlJnhzKSE9PVNzJiZudWxsIT09UHUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFB1Lm1hcmtDb21wb25lbnRMYXlvdXRFZmZlY3RNb3VudFN0YXJ0ZWQmJlB1Lm1hcmtDb21wb25lbnRMYXlvdXRFZmZlY3RNb3VudFN0YXJ0ZWQobikscj12b2lkIDAsKGUmd3MpIT09U3MmJihuZD0hMCkscj15KG4sWGksdCksKGUmd3MpIT09U3MmJihuZD0hMSksKGUmenMpIT09U3M/bnVsbCE9PVB1JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBQdS5tYXJrQ29tcG9uZW50UGFzc2l2ZUVmZmVjdE1vdW50U3RvcHBlZCYmUHUubWFya0NvbXBvbmVudFBhc3NpdmVFZmZlY3RNb3VudFN0b3BwZWQoKTooZSZ4cykhPT1TcyYmbnVsbCE9PVB1JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBQdS5tYXJrQ29tcG9uZW50TGF5b3V0RWZmZWN0TW91bnRTdG9wcGVkJiZQdS5tYXJrQ29tcG9uZW50TGF5b3V0RWZmZWN0TW91bnRTdG9wcGVkKCksdm9pZCAwIT09ciYmXCJmdW5jdGlvblwiIT10eXBlb2YgcikmJnkobiwoZnVuY3Rpb24oZSxuKXtjb25zb2xlLmVycm9yKFwiJXMgbXVzdCBub3QgcmV0dXJuIGFueXRoaW5nIGJlc2lkZXMgYSBmdW5jdGlvbiwgd2hpY2ggaXMgdXNlZCBmb3IgY2xlYW4tdXAuJXNcIixlLG4pfSksYT0wIT0odC50YWcmeHMpP1widXNlTGF5b3V0RWZmZWN0XCI6MCE9KHQudGFnJndzKT9cInVzZUluc2VydGlvbkVmZmVjdFwiOlwidXNlRWZmZWN0XCIsbnVsbD09PXI/XCIgWW91IHJldHVybmVkIG51bGwuIElmIHlvdXIgZWZmZWN0IGRvZXMgbm90IHJlcXVpcmUgY2xlYW4gdXAsIHJldHVybiB1bmRlZmluZWQgKG9yIG5vdGhpbmcpLlwiOlwiZnVuY3Rpb25cIj09dHlwZW9mIHIudGhlbj9cIlxcblxcbkl0IGxvb2tzIGxpa2UgeW91IHdyb3RlIFwiK2ErXCIoYXN5bmMgKCkgPT4gLi4uKSBvciByZXR1cm5lZCBhIFByb21pc2UuIEluc3RlYWQsIHdyaXRlIHRoZSBhc3luYyBmdW5jdGlvbiBpbnNpZGUgeW91ciBlZmZlY3QgYW5kIGNhbGwgaXQgaW1tZWRpYXRlbHk6XFxuXFxuXCIrYStcIigoKSA9PiB7XFxuICBhc3luYyBmdW5jdGlvbiBmZXRjaERhdGEoKSB7XFxuICAgIC8vIFlvdSBjYW4gYXdhaXQgaGVyZVxcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IE15QVBJLmdldERhdGEoc29tZUlkKTtcXG4gICAgLy8gLi4uXFxuICB9XFxuICBmZXRjaERhdGEoKTtcXG59LCBbc29tZUlkXSk7IC8vIE9yIFtdIGlmIGVmZmVjdCBkb2Vzbid0IG5lZWQgcHJvcHMgb3Igc3RhdGVcXG5cXG5MZWFybiBtb3JlIGFib3V0IGRhdGEgZmV0Y2hpbmcgd2l0aCBIb29rczogaHR0cHM6Ly9yZWFjdC5kZXYvbGluay9ob29rcy1kYXRhLWZldGNoaW5nXCI6XCIgWW91IHJldHVybmVkOiBcIityKSx0PXQubmV4dH13aGlsZSh0IT09bCl9fWNhdGNoKGUpe1hsKG4sbi5yZXR1cm4sZSl9fWZ1bmN0aW9uIFJyKGUsbix0KXt0cnl7dmFyIHI9bi51cGRhdGVRdWV1ZSxsPW51bGwhPT1yP3IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1sKXt2YXIgYT1sLm5leHQ7cj1hO2Rve2lmKChyLnRhZyZlKT09PWUpe3ZhciBvPXIuaW5zdCx1PW8uZGVzdHJveTt2b2lkIDAhPT11JiYoby5kZXN0cm95PXZvaWQgMCwoZSZ6cykhPT1Tcz9udWxsIT09UHUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFB1Lm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0VW5tb3VudFN0YXJ0ZWQmJlB1Lm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0VW5tb3VudFN0YXJ0ZWQobik6KGUmeHMpIT09U3MmJm51bGwhPT1QdSYmXCJmdW5jdGlvblwiPT10eXBlb2YgUHUubWFya0NvbXBvbmVudExheW91dEVmZmVjdFVubW91bnRTdGFydGVkJiZQdS5tYXJrQ29tcG9uZW50TGF5b3V0RWZmZWN0VW5tb3VudFN0YXJ0ZWQobiksKGUmd3MpIT09U3MmJihuZD0hMCkseShuLGVzLG4sdCx1KSwoZSZ3cykhPT1TcyYmKG5kPSExKSwoZSZ6cykhPT1Tcz9udWxsIT09UHUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFB1Lm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0VW5tb3VudFN0b3BwZWQmJlB1Lm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0VW5tb3VudFN0b3BwZWQoKTooZSZ4cykhPT1TcyYmbnVsbCE9PVB1JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBQdS5tYXJrQ29tcG9uZW50TGF5b3V0RWZmZWN0VW5tb3VudFN0b3BwZWQmJlB1Lm1hcmtDb21wb25lbnRMYXlvdXRFZmZlY3RVbm1vdW50U3RvcHBlZCgpKX1yPXIubmV4dH13aGlsZShyIT09YSl9fWNhdGNoKGUpe1hsKG4sbi5yZXR1cm4sZSl9fWZ1bmN0aW9uIFRyKGUsbil7Q3IoZSk/KHRlKCksX3IobixlKSxuZSgpKTpfcihuLGUpfWZ1bmN0aW9uIE5yKGUsbix0KXtDcihlKT8odGUoKSxScih0LGUsbiksbmUoKSk6UnIodCxlLG4pfWZ1bmN0aW9uIExyKGUpe3ZhciBuPWUudXBkYXRlUXVldWU7aWYobnVsbCE9PW4pe3ZhciB0PWUuc3RhdGVOb2RlO2UudHlwZS5kZWZhdWx0UHJvcHN8fFwicmVmXCJpbiBlLm1lbW9pemVkUHJvcHN8fGJjfHwodC5wcm9wcyE9PWUubWVtb2l6ZWRQcm9wcyYmY29uc29sZS5lcnJvcihcIkV4cGVjdGVkICVzIHByb3BzIHRvIG1hdGNoIG1lbW9pemVkIHByb3BzIGJlZm9yZSBwcm9jZXNzaW5nIHRoZSB1cGRhdGUgcXVldWUuIFRoaXMgbWlnaHQgZWl0aGVyIGJlIGJlY2F1c2Ugb2YgYSBidWcgaW4gUmVhY3QsIG9yIGJlY2F1c2UgYSBjb21wb25lbnQgcmVhc3NpZ25zIGl0cyBvd24gYHRoaXMucHJvcHNgLiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIixjKGUpfHxcImluc3RhbmNlXCIpLHQuc3RhdGUhPT1lLm1lbW9pemVkU3RhdGUmJmNvbnNvbGUuZXJyb3IoXCJFeHBlY3RlZCAlcyBzdGF0ZSB0byBtYXRjaCBtZW1vaXplZCBzdGF0ZSBiZWZvcmUgcHJvY2Vzc2luZyB0aGUgdXBkYXRlIHF1ZXVlLiBUaGlzIG1pZ2h0IGVpdGhlciBiZSBiZWNhdXNlIG9mIGEgYnVnIGluIFJlYWN0LCBvciBiZWNhdXNlIGEgY29tcG9uZW50IHJlYXNzaWducyBpdHMgb3duIGB0aGlzLnN0YXRlYC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIsYyhlKXx8XCJpbnN0YW5jZVwiKSk7dHJ5e3koZSx6ZSxuLHQpfWNhdGNoKG4pe1hsKGUsZS5yZXR1cm4sbil9fX1mdW5jdGlvbiBVcihlLG4sdCl7cmV0dXJuIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUobix0KX1mdW5jdGlvbiBEcihlLG4pe3ZhciB0PW4ubWVtb2l6ZWRQcm9wcyxyPW4ubWVtb2l6ZWRTdGF0ZTtuPWUuc3RhdGVOb2RlLGUudHlwZS5kZWZhdWx0UHJvcHN8fFwicmVmXCJpbiBlLm1lbW9pemVkUHJvcHN8fGJjfHwobi5wcm9wcyE9PWUubWVtb2l6ZWRQcm9wcyYmY29uc29sZS5lcnJvcihcIkV4cGVjdGVkICVzIHByb3BzIHRvIG1hdGNoIG1lbW9pemVkIHByb3BzIGJlZm9yZSBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZS4gVGhpcyBtaWdodCBlaXRoZXIgYmUgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBSZWFjdCwgb3IgYmVjYXVzZSBhIGNvbXBvbmVudCByZWFzc2lnbnMgaXRzIG93biBgdGhpcy5wcm9wc2AuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiLGMoZSl8fFwiaW5zdGFuY2VcIiksbi5zdGF0ZSE9PWUubWVtb2l6ZWRTdGF0ZSYmY29uc29sZS5lcnJvcihcIkV4cGVjdGVkICVzIHN0YXRlIHRvIG1hdGNoIG1lbW9pemVkIHN0YXRlIGJlZm9yZSBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZS4gVGhpcyBtaWdodCBlaXRoZXIgYmUgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBSZWFjdCwgb3IgYmVjYXVzZSBhIGNvbXBvbmVudCByZWFzc2lnbnMgaXRzIG93biBgdGhpcy5zdGF0ZWAuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiLGMoZSl8fFwiaW5zdGFuY2VcIikpO3RyeXt2YXIgbD1DdChlLnR5cGUsdCwoZS5lbGVtZW50VHlwZSxlLnR5cGUpKSxhPXkoZSxVcixuLGwscik7dD1GYyx2b2lkIDAhPT1hfHx0LmhhcyhlLnR5cGUpfHwodC5hZGQoZS50eXBlKSx5KGUsKGZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcihcIiVzLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKCk6IEEgc25hcHNob3QgdmFsdWUgKG9yIG51bGwpIG11c3QgYmUgcmV0dXJuZWQuIFlvdSBoYXZlIHJldHVybmVkIHVuZGVmaW5lZC5cIixjKGUpKX0pKSksbi5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1hfWNhdGNoKG4pe1hsKGUsZS5yZXR1cm4sbil9fWZ1bmN0aW9uIElyKGUsbix0KXt0LnByb3BzPUN0KGUudHlwZSxlLm1lbW9pemVkUHJvcHMpLHQuc3RhdGU9ZS5tZW1vaXplZFN0YXRlLENyKGUpPyh0ZSgpLHkoZSxKaSxlLG4sdCksbmUoKSk6eShlLEppLGUsbix0KX1mdW5jdGlvbiBGcihlKXt2YXIgbj1lLnJlZjtpZihudWxsIT09bil7dmFyIHQ9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDI2OmNhc2UgMjc6Y2FzZSA1OnQ9YW8odCl9aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbilpZihDcihlKSl0cnl7dGUoKSxlLnJlZkNsZWFudXA9bih0KX1maW5hbGx5e25lKCl9ZWxzZSBlLnJlZkNsZWFudXA9bih0KTtlbHNlXCJzdHJpbmdcIj09dHlwZW9mIG4/Y29uc29sZS5lcnJvcihcIlN0cmluZyByZWZzIGFyZSBubyBsb25nZXIgc3VwcG9ydGVkLlwiKTpuLmhhc093blByb3BlcnR5KFwiY3VycmVudFwiKXx8Y29uc29sZS5lcnJvcihcIlVuZXhwZWN0ZWQgcmVmIG9iamVjdCBwcm92aWRlZCBmb3IgJXMuIFVzZSBlaXRoZXIgYSByZWYtc2V0dGVyIGZ1bmN0aW9uIG9yIFJlYWN0LmNyZWF0ZVJlZigpLlwiLGMoZSkpLG4uY3VycmVudD10fX1mdW5jdGlvbiBNcihlLG4pe3RyeXt5KGUsRnIsZSl9Y2F0Y2godCl7WGwoZSxuLHQpfX1mdW5jdGlvbiBXcihlLG4pe3ZhciB0PWUucmVmLHI9ZS5yZWZDbGVhbnVwO2lmKG51bGwhPT10KWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHIpdHJ5e2lmKENyKGUpKXRyeXt0ZSgpLHkoZSxyKX1maW5hbGx5e25lKCl9ZWxzZSB5KGUscil9Y2F0Y2godCl7WGwoZSxuLHQpfWZpbmFsbHl7ZS5yZWZDbGVhbnVwPW51bGwsbnVsbCE9KGU9ZS5hbHRlcm5hdGUpJiYoZS5yZWZDbGVhbnVwPW51bGwpfWVsc2UgaWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdCl0cnl7aWYoQ3IoZSkpdHJ5e3RlKCkseShlLHQsbnVsbCl9ZmluYWxseXtuZSgpfWVsc2UgeShlLHQsbnVsbCl9Y2F0Y2godCl7WGwoZSxuLHQpfWVsc2UgdC5jdXJyZW50PW51bGx9ZnVuY3Rpb24gSHIoZSxuLHQscil7dmFyIGw9ZS5tZW1vaXplZFByb3BzLGE9bC5pZCxvPWwub25Db21taXQ7bD1sLm9uUmVuZGVyLG49bnVsbD09PW4/XCJtb3VudFwiOlwidXBkYXRlXCIsZWkmJihuPVwibmVzdGVkLXVwZGF0ZVwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBsJiZsKGEsbixlLmFjdHVhbER1cmF0aW9uLGUudHJlZUJhc2VEdXJhdGlvbixlLmFjdHVhbFN0YXJ0VGltZSx0KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvJiZvKGUubWVtb2l6ZWRQcm9wcy5pZCxuLHIsdCl9ZnVuY3Rpb24ganIoZSxuLHQscil7dmFyIGw9ZS5tZW1vaXplZFByb3BzO2U9bC5pZCxsPWwub25Qb3N0Q29tbWl0LG49bnVsbD09PW4/XCJtb3VudFwiOlwidXBkYXRlXCIsZWkmJihuPVwibmVzdGVkLXVwZGF0ZVwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBsJiZsKGUsbixyLHQpfWZ1bmN0aW9uIEFyKGUpe3ZhciBuPWUudHlwZSx0PWUubWVtb2l6ZWRQcm9wcyxyPWUuc3RhdGVOb2RlO3RyeXt5KGUsV28scixuLHQsZSl9Y2F0Y2gobil7WGwoZSxlLnJldHVybixuKX19ZnVuY3Rpb24gUXIoZSl7cmV0dXJuIDU9PT1lLnRhZ3x8Mz09PWUudGFnfHw0PT09ZS50YWd9ZnVuY3Rpb24gT3IoZSl7ZTpmb3IoOzspe2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8UXIoZS5yZXR1cm4pKXJldHVybiBudWxsO2U9ZS5yZXR1cm59Zm9yKGUuc2libGluZy5yZXR1cm49ZS5yZXR1cm4sZT1lLnNpYmxpbmc7NSE9PWUudGFnJiY2IT09ZS50YWcmJjE4IT09ZS50YWc7KXtpZigyJmUuZmxhZ3MpY29udGludWUgZTtpZihudWxsPT09ZS5jaGlsZHx8ND09PWUudGFnKWNvbnRpbnVlIGU7ZS5jaGlsZC5yZXR1cm49ZSxlPWUuY2hpbGR9aWYoISgyJmUuZmxhZ3MpKXJldHVybiBlLnN0YXRlTm9kZX19ZnVuY3Rpb24gQnIoZSxuLHQpe3ZhciByPWUudGFnO2lmKDU9PT1yfHw2PT09cillPWUuc3RhdGVOb2RlLG4/QW8odCxlLG4pOkZvKHQsZSk7ZWxzZSBpZig0IT09ciYmIWF1JiZudWxsIT09KGU9ZS5jaGlsZCkpZm9yKEJyKGUsbix0KSxlPWUuc2libGluZztudWxsIT09ZTspQnIoZSxuLHQpLGU9ZS5zaWJsaW5nfWZ1bmN0aW9uIFZyKGUsbix0KXt2YXIgcj1lLnRhZztpZig1PT09cnx8Nj09PXIpZT1lLnN0YXRlTm9kZSxuP2pvKHQsZSxuKTpJbyh0LGUpO2Vsc2UgaWYoNCE9PXImJiFhdSYmbnVsbCE9PShlPWUuY2hpbGQpKWZvcihWcihlLG4sdCksZT1lLnNpYmxpbmc7bnVsbCE9PWU7KVZyKGUsbix0KSxlPWUuc2libGluZ31mdW5jdGlvbiAkcihlKXtlOntmb3IodmFyIG49ZS5yZXR1cm47bnVsbCE9PW47KXtpZihRcihuKSl7dmFyIHQ9bjticmVhayBlfW49bi5yZXR1cm59dGhyb3cgRXJyb3IoXCJFeHBlY3RlZCB0byBmaW5kIGEgaG9zdCBwYXJlbnQuIFRoaXMgZXJyb3IgaXMgbGlrZWx5IGNhdXNlZCBieSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpfXN3aXRjaCh0LnRhZyl7Y2FzZSAyNzpjYXNlIDU6bj10LnN0YXRlTm9kZSwzMiZ0LmZsYWdzJiYoQm8obiksdC5mbGFncyY9LTMzKSxWcihlLHQ9T3IoZSksbik7YnJlYWs7Y2FzZSAzOmNhc2UgNDpuPXQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sQnIoZSx0PU9yKGUpLG4pO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJJbnZhbGlkIGhvc3QgcGFyZW50IGZpYmVyLiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKX19ZnVuY3Rpb24gcXIoZSxuLHQpe3ZhciByPXQuZmxhZ3M7c3dpdGNoKHQudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRsKGUsdCksNCZyJiZFcih0LHhzfGtzKTticmVhaztjYXNlIDE6aWYodGwoZSx0KSw0JnIpaWYoZT10LnN0YXRlTm9kZSxudWxsPT09bil0LnR5cGUuZGVmYXVsdFByb3BzfHxcInJlZlwiaW4gdC5tZW1vaXplZFByb3BzfHxiY3x8KGUucHJvcHMhPT10Lm1lbW9pemVkUHJvcHMmJmNvbnNvbGUuZXJyb3IoXCJFeHBlY3RlZCAlcyBwcm9wcyB0byBtYXRjaCBtZW1vaXplZCBwcm9wcyBiZWZvcmUgY29tcG9uZW50RGlkTW91bnQuIFRoaXMgbWlnaHQgZWl0aGVyIGJlIGJlY2F1c2Ugb2YgYSBidWcgaW4gUmVhY3QsIG9yIGJlY2F1c2UgYSBjb21wb25lbnQgcmVhc3NpZ25zIGl0cyBvd24gYHRoaXMucHJvcHNgLiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIixjKHQpfHxcImluc3RhbmNlXCIpLGUuc3RhdGUhPT10Lm1lbW9pemVkU3RhdGUmJmNvbnNvbGUuZXJyb3IoXCJFeHBlY3RlZCAlcyBzdGF0ZSB0byBtYXRjaCBtZW1vaXplZCBzdGF0ZSBiZWZvcmUgY29tcG9uZW50RGlkTW91bnQuIFRoaXMgbWlnaHQgZWl0aGVyIGJlIGJlY2F1c2Ugb2YgYSBidWcgaW4gUmVhY3QsIG9yIGJlY2F1c2UgYSBjb21wb25lbnQgcmVhc3NpZ25zIGl0cyBvd24gYHRoaXMuc3RhdGVgLiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIixjKHQpfHxcImluc3RhbmNlXCIpKSxDcih0KT8odGUoKSx5KHQsQmksdCxlKSxuZSgpKTp5KHQsQmksdCxlKTtlbHNle3ZhciBsPUN0KHQudHlwZSxuLm1lbW9pemVkUHJvcHMpO249bi5tZW1vaXplZFN0YXRlLHQudHlwZS5kZWZhdWx0UHJvcHN8fFwicmVmXCJpbiB0Lm1lbW9pemVkUHJvcHN8fGJjfHwoZS5wcm9wcyE9PXQubWVtb2l6ZWRQcm9wcyYmY29uc29sZS5lcnJvcihcIkV4cGVjdGVkICVzIHByb3BzIHRvIG1hdGNoIG1lbW9pemVkIHByb3BzIGJlZm9yZSBjb21wb25lbnREaWRVcGRhdGUuIFRoaXMgbWlnaHQgZWl0aGVyIGJlIGJlY2F1c2Ugb2YgYSBidWcgaW4gUmVhY3QsIG9yIGJlY2F1c2UgYSBjb21wb25lbnQgcmVhc3NpZ25zIGl0cyBvd24gYHRoaXMucHJvcHNgLiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIixjKHQpfHxcImluc3RhbmNlXCIpLGUuc3RhdGUhPT10Lm1lbW9pemVkU3RhdGUmJmNvbnNvbGUuZXJyb3IoXCJFeHBlY3RlZCAlcyBzdGF0ZSB0byBtYXRjaCBtZW1vaXplZCBzdGF0ZSBiZWZvcmUgY29tcG9uZW50RGlkVXBkYXRlLiBUaGlzIG1pZ2h0IGVpdGhlciBiZSBiZWNhdXNlIG9mIGEgYnVnIGluIFJlYWN0LCBvciBiZWNhdXNlIGEgY29tcG9uZW50IHJlYXNzaWducyBpdHMgb3duIGB0aGlzLnN0YXRlYC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIsYyh0KXx8XCJpbnN0YW5jZVwiKSksQ3IodCk/KHRlKCkseSh0LCRpLHQsZSxsLG4sZS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSksbmUoKSk6eSh0LCRpLHQsZSxsLG4sZS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9NjQmciYmTHIodCksNTEyJnImJk1yKHQsdC5yZXR1cm4pO2JyZWFrO2Nhc2UgMzppZihuPUcoKSx0bChlLHQpLDY0JnImJm51bGwhPT0ocj10LnVwZGF0ZVF1ZXVlKSl7aWYobD1udWxsLG51bGwhPT10LmNoaWxkKXN3aXRjaCh0LmNoaWxkLnRhZyl7Y2FzZSAyNzpjYXNlIDU6bD1hbyh0LmNoaWxkLnN0YXRlTm9kZSk7YnJlYWs7Y2FzZSAxOmw9dC5jaGlsZC5zdGF0ZU5vZGV9dHJ5e3kodCx6ZSxyLGwpfWNhdGNoKGUpe1hsKHQsdC5yZXR1cm4sZSl9fWUuZWZmZWN0RHVyYXRpb24rPUoobik7YnJlYWs7Y2FzZSAyNjpjYXNlIDI3OmNhc2UgNTp0bChlLHQpLG51bGw9PT1uJiY0JnImJkFyKHQpLDUxMiZyJiZNcih0LHQucmV0dXJuKTticmVhaztjYXNlIDEyOmlmKDQmcil7cj1HKCksdGwoZSx0KSwoZT10LnN0YXRlTm9kZSkuZWZmZWN0RHVyYXRpb24rPUsocik7dHJ5e3kodCxIcix0LG4sS3UsZS5lZmZlY3REdXJhdGlvbil9Y2F0Y2goZSl7WGwodCx0LnJldHVybixlKX19ZWxzZSB0bChlLHQpO2JyZWFrO2Nhc2UgMTM6ZGVmYXVsdDp0bChlLHQpO2JyZWFrO2Nhc2UgMjI6aWYoIShsPW51bGwhPT10Lm1lbW9pemVkU3RhdGV8fE1jKSl7bj1udWxsIT09biYmbnVsbCE9PW4ubWVtb2l6ZWRTdGF0ZXx8V2M7dmFyIGE9TWMsbz1XYztNYz1sLChXYz1uKSYmIW8/b2woZSx0LDAhPSg4NzcyJnQuc3VidHJlZUZsYWdzKSk6dGwoZSx0KSxNYz1hLFdjPW99NTEyJnImJihcIm1hbnVhbFwiPT09dC5tZW1vaXplZFByb3BzLm1vZGU/TXIodCx0LnJldHVybik6V3IodCx0LnJldHVybikpfX1mdW5jdGlvbiBZcihlKXt2YXIgbj1lLmFsdGVybmF0ZTtudWxsIT09biYmKGUuYWx0ZXJuYXRlPW51bGwsWXIobikpLGUuY2hpbGQ9bnVsbCxlLmRlbGV0aW9ucz1udWxsLGUuc2libGluZz1udWxsLDU9PT1lLnRhZyYmbnVsbCE9PShuPWUuc3RhdGVOb2RlKSYmRW8obiksZS5zdGF0ZU5vZGU9bnVsbCxlLl9kZWJ1Z093bmVyPW51bGwsZS5yZXR1cm49bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUucGVuZGluZ1Byb3BzPW51bGwsZS5zdGF0ZU5vZGU9bnVsbCxlLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gR3IoZSxuLHQpe2Zvcih0PXQuY2hpbGQ7bnVsbCE9PXQ7KUpyKGUsbix0KSx0PXQuc2libGluZ31mdW5jdGlvbiBKcihlLG4sdCl7c3dpdGNoKHQudGFnKXtjYXNlIDI2OmNhc2UgMjc6dmFyIHIsbDtjYXNlIDU6V2N8fFdyKHQsbik7Y2FzZSA2OmlmKHI9VmMsbD0kYyxWYz1udWxsLEdyKGUsbix0KSwkYz1sLG51bGwhPT0oVmM9cikpaWYoJGMpdHJ5e3kodCxPbyxWYyx0LnN0YXRlTm9kZSl9Y2F0Y2goZSl7WGwodCxuLGUpfWVsc2UgdHJ5e3kodCxRbyxWYyx0LnN0YXRlTm9kZSl9Y2F0Y2goZSl7WGwodCxuLGUpfWJyZWFrO2Nhc2UgMTg6bnVsbCE9PVZjJiYoJGM/bnUoVmMsdC5zdGF0ZU5vZGUpOmV1KFZjLHQuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSA0OnI9VmMsbD0kYyxWYz10LnN0YXRlTm9kZS5jb250YWluZXJJbmZvLCRjPSEwLEdyKGUsbix0KSxWYz1yLCRjPWw7YnJlYWs7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OldjfHxScih3cyx0LG4pLFdjfHxQcih0LG4seHMpLEdyKGUsbix0KTticmVhaztjYXNlIDE6V2N8fChXcih0LG4pLFwiZnVuY3Rpb25cIj09dHlwZW9mKHI9dC5zdGF0ZU5vZGUpLmNvbXBvbmVudFdpbGxVbm1vdW50JiZJcih0LG4scikpLEdyKGUsbix0KTticmVhaztjYXNlIDIxOkdyKGUsbix0KTticmVhaztjYXNlIDIyOldyKHQsbiksV2M9KHI9V2MpfHxudWxsIT09dC5tZW1vaXplZFN0YXRlLEdyKGUsbix0KSxXYz1yO2JyZWFrO2RlZmF1bHQ6R3IoZSxuLHQpfX1mdW5jdGlvbiBLcihlLG4pe3ZhciB0PWZ1bmN0aW9uKGUpe3N3aXRjaChlLnRhZyl7Y2FzZSAxMzpjYXNlIDE5OnZhciBuPWUuc3RhdGVOb2RlO3JldHVybiBudWxsPT09biYmKG49ZS5zdGF0ZU5vZGU9bmV3IGpjKSxuO2Nhc2UgMjI6cmV0dXJuIG51bGw9PT0obj0oZT1lLnN0YXRlTm9kZSkuX3JldHJ5Q2FjaGUpJiYobj1lLl9yZXRyeUNhY2hlPW5ldyBqYyksbjtkZWZhdWx0OnRocm93IEVycm9yKFwiVW5leHBlY3RlZCBTdXNwZW5zZSBoYW5kbGVyIHRhZyAoXCIrZS50YWcrXCIpLiBUaGlzIGlzIGEgYnVnIGluIFJlYWN0LlwiKX19KGUpO24uZm9yRWFjaCgoZnVuY3Rpb24obil7dmFyIHI9cmEuYmluZChudWxsLGUsbik7aWYoIXQuaGFzKG4pKXtpZih0LmFkZChuKSxfdSl7aWYobnVsbD09PVFjfHxudWxsPT09T2MpdGhyb3cgRXJyb3IoXCJFeHBlY3RlZCBmaW5pc2hlZCByb290IGFuZCBsYW5lcyB0byBiZSBzZXQuIFRoaXMgaXMgYSBidWcgaW4gUmVhY3QuXCIpO2lhKE9jLFFjKX1uLnRoZW4ocixyKX19KSl9ZnVuY3Rpb24gWHIoZSxuKXt2YXIgdD1uLmRlbGV0aW9ucztpZihudWxsIT09dClmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGw9ZSxhPW4sbz10W3JdLHU9YTtlOmZvcig7bnVsbCE9PXU7KXtzd2l0Y2godS50YWcpe2Nhc2UgMjc6Y2FzZSA1OlZjPXUuc3RhdGVOb2RlLCRjPSExO2JyZWFrIGU7Y2FzZSAzOmNhc2UgNDpWYz11LnN0YXRlTm9kZS5jb250YWluZXJJbmZvLCRjPSEwO2JyZWFrIGV9dT11LnJldHVybn1pZihudWxsPT09VmMpdGhyb3cgRXJyb3IoXCJFeHBlY3RlZCB0byBmaW5kIGEgaG9zdCBwYXJlbnQuIFRoaXMgZXJyb3IgaXMgbGlrZWx5IGNhdXNlZCBieSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpO0pyKGwsYSxvKSxWYz1udWxsLCRjPSExLG51bGwhPT0oYT0obD1vKS5hbHRlcm5hdGUpJiYoYS5yZXR1cm49bnVsbCksbC5yZXR1cm49bnVsbH1pZigxMzg3OCZuLnN1YnRyZWVGbGFncylmb3Iobj1uLmNoaWxkO251bGwhPT1uOylacihuLGUpLG49bi5zaWJsaW5nfWZ1bmN0aW9uIFpyKGUsbil7dmFyIHQ9ZS5hbHRlcm5hdGUscj1lLmZsYWdzO3N3aXRjaChlLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OlhyKG4sZSksZWwoZSksNCZyJiYoUnIod3N8a3MsZSxlLnJldHVybiksX3Iod3N8a3MsZSksUHIoZSxlLnJldHVybix4c3xrcykpO2JyZWFrO2Nhc2UgMTpYcihuLGUpLGVsKGUpLDUxMiZyJiZudWxsIT09dCYmV3IodCx0LnJldHVybiksNjQmciYmTWMmJm51bGwhPT0oZT1lLnVwZGF0ZVF1ZXVlKSYmbnVsbCE9PShyPWUuY2FsbGJhY2tzKSYmKHQ9ZS5zaGFyZWQuaGlkZGVuQ2FsbGJhY2tzLGUuc2hhcmVkLmhpZGRlbkNhbGxiYWNrcz1udWxsPT09dD9yOnQuY29uY2F0KHIpKTticmVhaztjYXNlIDI2OnZhciBsO2Nhc2UgMjc6dmFyIGE7Y2FzZSA1OmlmKFhyKG4sZSksZWwoZSksNTEyJnImJm51bGwhPT10JiZXcih0LHQucmV0dXJuKSwzMiZlLmZsYWdzKXtuPWUuc3RhdGVOb2RlO3RyeXt5KGUsQm8sbil9Y2F0Y2gobil7WGwoZSxlLnJldHVybixuKX19NCZyJiZudWxsIT1lLnN0YXRlTm9kZSYmZnVuY3Rpb24oZSxuLHQpe3RyeXt5KGUsSG8sZS5zdGF0ZU5vZGUsZS50eXBlLHQsbixlKX1jYXRjaChuKXtYbChlLGUucmV0dXJuLG4pfX0oZSxuPWUubWVtb2l6ZWRQcm9wcyxudWxsIT09dD90Lm1lbW9pemVkUHJvcHM6biksMTAyNCZyJiYoSGM9ITAsXCJmb3JtXCIhPT1lLnR5cGUmJmNvbnNvbGUuZXJyb3IoXCJVbmV4cGVjdGVkIGhvc3QgY29tcG9uZW50IHR5cGUuIEV4cGVjdGVkIGEgZm9ybS4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC5cIikpO2JyZWFrO2Nhc2UgNjppZihYcihuLGUpLGVsKGUpLDQmciYmdm8pe2lmKG51bGw9PT1lLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihcIlRoaXMgc2hvdWxkIGhhdmUgYSB0ZXh0IG5vZGUgaW5pdGlhbGl6ZWQuIFRoaXMgZXJyb3IgaXMgbGlrZWx5IGNhdXNlZCBieSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpO3I9ZS5tZW1vaXplZFByb3BzLHQ9bnVsbCE9PXQ/dC5tZW1vaXplZFByb3BzOnIsbj1lLnN0YXRlTm9kZTt0cnl7eShlLE1vLG4sdCxyKX1jYXRjaChuKXtYbChlLGUucmV0dXJuLG4pfX1icmVhaztjYXNlIDM6bD1HKCksWHIobixlKSxlbChlKSxIYyYmKEhjPSExLG5sKGUpKSxuLmVmZmVjdER1cmF0aW9uKz1KKGwpO2JyZWFrO2Nhc2UgNDpYcihuLGUpLGVsKGUpO2JyZWFrO2Nhc2UgMTI6cj1HKCksWHIobixlKSxlbChlKSxlLnN0YXRlTm9kZS5lZmZlY3REdXJhdGlvbis9SyhyKTticmVhaztjYXNlIDEzOlhyKG4sZSksZWwoZSksODE5MiZlLmNoaWxkLmZsYWdzJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlIT0obnVsbCE9PXQmJm51bGwhPT10Lm1lbW9pemVkU3RhdGUpJiYoRmY9dnUoKSksNCZyJiZudWxsIT09KHI9ZS51cGRhdGVRdWV1ZSkmJihlLnVwZGF0ZVF1ZXVlPW51bGwsS3IoZSxyKSk7YnJlYWs7Y2FzZSAyMjo1MTImciYmbnVsbCE9PXQmJldyKHQsdC5yZXR1cm4pLGw9bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZTt2YXIgbz1udWxsIT09dCYmbnVsbCE9PXQubWVtb2l6ZWRTdGF0ZSx1PU1jLGk9V2M7aWYoTWM9dXx8bCxXYz1pfHxvLFhyKG4sZSksV2M9aSxNYz11LGVsKGUpLChuPWUuc3RhdGVOb2RlKS5fY3VycmVudD1lLG4uX3Zpc2liaWxpdHkmPS0zLG4uX3Zpc2liaWxpdHl8PTImbi5fcGVuZGluZ1Zpc2liaWxpdHksODE5MiZyJiYobi5fdmlzaWJpbGl0eT1sPy0yJm4uX3Zpc2liaWxpdHk6MXxuLl92aXNpYmlsaXR5LGwmJihuPU1jfHxXYyxudWxsPT09dHx8b3x8bnx8bGwoZSkpLG51bGw9PT1lLm1lbW9pemVkUHJvcHN8fFwibWFudWFsXCIhPT1lLm1lbW9pemVkUHJvcHMubW9kZSkpZTppZih0PW51bGwsdm8pZm9yKG49ZTs7KXtpZig1PT09bi50YWd8fHR1fHxhdSl7aWYobnVsbD09PXQpe289dD1uO3RyeXthPW8uc3RhdGVOb2RlLGw/eShvLFZvLGEpOnkobyxxbyxvLnN0YXRlTm9kZSxvLm1lbW9pemVkUHJvcHMpfWNhdGNoKGUpe1hsKG8sby5yZXR1cm4sZSl9fX1lbHNlIGlmKDY9PT1uLnRhZyl7aWYobnVsbD09PXQpe289bjt0cnl7dmFyIHM9by5zdGF0ZU5vZGU7bD95KG8sJG8scyk6eShvLFlvLHMsby5tZW1vaXplZFByb3BzKX1jYXRjaChlKXtYbChvLG8ucmV0dXJuLGUpfX19ZWxzZSBpZigoMjIhPT1uLnRhZyYmMjMhPT1uLnRhZ3x8bnVsbD09PW4ubWVtb2l6ZWRTdGF0ZXx8bj09PWUpJiZudWxsIT09bi5jaGlsZCl7bi5jaGlsZC5yZXR1cm49bixuPW4uY2hpbGQ7Y29udGludWV9aWYobj09PWUpYnJlYWsgZTtmb3IoO251bGw9PT1uLnNpYmxpbmc7KXtpZihudWxsPT09bi5yZXR1cm58fG4ucmV0dXJuPT09ZSlicmVhayBlO3Q9PT1uJiYodD1udWxsKSxuPW4ucmV0dXJufXQ9PT1uJiYodD1udWxsKSxuLnNpYmxpbmcucmV0dXJuPW4ucmV0dXJuLG49bi5zaWJsaW5nfTQmciYmbnVsbCE9PShyPWUudXBkYXRlUXVldWUpJiZudWxsIT09KHQ9ci5yZXRyeVF1ZXVlKSYmKHIucmV0cnlRdWV1ZT1udWxsLEtyKGUsdCkpO2JyZWFrO2Nhc2UgMTk6WHIobixlKSxlbChlKSw0JnImJm51bGwhPT0ocj1lLnVwZGF0ZVF1ZXVlKSYmKGUudXBkYXRlUXVldWU9bnVsbCxLcihlLHIpKTticmVhaztjYXNlIDIxOmJyZWFrO2RlZmF1bHQ6WHIobixlKSxlbChlKX19ZnVuY3Rpb24gZWwoZSl7dmFyIG49ZS5mbGFncztpZigyJm4pe3RyeXt5KGUsJHIsZSl9Y2F0Y2gobil7WGwoZSxlLnJldHVybixuKX1lLmZsYWdzJj0tM300MDk2Jm4mJihlLmZsYWdzJj0tNDA5Nyl9ZnVuY3Rpb24gbmwoZSl7aWYoMTAyNCZlLnN1YnRyZWVGbGFncylmb3IoZT1lLmNoaWxkO251bGwhPT1lOyl7dmFyIG49ZTtubChuKSw1PT09bi50YWcmJjEwMjQmbi5mbGFncyYmRG8obi5zdGF0ZU5vZGUpLGU9ZS5zaWJsaW5nfX1mdW5jdGlvbiB0bChlLG4pe2lmKDg3NzImbi5zdWJ0cmVlRmxhZ3MpZm9yKG49bi5jaGlsZDtudWxsIT09bjspcXIoZSxuLmFsdGVybmF0ZSxuKSxuPW4uc2libGluZ31mdW5jdGlvbiBybChlKXtzd2l0Y2goZS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpQcihlLGUucmV0dXJuLHhzKSxsbChlKTticmVhaztjYXNlIDE6V3IoZSxlLnJldHVybik7dmFyIG49ZS5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT10eXBlb2Ygbi5jb21wb25lbnRXaWxsVW5tb3VudCYmSXIoZSxlLnJldHVybixuKSxsbChlKTticmVhaztjYXNlIDI2OmNhc2UgMjc6Y2FzZSA1OldyKGUsZS5yZXR1cm4pLGxsKGUpO2JyZWFrO2Nhc2UgMjI6V3IoZSxlLnJldHVybiksbnVsbD09PWUubWVtb2l6ZWRTdGF0ZSYmbGwoZSk7YnJlYWs7ZGVmYXVsdDpsbChlKX19ZnVuY3Rpb24gbGwoZSl7Zm9yKGU9ZS5jaGlsZDtudWxsIT09ZTspcmwoZSksZT1lLnNpYmxpbmd9ZnVuY3Rpb24gYWwoZSxuLHQscil7dmFyIGw9dC5mbGFncztzd2l0Y2godC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6b2woZSx0LHIpLEVyKHQseHMpO2JyZWFrO2Nhc2UgMTppZihvbChlLHQsciksXCJmdW5jdGlvblwiPT10eXBlb2Yobj10LnN0YXRlTm9kZSkuY29tcG9uZW50RGlkTW91bnQmJnkodCxCaSx0LG4pLG51bGwhPT0obj10LnVwZGF0ZVF1ZXVlKSl7ZT10LnN0YXRlTm9kZTt0cnl7eSh0LHhlLG4sZSl9Y2F0Y2goZSl7WGwodCx0LnJldHVybixlKX19ciYmNjQmbCYmTHIodCksTXIodCx0LnJldHVybik7YnJlYWs7Y2FzZSAyNjpjYXNlIDI3OmNhc2UgNTpvbChlLHQsciksciYmbnVsbD09PW4mJjQmbCYmQXIodCksTXIodCx0LnJldHVybik7YnJlYWs7Y2FzZSAxMjppZihyJiY0Jmwpe2w9RygpLG9sKGUsdCxyKSwocj10LnN0YXRlTm9kZSkuZWZmZWN0RHVyYXRpb24rPUsobCk7dHJ5e3kodCxIcix0LG4sS3Usci5lZmZlY3REdXJhdGlvbil9Y2F0Y2goZSl7WGwodCx0LnJldHVybixlKX19ZWxzZSBvbChlLHQscik7YnJlYWs7Y2FzZSAxMzpkZWZhdWx0Om9sKGUsdCxyKTticmVhaztjYXNlIDIyOm51bGw9PT10Lm1lbW9pemVkU3RhdGUmJm9sKGUsdCxyKSxNcih0LHQucmV0dXJuKX19ZnVuY3Rpb24gb2woZSxuLHQpe2Zvcih0PXQmJjAhPSg4NzcyJm4uc3VidHJlZUZsYWdzKSxuPW4uY2hpbGQ7bnVsbCE9PW47KWFsKGUsbi5hbHRlcm5hdGUsbix0KSxuPW4uc2libGluZ31mdW5jdGlvbiB1bChlLG4pe3ZhciB0PW51bGw7bnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sJiYodD1lLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sLnBvb2wpLGU9bnVsbCxudWxsIT09bi5tZW1vaXplZFN0YXRlJiZudWxsIT09bi5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbCYmKGU9bi5tZW1vaXplZFN0YXRlLmNhY2hlUG9vbC5wb29sKSxlIT09dCYmKG51bGwhPWUmJnByKGUpLG51bGwhPXQmJm1yKHQpKX1mdW5jdGlvbiBpbChlLG4pe2U9bnVsbCxudWxsIT09bi5hbHRlcm5hdGUmJihlPW4uYWx0ZXJuYXRlLm1lbW9pemVkU3RhdGUuY2FjaGUpLChuPW4ubWVtb2l6ZWRTdGF0ZS5jYWNoZSkhPT1lJiYocHIobiksbnVsbCE9ZSYmbXIoZSkpfWZ1bmN0aW9uIHNsKGUsbix0LHIpe2lmKDEwMjU2Jm4uc3VidHJlZUZsYWdzKWZvcihuPW4uY2hpbGQ7bnVsbCE9PW47KWNsKGUsbix0LHIpLG49bi5zaWJsaW5nfWZ1bmN0aW9uIGNsKGUsbix0LHIpe3ZhciBsPW4uZmxhZ3M7c3dpdGNoKG4udGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnNsKGUsbix0LHIpLDIwNDgmbCYmVHIobix6c3xrcyk7YnJlYWs7Y2FzZSAzOnZhciBhPUcoKTtzbChlLG4sdCxyKSwyMDQ4JmwmJih0PW51bGwsbnVsbCE9PW4uYWx0ZXJuYXRlJiYodD1uLmFsdGVybmF0ZS5tZW1vaXplZFN0YXRlLmNhY2hlKSwobj1uLm1lbW9pemVkU3RhdGUuY2FjaGUpIT09dCYmKHByKG4pLG51bGwhPXQmJm1yKHQpKSksZS5wYXNzaXZlRWZmZWN0RHVyYXRpb24rPUooYSk7YnJlYWs7Y2FzZSAxMjppZigyMDQ4Jmwpe2E9RygpLHNsKGUsbix0LHIpLChlPW4uc3RhdGVOb2RlKS5wYXNzaXZlRWZmZWN0RHVyYXRpb24rPUsoYSk7dHJ5e3kobixqcixuLG4uYWx0ZXJuYXRlLEt1LGUucGFzc2l2ZUVmZmVjdER1cmF0aW9uKX1jYXRjaChlKXtYbChuLG4ucmV0dXJuLGUpfX1lbHNlIHNsKGUsbix0LHIpO2JyZWFrO2Nhc2UgMjM6YnJlYWs7Y2FzZSAyMjphPW4uc3RhdGVOb2RlLG51bGwhPT1uLm1lbW9pemVkU3RhdGU/NCZhLl92aXNpYmlsaXR5P3NsKGUsbix0LHIpOnBsKGUsbik6NCZhLl92aXNpYmlsaXR5P3NsKGUsbix0LHIpOihhLl92aXNpYmlsaXR5fD00LGZsKGUsbix0LHIsMCE9KDEwMjU2Jm4uc3VidHJlZUZsYWdzKSkpLDIwNDgmbCYmdWwobi5hbHRlcm5hdGUsbik7YnJlYWs7Y2FzZSAyNDpzbChlLG4sdCxyKSwyMDQ4JmwmJmlsKG4uYWx0ZXJuYXRlLG4pO2JyZWFrO2RlZmF1bHQ6c2woZSxuLHQscil9fWZ1bmN0aW9uIGZsKGUsbix0LHIsbCl7Zm9yKGw9bCYmMCE9KDEwMjU2Jm4uc3VidHJlZUZsYWdzKSxuPW4uY2hpbGQ7bnVsbCE9PW47KWRsKGUsbix0LHIsbCksbj1uLnNpYmxpbmd9ZnVuY3Rpb24gZGwoZSxuLHQscixsKXt2YXIgYT1uLmZsYWdzO3N3aXRjaChuLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpmbChlLG4sdCxyLGwpLFRyKG4senMpO2JyZWFrO2Nhc2UgMjM6YnJlYWs7Y2FzZSAyMjp2YXIgbz1uLnN0YXRlTm9kZTtudWxsIT09bi5tZW1vaXplZFN0YXRlPzQmby5fdmlzaWJpbGl0eT9mbChlLG4sdCxyLGwpOnBsKGUsbik6KG8uX3Zpc2liaWxpdHl8PTQsZmwoZSxuLHQscixsKSksbCYmMjA0OCZhJiZ1bChuLmFsdGVybmF0ZSxuKTticmVhaztjYXNlIDI0OmZsKGUsbix0LHIsbCksbCYmMjA0OCZhJiZpbChuLmFsdGVybmF0ZSxuKTticmVhaztkZWZhdWx0OmZsKGUsbix0LHIsbCl9fWZ1bmN0aW9uIHBsKGUsbil7aWYoMTAyNTYmbi5zdWJ0cmVlRmxhZ3MpZm9yKG49bi5jaGlsZDtudWxsIT09bjspe3ZhciB0PWUscj1uLGw9ci5mbGFncztzd2l0Y2goci50YWcpe2Nhc2UgMjI6cGwodCxyKSwyMDQ4JmwmJnVsKHIuYWx0ZXJuYXRlLHIpO2JyZWFrO2Nhc2UgMjQ6cGwodCxyKSwyMDQ4JmwmJmlsKHIuYWx0ZXJuYXRlLHIpO2JyZWFrO2RlZmF1bHQ6cGwodCxyKX1uPW4uc2libGluZ319ZnVuY3Rpb24gbWwoZSl7aWYoZS5zdWJ0cmVlRmxhZ3MmWWMpZm9yKGU9ZS5jaGlsZDtudWxsIT09ZTspaGwoZSksZT1lLnNpYmxpbmd9ZnVuY3Rpb24gaGwoZSl7c3dpdGNoKGUudGFnKXtjYXNlIDI2Om1sKGUpLGUuZmxhZ3MmWWMmJihudWxsIT09ZS5tZW1vaXplZFN0YXRlP2x1KHFjLGUubWVtb2l6ZWRTdGF0ZSxlLm1lbW9pemVkUHJvcHMpOlRvKGUudHlwZSxlLm1lbW9pemVkUHJvcHMpKTticmVhaztjYXNlIDU6bWwoZSksZS5mbGFncyZZYyYmVG8oZS50eXBlLGUubWVtb2l6ZWRQcm9wcyk7YnJlYWs7Y2FzZSAzOmNhc2UgNDp2YXIgbjttbChlKTticmVhaztjYXNlIDIyOm51bGw9PT1lLm1lbW9pemVkU3RhdGUmJihudWxsIT09KG49ZS5hbHRlcm5hdGUpJiZudWxsIT09bi5tZW1vaXplZFN0YXRlPyhuPVljLFljPTE2Nzc3MjE2LG1sKGUpLFljPW4pOm1sKGUpKTticmVhaztkZWZhdWx0Om1sKGUpfX1mdW5jdGlvbiBnbChlKXt2YXIgbj1lLmFsdGVybmF0ZTtpZihudWxsIT09biYmbnVsbCE9PShlPW4uY2hpbGQpKXtuLmNoaWxkPW51bGw7ZG97bj1lLnNpYmxpbmcsZS5zaWJsaW5nPW51bGwsZT1ufXdoaWxlKG51bGwhPT1lKX19ZnVuY3Rpb24geWwoZSl7dmFyIG49ZS5kZWxldGlvbnM7aWYoMCE9KDE2JmUuZmxhZ3MpKXtpZihudWxsIT09bilmb3IodmFyIHQ9MDt0PG4ubGVuZ3RoO3QrKyl7dmFyIHI9blt0XTtBYz1yLGtsKHIsZSl9Z2woZSl9aWYoMTAyNTYmZS5zdWJ0cmVlRmxhZ3MpZm9yKGU9ZS5jaGlsZDtudWxsIT09ZTspYmwoZSksZT1lLnNpYmxpbmd9ZnVuY3Rpb24gYmwoZSl7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnlsKGUpLDIwNDgmZS5mbGFncyYmTnIoZSxlLnJldHVybix6c3xrcyk7YnJlYWs7Y2FzZSAzOnZhciBuPUcoKTt5bChlKSxlLnN0YXRlTm9kZS5wYXNzaXZlRWZmZWN0RHVyYXRpb24rPUoobik7YnJlYWs7Y2FzZSAxMjpuPUcoKSx5bChlKSxlLnN0YXRlTm9kZS5wYXNzaXZlRWZmZWN0RHVyYXRpb24rPUsobik7YnJlYWs7Y2FzZSAyMjpuPWUuc3RhdGVOb2RlLG51bGwhPT1lLm1lbW9pemVkU3RhdGUmJjQmbi5fdmlzaWJpbGl0eSYmKG51bGw9PT1lLnJldHVybnx8MTMhPT1lLnJldHVybi50YWcpPyhuLl92aXNpYmlsaXR5Jj0tNSx2bChlKSk6eWwoZSk7YnJlYWs7ZGVmYXVsdDp5bChlKX19ZnVuY3Rpb24gdmwoZSl7dmFyIG49ZS5kZWxldGlvbnM7aWYoMCE9KDE2JmUuZmxhZ3MpKXtpZihudWxsIT09bilmb3IodmFyIHQ9MDt0PG4ubGVuZ3RoO3QrKyl7dmFyIHI9blt0XTtBYz1yLGtsKHIsZSl9Z2woZSl9Zm9yKGU9ZS5jaGlsZDtudWxsIT09ZTspU2woZSksZT1lLnNpYmxpbmd9ZnVuY3Rpb24gU2woZSl7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1Ok5yKGUsZS5yZXR1cm4senMpLHZsKGUpO2JyZWFrO2Nhc2UgMjI6dmFyIG49ZS5zdGF0ZU5vZGU7NCZuLl92aXNpYmlsaXR5JiYobi5fdmlzaWJpbGl0eSY9LTUsdmwoZSkpO2JyZWFrO2RlZmF1bHQ6dmwoZSl9fWZ1bmN0aW9uIGtsKGUsbil7Zm9yKDtudWxsIT09QWM7KXt2YXIgdD1BYyxyPXQ7c3dpdGNoKHIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1Ok5yKHIsbix6cyk7YnJlYWs7Y2FzZSAyMzpjYXNlIDIyOm51bGwhPT1yLm1lbW9pemVkU3RhdGUmJm51bGwhPT1yLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sJiZudWxsIT0ocj1yLm1lbW9pemVkU3RhdGUuY2FjaGVQb29sLnBvb2wpJiZwcihyKTticmVhaztjYXNlIDI0Om1yKHIubWVtb2l6ZWRTdGF0ZS5jYWNoZSl9aWYobnVsbCE9PShyPXQuY2hpbGQpKXIucmV0dXJuPXQsQWM9cjtlbHNlIGU6Zm9yKHQ9ZTtudWxsIT09QWM7KXt2YXIgbD0ocj1BYykuc2libGluZyxhPXIucmV0dXJuO2lmKFlyKHIpLHI9PT10KXtBYz1udWxsO2JyZWFrIGV9aWYobnVsbCE9PWwpe2wucmV0dXJuPWEsQWM9bDticmVhayBlfUFjPWF9fX1mdW5jdGlvbiB3bCgpe3ZhciBlPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBJU19SRUFDVF9BQ1RfRU5WSVJPTk1FTlQ/SVNfUkVBQ1RfQUNUX0VOVklST05NRU5UOnZvaWQgMDtyZXR1cm4gZXx8bnVsbD09PUphLmFjdFF1ZXVlfHxjb25zb2xlLmVycm9yKFwiVGhlIGN1cnJlbnQgdGVzdGluZyBlbnZpcm9ubWVudCBpcyBub3QgY29uZmlndXJlZCB0byBzdXBwb3J0IGFjdCguLi4pXCIpLGV9ZnVuY3Rpb24geGwoZSl7aWYoKHNmJlpjKSE9PVhjJiYwIT09ZGYpcmV0dXJuIGRmJi1kZjt2YXIgbj1KYS5UO3JldHVybiBudWxsIT09bj8obi5fdXBkYXRlZEZpYmVyc3x8KG4uX3VwZGF0ZWRGaWJlcnM9bmV3IFNldCksbi5fdXBkYXRlZEZpYmVycy5hZGQoZSksMCE9PShlPWRpKT9lOmRlKCkpOnpvKCl9ZnVuY3Rpb24gemwoKXswPT09TmYmJihOZj0wPT0oNTM2ODcwOTEyJmRmKXx8QnU/eigpOjUzNjg3MDkxMik7dmFyIGU9aHMuY3VycmVudDtyZXR1cm4gbnVsbCE9PWUmJihlLmZsYWdzfD0zMiksTmZ9ZnVuY3Rpb24gQ2woZSxuLHQpe2lmKG5kJiZjb25zb2xlLmVycm9yKFwidXNlSW5zZXJ0aW9uRWZmZWN0IG11c3Qgbm90IHNjaGVkdWxlIHVwZGF0ZXMuXCIpLEpmJiYoS2Y9ITApLChlPT09Y2YmJndmPT09aGZ8fG51bGwhPT1lLmNhbmNlbFBlbmRpbmdDb21taXQpJiYoTGwoZSwwKSxUbChlLGRmLE5mKSksUChlLHQpLDAhPShzZiZaYykmJmU9PT1jZil7aWYocm8pc3dpdGNoKG4udGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmU9ZmYmJmMoZmYpfHxcIlVua25vd25cIix1ZC5oYXMoZSl8fCh1ZC5hZGQoZSksbj1jKG4pfHxcIlVua25vd25cIixjb25zb2xlLmVycm9yKFwiQ2Fubm90IHVwZGF0ZSBhIGNvbXBvbmVudCAoYCVzYCkgd2hpbGUgcmVuZGVyaW5nIGEgZGlmZmVyZW50IGNvbXBvbmVudCAoYCVzYCkuIFRvIGxvY2F0ZSB0aGUgYmFkIHNldFN0YXRlKCkgY2FsbCBpbnNpZGUgYCVzYCwgZm9sbG93IHRoZSBzdGFjayB0cmFjZSBhcyBkZXNjcmliZWQgaW4gaHR0cHM6Ly9yZWFjdC5kZXYvbGluay9zZXRzdGF0ZS1pbi1yZW5kZXJcIixuLGUsZSkpO2JyZWFrO2Nhc2UgMTpvZHx8KGNvbnNvbGUuZXJyb3IoXCJDYW5ub3QgdXBkYXRlIGR1cmluZyBhbiBleGlzdGluZyBzdGF0ZSB0cmFuc2l0aW9uIChzdWNoIGFzIHdpdGhpbiBgcmVuZGVyYCkuIFJlbmRlciBtZXRob2RzIHNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24gb2YgcHJvcHMgYW5kIHN0YXRlLlwiKSxvZD0hMCl9fWVsc2UgX3UmJlQoZSxuLHQpLGZ1bmN0aW9uKGUpe3dsKCkmJm51bGw9PT1KYS5hY3RRdWV1ZSYmeShlLChmdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoXCJBbiB1cGRhdGUgdG8gJXMgaW5zaWRlIGEgdGVzdCB3YXMgbm90IHdyYXBwZWQgaW4gYWN0KC4uLikuXFxuXFxuV2hlbiB0ZXN0aW5nLCBjb2RlIHRoYXQgY2F1c2VzIFJlYWN0IHN0YXRlIHVwZGF0ZXMgc2hvdWxkIGJlIHdyYXBwZWQgaW50byBhY3QoLi4uKTpcXG5cXG5hY3QoKCkgPT4ge1xcbiAgLyogZmlyZSBldmVudHMgdGhhdCB1cGRhdGUgc3RhdGUgKi9cXG59KTtcXG4vKiBhc3NlcnQgb24gdGhlIG91dHB1dCAqL1xcblxcblRoaXMgZW5zdXJlcyB0aGF0IHlvdSdyZSB0ZXN0aW5nIHRoZSBiZWhhdmlvciB0aGUgdXNlciB3b3VsZCBzZWUgaW4gdGhlIGJyb3dzZXIuIExlYXJuIG1vcmUgYXQgaHR0cHM6Ly9yZWFjdC5kZXYvbGluay93cmFwLXRlc3RzLXdpdGgtYWN0XCIsYyhlKSl9KSl9KG4pLGU9PT1jZiYmKChzZiZaYyk9PT1YYyYmKFJmfD10KSxQZj09PWFmJiZUbChlLGRmLE5mKSksbGUoZSl9ZnVuY3Rpb24gRWwoZSxuLHQpe2lmKChzZiYoWmN8ZWYpKSE9PVhjKXRocm93IEVycm9yKFwiU2hvdWxkIG5vdCBhbHJlYWR5IGJlIHdvcmtpbmcuXCIpO3ZhciByPSh0PSF0JiYwPT0oNjAmbikmJjA9PShuJmUuZXhwaXJlZExhbmVzKSk/ZnVuY3Rpb24oZSxuKXt2YXIgdD1zZjtzZnw9WmM7dmFyIHI9SWwoKSxsPUZsKCk7aWYoY2YhPT1lfHxkZiE9PW4pe2lmKF91KXt2YXIgYT1lLm1lbW9pemVkVXBkYXRlcnM7MDxhLnNpemUmJihpYShlLGRmKSxhLmNsZWFyKCkpLE4oZSxuKX1qZj1udWxsLFdmPXZ1KCkrSGYsTGwoZSxuKX1lOmZvcig7Oyl0cnl7aWYod2YhPT1wZiYmbnVsbCE9PWZmKW46c3dpdGNoKG49ZmYsYT14Zix3Zil7Y2FzZSBtZjp3Zj1wZix4Zj1udWxsLEJsKGUsbixhKTticmVhaztjYXNlIGhmOmlmKEVlKGEpKXt3Zj1wZix4Zj1udWxsLFFsKG4pO2JyZWFrfW49ZnVuY3Rpb24oKXt3Zj09PWhmJiZjZj09PWUmJih3Zj1TZiksbGUoZSl9LGEudGhlbihuLG4pO2JyZWFrIGU7Y2FzZSBnZjp3Zj1TZjticmVhayBlO2Nhc2UgeWY6d2Y9YmY7YnJlYWsgZTtjYXNlIFNmOkVlKGEpPyh3Zj1wZix4Zj1udWxsLFFsKG4pKTood2Y9cGYseGY9bnVsbCxCbChlLG4sYSkpO2JyZWFrO2Nhc2UgYmY6dmFyIG89bnVsbDtzd2l0Y2goZmYudGFnKXtjYXNlIDI2Om89ZmYubWVtb2l6ZWRTdGF0ZTtjYXNlIDU6Y2FzZSAyNzp2YXIgdT1mZixpPXUudHlwZSxzPXUucGVuZGluZ1Byb3BzO2lmKG8/cnUobyk6X28oaSxzKSl7d2Y9cGYseGY9bnVsbDt2YXIgYz11LnNpYmxpbmc7aWYobnVsbCE9PWMpZmY9YztlbHNle3ZhciBmPXUucmV0dXJuO251bGwhPT1mPyhmZj1mLFZsKGYpKTpmZj1udWxsfWJyZWFrIG59YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKFwiVW5leHBlY3RlZCB0eXBlIG9mIGZpYmVyIHRyaWdnZXJlZCBhIHN1c3BlbnNleSBjb21taXQuIFRoaXMgaXMgYSBidWcgaW4gUmVhY3QuXCIpfXdmPXBmLHhmPW51bGwsQmwoZSxuLGEpO2JyZWFrO2Nhc2UgdmY6d2Y9cGYseGY9bnVsbCxCbChlLG4sYSk7YnJlYWs7Y2FzZSBrZjpObCgpLFBmPXVmO2JyZWFrIGU7ZGVmYXVsdDp0aHJvdyBFcnJvcihcIlVuZXhwZWN0ZWQgU3VzcGVuZGVkUmVhc29uLiBUaGlzIGlzIGEgYnVnIGluIFJlYWN0LlwiKX1udWxsIT09SmEuYWN0UXVldWU/SGwoKTpqbCgpO2JyZWFrfWNhdGNoKG4pe1VsKGUsbil9cmV0dXJuIG5yKCksSmEuSD1yLEphLkE9bCxzZj10LG51bGwhPT1mZj9uZjooY2Y9bnVsbCxkZj0wLE8oKSxQZil9KGUsbik6V2woZSxuKTtpZihyIT09bmYpZm9yKHZhciBsPXQ7Oyl7aWYocj09PXVmKVRsKGUsbiwwKTtlbHNle2lmKHQ9ZS5jdXJyZW50LmFsdGVybmF0ZSxsJiYhUmwodCkpe3I9V2woZSxuKSxsPSExO2NvbnRpbnVlfWlmKHI9PT1yZil7aWYobD1uLGUuZXJyb3JSZWNvdmVyeURpc2FibGVkTGFuZXMmbCl2YXIgYT0wO2Vsc2UgYT0wIT0oYT0tNTM2ODcwOTEzJmUucGVuZGluZ0xhbmVzKT9hOjUzNjg3MDkxMiZhPzUzNjg3MDkxMjowO2lmKDAhPT1hKXtuPWE7ZTp7cj1lO3ZhciBvPWE7YT1VZjt2YXIgdT1TbztpZih1JiYoTGwocixvKS5mbGFnc3w9MjU2KSwobz1XbChyLG8pKSE9PXJmKXtpZihDZiYmIXUpe3IuZXJyb3JSZWNvdmVyeURpc2FibGVkTGFuZXN8PWwsUmZ8PWwscj1hZjticmVhayBlfXI9RGYsRGY9YSxudWxsIT09ciYmUGwocil9cj1vfWlmKGw9ITEsciE9PXJmKWNvbnRpbnVlfX1pZihyPT09dGYpe0xsKGUsMCksVGwoZSxuLDApO2JyZWFrfWU6e3N3aXRjaChsPWUscil7Y2FzZSBuZjpjYXNlIHRmOnRocm93IEVycm9yKFwiUm9vdCBkaWQgbm90IGNvbXBsZXRlLiBUaGlzIGlzIGEgYnVnIGluIFJlYWN0LlwiKTtjYXNlIGFmOmlmKCg0MTk0MTc2Jm4pPT09bil7VGwobCxuLE5mKTticmVhayBlfWJyZWFrO2Nhc2UgcmY6RGY9bnVsbDticmVhaztjYXNlIGxmOmNhc2Ugb2Y6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihcIlVua25vd24gcm9vdCBleGl0IHN0YXR1cy5cIil9aWYobC5maW5pc2hlZFdvcms9dCxsLmZpbmlzaGVkTGFuZXM9bixudWxsIT09SmEuYWN0UXVldWUpcWwobCxEZixqZixJZixOZik7ZWxzZXtpZigoNjI5MTQ1NjAmbik9PT1uJiYxMDwocj1GZitNZi12dSgpKSl7aWYoVGwobCxuLE5mKSwwIT09dyhsLDApKWJyZWFrIGU7bC50aW1lb3V0SGFuZGxlPWdvKF9sLmJpbmQobnVsbCxsLHQsRGYsamYsSWYsbixOZixSZixMZix6ZixsZCwtMCwwKSxyKTticmVhayBlfV9sKGwsdCxEZixqZixJZixuLE5mLFJmLExmLHpmLHRkLC0wLDApfX19YnJlYWt9bGUoZSl9ZnVuY3Rpb24gUGwoZSl7bnVsbD09PURmP0RmPWU6RGYucHVzaC5hcHBseShEZixlKX1mdW5jdGlvbiBfbChlLG4sdCxyLGwsYSxvLHUsaSxzLGMsZixkKXtpZigoODE5MiYocz1uLnN1YnRyZWVGbGFncyl8fDE2Nzg1NDA4PT0oMTY3ODU0MDgmcykpJiYoUm8oKSxobChuKSxudWxsIT09KG49Tm8oKSkpKXJldHVybiBlLmNhbmNlbFBlbmRpbmdDb21taXQ9bihxbC5iaW5kKG51bGwsZSx0LHIsbCxvLHUsaSxyZCxmLGQpKSx2b2lkIFRsKGUsYSxvKTtxbChlLHQscixsLG8pfWZ1bmN0aW9uIFJsKGUpe2Zvcih2YXIgbj1lOzspe3ZhciB0PW4udGFnO2lmKCgwPT09dHx8MTE9PT10fHwxNT09PXQpJiYxNjM4NCZuLmZsYWdzJiZudWxsIT09KHQ9bi51cGRhdGVRdWV1ZSkmJm51bGwhPT0odD10LnN0b3JlcykpZm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBsPXRbcl0sYT1sLmdldFNuYXBzaG90O2w9bC52YWx1ZTt0cnl7aWYoIVJ1KGEoKSxsKSlyZXR1cm4hMX1jYXRjaChlKXtyZXR1cm4hMX19aWYodD1uLmNoaWxkLDE2Mzg0Jm4uc3VidHJlZUZsYWdzJiZudWxsIT09dCl0LnJldHVybj1uLG49dDtlbHNle2lmKG49PT1lKWJyZWFrO2Zvcig7bnVsbD09PW4uc2libGluZzspe2lmKG51bGw9PT1uLnJldHVybnx8bi5yZXR1cm49PT1lKXJldHVybiEwO249bi5yZXR1cm59bi5zaWJsaW5nLnJldHVybj1uLnJldHVybixuPW4uc2libGluZ319cmV0dXJuITB9ZnVuY3Rpb24gVGwoZSxuLHQpe24mPX5UZixuJj1+UmYsZS5zdXNwZW5kZWRMYW5lc3w9bixlLnBpbmdlZExhbmVzJj1+bjtmb3IodmFyIHI9ZS5leHBpcmF0aW9uVGltZXMsbD1uOzA8bDspe3ZhciBhPTMxLWN1KGwpLG89MTw8YTtyW2FdPS0xLGwmPX5vfTAhPT10JiZfKGUsdCxuKX1mdW5jdGlvbiBObCgpe2lmKG51bGwhPT1mZil7aWYod2Y9PT1wZil2YXIgZT1mZi5yZXR1cm47ZWxzZSBlPWZmLG5yKCksYW4oZSkscnM9bnVsbCxscz0wLGU9ZmY7Zm9yKDtudWxsIT09ZTspenIoZS5hbHRlcm5hdGUsZSksZT1lLnJldHVybjtmZj1udWxsfX1mdW5jdGlvbiBMbChlLG4pe2UuZmluaXNoZWRXb3JrPW51bGwsZS5maW5pc2hlZExhbmVzPTA7dmFyIHQ9ZS50aW1lb3V0SGFuZGxlO3QhPT1ibyYmKGUudGltZW91dEhhbmRsZT1ibyx5byh0KSksbnVsbCE9PSh0PWUuY2FuY2VsUGVuZGluZ0NvbW1pdCkmJihlLmNhbmNlbFBlbmRpbmdDb21taXQ9bnVsbCx0KCkpLE5sKCksY2Y9ZSxmZj10PWZhKGUuY3VycmVudCxudWxsKSxkZj1uLHdmPXBmLHhmPW51bGwsQ2Y9emY9ITEsUGY9bmYsTGY9TmY9VGY9UmY9X2Y9MCxEZj1VZj1udWxsLElmPSExLDAhPSg4Jm4pJiYobnw9MzImbik7dmFyIHI9ZS5lbnRhbmdsZWRMYW5lcztpZigwIT09cilmb3IoZT1lLmVudGFuZ2xlbWVudHMsciY9bjswPHI7KXt2YXIgbD0zMS1jdShyKSxhPTE8PGw7bnw9ZVtsXSxyJj1+YX1yZXR1cm4gRWY9bixPKCkseGkuZGlzY2FyZFBlbmRpbmdXYXJuaW5ncygpLHR9ZnVuY3Rpb24gVWwoZSxuKXtUcz1udWxsLEphLkg9JHMsSmEuZ2V0Q3VycmVudFN0YWNrPW51bGwscm89ITEsdG89bnVsbCxuPT09RGk/KG49UmUoKSx3Zj1EbCgpJiYwPT0oMTM0MjE3NzI3Jl9mKSYmMD09KDEzNDIxNzcyNyZSZik/aGY6Z2YpOm49PT1JaT8obj1SZSgpLHdmPXlmKTp3Zj1uPT09ZGM/a2Y6bnVsbCE9PW4mJlwib2JqZWN0XCI9PXR5cGVvZiBuJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnRoZW4/dmY6bWYseGY9bjt2YXIgdD1mZjtudWxsPT09dD8oUGY9dGYsRXQoZSxEKG4sZS5jdXJyZW50KSkpOjImdC5tb2RlJiZaKHQpfWZ1bmN0aW9uIERsKCl7dmFyIGU9aHMuY3VycmVudDtyZXR1cm4gbnVsbD09PWV8fCgoNDE5NDE3NiZkZik9PT1kZj9udWxsPT09Z3M6KCg2MjkxNDU2MCZkZik9PT1kZnx8MCE9KDUzNjg3MDkxMiZkZikpJiZlPT09Z3MpfWZ1bmN0aW9uIElsKCl7dmFyIGU9SmEuSDtyZXR1cm4gSmEuSD0kcyxudWxsPT09ZT8kczplfWZ1bmN0aW9uIEZsKCl7dmFyIGU9SmEuQTtyZXR1cm4gSmEuQT1HYyxlfWZ1bmN0aW9uIE1sKCl7UGY9YWYsMD09KDEzNDIxNzcyNyZfZikmJjA9PSgxMzQyMTc3MjcmUmYpfHxudWxsPT09Y2Z8fFRsKGNmLGRmLE5mKX1mdW5jdGlvbiBXbChlLG4pe3ZhciB0PXNmO3NmfD1aYzt2YXIgcj1JbCgpLGw9RmwoKTtpZihjZiE9PWV8fGRmIT09bil7aWYoX3Upe3ZhciBhPWUubWVtb2l6ZWRVcGRhdGVyczswPGEuc2l6ZSYmKGlhKGUsZGYpLGEuY2xlYXIoKSksTihlLG4pfWpmPW51bGwsTGwoZSxuKX1uPSExO2U6Zm9yKDs7KXRyeXtpZih3ZiE9PXBmJiZudWxsIT09ZmYpe2E9ZmY7dmFyIG89eGY7c3dpdGNoKHdmKXtjYXNlIGtmOk5sKCksUGY9dWY7YnJlYWsgZTtjYXNlIGdmOmNhc2UgaGY6bnx8bnVsbCE9PWhzLmN1cnJlbnR8fChuPSEwKTtkZWZhdWx0OndmPXBmLHhmPW51bGwsQmwoZSxhLG8pfX1IbCgpO2JyZWFrfWNhdGNoKG4pe1VsKGUsbil9aWYobiYmZS5zaGVsbFN1c3BlbmRDb3VudGVyKyssbnIoKSxzZj10LEphLkg9cixKYS5BPWwsbnVsbCE9PWZmKXRocm93IEVycm9yKFwiQ2Fubm90IGNvbW1pdCBhbiBpbmNvbXBsZXRlIHJvb3QuIFRoaXMgZXJyb3IgaXMgbGlrZWx5IGNhdXNlZCBieSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuXCIpO3JldHVybiBjZj1udWxsLGRmPTAsTygpLFBmfWZ1bmN0aW9uIEhsKCl7Zm9yKDtudWxsIT09ZmY7KUFsKGZmKX1mdW5jdGlvbiBqbCgpe2Zvcig7bnVsbCE9PWZmJiYheXUoKTspQWwoZmYpfWZ1bmN0aW9uIEFsKGUpe3ZhciBuPWUuYWx0ZXJuYXRlOygyJmUubW9kZSkhPT0kdT8oWChlKSxuPXkoZSxlcixuLGUsRWYpLFooZSkpOm49eShlLGVyLG4sZSxFZiksZS5tZW1vaXplZFByb3BzPWUucGVuZGluZ1Byb3BzLG51bGw9PT1uP1ZsKGUpOmZmPW59ZnVuY3Rpb24gUWwoZSl7dmFyIG49eShlLE9sLGUpO2UubWVtb2l6ZWRQcm9wcz1lLnBlbmRpbmdQcm9wcyxudWxsPT09bj9WbChlKTpmZj1ufWZ1bmN0aW9uIE9sKGUpe3ZhciBuPWUuYWx0ZXJuYXRlLHQ9KDImZS5tb2RlKSE9PSR1O3N3aXRjaCh0JiZYKGUpLGUudGFnKXtjYXNlIDE1OmNhc2UgMDpuPUh0KG4sZSxlLnBlbmRpbmdQcm9wcyxlLnR5cGUsdm9pZCAwLGRmKTticmVhaztjYXNlIDExOm49SHQobixlLGUucGVuZGluZ1Byb3BzLGUudHlwZS5yZW5kZXIsZS5yZWYsZGYpO2JyZWFrO2Nhc2UgNTphbihlKTtkZWZhdWx0OnpyKG4sZSksbj1lcihuLGU9ZmY9ZGEoZSxFZiksRWYpfXJldHVybiB0JiZaKGUpLG59ZnVuY3Rpb24gQmwoZSxuLHQpe25yKCksYW4obikscnM9bnVsbCxscz0wO3ZhciByPW4ucmV0dXJuO3RyeXtpZihmdW5jdGlvbihlLG4sdCxyLGwpe2lmKHQuZmxhZ3N8PTMyNzY4LF91JiZpYShlLGwpLG51bGwhPT1yJiZcIm9iamVjdFwiPT10eXBlb2YgciYmXCJmdW5jdGlvblwiPT10eXBlb2Ygci50aGVuKXtpZihudWxsIT09KG49dC5hbHRlcm5hdGUpJiZvcihuLHQsbCwhMCksbnVsbCE9PSh0PWhzLmN1cnJlbnQpKXtzd2l0Y2godC50YWcpe2Nhc2UgMTM6cmV0dXJuIG51bGw9PT1ncz9NbCgpOm51bGw9PT10LmFsdGVybmF0ZSYmUGY9PT1uZiYmKFBmPWxmKSx0LmZsYWdzJj0tMjU3LHQuZmxhZ3N8PTY1NTM2LHQubGFuZXM9bCxyPT09Rmk/dC5mbGFnc3w9MTYzODQ6KG51bGw9PT0obj10LnVwZGF0ZVF1ZXVlKT90LnVwZGF0ZVF1ZXVlPW5ldyBTZXQoW3JdKTpuLmFkZChyKSxabChlLHIsbCkpLCExO2Nhc2UgMjI6cmV0dXJuIHQuZmxhZ3N8PTY1NTM2LHI9PT1GaT90LmZsYWdzfD0xNjM4NDoobnVsbD09PShuPXQudXBkYXRlUXVldWUpPyhuPXt0cmFuc2l0aW9uczpudWxsLG1hcmtlckluc3RhbmNlczpudWxsLHJldHJ5UXVldWU6bmV3IFNldChbcl0pfSx0LnVwZGF0ZVF1ZXVlPW4pOm51bGw9PT0odD1uLnJldHJ5UXVldWUpP24ucmV0cnlRdWV1ZT1uZXcgU2V0KFtyXSk6dC5hZGQociksWmwoZSxyLGwpKSwhMX10aHJvdyBFcnJvcihcIlVuZXhwZWN0ZWQgU3VzcGVuc2UgaGFuZGxlciB0YWcgKFwiK3QudGFnK1wiKS4gVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC5cIil9cmV0dXJuIFpsKGUscixsKSxNbCgpLCExfXZhciBhPUQoRXJyb3IoXCJUaGVyZSB3YXMgYW4gZXJyb3IgZHVyaW5nIGNvbmN1cnJlbnQgcmVuZGVyaW5nIGJ1dCBSZWFjdCB3YXMgYWJsZSB0byByZWNvdmVyIGJ5IGluc3RlYWQgc3luY2hyb25vdXNseSByZW5kZXJpbmcgdGhlIGVudGlyZSByb290LlwiLHtjYXVzZTpyfSksdCk7aWYobnVsbD09PVVmP1VmPVthXTpVZi5wdXNoKGEpLFBmIT09YWYmJihQZj1yZiksbnVsbD09PW4pcmV0dXJuITA7cj1EKHIsdCksdD1uO2Rve3N3aXRjaCh0LnRhZyl7Y2FzZSAzOnJldHVybiB0LmZsYWdzfD02NTUzNixlPWwmLWwsdC5sYW5lc3w9ZSx2ZSh0LGU9X3QodC5zdGF0ZU5vZGUscixlKSksITE7Y2FzZSAxOmlmKG49dC50eXBlLGE9dC5zdGF0ZU5vZGUsMD09KDEyOCZ0LmZsYWdzKSYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4uZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09YSYmXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1BZnx8IUFmLmhhcyhhKSkpKXJldHVybiB0LmZsYWdzfD02NTUzNixsJj0tbCx0LmxhbmVzfD1sLFR0KGw9UnQobCksZSx0LHIpLHZlKHQsbCksITF9dD10LnJldHVybn13aGlsZShudWxsIT09dCk7cmV0dXJuITF9KGUscixuLHQsZGYpKXJldHVybiBQZj10ZixFdChlLEQodCxlLmN1cnJlbnQpKSx2b2lkKGZmPW51bGwpfWNhdGNoKG4pe2lmKG51bGwhPT1yKXRocm93IGZmPXIsbjtyZXR1cm4gUGY9dGYsRXQoZSxEKHQsZS5jdXJyZW50KSksdm9pZChmZj1udWxsKX0zMjc2OCZuLmZsYWdzPyRsKG4sITApOlZsKG4pfWZ1bmN0aW9uIFZsKGUpe3ZhciBuPWU7ZG97aWYoMCE9KDMyNzY4Jm4uZmxhZ3MpKXJldHVybiB2b2lkICRsKG4semYpO3ZhciB0PW4uYWx0ZXJuYXRlO2lmKGU9bi5yZXR1cm4sWChuKSx0PXkobix3cix0LG4sRWYpLCgyJm4ubW9kZSkhPT0kdSYmZWUobiksbnVsbCE9PXQpcmV0dXJuIHZvaWQoZmY9dCk7aWYobnVsbCE9PShuPW4uc2libGluZykpcmV0dXJuIHZvaWQoZmY9bik7ZmY9bj1lfXdoaWxlKG51bGwhPT1uKTtQZj09PW5mJiYoUGY9b2YpfWZ1bmN0aW9uICRsKGUsbil7ZG97dmFyIHQ9eHIoZS5hbHRlcm5hdGUsZSk7aWYobnVsbCE9PXQpcmV0dXJuIHQuZmxhZ3MmPTMyNzY3LHZvaWQoZmY9dCk7aWYoKDImZS5tb2RlKSE9PSR1KXtlZShlKSx0PWUuYWN0dWFsRHVyYXRpb247Zm9yKHZhciByPWUuY2hpbGQ7bnVsbCE9PXI7KXQrPXIuYWN0dWFsRHVyYXRpb24scj1yLnNpYmxpbmc7ZS5hY3R1YWxEdXJhdGlvbj10fWlmKG51bGwhPT0odD1lLnJldHVybikmJih0LmZsYWdzfD0zMjc2OCx0LnN1YnRyZWVGbGFncz0wLHQuZGVsZXRpb25zPW51bGwpLCFuJiZudWxsIT09KGU9ZS5zaWJsaW5nKSlyZXR1cm4gdm9pZChmZj1lKTtmZj1lPXR9d2hpbGUobnVsbCE9PWUpO1BmPXVmLGZmPW51bGx9ZnVuY3Rpb24gcWwoZSxuLHQscixsLGEsbyx1LGkscyl7dmFyIGM9SmEuVCxmPXhvKCk7dHJ5e3dvKDIpLEphLlQ9bnVsbCxmdW5jdGlvbihlLG4sdCxyLGwsYSl7ZG97SmwoKX13aGlsZShudWxsIT09T2YpO2lmKHhpLmZsdXNoTGVnYWN5Q29udGV4dFdhcm5pbmcoKSx4aS5mbHVzaFBlbmRpbmdVbnNhZmVMaWZlY3ljbGVXYXJuaW5ncygpLChzZiYoWmN8ZWYpKSE9PVhjKXRocm93IEVycm9yKFwiU2hvdWxkIG5vdCBhbHJlYWR5IGJlIHdvcmtpbmcuXCIpO3ZhciBvPWUuZmluaXNoZWRXb3JrO2lmKHI9ZS5maW5pc2hlZExhbmVzLG51bGw9PT1vKXJldHVybiBudWxsO2lmKDA9PT1yJiZjb25zb2xlLmVycm9yKFwicm9vdC5maW5pc2hlZExhbmVzIHNob3VsZCBub3QgYmUgZW1wdHkgZHVyaW5nIGEgY29tbWl0LiBUaGlzIGlzIGEgYnVnIGluIFJlYWN0LlwiKSxlLmZpbmlzaGVkV29yaz1udWxsLGUuZmluaXNoZWRMYW5lcz0wLG89PT1lLmN1cnJlbnQpdGhyb3cgRXJyb3IoXCJDYW5ub3QgY29tbWl0IHRoZSBzYW1lIHRyZWUgYXMgYmVmb3JlLiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKTtlLmNhbGxiYWNrTm9kZT1udWxsLGUuY2FsbGJhY2tQcmlvcml0eT0wLGUuY2FuY2VsUGVuZGluZ0NvbW1pdD1udWxsO3ZhciB1LGkscyxjPW8ubGFuZXN8by5jaGlsZExhbmVzO2lmKGZ1bmN0aW9uKGUsbix0LHIpe3ZhciBsPWUucGVuZGluZ0xhbmVzO2UucGVuZGluZ0xhbmVzPXQsZS5zdXNwZW5kZWRMYW5lcz0wLGUucGluZ2VkTGFuZXM9MCxlLndhcm1MYW5lcz0wLGUuZXhwaXJlZExhbmVzJj10LGUuZW50YW5nbGVkTGFuZXMmPXQsZS5lcnJvclJlY292ZXJ5RGlzYWJsZWRMYW5lcyY9dCxlLnNoZWxsU3VzcGVuZENvdW50ZXI9MCxuPWUuZW50YW5nbGVtZW50czt2YXIgYT1lLmV4cGlyYXRpb25UaW1lcyxvPWUuaGlkZGVuVXBkYXRlcztmb3IodD1sJn50OzA8dDspe3ZhciB1PTMxLWN1KHQpO2w9MTw8dSxuW3VdPTAsYVt1XT0tMTt2YXIgaT1vW3VdO2lmKG51bGwhPT1pKWZvcihvW3VdPW51bGwsdT0wO3U8aS5sZW5ndGg7dSsrKXt2YXIgcz1pW3VdO251bGwhPT1zJiYocy5sYW5lJj0tNTM2ODcwOTEzKX10Jj1+bH0wIT09ciYmXyhlLHIsMCl9KGUscixjfD1HdSxhKSxlPT09Y2YmJihmZj1jZj1udWxsLGRmPTApLDA9PSgxMDI1NiZvLnN1YnRyZWVGbGFncykmJjA9PSgxMDI1NiZvLmZsYWdzKXx8UWZ8fChRZj0hMCxWZj1jLCRmPXQsdT13dSxpPWZ1bmN0aW9uKCl7cmV0dXJuIEpsKCksbnVsbH0sbnVsbCE9PShzPUphLmFjdFF1ZXVlKT9zLnB1c2goaSk6aHUodSxpKSksS3U9SnUoKSx0PTAhPSgxNTk5MCZvLmZsYWdzKSwwIT0oMTU5OTAmby5zdWJ0cmVlRmxhZ3MpfHx0KXt0PUphLlQsSmEuVD1udWxsLGE9eG8oKSx3bygyKTt2YXIgZj1zZjtzZnw9ZWYsZnVuY3Rpb24oZSxuKXtmb3IoaW8oZS5jb250YWluZXJJbmZvKSxBYz1uO251bGwhPT1BYzspaWYobj0oZT1BYykuY2hpbGQsMCE9KDEwMjgmZS5zdWJ0cmVlRmxhZ3MpJiZudWxsIT09biluLnJldHVybj1lLEFjPW47ZWxzZSBmb3IoO251bGwhPT1BYzspe3ZhciB0PShuPWU9QWMpLmFsdGVybmF0ZSxyPW4uZmxhZ3M7c3dpdGNoKG4udGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgNTpjYXNlIDI2OmNhc2UgMjc6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2Nhc2UgMTowIT0oMTAyNCZyKSYmbnVsbCE9PXQmJkRyKG4sdCk7YnJlYWs7Y2FzZSAzOjAhPSgxMDI0JnIpJiZ2byYmR28obi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7ZGVmYXVsdDppZigwIT0oMTAyNCZyKSl0aHJvdyBFcnJvcihcIlRoaXMgdW5pdCBvZiB3b3JrIHRhZyBzaG91bGQgbm90IGhhdmUgc2lkZS1lZmZlY3RzLiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKX1pZihudWxsIT09KG49ZS5zaWJsaW5nKSl7bi5yZXR1cm49ZS5yZXR1cm4sQWM9bjticmVha31BYz1lLnJldHVybn1lPUJjLEJjPSExfShlLG8pLGZ1bmN0aW9uKGUsbix0KXtRYz10LE9jPWUsWnIobixlKSxPYz1RYz1udWxsfShlLG8sciksc28oZS5jb250YWluZXJJbmZvKSxlLmN1cnJlbnQ9byxmdW5jdGlvbihlLG4sdCl7UWM9dCxPYz1uLHFyKG4sZS5hbHRlcm5hdGUsZSksT2M9UWM9bnVsbH0obyxlLHIpLGJ1KCksc2Y9Zix3byhhKSxKYS5UPXR9ZWxzZSBlLmN1cnJlbnQ9bztpZigodD1RZik/KFFmPSExLE9mPWUsQmY9cik6KEdsKGUsYyksWmY9MCxlZD1udWxsKSwwPT09KGM9ZS5wZW5kaW5nTGFuZXMpJiYoQWY9bnVsbCksdHx8b2EoZSksby5zdGF0ZU5vZGUsX3UmJmUubWVtb2l6ZWRVcGRhdGVycy5jbGVhcigpLGxlKGUpLG51bGwhPT1uKWZvcihsPWUub25SZWNvdmVyYWJsZUVycm9yLG89MDtvPG4ubGVuZ3RoO28rKyl0PVlsKChjPW5bb10pLnN0YWNrKSx5KGMuc291cmNlLGwsYy52YWx1ZSx0KTswIT0oMyZCZikmJkpsKCksYz1lLnBlbmRpbmdMYW5lcywwIT0oNDE5NDIxOCZyKSYmMCE9KDQyJmMpPyhuaT0hMCxlPT09R2Y/WWYrKzooWWY9MCxHZj1lKSk6WWY9MCxhZSgwKX0oZSxuLHQscixmLGwpfWZpbmFsbHl7SmEuVD1jLHdvKGYpfX1mdW5jdGlvbiBZbChlKXtyZXR1cm4gZT17Y29tcG9uZW50U3RhY2s6ZX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJkaWdlc3RcIix7Z2V0OmZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcignWW91IGFyZSBhY2Nlc3NpbmcgXCJkaWdlc3RcIiBmcm9tIHRoZSBlcnJvckluZm8gb2JqZWN0IHBhc3NlZCB0byBvblJlY292ZXJhYmxlRXJyb3IuIFRoaXMgcHJvcGVydHkgaXMgbm8gbG9uZ2VyIHByb3ZpZGVkIGFzIHBhcnQgb2YgZXJyb3JJbmZvIGJ1dCBjYW4gYmUgYWNjZXNzZWQgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgRXJyb3IgaW5zdGFuY2UgaXRzZWxmLicpfX0pLGV9ZnVuY3Rpb24gR2woZSxuKXswPT0oZS5wb29sZWRDYWNoZUxhbmVzJj1uKSYmbnVsbCE9KG49ZS5wb29sZWRDYWNoZSkmJihlLnBvb2xlZENhY2hlPW51bGwsbXIobikpfWZ1bmN0aW9uIEpsKCl7aWYobnVsbCE9PU9mKXt2YXIgZT1PZixuPVZmO1ZmPTA7dmFyIHQ9TChCZikscj0zMj50PzMyOnQ7dD1KYS5UO3ZhciBsPXhvKCk7dHJ5e2lmKHdvKHIpLEphLlQ9bnVsbCxudWxsPT09T2YpdmFyIGE9ITE7ZWxzZXtyPSRmLCRmPW51bGw7dmFyIG89T2YsdT1CZjtpZihPZj1udWxsLEJmPTAsKHNmJihaY3xlZikpIT09WGMpdGhyb3cgRXJyb3IoXCJDYW5ub3QgZmx1c2ggcGFzc2l2ZSBlZmZlY3RzIHdoaWxlIGFscmVhZHkgcmVuZGVyaW5nLlwiKTtKZj0hMCxLZj0hMSxudWxsIT09UHUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFB1Lm1hcmtQYXNzaXZlRWZmZWN0c1N0YXJ0ZWQmJlB1Lm1hcmtQYXNzaXZlRWZmZWN0c1N0YXJ0ZWQodSk7dmFyIGk9c2Y7c2Z8PWVmLGJsKG8uY3VycmVudCksY2wobyxvLmN1cnJlbnQsdSxyKSxudWxsIT09UHUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFB1Lm1hcmtQYXNzaXZlRWZmZWN0c1N0b3BwZWQmJlB1Lm1hcmtQYXNzaXZlRWZmZWN0c1N0b3BwZWQoKSxvYShvKSxzZj1pLGFlKDApLEtmP289PT1lZD9aZisrOihaZj0wLGVkPW8pOlpmPTAsS2Y9SmY9ITEsRXUmJkV1Lm9uUG9zdENvbW1pdEZpYmVyUm9vdDt2YXIgcz1vLmN1cnJlbnQuc3RhdGVOb2RlO3MuZWZmZWN0RHVyYXRpb249MCxzLnBhc3NpdmVFZmZlY3REdXJhdGlvbj0wLGE9ITB9cmV0dXJuIGF9ZmluYWxseXt3byhsKSxKYS5UPXQsR2woZSxuKX19cmV0dXJuITF9ZnVuY3Rpb24gS2woZSxuLHQpe249RCh0LG4pLG51bGwhPT0oZT15ZShlLG49X3QoZS5zdGF0ZU5vZGUsbiwyKSwyKSkmJihQKGUsMiksbGUoZSkpfWZ1bmN0aW9uIFhsKGUsbix0KXtpZihuZD0hMSwzPT09ZS50YWcpS2woZSxlLHQpO2Vsc2V7Zm9yKDtudWxsIT09bjspe2lmKDM9PT1uLnRhZylyZXR1cm4gdm9pZCBLbChuLGUsdCk7aWYoMT09PW4udGFnKXt2YXIgcj1uLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUFmfHwhQWYuaGFzKHIpKSlyZXR1cm4gZT1EKHQsZSksdm9pZChudWxsIT09KHI9eWUobix0PVJ0KDIpLDIpKSYmKFR0KHQscixuLGUpLFAociwyKSxsZShyKSkpfW49bi5yZXR1cm59Y29uc29sZS5lcnJvcihcIkludGVybmFsIFJlYWN0IGVycm9yOiBBdHRlbXB0ZWQgdG8gY2FwdHVyZSBhIGNvbW1pdCBwaGFzZSBlcnJvciBpbnNpZGUgYSBkZXRhY2hlZCB0cmVlLiBUaGlzIGluZGljYXRlcyBhIGJ1ZyBpbiBSZWFjdC4gUG90ZW50aWFsIGNhdXNlcyBpbmNsdWRlIGRlbGV0aW5nIHRoZSBzYW1lIGZpYmVyIG1vcmUgdGhhbiBvbmNlLCBjb21taXR0aW5nIGFuIGFscmVhZHktZmluaXNoZWQgdHJlZSwgb3IgYW4gaW5jb25zaXN0ZW50IHJldHVybiBwb2ludGVyLlxcblxcbkVycm9yIG1lc3NhZ2U6XFxuXFxuJXNcIix0KX19ZnVuY3Rpb24gWmwoZSxuLHQpe3ZhciByPWUucGluZ0NhY2hlO2lmKG51bGw9PT1yKXtyPWUucGluZ0NhY2hlPW5ldyBLYzt2YXIgbD1uZXcgU2V0O3Iuc2V0KG4sbCl9ZWxzZSB2b2lkIDA9PT0obD1yLmdldChuKSkmJihsPW5ldyBTZXQsci5zZXQobixsKSk7bC5oYXModCl8fChDZj0hMCxsLmFkZCh0KSxyPWVhLmJpbmQobnVsbCxlLG4sdCksX3UmJmlhKGUsdCksbi50aGVuKHIscikpfWZ1bmN0aW9uIGVhKGUsbix0KXt2YXIgcj1lLnBpbmdDYWNoZTtudWxsIT09ciYmci5kZWxldGUobiksZS5waW5nZWRMYW5lc3w9ZS5zdXNwZW5kZWRMYW5lcyZ0LGUud2FybUxhbmVzJj1+dCx3bCgpJiZudWxsPT09SmEuYWN0UXVldWUmJmNvbnNvbGUuZXJyb3IoXCJBIHN1c3BlbmRlZCByZXNvdXJjZSBmaW5pc2hlZCBsb2FkaW5nIGluc2lkZSBhIHRlc3QsIGJ1dCB0aGUgZXZlbnQgd2FzIG5vdCB3cmFwcGVkIGluIGFjdCguLi4pLlxcblxcbldoZW4gdGVzdGluZywgY29kZSB0aGF0IHJlc29sdmVzIHN1c3BlbmRlZCBkYXRhIHNob3VsZCBiZSB3cmFwcGVkIGludG8gYWN0KC4uLik6XFxuXFxuYWN0KCgpID0+IHtcXG4gIC8qIGZpbmlzaCBsb2FkaW5nIHN1c3BlbmRlZCBkYXRhICovXFxufSk7XFxuLyogYXNzZXJ0IG9uIHRoZSBvdXRwdXQgKi9cXG5cXG5UaGlzIGVuc3VyZXMgdGhhdCB5b3UncmUgdGVzdGluZyB0aGUgYmVoYXZpb3IgdGhlIHVzZXIgd291bGQgc2VlIGluIHRoZSBicm93c2VyLiBMZWFybiBtb3JlIGF0IGh0dHBzOi8vcmVhY3QuZGV2L2xpbmsvd3JhcC10ZXN0cy13aXRoLWFjdFwiKSxjZj09PWUmJihkZiZ0KT09PXQmJihQZj09PWFmfHxQZj09PWxmJiYoNjI5MTQ1NjAmZGYpPT09ZGYmJnZ1KCktRmY8TWY/KHNmJlpjKT09PVhjJiZMbChlLDApOlRmfD10LExmPT09ZGYmJihMZj0wKSksbGUoZSl9ZnVuY3Rpb24gbmEoZSxuKXswPT09biYmKG49QygpKSxudWxsIT09KGU9JChlLG4pKSYmKFAoZSxuKSxsZShlKSl9ZnVuY3Rpb24gdGEoZSl7dmFyIG49ZS5tZW1vaXplZFN0YXRlLHQ9MDtudWxsIT09biYmKHQ9bi5yZXRyeUxhbmUpLG5hKGUsdCl9ZnVuY3Rpb24gcmEoZSxuKXt2YXIgdD0wO3N3aXRjaChlLnRhZyl7Y2FzZSAxMzp2YXIgcj1lLnN0YXRlTm9kZSxsPWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09bCYmKHQ9bC5yZXRyeUxhbmUpO2JyZWFrO2Nhc2UgMTk6cj1lLnN0YXRlTm9kZTticmVhaztjYXNlIDIyOnI9ZS5zdGF0ZU5vZGUuX3JldHJ5Q2FjaGU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihcIlBpbmdlZCB1bmtub3duIHN1c3BlbnNlIGJvdW5kYXJ5IHR5cGUuIFRoaXMgaXMgcHJvYmFibHkgYSBidWcgaW4gUmVhY3QuXCIpfW51bGwhPT1yJiZyLmRlbGV0ZShuKSxuYShlLHQpfWZ1bmN0aW9uIGxhKGUsbix0KXtpZigwIT0oMzM1NjI2MjQmbi5zdWJ0cmVlRmxhZ3MpKWZvcihuPW4uY2hpbGQ7bnVsbCE9PW47KXt2YXIgcj1lLGw9bixhPWwudHlwZT09PUZhO2E9dHx8YSwyMiE9PWwudGFnPzMzNTU0NDMyJmwuZmxhZ3M/YSYmeShsLGFhLHIsbCwoNjQmbC5tb2RlKT09PSR1KTpsYShyLGwsYSk6bnVsbD09PWwubWVtb2l6ZWRTdGF0ZSYmKGEmJjgxOTImbC5mbGFncz95KGwsYWEscixsKTozMzU1NDQzMiZsLnN1YnRyZWVGbGFncyYmeShsLGxhLHIsbCxhKSksbj1uLnNpYmxpbmd9fWZ1bmN0aW9uIGFhKGUsbil7dmFyIHQ9ISgyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXSl8fGFyZ3VtZW50c1syXTtVKCEwKTt0cnl7cmwobiksdCYmU2wobiksYWwoZSxuLmFsdGVybmF0ZSxuLCExKSx0JiZkbChlLG4sMCxudWxsLCExKX1maW5hbGx5e1UoITEpfX1mdW5jdGlvbiBvYShlKXt2YXIgbj0hMDsyNCZlLmN1cnJlbnQubW9kZXx8KG49ITEpLGxhKGUsZS5jdXJyZW50LG4pfWZ1bmN0aW9uIHVhKGUpe2lmKChzZiZaYyk9PT1YYyl7dmFyIG49ZS50YWc7aWYoMz09PW58fDE9PT1ufHwwPT09bnx8MTE9PT1ufHwxND09PW58fDE1PT09bil7aWYobj1jKGUpfHxcIlJlYWN0Q29tcG9uZW50XCIsbnVsbCE9PWFkKXtpZihhZC5oYXMobikpcmV0dXJuO2FkLmFkZChuKX1lbHNlIGFkPW5ldyBTZXQoW25dKTt5KGUsKGZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcihcIkNhbid0IHBlcmZvcm0gYSBSZWFjdCBzdGF0ZSB1cGRhdGUgb24gYSBjb21wb25lbnQgdGhhdCBoYXNuJ3QgbW91bnRlZCB5ZXQuIFRoaXMgaW5kaWNhdGVzIHRoYXQgeW91IGhhdmUgYSBzaWRlLWVmZmVjdCBpbiB5b3VyIHJlbmRlciBmdW5jdGlvbiB0aGF0IGFzeW5jaHJvbm91c2x5IGxhdGVyIGNhbGxzIHRyaWVzIHRvIHVwZGF0ZSB0aGUgY29tcG9uZW50LiBNb3ZlIHRoaXMgd29yayB0byB1c2VFZmZlY3QgaW5zdGVhZC5cIil9KSl9fX1mdW5jdGlvbiBpYShlLG4pe191JiZlLm1lbW9pemVkVXBkYXRlcnMuZm9yRWFjaCgoZnVuY3Rpb24odCl7VChlLHQsbil9KSl9ZnVuY3Rpb24gc2EoZSxuLHQscil7dGhpcy50YWc9ZSx0aGlzLmtleT10LHRoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGwsdGhpcy5pbmRleD0wLHRoaXMucmVmQ2xlYW51cD10aGlzLnJlZj1udWxsLHRoaXMucGVuZGluZ1Byb3BzPW4sdGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGwsdGhpcy5tb2RlPXIsdGhpcy5zdWJ0cmVlRmxhZ3M9dGhpcy5mbGFncz0wLHRoaXMuZGVsZXRpb25zPW51bGwsdGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MCx0aGlzLmFsdGVybmF0ZT1udWxsLHRoaXMuYWN0dWFsRHVyYXRpb249LTAsdGhpcy5hY3R1YWxTdGFydFRpbWU9LTEuMSx0aGlzLnRyZWVCYXNlRHVyYXRpb249dGhpcy5zZWxmQmFzZUR1cmF0aW9uPS0wLHRoaXMuX2RlYnVnT3duZXI9dGhpcy5fZGVidWdJbmZvPW51bGwsdGhpcy5fZGVidWdOZWVkc1JlbW91bnQ9ITEsdGhpcy5fZGVidWdIb29rVHlwZXM9bnVsbCxpZHx8XCJmdW5jdGlvblwiIT10eXBlb2YgT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zfHxPYmplY3QucHJldmVudEV4dGVuc2lvbnModGhpcyl9ZnVuY3Rpb24gY2EoZSl7cmV0dXJuISghKGU9ZS5wcm90b3R5cGUpfHwhZS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBmYShlLG4pe3ZhciByPWUuYWx0ZXJuYXRlO3N3aXRjaChudWxsPT09cj8oKHI9dChlLnRhZyxuLGUua2V5LGUubW9kZSkpLmVsZW1lbnRUeXBlPWUuZWxlbWVudFR5cGUsci50eXBlPWUudHlwZSxyLnN0YXRlTm9kZT1lLnN0YXRlTm9kZSxyLl9kZWJ1Z093bmVyPWUuX2RlYnVnT3duZXIsci5fZGVidWdIb29rVHlwZXM9ZS5fZGVidWdIb29rVHlwZXMsci5hbHRlcm5hdGU9ZSxlLmFsdGVybmF0ZT1yKTooci5wZW5kaW5nUHJvcHM9bixyLnR5cGU9ZS50eXBlLHIuZmxhZ3M9MCxyLnN1YnRyZWVGbGFncz0wLHIuZGVsZXRpb25zPW51bGwsci5hY3R1YWxEdXJhdGlvbj0tMCxyLmFjdHVhbFN0YXJ0VGltZT0tMS4xKSxyLmZsYWdzPTMxNDU3MjgwJmUuZmxhZ3Msci5jaGlsZExhbmVzPWUuY2hpbGRMYW5lcyxyLmxhbmVzPWUubGFuZXMsci5jaGlsZD1lLmNoaWxkLHIubWVtb2l6ZWRQcm9wcz1lLm1lbW9pemVkUHJvcHMsci5tZW1vaXplZFN0YXRlPWUubWVtb2l6ZWRTdGF0ZSxyLnVwZGF0ZVF1ZXVlPWUudXBkYXRlUXVldWUsbj1lLmRlcGVuZGVuY2llcyxyLmRlcGVuZGVuY2llcz1udWxsPT09bj9udWxsOntsYW5lczpuLmxhbmVzLGZpcnN0Q29udGV4dDpuLmZpcnN0Q29udGV4dCxfZGVidWdUaGVuYWJsZVN0YXRlOm4uX2RlYnVnVGhlbmFibGVTdGF0ZX0sci5zaWJsaW5nPWUuc2libGluZyxyLmluZGV4PWUuaW5kZXgsci5yZWY9ZS5yZWYsci5yZWZDbGVhbnVwPWUucmVmQ2xlYW51cCxyLnNlbGZCYXNlRHVyYXRpb249ZS5zZWxmQmFzZUR1cmF0aW9uLHIudHJlZUJhc2VEdXJhdGlvbj1lLnRyZWVCYXNlRHVyYXRpb24sci5fZGVidWdJbmZvPWUuX2RlYnVnSW5mbyxyLl9kZWJ1Z05lZWRzUmVtb3VudD1lLl9kZWJ1Z05lZWRzUmVtb3VudCxyLnRhZyl7Y2FzZSAwOmNhc2UgMTU6Y2FzZSAxOmNhc2UgMTE6ci50eXBlPWUudHlwZX1yZXR1cm4gcn1mdW5jdGlvbiBkYShlLG4pe2UuZmxhZ3MmPTMxNDU3MjgyO3ZhciB0PWUuYWx0ZXJuYXRlO3JldHVybiBudWxsPT09dD8oZS5jaGlsZExhbmVzPTAsZS5sYW5lcz1uLGUuY2hpbGQ9bnVsbCxlLnN1YnRyZWVGbGFncz0wLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsLGUuc3RhdGVOb2RlPW51bGwsZS5zZWxmQmFzZUR1cmF0aW9uPTAsZS50cmVlQmFzZUR1cmF0aW9uPTApOihlLmNoaWxkTGFuZXM9dC5jaGlsZExhbmVzLGUubGFuZXM9dC5sYW5lcyxlLmNoaWxkPXQuY2hpbGQsZS5zdWJ0cmVlRmxhZ3M9MCxlLmRlbGV0aW9ucz1udWxsLGUubWVtb2l6ZWRQcm9wcz10Lm1lbW9pemVkUHJvcHMsZS5tZW1vaXplZFN0YXRlPXQubWVtb2l6ZWRTdGF0ZSxlLnVwZGF0ZVF1ZXVlPXQudXBkYXRlUXVldWUsZS50eXBlPXQudHlwZSxuPXQuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1uP251bGw6e2xhbmVzOm4ubGFuZXMsZmlyc3RDb250ZXh0Om4uZmlyc3RDb250ZXh0LF9kZWJ1Z1RoZW5hYmxlU3RhdGU6bi5fZGVidWdUaGVuYWJsZVN0YXRlfSxlLnNlbGZCYXNlRHVyYXRpb249dC5zZWxmQmFzZUR1cmF0aW9uLGUudHJlZUJhc2VEdXJhdGlvbj10LnRyZWVCYXNlRHVyYXRpb24pLGV9ZnVuY3Rpb24gcGEoZSxuLHIsbCxhLG8pe3ZhciB1PTAsaT1lO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUpY2EoZSkmJih1PTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpdT01O2Vsc2UgZTpzd2l0Y2goZSl7Y2FzZSBJYTpyZXR1cm4gaGEoci5jaGlsZHJlbixhLG8sbik7Y2FzZSBGYTp1PTgsYXw9MjQ7YnJlYWs7Y2FzZSBNYTpyZXR1cm4gbD1hLFwic3RyaW5nXCIhPXR5cGVvZihlPXIpLmlkJiZjb25zb2xlLmVycm9yKCdQcm9maWxlciBtdXN0IHNwZWNpZnkgYW4gXCJpZFwiIG9mIHR5cGUgYHN0cmluZ2AgYXMgYSBwcm9wLiBSZWNlaXZlZCB0aGUgdHlwZSBgJXNgIGluc3RlYWQuJyx0eXBlb2YgZS5pZCksKG49dCgxMixlLG4sMnxsKSkuZWxlbWVudFR5cGU9TWEsbi5sYW5lcz1vLG4uc3RhdGVOb2RlPXtlZmZlY3REdXJhdGlvbjowLHBhc3NpdmVFZmZlY3REdXJhdGlvbjowfSxuO2Nhc2UgUWE6cmV0dXJuKG49dCgxMyxyLG4sYSkpLmVsZW1lbnRUeXBlPVFhLG4ubGFuZXM9byxuO2Nhc2UgT2E6cmV0dXJuKG49dCgxOSxyLG4sYSkpLmVsZW1lbnRUeXBlPU9hLG4ubGFuZXM9byxuO2Nhc2UgJGE6cmV0dXJuIGdhKHIsYSxvLG4pO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lKXN3aXRjaChlLiQkdHlwZW9mKXtjYXNlIFdhOmNhc2UgamE6dT0xMDticmVhayBlO2Nhc2UgSGE6dT05O2JyZWFrIGU7Y2FzZSBBYTp1PTExO2JyZWFrIGU7Y2FzZSBCYTp1PTE0O2JyZWFrIGU7Y2FzZSBWYTp1PTE2LGk9bnVsbDticmVhayBlfWk9XCJcIiwodm9pZCAwPT09ZXx8XCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lJiYwPT09T2JqZWN0LmtleXMoZSkubGVuZ3RoKSYmKGkrPVwiIFlvdSBsaWtlbHkgZm9yZ290IHRvIGV4cG9ydCB5b3VyIGNvbXBvbmVudCBmcm9tIHRoZSBmaWxlIGl0J3MgZGVmaW5lZCBpbiwgb3IgeW91IG1pZ2h0IGhhdmUgbWl4ZWQgdXAgZGVmYXVsdCBhbmQgbmFtZWQgaW1wb3J0cy5cIiksbnVsbD09PWU/cj1cIm51bGxcIjpsbyhlKT9yPVwiYXJyYXlcIjp2b2lkIDAhPT1lJiZlLiQkdHlwZW9mPT09VWE/KHI9XCI8XCIrKHMoZS50eXBlKXx8XCJVbmtub3duXCIpK1wiIC8+XCIsaT1cIiBEaWQgeW91IGFjY2lkZW50YWxseSBleHBvcnQgYSBKU1ggbGl0ZXJhbCBpbnN0ZWFkIG9mIGEgY29tcG9uZW50P1wiKTpyPXR5cGVvZiBlLCh1PWw/XCJudW1iZXJcIj09dHlwZW9mIGwudGFnP2MobCk6XCJzdHJpbmdcIj09dHlwZW9mIGwubmFtZT9sLm5hbWU6bnVsbDpudWxsKSYmKGkrPVwiXFxuXFxuQ2hlY2sgdGhlIHJlbmRlciBtZXRob2Qgb2YgYFwiK3UrXCJgLlwiKSx1PTI5LHI9RXJyb3IoXCJFbGVtZW50IHR5cGUgaXMgaW52YWxpZDogZXhwZWN0ZWQgYSBzdHJpbmcgKGZvciBidWlsdC1pbiBjb21wb25lbnRzKSBvciBhIGNsYXNzL2Z1bmN0aW9uIChmb3IgY29tcG9zaXRlIGNvbXBvbmVudHMpIGJ1dCBnb3Q6IFwiK3IrXCIuXCIraSksaT1udWxsfXJldHVybihuPXQodSxyLG4sYSkpLmVsZW1lbnRUeXBlPWUsbi50eXBlPWksbi5sYW5lcz1vLG4uX2RlYnVnT3duZXI9bCxufWZ1bmN0aW9uIG1hKGUsbix0KXtyZXR1cm4obj1wYShlLnR5cGUsZS5rZXksZS5wcm9wcyxlLl9vd25lcixuLHQpKS5fZGVidWdPd25lcj1lLl9vd25lcixufWZ1bmN0aW9uIGhhKGUsbixyLGwpe3JldHVybihlPXQoNyxlLGwsbikpLmxhbmVzPXIsZX1mdW5jdGlvbiBnYShlLG4scixsKXsoZT10KDIyLGUsbCxuKSkuZWxlbWVudFR5cGU9JGEsZS5sYW5lcz1yO3ZhciBhPXtfdmlzaWJpbGl0eToxLF9wZW5kaW5nVmlzaWJpbGl0eToxLF9wZW5kaW5nTWFya2VyczpudWxsLF9yZXRyeUNhY2hlOm51bGwsX3RyYW5zaXRpb25zOm51bGwsX2N1cnJlbnQ6bnVsbCxkZXRhY2g6ZnVuY3Rpb24oKXt2YXIgZT1hLG49ZS5fY3VycmVudDtpZihudWxsPT09bil0aHJvdyBFcnJvcihcIkNhbGxpbmcgT2Zmc2NyZWVuLmRldGFjaCBiZWZvcmUgaW5zdGFuY2UgaGFuZGxlIGhhcyBiZWVuIHNldC5cIik7aWYoMD09KDImZS5fcGVuZGluZ1Zpc2liaWxpdHkpKXt2YXIgdD0kKG4sMik7bnVsbCE9PXQmJihlLl9wZW5kaW5nVmlzaWJpbGl0eXw9MixDbCh0LG4sMikpfX0sYXR0YWNoOmZ1bmN0aW9uKCl7dmFyIGU9YSxuPWUuX2N1cnJlbnQ7aWYobnVsbD09PW4pdGhyb3cgRXJyb3IoXCJDYWxsaW5nIE9mZnNjcmVlbi5kZXRhY2ggYmVmb3JlIGluc3RhbmNlIGhhbmRsZSBoYXMgYmVlbiBzZXQuXCIpO2lmKDAhPSgyJmUuX3BlbmRpbmdWaXNpYmlsaXR5KSl7dmFyIHQ9JChuLDIpO251bGwhPT10JiYoZS5fcGVuZGluZ1Zpc2liaWxpdHkmPS0zLENsKHQsbiwyKSl9fX07cmV0dXJuIGUuc3RhdGVOb2RlPWEsZX1mdW5jdGlvbiB5YShlLG4scil7cmV0dXJuKGU9dCg2LGUsbnVsbCxuKSkubGFuZXM9cixlfWZ1bmN0aW9uIGJhKGUsbixyKXtyZXR1cm4obj10KDQsbnVsbCE9PWUuY2hpbGRyZW4/ZS5jaGlsZHJlbjpbXSxlLmtleSxuKSkubGFuZXM9cixuLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzplLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246ZS5pbXBsZW1lbnRhdGlvbn0sbn1mdW5jdGlvbiB2YShlLG4sdCxyLGwsYSxvLHUpe2Zvcih0aGlzLnRhZz0xLHRoaXMuY29udGFpbmVySW5mbz1lLHRoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsLHRoaXMudGltZW91dEhhbmRsZT1ibyx0aGlzLmNhbGxiYWNrTm9kZT10aGlzLm5leHQ9dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9dGhpcy5jYW5jZWxQZW5kaW5nQ29tbWl0PW51bGwsdGhpcy5jYWxsYmFja1ByaW9yaXR5PTAsdGhpcy5leHBpcmF0aW9uVGltZXM9RSgtMSksdGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLnNoZWxsU3VzcGVuZENvdW50ZXI9dGhpcy5lcnJvclJlY292ZXJ5RGlzYWJsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy53YXJtTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTAsdGhpcy5lbnRhbmdsZW1lbnRzPUUoMCksdGhpcy5oaWRkZW5VcGRhdGVzPUUobnVsbCksdGhpcy5pZGVudGlmaWVyUHJlZml4PXIsdGhpcy5vblVuY2F1Z2h0RXJyb3I9bCx0aGlzLm9uQ2F1Z2h0RXJyb3I9YSx0aGlzLm9uUmVjb3ZlcmFibGVFcnJvcj1vLHRoaXMucG9vbGVkQ2FjaGU9bnVsbCx0aGlzLnBvb2xlZENhY2hlTGFuZXM9MCx0aGlzLmZvcm1TdGF0ZT11LHRoaXMuaW5jb21wbGV0ZVRyYW5zaXRpb25zPW5ldyBNYXAsdGhpcy5wYXNzaXZlRWZmZWN0RHVyYXRpb249dGhpcy5lZmZlY3REdXJhdGlvbj0tMCx0aGlzLm1lbW9pemVkVXBkYXRlcnM9bmV3IFNldCxlPXRoaXMucGVuZGluZ1VwZGF0ZXJzTGFuZU1hcD1bXSxuPTA7MzE+bjtuKyspZS5wdXNoKG5ldyBTZXQpO3RoaXMuX2RlYnVnUm9vdFR5cGU9dD9cImh5ZHJhdGVSb290KClcIjpcImNyZWF0ZVJvb3QoKVwifWZ1bmN0aW9uIFNhKGUsbix0LHIsbCxhKXtsPWZ1bmN0aW9uKGUpe3JldHVybiBlP2U9c3U6c3V9KGwpLG51bGw9PT1yLmNvbnRleHQ/ci5jb250ZXh0PWw6ci5wZW5kaW5nQ29udGV4dD1sLHJvJiZudWxsIT09dG8mJiFjZCYmKGNkPSEwLGNvbnNvbGUuZXJyb3IoXCJSZW5kZXIgbWV0aG9kcyBzaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uIG9mIHByb3BzIGFuZCBzdGF0ZTsgdHJpZ2dlcmluZyBuZXN0ZWQgY29tcG9uZW50IHVwZGF0ZXMgZnJvbSByZW5kZXIgaXMgbm90IGFsbG93ZWQuIElmIG5lY2Vzc2FyeSwgdHJpZ2dlciBuZXN0ZWQgdXBkYXRlcyBpbiBjb21wb25lbnREaWRVcGRhdGUuXFxuXFxuQ2hlY2sgdGhlIHJlbmRlciBtZXRob2Qgb2YgJXMuXCIsYyh0byl8fFwiVW5rbm93blwiKSksKHI9Z2UobikpLnBheWxvYWQ9e2VsZW1lbnQ6dH0sbnVsbCE9PShhPXZvaWQgMD09PWE/bnVsbDphKSYmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGEmJmNvbnNvbGUuZXJyb3IoXCJFeHBlY3RlZCB0aGUgbGFzdCBvcHRpb25hbCBgY2FsbGJhY2tgIGFyZ3VtZW50IHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQgcmVjZWl2ZWQ6ICVzLlwiLGEpLHIuY2FsbGJhY2s9YSksbnVsbCE9PSh0PXllKGUscixuKSkmJihDbCh0LGUsbiksYmUodCxlLG4pKX12YXIga2Esd2EseGEsemEsQ2EsRWEsUGEsX2E9e30sUmE9ZSxUYT11LE5hPU9iamVjdC5hc3NpZ24sTGE9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksVWE9U3ltYm9sLmZvcihcInJlYWN0LnRyYW5zaXRpb25hbC5lbGVtZW50XCIpLERhPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksSWE9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLEZhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSxNYT1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksV2E9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLEhhPVN5bWJvbC5mb3IoXCJyZWFjdC5jb25zdW1lclwiKSxqYT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxBYT1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksUWE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLE9hPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLEJhPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLFZhPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLCRhPVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIikscWE9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9fY2FjaGVfc2VudGluZWxcIiksWWE9U3ltYm9sLml0ZXJhdG9yLEdhPVN5bWJvbC5mb3IoXCJyZWFjdC5jbGllbnQucmVmZXJlbmNlXCIpLEphPVJhLl9fQ0xJRU5UX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1dBUk5fVVNFUlNfVEhFWV9DQU5OT1RfVVBHUkFERSxLYT0wO2YuX19yZWFjdERpc2FibGVkTG9nPSEwO3ZhciBYYSxaYSxlbz0hMSxubz1uZXcoXCJmdW5jdGlvblwiPT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCksdG89bnVsbCxybz0hMSxsbz1BcnJheS5pc0FycmF5LGFvPW4uZ2V0UHVibGljSW5zdGFuY2Usb289bi5nZXRSb290SG9zdENvbnRleHQsdW89bi5nZXRDaGlsZEhvc3RDb250ZXh0LGlvPW4ucHJlcGFyZUZvckNvbW1pdCxzbz1uLnJlc2V0QWZ0ZXJDb21taXQsY289bi5jcmVhdGVJbnN0YW5jZSxmbz1uLmFwcGVuZEluaXRpYWxDaGlsZCxwbz1uLmZpbmFsaXplSW5pdGlhbENoaWxkcmVuLG1vPW4uc2hvdWxkU2V0VGV4dENvbnRlbnQsaG89bi5jcmVhdGVUZXh0SW5zdGFuY2UsZ289bnVsbCx5bz1udWxsLGJvPW4ubm9UaW1lb3V0LHZvPSEwLFNvPW51bGwsa289bnVsbCx3bz1uLnNldEN1cnJlbnRVcGRhdGVQcmlvcml0eSx4bz1uLmdldEN1cnJlbnRVcGRhdGVQcmlvcml0eSx6bz1uLnJlc29sdmVVcGRhdGVQcmlvcml0eSxDbz1uLnNob3VsZEF0dGVtcHRFYWdlclRyYW5zaXRpb24sRW89bnVsbDtuLnJlcXVlc3RQb3N0UGFpbnRDYWxsYmFjazt2YXIgUG89bi5tYXlTdXNwZW5kQ29tbWl0LF9vPW51bGwsUm89bnVsbCxUbz1udWxsLE5vPW51bGwsTG89bnVsbCxVbz1udWxsLERvPW51bGwsSW89bi5hcHBlbmRDaGlsZCxGbz1uLmFwcGVuZENoaWxkVG9Db250YWluZXIsTW89bi5jb21taXRUZXh0VXBkYXRlLFdvPW51bGwsSG89bi5jb21taXRVcGRhdGUsam89bi5pbnNlcnRCZWZvcmUsQW89bnVsbCxRbz1uLnJlbW92ZUNoaWxkLE9vPW4ucmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyLEJvPW4ucmVzZXRUZXh0Q29udGVudCxWbz1udWxsLCRvPW51bGwscW89bnVsbCxZbz1udWxsLEdvPW4uY2xlYXJDb250YWluZXIsSm89bnVsbCxLbz1udWxsLFhvPW51bGwsWm89bnVsbCxldT1udWxsLG51PW51bGwsdHU9bnVsbCxydT1udWxsLGx1PW51bGwsYXU9bnVsbCxvdT1bXSx1dT1bXSxpdT0tMSxzdT17fTtPYmplY3QuZnJlZXplKHN1KTt2YXIgY3U9TWF0aC5jbHozMj9NYXRoLmNsejMyOmZ1bmN0aW9uKGUpe3JldHVybiAwPT0oZT4+Pj0wKT8zMjozMS0oZnUoZSkvZHV8MCl8MH0sZnU9TWF0aC5sb2csZHU9TWF0aC5MTjIscHU9MTI4LG11PTQxOTQzMDQsaHU9VGEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxndT1UYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayx5dT1UYS51bnN0YWJsZV9zaG91bGRZaWVsZCxidT1UYS51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsdnU9VGEudW5zdGFibGVfbm93LFN1PVRhLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGt1PVRhLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LHd1PVRhLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LHh1PVRhLnVuc3RhYmxlX0lkbGVQcmlvcml0eSx6dT1UYS5sb2csQ3U9VGEudW5zdGFibGVfc2V0RGlzYWJsZVlpZWxkVmFsdWUsRXU9bnVsbCxQdT1udWxsLF91PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18sUnU9XCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpmdW5jdGlvbihlLG4pe3JldHVybiBlPT09biYmKDAhPT1lfHwxL2U9PTEvbil8fGUhPWUmJm4hPW59LFR1PW5ldyBXZWFrTWFwLE51PVtdLEx1PTAsVXU9bnVsbCxEdT0wLEl1PVtdLEZ1PTAsTXU9bnVsbCxXdT0xLEh1PVwiXCIsanU9YihudWxsKSxBdT1iKG51bGwpLFF1PWIobnVsbCksT3U9YihudWxsKSxCdT0hMSxWdT1udWxsLCR1PTAscXU9W10sWXU9MCxHdT0wLEp1PVRhLnVuc3RhYmxlX25vdyxLdT0tMCxYdT0tMS4xLFp1PS0wLGVpPSExLG5pPSExLHRpPW51bGwscmk9bnVsbCxsaT0hMSxhaT0hMSxvaT0hMSx1aT0hMSxpaT0wLHNpPXt9LGNpPW51bGwsZmk9MCxkaT0wLHBpPW51bGwsbWk9MCxoaT0xLGdpPTIseWk9MyxiaT0hMSx2aT0hMSxTaT1udWxsLGtpPSExLHdpPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkseGk9e3JlY29yZFVuc2FmZUxpZmVjeWNsZVdhcm5pbmdzOmZ1bmN0aW9uKCl7fSxmbHVzaFBlbmRpbmdVbnNhZmVMaWZlY3ljbGVXYXJuaW5nczpmdW5jdGlvbigpe30scmVjb3JkTGVnYWN5Q29udGV4dFdhcm5pbmc6ZnVuY3Rpb24oKXt9LGZsdXNoTGVnYWN5Q29udGV4dFdhcm5pbmc6ZnVuY3Rpb24oKXt9LGRpc2NhcmRQZW5kaW5nV2FybmluZ3M6ZnVuY3Rpb24oKXt9fSx6aT1bXSxDaT1bXSxFaT1bXSxQaT1bXSxfaT1bXSxSaT1bXSxUaT1uZXcgU2V0O3hpLnJlY29yZFVuc2FmZUxpZmVjeWNsZVdhcm5pbmdzPWZ1bmN0aW9uKGUsbil7VGkuaGFzKGUudHlwZSl8fChcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmNvbXBvbmVudFdpbGxNb3VudCYmITAhPT1uLmNvbXBvbmVudFdpbGxNb3VudC5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nJiZ6aS5wdXNoKGUpLDgmZS5tb2RlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJkNpLnB1c2goZSksXCJmdW5jdGlvblwiPT10eXBlb2Ygbi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiYhMCE9PW4uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcy5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nJiZFaS5wdXNoKGUpLDgmZS5tb2RlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZQaS5wdXNoKGUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG4uY29tcG9uZW50V2lsbFVwZGF0ZSYmITAhPT1uLmNvbXBvbmVudFdpbGxVcGRhdGUuX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyYmX2kucHVzaChlKSw4JmUubW9kZSYmXCJmdW5jdGlvblwiPT10eXBlb2Ygbi5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmUmkucHVzaChlKSl9LHhpLmZsdXNoUGVuZGluZ1Vuc2FmZUxpZmVjeWNsZVdhcm5pbmdzPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IFNldDswPHppLmxlbmd0aCYmKHppLmZvckVhY2goKGZ1bmN0aW9uKG4pe2UuYWRkKGMobil8fFwiQ29tcG9uZW50XCIpLFRpLmFkZChuLnR5cGUpfSkpLHppPVtdKTt2YXIgbj1uZXcgU2V0OzA8Q2kubGVuZ3RoJiYoQ2kuZm9yRWFjaCgoZnVuY3Rpb24oZSl7bi5hZGQoYyhlKXx8XCJDb21wb25lbnRcIiksVGkuYWRkKGUudHlwZSl9KSksQ2k9W10pO3ZhciB0PW5ldyBTZXQ7MDxFaS5sZW5ndGgmJihFaS5mb3JFYWNoKChmdW5jdGlvbihlKXt0LmFkZChjKGUpfHxcIkNvbXBvbmVudFwiKSxUaS5hZGQoZS50eXBlKX0pKSxFaT1bXSk7dmFyIHI9bmV3IFNldDswPFBpLmxlbmd0aCYmKFBpLmZvckVhY2goKGZ1bmN0aW9uKGUpe3IuYWRkKGMoZSl8fFwiQ29tcG9uZW50XCIpLFRpLmFkZChlLnR5cGUpfSkpLFBpPVtdKTt2YXIgbD1uZXcgU2V0OzA8X2kubGVuZ3RoJiYoX2kuZm9yRWFjaCgoZnVuY3Rpb24oZSl7bC5hZGQoYyhlKXx8XCJDb21wb25lbnRcIiksVGkuYWRkKGUudHlwZSl9KSksX2k9W10pO3ZhciBhPW5ldyBTZXQ7aWYoMDxSaS5sZW5ndGgmJihSaS5mb3JFYWNoKChmdW5jdGlvbihlKXthLmFkZChjKGUpfHxcIkNvbXBvbmVudFwiKSxUaS5hZGQoZS50eXBlKX0pKSxSaT1bXSksMDxuLnNpemUpe3ZhciB1PW8obik7Y29uc29sZS5lcnJvcihcIlVzaW5nIFVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQgaW4gc3RyaWN0IG1vZGUgaXMgbm90IHJlY29tbWVuZGVkIGFuZCBtYXkgaW5kaWNhdGUgYnVncyBpbiB5b3VyIGNvZGUuIFNlZSBodHRwczovL3JlYWN0LmRldi9saW5rL3Vuc2FmZS1jb21wb25lbnQtbGlmZWN5Y2xlcyBmb3IgZGV0YWlscy5cXG5cXG4qIE1vdmUgY29kZSB3aXRoIHNpZGUgZWZmZWN0cyB0byBjb21wb25lbnREaWRNb3VudCwgYW5kIHNldCBpbml0aWFsIHN0YXRlIGluIHRoZSBjb25zdHJ1Y3Rvci5cXG5cXG5QbGVhc2UgdXBkYXRlIHRoZSBmb2xsb3dpbmcgY29tcG9uZW50czogJXNcIix1KX0wPHIuc2l6ZSYmKHU9byhyKSxjb25zb2xlLmVycm9yKFwiVXNpbmcgVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgaW4gc3RyaWN0IG1vZGUgaXMgbm90IHJlY29tbWVuZGVkIGFuZCBtYXkgaW5kaWNhdGUgYnVncyBpbiB5b3VyIGNvZGUuIFNlZSBodHRwczovL3JlYWN0LmRldi9saW5rL3Vuc2FmZS1jb21wb25lbnQtbGlmZWN5Y2xlcyBmb3IgZGV0YWlscy5cXG5cXG4qIE1vdmUgZGF0YSBmZXRjaGluZyBjb2RlIG9yIHNpZGUgZWZmZWN0cyB0byBjb21wb25lbnREaWRVcGRhdGUuXFxuKiBJZiB5b3UncmUgdXBkYXRpbmcgc3RhdGUgd2hlbmV2ZXIgcHJvcHMgY2hhbmdlLCByZWZhY3RvciB5b3VyIGNvZGUgdG8gdXNlIG1lbW9pemF0aW9uIHRlY2huaXF1ZXMgb3IgbW92ZSBpdCB0byBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLiBMZWFybiBtb3JlIGF0OiBodHRwczovL3JlYWN0LmRldi9saW5rL2Rlcml2ZWQtc3RhdGVcXG5cXG5QbGVhc2UgdXBkYXRlIHRoZSBmb2xsb3dpbmcgY29tcG9uZW50czogJXNcIix1KSksMDxhLnNpemUmJih1PW8oYSksY29uc29sZS5lcnJvcihcIlVzaW5nIFVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIGluIHN0cmljdCBtb2RlIGlzIG5vdCByZWNvbW1lbmRlZCBhbmQgbWF5IGluZGljYXRlIGJ1Z3MgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9yZWFjdC5kZXYvbGluay91bnNhZmUtY29tcG9uZW50LWxpZmVjeWNsZXMgZm9yIGRldGFpbHMuXFxuXFxuKiBNb3ZlIGRhdGEgZmV0Y2hpbmcgY29kZSBvciBzaWRlIGVmZmVjdHMgdG8gY29tcG9uZW50RGlkVXBkYXRlLlxcblxcblBsZWFzZSB1cGRhdGUgdGhlIGZvbGxvd2luZyBjb21wb25lbnRzOiAlc1wiLHUpKSwwPGUuc2l6ZSYmKHU9byhlKSxjb25zb2xlLndhcm4oXCJjb21wb25lbnRXaWxsTW91bnQgaGFzIGJlZW4gcmVuYW1lZCwgYW5kIGlzIG5vdCByZWNvbW1lbmRlZCBmb3IgdXNlLiBTZWUgaHR0cHM6Ly9yZWFjdC5kZXYvbGluay91bnNhZmUtY29tcG9uZW50LWxpZmVjeWNsZXMgZm9yIGRldGFpbHMuXFxuXFxuKiBNb3ZlIGNvZGUgd2l0aCBzaWRlIGVmZmVjdHMgdG8gY29tcG9uZW50RGlkTW91bnQsIGFuZCBzZXQgaW5pdGlhbCBzdGF0ZSBpbiB0aGUgY29uc3RydWN0b3IuXFxuKiBSZW5hbWUgY29tcG9uZW50V2lsbE1vdW50IHRvIFVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQgdG8gc3VwcHJlc3MgdGhpcyB3YXJuaW5nIGluIG5vbi1zdHJpY3QgbW9kZS4gSW4gUmVhY3QgMTgueCwgb25seSB0aGUgVU5TQUZFXyBuYW1lIHdpbGwgd29yay4gVG8gcmVuYW1lIGFsbCBkZXByZWNhdGVkIGxpZmVjeWNsZXMgdG8gdGhlaXIgbmV3IG5hbWVzLCB5b3UgY2FuIHJ1biBgbnB4IHJlYWN0LWNvZGVtb2QgcmVuYW1lLXVuc2FmZS1saWZlY3ljbGVzYCBpbiB5b3VyIHByb2plY3Qgc291cmNlIGZvbGRlci5cXG5cXG5QbGVhc2UgdXBkYXRlIHRoZSBmb2xsb3dpbmcgY29tcG9uZW50czogJXNcIix1KSksMDx0LnNpemUmJih1PW8odCksY29uc29sZS53YXJuKFwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyBoYXMgYmVlbiByZW5hbWVkLCBhbmQgaXMgbm90IHJlY29tbWVuZGVkIGZvciB1c2UuIFNlZSBodHRwczovL3JlYWN0LmRldi9saW5rL3Vuc2FmZS1jb21wb25lbnQtbGlmZWN5Y2xlcyBmb3IgZGV0YWlscy5cXG5cXG4qIE1vdmUgZGF0YSBmZXRjaGluZyBjb2RlIG9yIHNpZGUgZWZmZWN0cyB0byBjb21wb25lbnREaWRVcGRhdGUuXFxuKiBJZiB5b3UncmUgdXBkYXRpbmcgc3RhdGUgd2hlbmV2ZXIgcHJvcHMgY2hhbmdlLCByZWZhY3RvciB5b3VyIGNvZGUgdG8gdXNlIG1lbW9pemF0aW9uIHRlY2huaXF1ZXMgb3IgbW92ZSBpdCB0byBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLiBMZWFybiBtb3JlIGF0OiBodHRwczovL3JlYWN0LmRldi9saW5rL2Rlcml2ZWQtc3RhdGVcXG4qIFJlbmFtZSBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIHRvIFVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIHRvIHN1cHByZXNzIHRoaXMgd2FybmluZyBpbiBub24tc3RyaWN0IG1vZGUuIEluIFJlYWN0IDE4LngsIG9ubHkgdGhlIFVOU0FGRV8gbmFtZSB3aWxsIHdvcmsuIFRvIHJlbmFtZSBhbGwgZGVwcmVjYXRlZCBsaWZlY3ljbGVzIHRvIHRoZWlyIG5ldyBuYW1lcywgeW91IGNhbiBydW4gYG5weCByZWFjdC1jb2RlbW9kIHJlbmFtZS11bnNhZmUtbGlmZWN5Y2xlc2AgaW4geW91ciBwcm9qZWN0IHNvdXJjZSBmb2xkZXIuXFxuXFxuUGxlYXNlIHVwZGF0ZSB0aGUgZm9sbG93aW5nIGNvbXBvbmVudHM6ICVzXCIsdSkpLDA8bC5zaXplJiYodT1vKGwpLGNvbnNvbGUud2FybihcImNvbXBvbmVudFdpbGxVcGRhdGUgaGFzIGJlZW4gcmVuYW1lZCwgYW5kIGlzIG5vdCByZWNvbW1lbmRlZCBmb3IgdXNlLiBTZWUgaHR0cHM6Ly9yZWFjdC5kZXYvbGluay91bnNhZmUtY29tcG9uZW50LWxpZmVjeWNsZXMgZm9yIGRldGFpbHMuXFxuXFxuKiBNb3ZlIGRhdGEgZmV0Y2hpbmcgY29kZSBvciBzaWRlIGVmZmVjdHMgdG8gY29tcG9uZW50RGlkVXBkYXRlLlxcbiogUmVuYW1lIGNvbXBvbmVudFdpbGxVcGRhdGUgdG8gVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUgdG8gc3VwcHJlc3MgdGhpcyB3YXJuaW5nIGluIG5vbi1zdHJpY3QgbW9kZS4gSW4gUmVhY3QgMTgueCwgb25seSB0aGUgVU5TQUZFXyBuYW1lIHdpbGwgd29yay4gVG8gcmVuYW1lIGFsbCBkZXByZWNhdGVkIGxpZmVjeWNsZXMgdG8gdGhlaXIgbmV3IG5hbWVzLCB5b3UgY2FuIHJ1biBgbnB4IHJlYWN0LWNvZGVtb2QgcmVuYW1lLXVuc2FmZS1saWZlY3ljbGVzYCBpbiB5b3VyIHByb2plY3Qgc291cmNlIGZvbGRlci5cXG5cXG5QbGVhc2UgdXBkYXRlIHRoZSBmb2xsb3dpbmcgY29tcG9uZW50czogJXNcIix1KSl9O3ZhciBOaT1uZXcgTWFwLExpPW5ldyBTZXQ7eGkucmVjb3JkTGVnYWN5Q29udGV4dFdhcm5pbmc9ZnVuY3Rpb24oZSxuKXtmb3IodmFyIHQ9bnVsbCxyPWU7bnVsbCE9PXI7KTgmci5tb2RlJiYodD1yKSxyPXIucmV0dXJuO251bGw9PT10P2NvbnNvbGUuZXJyb3IoXCJFeHBlY3RlZCB0byBmaW5kIGEgU3RyaWN0TW9kZSBjb21wb25lbnQgaW4gYSBzdHJpY3QgbW9kZSB0cmVlLiBUaGlzIGVycm9yIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKTohTGkuaGFzKGUudHlwZSkmJihyPU5pLmdldCh0KSxudWxsIT1lLnR5cGUuY29udGV4dFR5cGVzfHxudWxsIT1lLnR5cGUuY2hpbGRDb250ZXh0VHlwZXN8fG51bGwhPT1uJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmdldENoaWxkQ29udGV4dCkmJih2b2lkIDA9PT1yJiYocj1bXSxOaS5zZXQodCxyKSksci5wdXNoKGUpKX0seGkuZmx1c2hMZWdhY3lDb250ZXh0V2FybmluZz1mdW5jdGlvbigpe05pLmZvckVhY2goKGZ1bmN0aW9uKGUpe2lmKDAhPT1lLmxlbmd0aCl7dmFyIG49ZVswXSx0PW5ldyBTZXQ7ZS5mb3JFYWNoKChmdW5jdGlvbihlKXt0LmFkZChjKGUpfHxcIkNvbXBvbmVudFwiKSxMaS5hZGQoZS50eXBlKX0pKTt2YXIgcj1vKHQpO3kobiwoZnVuY3Rpb24oKXtjb25zb2xlLmVycm9yKFwiTGVnYWN5IGNvbnRleHQgQVBJIGhhcyBiZWVuIGRldGVjdGVkIHdpdGhpbiBhIHN0cmljdC1tb2RlIHRyZWUuXFxuXFxuVGhlIG9sZCBBUEkgd2lsbCBiZSBzdXBwb3J0ZWQgaW4gYWxsIDE2LnggcmVsZWFzZXMsIGJ1dCBhcHBsaWNhdGlvbnMgdXNpbmcgaXQgc2hvdWxkIG1pZ3JhdGUgdG8gdGhlIG5ldyB2ZXJzaW9uLlxcblxcblBsZWFzZSB1cGRhdGUgdGhlIGZvbGxvd2luZyBjb21wb25lbnRzOiAlc1xcblxcbkxlYXJuIG1vcmUgYWJvdXQgdGhpcyB3YXJuaW5nIGhlcmU6IGh0dHBzOi8vcmVhY3QuZGV2L2xpbmsvbGVnYWN5LWNvbnRleHRcIixyKX0pKX19KSl9LHhpLmRpc2NhcmRQZW5kaW5nV2FybmluZ3M9ZnVuY3Rpb24oKXt6aT1bXSxDaT1bXSxFaT1bXSxQaT1bXSxfaT1bXSxSaT1bXSxOaT1uZXcgTWFwfTt2YXIgVWksRGk9RXJyb3IoXCJTdXNwZW5zZSBFeGNlcHRpb246IFRoaXMgaXMgbm90IGEgcmVhbCBlcnJvciEgSXQncyBhbiBpbXBsZW1lbnRhdGlvbiBkZXRhaWwgb2YgYHVzZWAgdG8gaW50ZXJydXB0IHRoZSBjdXJyZW50IHJlbmRlci4gWW91IG11c3QgZWl0aGVyIHJldGhyb3cgaXQgaW1tZWRpYXRlbHksIG9yIG1vdmUgdGhlIGB1c2VgIGNhbGwgb3V0c2lkZSBvZiB0aGUgYHRyeS9jYXRjaGAgYmxvY2suIENhcHR1cmluZyB3aXRob3V0IHJldGhyb3dpbmcgd2lsbCBsZWFkIHRvIHVuZXhwZWN0ZWQgYmVoYXZpb3IuXFxuXFxuVG8gaGFuZGxlIGFzeW5jIGVycm9ycywgd3JhcCB5b3VyIGNvbXBvbmVudCBpbiBhbiBlcnJvciBib3VuZGFyeSwgb3IgY2FsbCB0aGUgcHJvbWlzZSdzIGAuY2F0Y2hgIG1ldGhvZCBhbmQgcGFzcyB0aGUgcmVzdWx0IHRvIGB1c2VgXCIpLElpPUVycm9yKFwiU3VzcGVuc2UgRXhjZXB0aW9uOiBUaGlzIGlzIG5vdCBhIHJlYWwgZXJyb3IsIGFuZCBzaG91bGQgbm90IGxlYWsgaW50byB1c2Vyc3BhY2UuIElmIHlvdSdyZSBzZWVpbmcgdGhpcywgaXQncyBsaWtlbHkgYSBidWcgaW4gUmVhY3QuXCIpLEZpPXt0aGVuOmZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcignSW50ZXJuYWwgUmVhY3QgZXJyb3I6IEEgbGlzdGVuZXIgd2FzIHVuZXhwZWN0ZWRseSBhdHRhY2hlZCB0byBhIFwibm9vcFwiIHRoZW5hYmxlLiBUaGlzIGlzIGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS4nKX19LE1pPW51bGwsV2k9ITEsSGk9e1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCI6ZnVuY3Rpb24oZSxuLHQpe3ZhciByPXJvO3JvPSEwO3RyeXtyZXR1cm4gZShuLHQpfWZpbmFsbHl7cm89cn19fSxqaT1IaVtcInJlYWN0LXN0YWNrLWJvdHRvbS1mcmFtZVwiXS5iaW5kKEhpKSxBaT17XCJyZWFjdC1zdGFjay1ib3R0b20tZnJhbWVcIjpmdW5jdGlvbihlKXt2YXIgbj1ybztybz0hMDt0cnl7cmV0dXJuIGUucmVuZGVyKCl9ZmluYWxseXtybz1ufX19LFFpPUFpW1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCJdLmJpbmQoQWkpLE9pPXtcInJlYWN0LXN0YWNrLWJvdHRvbS1mcmFtZVwiOmZ1bmN0aW9uKGUsbil7dHJ5e24uY29tcG9uZW50RGlkTW91bnQoKX1jYXRjaChuKXtYbChlLGUucmV0dXJuLG4pfX19LEJpPU9pW1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCJdLmJpbmQoT2kpLFZpPXtcInJlYWN0LXN0YWNrLWJvdHRvbS1mcmFtZVwiOmZ1bmN0aW9uKGUsbix0LHIsbCl7dHJ5e24uY29tcG9uZW50RGlkVXBkYXRlKHQscixsKX1jYXRjaChuKXtYbChlLGUucmV0dXJuLG4pfX19LCRpPVZpW1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCJdLmJpbmQoVmkpLHFpPXtcInJlYWN0LXN0YWNrLWJvdHRvbS1mcmFtZVwiOmZ1bmN0aW9uKGUsbil7dmFyIHQ9bi5zdGFjaztlLmNvbXBvbmVudERpZENhdGNoKG4udmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT10P3Q6XCJcIn0pfX0sWWk9cWlbXCJyZWFjdC1zdGFjay1ib3R0b20tZnJhbWVcIl0uYmluZChxaSksR2k9e1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCI6ZnVuY3Rpb24oZSxuLHQpe3RyeXt0LmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2godCl7WGwoZSxuLHQpfX19LEppPUdpW1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCJdLmJpbmQoR2kpLEtpPXtcInJlYWN0LXN0YWNrLWJvdHRvbS1mcmFtZVwiOmZ1bmN0aW9uKGUpe3ZhciBuPWUuY3JlYXRlO3JldHVybiBlPWUuaW5zdCxuPW4oKSxlLmRlc3Ryb3k9bn19LFhpPUtpW1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCJdLmJpbmQoS2kpLFppPXtcInJlYWN0LXN0YWNrLWJvdHRvbS1mcmFtZVwiOmZ1bmN0aW9uKGUsbix0KXt0cnl7dCgpfWNhdGNoKHQpe1hsKGUsbix0KX19fSxlcz1aaVtcInJlYWN0LXN0YWNrLWJvdHRvbS1mcmFtZVwiXS5iaW5kKFppKSxucz17XCJyZWFjdC1zdGFjay1ib3R0b20tZnJhbWVcIjpmdW5jdGlvbihlKXtyZXR1cm4oMCxlLl9pbml0KShlLl9wYXlsb2FkKX19LHRzPW5zW1wicmVhY3Qtc3RhY2stYm90dG9tLWZyYW1lXCJdLmJpbmQobnMpLHJzPW51bGwsbHM9MCxhcz1udWxsLG9zPVVpPSExLHVzPXt9LGlzPXt9LHNzPXt9O2E9ZnVuY3Rpb24oZSxuLHQpe2lmKG51bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdC5fc3RvcmUmJighdC5fc3RvcmUudmFsaWRhdGVkJiZudWxsPT10LmtleXx8Mj09PXQuX3N0b3JlLnZhbGlkYXRlZCkpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiB0Ll9zdG9yZSl0aHJvdyBFcnJvcihcIlJlYWN0IENvbXBvbmVudCBpbiB3YXJuRm9yTWlzc2luZ0tleSBzaG91bGQgaGF2ZSBhIF9zdG9yZS4gVGhpcyBlcnJvciBpcyBsaWtlbHkgY2F1c2VkIGJ5IGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIik7dC5fc3RvcmUudmFsaWRhdGVkPTE7dmFyIHI9YyhlKSxsPXJ8fFwibnVsbFwiO2lmKCF1c1tsXSl7dXNbbF09ITAsdD10Ll9vd25lcixlPWUuX2RlYnVnT3duZXI7dmFyIGE9XCJcIjtlJiZcIm51bWJlclwiPT10eXBlb2YgZS50YWcmJihsPWMoZSkpJiYoYT1cIlxcblxcbkNoZWNrIHRoZSByZW5kZXIgbWV0aG9kIG9mIGBcIitsK1wiYC5cIiksYXx8ciYmKGE9XCJcXG5cXG5DaGVjayB0aGUgdG9wLWxldmVsIHJlbmRlciBjYWxsIHVzaW5nIDxcIityK1wiPi5cIik7dmFyIG89XCJcIjtudWxsIT10JiZlIT09dCYmKHI9bnVsbCxcIm51bWJlclwiPT10eXBlb2YgdC50YWc/cj1jKHQpOlwic3RyaW5nXCI9PXR5cGVvZiB0Lm5hbWUmJihyPXQubmFtZSksciYmKG89XCIgSXQgd2FzIHBhc3NlZCBhIGNoaWxkIGZyb20gXCIrcitcIi5cIikpLHkobiwoZnVuY3Rpb24oKXtjb25zb2xlLmVycm9yKCdFYWNoIGNoaWxkIGluIGEgbGlzdCBzaG91bGQgaGF2ZSBhIHVuaXF1ZSBcImtleVwiIHByb3AuJXMlcyBTZWUgaHR0cHM6Ly9yZWFjdC5kZXYvbGluay93YXJuaW5nLWtleXMgZm9yIG1vcmUgaW5mb3JtYXRpb24uJyxhLG8pfSkpfX19O3ZhciBjcyxmcz1XZSghMCksZHM9V2UoITEpLHBzPWIobnVsbCksbXM9YigwKSxocz1iKG51bGwpLGdzPW51bGwseXM9MSxicz0yLHZzPWIoMCksU3M9MCxrcz0xLHdzPTIseHM9NCx6cz04LENzPW5ldyBTZXQsRXM9bmV3IFNldCxQcz1uZXcgU2V0LF9zPW5ldyBTZXQsUnM9MCxUcz1udWxsLE5zPW51bGwsTHM9bnVsbCxVcz0hMSxEcz0hMSxJcz0hMSxGcz0wLE1zPTAsV3M9bnVsbCxIcz0wLGpzPTI1LEFzPW51bGwsUXM9bnVsbCxPcz0tMSxCcz0hMSxWcz1mdW5jdGlvbigpe3JldHVybntsYXN0RWZmZWN0Om51bGwsZXZlbnRzOm51bGwsc3RvcmVzOm51bGwsbWVtb0NhY2hlOm51bGx9fSwkcz17cmVhZENvbnRleHQ6c3IsdXNlOmNuLHVzZUNhbGxiYWNrOktlLHVzZUNvbnRleHQ6S2UsdXNlRWZmZWN0OktlLHVzZUltcGVyYXRpdmVIYW5kbGU6S2UsdXNlTGF5b3V0RWZmZWN0OktlLHVzZUluc2VydGlvbkVmZmVjdDpLZSx1c2VNZW1vOktlLHVzZVJlZHVjZXI6S2UsdXNlUmVmOktlLHVzZVN0YXRlOktlLHVzZURlYnVnVmFsdWU6S2UsdXNlRGVmZXJyZWRWYWx1ZTpLZSx1c2VUcmFuc2l0aW9uOktlLHVzZVN5bmNFeHRlcm5hbFN0b3JlOktlLHVzZUlkOktlfTskcy51c2VDYWNoZVJlZnJlc2g9S2UsJHMudXNlTWVtb0NhY2hlPUtlLCRzLnVzZUhvc3RUcmFuc2l0aW9uU3RhdHVzPUtlLCRzLnVzZUZvcm1TdGF0ZT1LZSwkcy51c2VBY3Rpb25TdGF0ZT1LZSwkcy51c2VPcHRpbWlzdGljPUtlO3ZhciBxcz1udWxsLFlzPW51bGwsR3M9bnVsbCxKcz1udWxsLEtzPW51bGwsWHM9bnVsbCxacz1udWxsOyhxcz17cmVhZENvbnRleHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHNyKGUpfSx1c2U6Y24sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VDYWxsYmFja1wiLHFlKCksR2UobiksS24oZSxuKX0sdXNlQ29udGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VDb250ZXh0XCIscWUoKSxzcihlKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlRWZmZWN0XCIscWUoKSxHZShuKSwkbihlLG4pfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGUsbix0KXtyZXR1cm4gQXM9XCJ1c2VJbXBlcmF0aXZlSGFuZGxlXCIscWUoKSxHZSh0KSxHbihlLG4sdCl9LHVzZUluc2VydGlvbkVmZmVjdDpmdW5jdGlvbihlLG4pe0FzPVwidXNlSW5zZXJ0aW9uRWZmZWN0XCIscWUoKSxHZShuKSxCbig0LHdzLGUsbil9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZUxheW91dEVmZmVjdFwiLHFlKCksR2UobikscW4oZSxuKX0sdXNlTWVtbzpmdW5jdGlvbihlLG4pe0FzPVwidXNlTWVtb1wiLHFlKCksR2Uobik7dmFyIHQ9SmEuSDtKYS5IPUtzO3RyeXtyZXR1cm4gWm4oZSxuKX1maW5hbGx5e0phLkg9dH19LHVzZVJlZHVjZXI6ZnVuY3Rpb24oZSxuLHQpe0FzPVwidXNlUmVkdWNlclwiLHFlKCk7dmFyIHI9SmEuSDtKYS5IPUtzO3RyeXtyZXR1cm4gcG4oZSxuLHQpfWZpbmFsbHl7SmEuSD1yfX0sdXNlUmVmOmZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZVJlZlwiLHFlKCksT24oZSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGUpe0FzPVwidXNlU3RhdGVcIixxZSgpO3ZhciBuPUphLkg7SmEuSD1Lczt0cnl7cmV0dXJuIENuKGUpfWZpbmFsbHl7SmEuSD1ufX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe0FzPVwidXNlRGVidWdWYWx1ZVwiLHFlKCl9LHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VEZWZlcnJlZFZhbHVlXCIscWUoKSxudChlLG4pfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlVHJhbnNpdGlvblwiLHFlKCksdXQoKX0sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiBBcz1cInVzZVN5bmNFeHRlcm5hbFN0b3JlXCIscWUoKSx5bihlLG4sdCl9LHVzZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlSWRcIixxZSgpLGZ0KCl9LHVzZUNhY2hlUmVmcmVzaDpmdW5jdGlvbigpe3JldHVybiBBcz1cInVzZUNhY2hlUmVmcmVzaFwiLHFlKCksZHQoKX19KS51c2VNZW1vQ2FjaGU9Zm4scXMudXNlSG9zdFRyYW5zaXRpb25TdGF0dXM9Y3QscXMudXNlRm9ybVN0YXRlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlRm9ybVN0YXRlXCIscWUoKSxKZSgpLE1uKGUsbil9LHFzLnVzZUFjdGlvblN0YXRlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlQWN0aW9uU3RhdGVcIixxZSgpLE1uKGUsbil9LHFzLnVzZU9wdGltaXN0aWM9ZnVuY3Rpb24oZSl7cmV0dXJuIEFzPVwidXNlT3B0aW1pc3RpY1wiLHFlKCksRW4oZSl9LChZcz17cmVhZENvbnRleHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHNyKGUpfSx1c2U6Y24sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VDYWxsYmFja1wiLFllKCksS24oZSxuKX0sdXNlQ29udGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VDb250ZXh0XCIsWWUoKSxzcihlKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlRWZmZWN0XCIsWWUoKSwkbihlLG4pfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGUsbix0KXtyZXR1cm4gQXM9XCJ1c2VJbXBlcmF0aXZlSGFuZGxlXCIsWWUoKSxHbihlLG4sdCl9LHVzZUluc2VydGlvbkVmZmVjdDpmdW5jdGlvbihlLG4pe0FzPVwidXNlSW5zZXJ0aW9uRWZmZWN0XCIsWWUoKSxCbig0LHdzLGUsbil9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZUxheW91dEVmZmVjdFwiLFllKCkscW4oZSxuKX0sdXNlTWVtbzpmdW5jdGlvbihlLG4pe0FzPVwidXNlTWVtb1wiLFllKCk7dmFyIHQ9SmEuSDtKYS5IPUtzO3RyeXtyZXR1cm4gWm4oZSxuKX1maW5hbGx5e0phLkg9dH19LHVzZVJlZHVjZXI6ZnVuY3Rpb24oZSxuLHQpe0FzPVwidXNlUmVkdWNlclwiLFllKCk7dmFyIHI9SmEuSDtKYS5IPUtzO3RyeXtyZXR1cm4gcG4oZSxuLHQpfWZpbmFsbHl7SmEuSD1yfX0sdXNlUmVmOmZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZVJlZlwiLFllKCksT24oZSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGUpe0FzPVwidXNlU3RhdGVcIixZZSgpO3ZhciBuPUphLkg7SmEuSD1Lczt0cnl7cmV0dXJuIENuKGUpfWZpbmFsbHl7SmEuSD1ufX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe0FzPVwidXNlRGVidWdWYWx1ZVwiLFllKCl9LHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VEZWZlcnJlZFZhbHVlXCIsWWUoKSxudChlLG4pfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlVHJhbnNpdGlvblwiLFllKCksdXQoKX0sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiBBcz1cInVzZVN5bmNFeHRlcm5hbFN0b3JlXCIsWWUoKSx5bihlLG4sdCl9LHVzZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlSWRcIixZZSgpLGZ0KCl9LHVzZUNhY2hlUmVmcmVzaDpmdW5jdGlvbigpe3JldHVybiBBcz1cInVzZUNhY2hlUmVmcmVzaFwiLFllKCksZHQoKX19KS51c2VNZW1vQ2FjaGU9Zm4sWXMudXNlSG9zdFRyYW5zaXRpb25TdGF0dXM9Y3QsWXMudXNlRm9ybVN0YXRlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlRm9ybVN0YXRlXCIsWWUoKSxKZSgpLE1uKGUsbil9LFlzLnVzZUFjdGlvblN0YXRlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlQWN0aW9uU3RhdGVcIixZZSgpLE1uKGUsbil9LFlzLnVzZU9wdGltaXN0aWM9ZnVuY3Rpb24oZSl7cmV0dXJuIEFzPVwidXNlT3B0aW1pc3RpY1wiLFllKCksRW4oZSl9LChHcz17cmVhZENvbnRleHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHNyKGUpfSx1c2U6Y24sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VDYWxsYmFja1wiLFllKCksWG4oZSxuKX0sdXNlQ29udGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VDb250ZXh0XCIsWWUoKSxzcihlKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGUsbil7QXM9XCJ1c2VFZmZlY3RcIixZZSgpLFZuKDIwNDgsenMsZSxuKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihlLG4sdCl7cmV0dXJuIEFzPVwidXNlSW1wZXJhdGl2ZUhhbmRsZVwiLFllKCksSm4oZSxuLHQpfSx1c2VJbnNlcnRpb25FZmZlY3Q6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VJbnNlcnRpb25FZmZlY3RcIixZZSgpLFZuKDQsd3MsZSxuKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlTGF5b3V0RWZmZWN0XCIsWWUoKSxWbig0LHhzLGUsbil9LHVzZU1lbW86ZnVuY3Rpb24oZSxuKXtBcz1cInVzZU1lbW9cIixZZSgpO3ZhciB0PUphLkg7SmEuSD1Yczt0cnl7cmV0dXJuIGV0KGUsbil9ZmluYWxseXtKYS5IPXR9fSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGUsbix0KXtBcz1cInVzZVJlZHVjZXJcIixZZSgpO3ZhciByPUphLkg7SmEuSD1Yczt0cnl7cmV0dXJuIG1uKGUpfWZpbmFsbHl7SmEuSD1yfX0sdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlUmVmXCIsWWUoKSx1bigpLm1lbW9pemVkU3RhdGV9LHVzZVN0YXRlOmZ1bmN0aW9uKCl7QXM9XCJ1c2VTdGF0ZVwiLFllKCk7dmFyIGU9SmEuSDtKYS5IPVhzO3RyeXtyZXR1cm4gbW4oZG4pfWZpbmFsbHl7SmEuSD1lfX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe0FzPVwidXNlRGVidWdWYWx1ZVwiLFllKCl9LHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VEZWZlcnJlZFZhbHVlXCIsWWUoKSx0dChlLG4pfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlVHJhbnNpdGlvblwiLFllKCksaXQoKX0sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiBBcz1cInVzZVN5bmNFeHRlcm5hbFN0b3JlXCIsWWUoKSxibihlLG4sdCl9LHVzZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlSWRcIixZZSgpLHVuKCkubWVtb2l6ZWRTdGF0ZX0sdXNlQ2FjaGVSZWZyZXNoOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlQ2FjaGVSZWZyZXNoXCIsWWUoKSx1bigpLm1lbW9pemVkU3RhdGV9fSkudXNlTWVtb0NhY2hlPWZuLEdzLnVzZUhvc3RUcmFuc2l0aW9uU3RhdHVzPWN0LEdzLnVzZUZvcm1TdGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VGb3JtU3RhdGVcIixZZSgpLEplKCksV24oZSl9LEdzLnVzZUFjdGlvblN0YXRlPWZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZUFjdGlvblN0YXRlXCIsWWUoKSxXbihlKX0sR3MudXNlT3B0aW1pc3RpYz1mdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZU9wdGltaXN0aWNcIixZZSgpLFBuKGUsbil9LChKcz17cmVhZENvbnRleHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHNyKGUpfSx1c2U6Y24sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VDYWxsYmFja1wiLFllKCksWG4oZSxuKX0sdXNlQ29udGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VDb250ZXh0XCIsWWUoKSxzcihlKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGUsbil7QXM9XCJ1c2VFZmZlY3RcIixZZSgpLFZuKDIwNDgsenMsZSxuKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihlLG4sdCl7cmV0dXJuIEFzPVwidXNlSW1wZXJhdGl2ZUhhbmRsZVwiLFllKCksSm4oZSxuLHQpfSx1c2VJbnNlcnRpb25FZmZlY3Q6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VJbnNlcnRpb25FZmZlY3RcIixZZSgpLFZuKDQsd3MsZSxuKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlTGF5b3V0RWZmZWN0XCIsWWUoKSxWbig0LHhzLGUsbil9LHVzZU1lbW86ZnVuY3Rpb24oZSxuKXtBcz1cInVzZU1lbW9cIixZZSgpO3ZhciB0PUphLkg7SmEuSD1aczt0cnl7cmV0dXJuIGV0KGUsbil9ZmluYWxseXtKYS5IPXR9fSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGUsbix0KXtBcz1cInVzZVJlZHVjZXJcIixZZSgpO3ZhciByPUphLkg7SmEuSD1aczt0cnl7cmV0dXJuIGduKGUpfWZpbmFsbHl7SmEuSD1yfX0sdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlUmVmXCIsWWUoKSx1bigpLm1lbW9pemVkU3RhdGV9LHVzZVN0YXRlOmZ1bmN0aW9uKCl7QXM9XCJ1c2VTdGF0ZVwiLFllKCk7dmFyIGU9SmEuSDtKYS5IPVpzO3RyeXtyZXR1cm4gZ24oZG4pfWZpbmFsbHl7SmEuSD1lfX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe0FzPVwidXNlRGVidWdWYWx1ZVwiLFllKCl9LHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VEZWZlcnJlZFZhbHVlXCIsWWUoKSxydChlLG4pfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlVHJhbnNpdGlvblwiLFllKCksc3QoKX0sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiBBcz1cInVzZVN5bmNFeHRlcm5hbFN0b3JlXCIsWWUoKSxibihlLG4sdCl9LHVzZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlSWRcIixZZSgpLHVuKCkubWVtb2l6ZWRTdGF0ZX0sdXNlQ2FjaGVSZWZyZXNoOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlQ2FjaGVSZWZyZXNoXCIsWWUoKSx1bigpLm1lbW9pemVkU3RhdGV9fSkudXNlTWVtb0NhY2hlPWZuLEpzLnVzZUhvc3RUcmFuc2l0aW9uU3RhdHVzPWN0LEpzLnVzZUZvcm1TdGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VGb3JtU3RhdGVcIixZZSgpLEplKCksQW4oZSl9LEpzLnVzZUFjdGlvblN0YXRlPWZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZUFjdGlvblN0YXRlXCIsWWUoKSxBbihlKX0sSnMudXNlT3B0aW1pc3RpYz1mdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZU9wdGltaXN0aWNcIixZZSgpLFJuKGUsbil9LChLcz17cmVhZENvbnRleHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGwoKSxzcihlKX0sdXNlOmZ1bmN0aW9uKGUpe3JldHVybiByKCksY24oZSl9LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlQ2FsbGJhY2tcIixyKCkscWUoKSxLbihlLG4pfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZUNvbnRleHRcIixyKCkscWUoKSxzcihlKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlRWZmZWN0XCIscigpLHFlKCksJG4oZSxuKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihlLG4sdCl7cmV0dXJuIEFzPVwidXNlSW1wZXJhdGl2ZUhhbmRsZVwiLHIoKSxxZSgpLEduKGUsbix0KX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGUsbil7QXM9XCJ1c2VJbnNlcnRpb25FZmZlY3RcIixyKCkscWUoKSxCbig0LHdzLGUsbil9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZUxheW91dEVmZmVjdFwiLHIoKSxxZSgpLHFuKGUsbil9LHVzZU1lbW86ZnVuY3Rpb24oZSxuKXtBcz1cInVzZU1lbW9cIixyKCkscWUoKTt2YXIgdD1KYS5IO0phLkg9S3M7dHJ5e3JldHVybiBabihlLG4pfWZpbmFsbHl7SmEuSD10fX0sdXNlUmVkdWNlcjpmdW5jdGlvbihlLG4sdCl7QXM9XCJ1c2VSZWR1Y2VyXCIscigpLHFlKCk7dmFyIGw9SmEuSDtKYS5IPUtzO3RyeXtyZXR1cm4gcG4oZSxuLHQpfWZpbmFsbHl7SmEuSD1sfX0sdXNlUmVmOmZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZVJlZlwiLHIoKSxxZSgpLE9uKGUpfSx1c2VTdGF0ZTpmdW5jdGlvbihlKXtBcz1cInVzZVN0YXRlXCIscigpLHFlKCk7dmFyIG49SmEuSDtKYS5IPUtzO3RyeXtyZXR1cm4gQ24oZSl9ZmluYWxseXtKYS5IPW59fSx1c2VEZWJ1Z1ZhbHVlOmZ1bmN0aW9uKCl7QXM9XCJ1c2VEZWJ1Z1ZhbHVlXCIscigpLHFlKCl9LHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VEZWZlcnJlZFZhbHVlXCIscigpLHFlKCksbnQoZSxuKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3JldHVybiBBcz1cInVzZVRyYW5zaXRpb25cIixyKCkscWUoKSx1dCgpfSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpmdW5jdGlvbihlLG4sdCl7cmV0dXJuIEFzPVwidXNlU3luY0V4dGVybmFsU3RvcmVcIixyKCkscWUoKSx5bihlLG4sdCl9LHVzZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlSWRcIixyKCkscWUoKSxmdCgpfSx1c2VDYWNoZVJlZnJlc2g6ZnVuY3Rpb24oKXtyZXR1cm4gQXM9XCJ1c2VDYWNoZVJlZnJlc2hcIixxZSgpLGR0KCl9LHVzZU1lbW9DYWNoZTpmdW5jdGlvbihlKXtyZXR1cm4gcigpLGZuKGUpfX0pLnVzZUhvc3RUcmFuc2l0aW9uU3RhdHVzPWN0LEtzLnVzZUZvcm1TdGF0ZT1mdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZUZvcm1TdGF0ZVwiLHIoKSxxZSgpLE1uKGUsbil9LEtzLnVzZUFjdGlvblN0YXRlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlQWN0aW9uU3RhdGVcIixyKCkscWUoKSxNbihlLG4pfSxLcy51c2VPcHRpbWlzdGljPWZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZU9wdGltaXN0aWNcIixyKCkscWUoKSxFbihlKX0sKFhzPXtyZWFkQ29udGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gbCgpLHNyKGUpfSx1c2U6ZnVuY3Rpb24oZSl7cmV0dXJuIHIoKSxjbihlKX0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VDYWxsYmFja1wiLHIoKSxZZSgpLFhuKGUsbil9LHVzZUNvbnRleHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIEFzPVwidXNlQ29udGV4dFwiLHIoKSxZZSgpLHNyKGUpfSx1c2VFZmZlY3Q6ZnVuY3Rpb24oZSxuKXtBcz1cInVzZUVmZmVjdFwiLHIoKSxZZSgpLFZuKDIwNDgsenMsZSxuKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihlLG4sdCl7cmV0dXJuIEFzPVwidXNlSW1wZXJhdGl2ZUhhbmRsZVwiLHIoKSxZZSgpLEpuKGUsbix0KX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlSW5zZXJ0aW9uRWZmZWN0XCIscigpLFllKCksVm4oNCx3cyxlLG4pfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VMYXlvdXRFZmZlY3RcIixyKCksWWUoKSxWbig0LHhzLGUsbil9LHVzZU1lbW86ZnVuY3Rpb24oZSxuKXtBcz1cInVzZU1lbW9cIixyKCksWWUoKTt2YXIgdD1KYS5IO0phLkg9WHM7dHJ5e3JldHVybiBldChlLG4pfWZpbmFsbHl7SmEuSD10fX0sdXNlUmVkdWNlcjpmdW5jdGlvbihlLG4sdCl7QXM9XCJ1c2VSZWR1Y2VyXCIscigpLFllKCk7dmFyIGw9SmEuSDtKYS5IPVhzO3RyeXtyZXR1cm4gbW4oZSl9ZmluYWxseXtKYS5IPWx9fSx1c2VSZWY6ZnVuY3Rpb24oKXtyZXR1cm4gQXM9XCJ1c2VSZWZcIixyKCksWWUoKSx1bigpLm1lbW9pemVkU3RhdGV9LHVzZVN0YXRlOmZ1bmN0aW9uKCl7QXM9XCJ1c2VTdGF0ZVwiLHIoKSxZZSgpO3ZhciBlPUphLkg7SmEuSD1Yczt0cnl7cmV0dXJuIG1uKGRuKX1maW5hbGx5e0phLkg9ZX19LHVzZURlYnVnVmFsdWU6ZnVuY3Rpb24oKXtBcz1cInVzZURlYnVnVmFsdWVcIixyKCksWWUoKX0sdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZURlZmVycmVkVmFsdWVcIixyKCksWWUoKSx0dChlLG4pfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlVHJhbnNpdGlvblwiLHIoKSxZZSgpLGl0KCl9LHVzZVN5bmNFeHRlcm5hbFN0b3JlOmZ1bmN0aW9uKGUsbix0KXtyZXR1cm4gQXM9XCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZVwiLHIoKSxZZSgpLGJuKGUsbix0KX0sdXNlSWQ6ZnVuY3Rpb24oKXtyZXR1cm4gQXM9XCJ1c2VJZFwiLHIoKSxZZSgpLHVuKCkubWVtb2l6ZWRTdGF0ZX0sdXNlQ2FjaGVSZWZyZXNoOmZ1bmN0aW9uKCl7cmV0dXJuIEFzPVwidXNlQ2FjaGVSZWZyZXNoXCIsWWUoKSx1bigpLm1lbW9pemVkU3RhdGV9LHVzZU1lbW9DYWNoZTpmdW5jdGlvbihlKXtyZXR1cm4gcigpLGZuKGUpfX0pLnVzZUhvc3RUcmFuc2l0aW9uU3RhdHVzPWN0LFhzLnVzZUZvcm1TdGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VGb3JtU3RhdGVcIixyKCksWWUoKSxXbihlKX0sWHMudXNlQWN0aW9uU3RhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIEFzPVwidXNlQWN0aW9uU3RhdGVcIixyKCksWWUoKSxXbihlKX0sWHMudXNlT3B0aW1pc3RpYz1mdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZU9wdGltaXN0aWNcIixyKCksWWUoKSxQbihlLG4pfSwoWnM9e3JlYWRDb250ZXh0OmZ1bmN0aW9uKGUpe3JldHVybiBsKCksc3IoZSl9LHVzZTpmdW5jdGlvbihlKXtyZXR1cm4gcigpLGNuKGUpfSx1c2VDYWxsYmFjazpmdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZUNhbGxiYWNrXCIscigpLFllKCksWG4oZSxuKX0sdXNlQ29udGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VDb250ZXh0XCIscigpLFllKCksc3IoZSl9LHVzZUVmZmVjdDpmdW5jdGlvbihlLG4pe0FzPVwidXNlRWZmZWN0XCIscigpLFllKCksVm4oMjA0OCx6cyxlLG4pfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGUsbix0KXtyZXR1cm4gQXM9XCJ1c2VJbXBlcmF0aXZlSGFuZGxlXCIscigpLFllKCksSm4oZSxuLHQpfSx1c2VJbnNlcnRpb25FZmZlY3Q6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQXM9XCJ1c2VJbnNlcnRpb25FZmZlY3RcIixyKCksWWUoKSxWbig0LHdzLGUsbil9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihlLG4pe3JldHVybiBBcz1cInVzZUxheW91dEVmZmVjdFwiLHIoKSxZZSgpLFZuKDQseHMsZSxuKX0sdXNlTWVtbzpmdW5jdGlvbihlLG4pe0FzPVwidXNlTWVtb1wiLHIoKSxZZSgpO3ZhciB0PUphLkg7SmEuSD1Yczt0cnl7cmV0dXJuIGV0KGUsbil9ZmluYWxseXtKYS5IPXR9fSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGUsbix0KXtBcz1cInVzZVJlZHVjZXJcIixyKCksWWUoKTt2YXIgbD1KYS5IO0phLkg9WHM7dHJ5e3JldHVybiBnbihlKX1maW5hbGx5e0phLkg9bH19LHVzZVJlZjpmdW5jdGlvbigpe3JldHVybiBBcz1cInVzZVJlZlwiLHIoKSxZZSgpLHVuKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oKXtBcz1cInVzZVN0YXRlXCIscigpLFllKCk7dmFyIGU9SmEuSDtKYS5IPVhzO3RyeXtyZXR1cm4gZ24oZG4pfWZpbmFsbHl7SmEuSD1lfX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe0FzPVwidXNlRGVidWdWYWx1ZVwiLHIoKSxZZSgpfSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlRGVmZXJyZWRWYWx1ZVwiLHIoKSxZZSgpLHJ0KGUsbil9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXtyZXR1cm4gQXM9XCJ1c2VUcmFuc2l0aW9uXCIscigpLFllKCksc3QoKX0sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiBBcz1cInVzZVN5bmNFeHRlcm5hbFN0b3JlXCIscigpLFllKCksYm4oZSxuLHQpfSx1c2VJZDpmdW5jdGlvbigpe3JldHVybiBBcz1cInVzZUlkXCIscigpLFllKCksdW4oKS5tZW1vaXplZFN0YXRlfSx1c2VDYWNoZVJlZnJlc2g6ZnVuY3Rpb24oKXtyZXR1cm4gQXM9XCJ1c2VDYWNoZVJlZnJlc2hcIixZZSgpLHVuKCkubWVtb2l6ZWRTdGF0ZX0sdXNlTWVtb0NhY2hlOmZ1bmN0aW9uKGUpe3JldHVybiByKCksZm4oZSl9fSkudXNlSG9zdFRyYW5zaXRpb25TdGF0dXM9Y3QsWnMudXNlRm9ybVN0YXRlPWZ1bmN0aW9uKGUpe3JldHVybiBBcz1cInVzZUZvcm1TdGF0ZVwiLHIoKSxZZSgpLEFuKGUpfSxacy51c2VBY3Rpb25TdGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gQXM9XCJ1c2VBY3Rpb25TdGF0ZVwiLHIoKSxZZSgpLEFuKGUpfSxacy51c2VPcHRpbWlzdGljPWZ1bmN0aW9uKGUsbil7cmV0dXJuIEFzPVwidXNlT3B0aW1pc3RpY1wiLHIoKSxZZSgpLFJuKGUsbil9O3ZhciBlYz17fSxuYz1uZXcgU2V0LHRjPW5ldyBTZXQscmM9bmV3IFNldCxsYz1uZXcgU2V0LGFjPW5ldyBTZXQsb2M9bmV3IFNldCx1Yz1uZXcgU2V0LGljPW5ldyBTZXQsc2M9bmV3IFNldCxjYz1uZXcgU2V0O09iamVjdC5mcmVlemUoZWMpO3ZhciBmYz17aXNNb3VudGVkOmZ1bmN0aW9uKGUpe3ZhciBuPXRvO2lmKG51bGwhPT1uJiZybyYmMT09PW4udGFnKXt2YXIgdD1uLnN0YXRlTm9kZTt0Ll93YXJuZWRBYm91dFJlZnNJblJlbmRlcnx8Y29uc29sZS5lcnJvcihcIiVzIGlzIGFjY2Vzc2luZyBpc01vdW50ZWQgaW5zaWRlIGl0cyByZW5kZXIoKSBmdW5jdGlvbi4gcmVuZGVyKCkgc2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbiBvZiBwcm9wcyBhbmQgc3RhdGUuIEl0IHNob3VsZCBuZXZlciBhY2Nlc3Mgc29tZXRoaW5nIHRoYXQgcmVxdWlyZXMgc3RhbGUgZGF0YSBmcm9tIHRoZSBwcmV2aW91cyByZW5kZXIsIHN1Y2ggYXMgcmVmcy4gTW92ZSB0aGlzIGxvZ2ljIHRvIGNvbXBvbmVudERpZE1vdW50IGFuZCBjb21wb25lbnREaWRVcGRhdGUgaW5zdGVhZC5cIixjKG4pfHxcIkEgY29tcG9uZW50XCIpLHQuX3dhcm5lZEFib3V0UmVmc0luUmVuZGVyPSEwfXJldHVybiEhKGU9ZS5fcmVhY3RJbnRlcm5hbHMpJiZmdW5jdGlvbihlKXt2YXIgbj1lLHQ9ZTtpZihlLmFsdGVybmF0ZSlmb3IoO24ucmV0dXJuOyluPW4ucmV0dXJuO2Vsc2V7ZT1uO2RvezAhPSg0MDk4JihuPWUpLmZsYWdzKSYmKHQ9bi5yZXR1cm4pLGU9bi5yZXR1cm59d2hpbGUoZSl9cmV0dXJuIDM9PT1uLnRhZz90Om51bGx9KGUpPT09ZX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGUsbix0KXt2YXIgcj14bChlPWUuX3JlYWN0SW50ZXJuYWxzKSxsPWdlKHIpO2wucGF5bG9hZD1uLG51bGwhPXQmJihrdCh0KSxsLmNhbGxiYWNrPXQpLG51bGwhPT0obj15ZShlLGwscikpJiYoQ2wobixlLHIpLGJlKG4sZSxyKSl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oZSxuLHQpe3ZhciByPXhsKGU9ZS5fcmVhY3RJbnRlcm5hbHMpLGw9Z2Uocik7bC50YWc9aGksbC5wYXlsb2FkPW4sbnVsbCE9dCYmKGt0KHQpLGwuY2FsbGJhY2s9dCksbnVsbCE9PShuPXllKGUsbCxyKSkmJihDbChuLGUsciksYmUobixlLHIpKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGUsbil7dmFyIHQ9eGwoZT1lLl9yZWFjdEludGVybmFscykscj1nZSh0KTtyLnRhZz1naSxudWxsIT1uJiYoa3Qobiksci5jYWxsYmFjaz1uKSxudWxsIT09KG49eWUoZSxyLHQpKSYmKENsKG4sZSx0KSxiZShuLGUsdCkpfX07XCJmdW5jdGlvblwiPT10eXBlb2YgcmVwb3J0RXJyb3ImJnJlcG9ydEVycm9yO3ZhciBkYz1FcnJvcihcIlRoaXMgaXMgbm90IGEgcmVhbCBlcnJvci4gSXQncyBhbiBpbXBsZW1lbnRhdGlvbiBkZXRhaWwgb2YgUmVhY3QncyBzZWxlY3RpdmUgaHlkcmF0aW9uIGZlYXR1cmUuIElmIHRoaXMgbGVha3MgaW50byB1c2Vyc3BhY2UsIGl0J3MgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLlwiKSxwYz0hMSxtYz17fSxoYz17fSxnYz17fSx5Yz17fSxiYz0hMSx2Yz17fSxTYz17fSxrYz17ZGVoeWRyYXRlZDpudWxsLHRyZWVDb250ZXh0Om51bGwscmV0cnlMYW5lOjB9LHdjPSExLHhjPWIobnVsbCksemM9YihudWxsKSxDYz17fSxFYz1udWxsLFBjPW51bGwsX2M9bnVsbCxSYz0hMSxUYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgQWJvcnRDb250cm9sbGVyP0Fib3J0Q29udHJvbGxlcjpmdW5jdGlvbigpe3ZhciBlPVtdLG49dGhpcy5zaWduYWw9e2Fib3J0ZWQ6ITEsYWRkRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbihuLHQpe2UucHVzaCh0KX19O3RoaXMuYWJvcnQ9ZnVuY3Rpb24oKXtuLmFib3J0ZWQ9ITAsZS5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gZSgpfSkpfX0sTmM9VGEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxMYz1UYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxVYz17JCR0eXBlb2Y6amEsQ29uc3VtZXI6bnVsbCxQcm92aWRlcjpudWxsLF9jdXJyZW50VmFsdWU6bnVsbCxfY3VycmVudFZhbHVlMjpudWxsLF90aHJlYWRDb3VudDowLF9jdXJyZW50UmVuZGVyZXI6bnVsbCxfY3VycmVudFJlbmRlcmVyMjpudWxsfSxEYz1KYS5TO0phLlM9ZnVuY3Rpb24oZSxuKXtcIm9iamVjdFwiPT10eXBlb2YgbiYmbnVsbCE9PW4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIG4udGhlbiYmZnVuY3Rpb24oZSxuKXtpZihudWxsPT09Y2kpe3ZhciB0PWNpPVtdO2ZpPTAsZGk9ZGUoKSxwaT17c3RhdHVzOlwicGVuZGluZ1wiLHZhbHVlOnZvaWQgMCx0aGVuOmZ1bmN0aW9uKGUpe3QucHVzaChlKX19fWZpKyssbi50aGVuKHBlLHBlKX0oMCxuKSxudWxsIT09RGMmJkRjKGUsbil9O3ZhciBJYz1iKG51bGwpLEZjPW51bGw7RmM9bmV3IFNldDt2YXIgTWM9ITEsV2M9ITEsSGM9ITEsamM9XCJmdW5jdGlvblwiPT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldCxBYz1udWxsLFFjPW51bGwsT2M9bnVsbCxCYz0hMSxWYz1udWxsLCRjPSExLHFjPW51bGwsWWM9ODE5MixHYz17Z2V0Q2FjaGVGb3JUeXBlOmZ1bmN0aW9uKGUpe3ZhciBuPXNyKFVjKSx0PW4uZGF0YS5nZXQoZSk7cmV0dXJuIHZvaWQgMD09PXQmJih0PWUoKSxuLmRhdGEuc2V0KGUsdCkpLHR9LGdldE93bmVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRvfX07aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgSmM9U3ltYm9sLmZvcjtKYyhcInNlbGVjdG9yLmNvbXBvbmVudFwiKSxKYyhcInNlbGVjdG9yLmhhc19wc2V1ZG9fY2xhc3NcIiksSmMoXCJzZWxlY3Rvci5yb2xlXCIpLEpjKFwic2VsZWN0b3IudGVzdF9pZFwiKSxKYyhcInNlbGVjdG9yLnRleHRcIil9dmFyIEtjPVwiZnVuY3Rpb25cIj09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXAsWGM9MCxaYz0yLGVmPTQsbmY9MCx0Zj0xLHJmPTIsbGY9MyxhZj00LG9mPTUsdWY9NixzZj1YYyxjZj1udWxsLGZmPW51bGwsZGY9MCxwZj0wLG1mPTEsaGY9MixnZj0zLHlmPTQsYmY9NSx2Zj02LFNmPTcsa2Y9OCx3Zj1wZix4Zj1udWxsLHpmPSExLENmPSExLEVmPTAsUGY9bmYsX2Y9MCxSZj0wLFRmPTAsTmY9MCxMZj0wLFVmPW51bGwsRGY9bnVsbCxJZj0hMSxGZj0wLE1mPTMwMCxXZj0xLzAsSGY9NTAwLGpmPW51bGwsQWY9bnVsbCxRZj0hMSxPZj1udWxsLEJmPTAsVmY9MCwkZj1udWxsLHFmPTUwLFlmPTAsR2Y9bnVsbCxKZj0hMSxLZj0hMSxYZj01MCxaZj0wLGVkPW51bGwsbmQ9ITEsdGQ9MCxyZD0xLGxkPTIsYWQ9bnVsbCxvZD0hMSx1ZD1uZXcgU2V0LGlkPSExO3RyeXt2YXIgc2Q9T2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KTtuZXcgTWFwKFtbc2QsbnVsbF1dKSxuZXcgU2V0KFtzZF0pfWNhdGNoKGUpe2lkPSEwfXZhciBjZD0hMTtyZXR1cm4gX2EuY3JlYXRlQ29udGFpbmVyPWZ1bmN0aW9uKGUsbixyLGwsYSxvLHUsaSxzLGMpe3JldHVybiBmdW5jdGlvbihlLG4scixsLGEsbyx1LGkscyxjLGYsZCl7cmV0dXJuIGU9bmV3IHZhKGUsbixyLHUsaSxzLGMsbnVsbCksbj0xLCEwPT09byYmKG58PTI0KSxfdSYmKG58PTIpLG89dCgzLG51bGwsbnVsbCxuKSxlLmN1cnJlbnQ9byxvLnN0YXRlTm9kZT1lLHByKG49ZHIoKSksZS5wb29sZWRDYWNoZT1uLHByKG4pLG8ubWVtb2l6ZWRTdGF0ZT17ZWxlbWVudDpsLGlzRGVoeWRyYXRlZDpyLGNhY2hlOm59LG1lKG8pLGV9KGUsbiwhMSxudWxsLDAsbCxvLHUsaSxzKX0sX2EuZmx1c2hTeW5jV29yaz1mdW5jdGlvbigpe3JldHVybihzZiYoWmN8ZWYpKSE9PVhjfHwoYWUoMCksITEpfSxfYS51cGRhdGVDb250YWluZXI9ZnVuY3Rpb24oZSxuLHQscil7dmFyIGw9bi5jdXJyZW50LGE9eGwobCk7cmV0dXJuIFNhKGwsYSxlLG4sdCxyKSxhfSxfYS51cGRhdGVDb250YWluZXJTeW5jPWZ1bmN0aW9uKGUsbix0LHIpe3JldHVybiAwPT09bi50YWcmJkpsKCksU2Eobi5jdXJyZW50LDIsZSxuLHQsciksMn0sX2F9LG4uZXhwb3J0cy5kZWZhdWx0PW4uZXhwb3J0cyxPYmplY3QuZGVmaW5lUHJvcGVydHkobi5leHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pKSksYy5leHBvcnRzO3ZhciBufSgpO3ZhciBmLGQ9dChhLmV4cG9ydHMpLHA9e2V4cG9ydHM6e319LG09e307dmFyIGgsZz17fTtcbi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LXJlY29uY2lsZXItY29uc3RhbnRzLmRldmVsb3BtZW50LmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1wicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/cC5leHBvcnRzPShmfHwoZj0xLG0uQ29uY3VycmVudFJvb3Q9MSxtLkNvbnRpbnVvdXNFdmVudFByaW9yaXR5PTgsbS5EZWZhdWx0RXZlbnRQcmlvcml0eT0zMixtLkRpc2NyZXRlRXZlbnRQcmlvcml0eT0yLG0uSWRsZUV2ZW50UHJpb3JpdHk9MjY4NDM1NDU2LG0uTGVnYWN5Um9vdD0wLG0uTm9FdmVudFByaW9yaXR5PTApLG0pOnAuZXhwb3J0cz0oaHx8KGg9MSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYoZy5Db25jdXJyZW50Um9vdD0xLGcuQ29udGludW91c0V2ZW50UHJpb3JpdHk9OCxnLkRlZmF1bHRFdmVudFByaW9yaXR5PTMyLGcuRGlzY3JldGVFdmVudFByaW9yaXR5PTIsZy5JZGxlRXZlbnRQcmlvcml0eT0yNjg0MzU0NTYsZy5MZWdhY3lSb290PTAsZy5Ob0V2ZW50UHJpb3JpdHk9MCkpLGcpO3ZhciB5PXAuZXhwb3J0cztjb25zdCBiPShlLG4pPT57Y29uc3QgdD1PYmplY3Qua2V5cyhlKSxyPU9iamVjdC5rZXlzKG4pO2lmKHQubGVuZ3RoIT09ci5sZW5ndGgpcmV0dXJuITE7Zm9yKGxldCByPTA7cjx0Lmxlbmd0aDtyKz0xKXtjb25zdCBsPXRbcl07aWYoXCJyZW5kZXJcIj09PWwmJiFlW2xdIT0hbltsXSlyZXR1cm4hMTtpZihcImNoaWxkcmVuXCIhPT1sJiZlW2xdIT09bltsXSl7aWYoXCJvYmplY3RcIj09dHlwZW9mIGVbbF0mJlwib2JqZWN0XCI9PXR5cGVvZiBuW2xdJiZiKGVbbF0sbltsXSkpY29udGludWU7cmV0dXJuITF9aWYoXCJjaGlsZHJlblwiPT09bCYmKFwic3RyaW5nXCI9PXR5cGVvZiBlW2xdfHxcInN0cmluZ1wiPT10eXBlb2YgbltsXSkpcmV0dXJuIGVbbF09PT1uW2xdfXJldHVybiEwfSx2PXt9LFM9Y29uc29sZS5lcnJvcixrPSh7YXBwZW5kQ2hpbGQ6ZSxhcHBlbmRDaGlsZFRvQ29udGFpbmVyOm4sY29tbWl0VGV4dFVwZGF0ZTp0LGNvbW1pdFVwZGF0ZTpyLGNyZWF0ZUluc3RhbmNlOmwsY3JlYXRlVGV4dEluc3RhbmNlOmEsaW5zZXJ0QmVmb3JlOm8scmVtb3ZlQ2hpbGQ6dSxyZW1vdmVDaGlsZEZyb21Db250YWluZXI6aSxyZXNldEFmdGVyQ29tbWl0OnN9KT0+e2NvbnN0IGM9ZCh7YXBwZW5kQ2hpbGQ6ZSxhcHBlbmRDaGlsZFRvQ29udGFpbmVyOm4sYXBwZW5kSW5pdGlhbENoaWxkOmUsY3JlYXRlSW5zdGFuY2U6bCxjcmVhdGVUZXh0SW5zdGFuY2U6YSxpbnNlcnRCZWZvcmU6byxjb21taXRVcGRhdGU6KGUsbix0LGwpPT57Yih0LGwpfHxyKGUsbnVsbCxuLHQsbCl9LGNvbW1pdFRleHRVcGRhdGU6dCxyZW1vdmVDaGlsZDp1LHJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lcjppLHJlc2V0QWZ0ZXJDb21taXQ6cyxub1RpbWVvdXQ6LTEsc2hvdWxkU2V0VGV4dENvbnRlbnQ6KCk9PiExLGZpbmFsaXplSW5pdGlhbENoaWxkcmVuOigpPT4hMSxnZXRQdWJsaWNJbnN0YW5jZTplPT5lLGdldFJvb3RIb3N0Q29udGV4dDooKT0+dixnZXRDaGlsZEhvc3RDb250ZXh0OigpPT52LHByZXBhcmVGb3JDb21taXQoKXt9LGNsZWFyQ29udGFpbmVyKCl7fSxyZXNldFRleHRDb250ZW50KCl7fSxnZXRDdXJyZW50VXBkYXRlUHJpb3JpdHk6KCk9PnkuRGVmYXVsdEV2ZW50UHJpb3JpdHksbWF5U3VzcGVuZENvbW1pdDooKT0+ITEscmVxdWVzdFBvc3RQYWludENhbGxiYWNrOigpPT57fSxyZXNvbHZlVXBkYXRlUHJpb3JpdHk6KCk9PnkuRGVmYXVsdEV2ZW50UHJpb3JpdHksc2V0Q3VycmVudFVwZGF0ZVByaW9yaXR5OigpPT57fSxzaG91bGRBdHRlbXB0RWFnZXJUcmFuc2l0aW9uOigpPT4hMX0pO3JldHVybntjcmVhdGVDb250YWluZXI6ZT0+Yy5jcmVhdGVDb250YWluZXIoZSx5LkNvbmN1cnJlbnRSb290LG51bGwsITEsbnVsbCxcIlwiLFMsUyxTLG51bGwpLHVwZGF0ZUNvbnRhaW5lcjooZSxuLHQscik9PntjLnVwZGF0ZUNvbnRhaW5lclN5bmMoZSxuLHQsciksYy5mbHVzaFN5bmNXb3JrKCl9fX07ZXhwb3J0e2sgYXMgZGVmYXVsdH07XG4iXSwibmFtZXMiOlsiZSIsIm4iLCJ0IiwiX19lc01vZHVsZSIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlZmF1bHQiLCJyIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwia2V5cyIsImZvckVhY2giLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXQiLCJlbnVtZXJhYmxlIiwibCIsImEiLCJleHBvcnRzIiwibyIsInUiLCJpIiwicyIsImMiLCIkciIsImxlbmd0aCIsImVuY29kZVVSSUNvbXBvbmVudCIsIkNsIiwiJCR0eXBlb2YiLCJFbCIsImRpc3BsYXlOYW1lIiwibmFtZSIsImRsIiwiZmwiLCJtbCIsInBsIiwidmwiLCJTbCIsInlsIiwiZ2wiLCJfY29udGV4dCIsImJsIiwicmVuZGVyIiwia2wiLCJ0eXBlIiwid2wiLCJfcGF5bG9hZCIsIl9pbml0IiwicmwiLCJFcnJvciIsInN0YWNrIiwidHJpbSIsIm1hdGNoIiwibGwiLCJpbmRleE9mIiwiX2wiLCJwcmVwYXJlU3RhY2tUcmFjZSIsIkRldGVybWluZUNvbXBvbmVudEZyYW1lUm9vdCIsInNldCIsImNhdGNoIiwiY29uZmlndXJhYmxlIiwic3BsaXQiLCJpbmNsdWRlcyIsImYiLCJyZXBsYWNlIiwidGFnIiwicmV0dXJuIiwibWVzc2FnZSIsImN1cnJlbnQiLCJkIiwiTmEiLCJUYSIsInAiLCJtIiwiaCIsInBlbmRpbmdMYW5lcyIsInN1c3BlbmRlZExhbmVzIiwicGluZ2VkTGFuZXMiLCJnIiwieSIsIkZhIiwiYiIsIk1hIiwidiIsInB1c2giLCJTIiwid2FybUxhbmVzIiwiayIsIlVhIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwidyIsIngiLCJ6IiwicWEiLCJZYSIsIkMiLCJLYSIsInNvdXJjZSIsIkUiLCJlbyIsIlhhIiwiWmEiLCJybyIsIm5vIiwidG8iLCJQIiwib28iLCJhbyIsImxvIiwiTmwiLCJfIiwiUiIsIm1lbW9pemVkU3RhdGUiLCJ1byIsIkxsIiwiVCIsInJhIiwiX2N1cnJlbnRWYWx1ZTIiLCJ0YSIsIk4iLCJmbyIsInBvIiwiY28iLCJwZW5kaW5nIiwibmV4dCIsIkkiLCJMIiwibGFuZXMiLCJhbHRlcm5hdGUiLCJVIiwiRiIsIkQiLCJjaGlsZExhbmVzIiwic3RhdGVOb2RlIiwiX3Zpc2liaWxpdHkiLCJoaWRkZW5VcGRhdGVzIiwibGFuZSIsInRpIiwicmkiLCJNIiwiaG8iLCJtbyIsInlvIiwiZ28iLCJXYSIsIk9hIiwiSCIsIlciLCJibyIsIlEiLCJMdSIsIlR1Iiwidm8iLCJHbCIsIlFhIiwiaiIsImV4cGlyYXRpb25UaW1lcyIsImV4cGlyZWRMYW5lcyIsImNhbGxiYWNrTm9kZSIsIlV1IiwiY2FuY2VsUGVuZGluZ0NvbW1pdCIsIkhhIiwiY2FsbGJhY2tQcmlvcml0eSIsIkJhIiwiVmEiLCIkYSIsIkEiLCJiaW5kIiwiV3IiLCJnciIsIk8iLCJCIiwia28iLCJTbyIsInhvIiwic3RhdHVzIiwid28iLCJWIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsImhpZGRlbkNhbGxiYWNrcyIsImNhbGxiYWNrcyIsIiQiLCJxIiwicGF5bG9hZCIsImNhbGxiYWNrIiwiWSIsIlJ1IiwiRyIsIkoiLCJLIiwiQ28iLCJYIiwiem8iLCJmbGFncyIsImlsIiwiSHUiLCJaIiwiZWUiLCJuZSIsIkphIiwiRW8iLCJ0ZSIsInJlIiwibGUiLCJ0aGVuIiwicmVhc29uIiwiUG8iLCJzaGVsbFN1c3BlbmRDb3VudGVyIiwiVG8iLCJhZSIsIm9lIiwiTG8iLCJObyIsInVlIiwicHJvcHMiLCJyZWYiLCJpZSIsInNsIiwidG9TdHJpbmciLCJqb2luIiwic2UiLCJjZSIsImRlbGV0aW9ucyIsInNpYmxpbmciLCJNYXAiLCJrZXkiLCJpbmRleCIsIllyIiwiWnIiLCJtb2RlIiwiY2hpbGRyZW4iLCJlbGVtZW50VHlwZSIsIkpyIiwiY29udGFpbmVySW5mbyIsImltcGxlbWVudGF0aW9uIiwiZWwiLCJLciIsImNsIiwiUmwiLCJ5dCIsImRlbGV0ZSIsImRvbmUiLCJmZSIsIkZvIiwiTXUiLCJJbyIsImJhc2VMYW5lcyIsImRlIiwicGUiLCJtZSIsIkhvIiwiTW8iLCJXbyIsImhlIiwiZ2UiLCJ5ZSIsImJlIiwiZGVoeWRyYXRlZCIsIlNhIiwia2EiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJjaGlsZCIsInZlIiwiU2UiLCJrZSIsImpvIiwiQW8iLCJQbCIsIlpvIiwiZXUiLCIkbyIsIlZvIiwieGUiLCJ3ZSIsIlhvIiwiUW8iLCJPbyIsIkJvIiwiWW8iLCJHbyIsImx1IiwiZGVwZW5kZW5jaWVzIiwibXQiLCJsYXN0RWZmZWN0IiwiZXZlbnRzIiwic3RvcmVzIiwibWVtb0NhY2hlIiwibnUiLCJ6ZSIsInVzZVN0YXRlIiwiVGUiLCJDZSIsInFvIiwiRWUiLCJQZSIsInF1ZXVlIiwiX2UiLCJiYXNlUXVldWUiLCJSZSIsIk5lIiwiZ3QiLCJTdHJpbmciLCJMZSIsImRhdGEiLCJtYXAiLCJzbGljZSIsIktvIiwiQXJyYXkiLCJ6bCIsIlVlIiwiRGUiLCJJZSIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJyZXZlcnRMYW5lIiwiYWN0aW9uIiwiaGFzRWFnZXJTdGF0ZSIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiRmUiLCJNZSIsInNuIiwiamUiLCJnZXRTbmFwc2hvdCIsInJuIiwiSGUiLCJkZXN0cm95IiwiV2UiLCJBZSIsIlFlIiwiaHIiLCJPZSIsIkJlIiwiVmUiLCJfbiIsImlzVHJhbnNpdGlvbiIsImxpc3RlbmVycyIsIiRlIiwic3RhdGUiLCJxZSIsIkdlIiwiWWUiLCJKZSIsIktlIiwiWGUiLCJDbiIsIlBuIiwiWmUiLCJlbiIsIm5uIiwidG4iLCJjcmVhdGUiLCJpbnN0IiwiZGVwcyIsImxuIiwiYW4iLCJvbiIsInVuIiwiY24iLCJmbiIsImRuIiwicG4iLCJjb25jYXQiLCJtbiIsImhuIiwiZ24iLCJ5biIsIm1yIiwiYm4iLCJ2biIsInFsIiwiJGwiLCJFbiIsInByIiwiU24iLCJrbiIsInduIiwieG4iLCJjYWNoZSIsInZ0Iiwiem4iLCJSbiIsIlRuIiwiTm4iLCJMbiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiVW4iLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJ0dSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJEbiIsImRlZmF1bHRQcm9wcyIsIkluIiwib25VbmNhdWdodEVycm9yIiwiY29tcG9uZW50U3RhY2siLCJzZXRUaW1lb3V0IiwiRm4iLCJvbkNhdWdodEVycm9yIiwiZXJyb3JCb3VuZGFyeSIsIk1uIiwiZWxlbWVudCIsIlduIiwiSG4iLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJjb21wb25lbnREaWRDYXRjaCIsIkp1IiwiU2V0IiwiYWRkIiwiam4iLCJEbyIsIlVvIiwiQW4iLCJodCIsImF0IiwiUW4iLCJxciIsImNvbXBhcmUiLCJPbiIsIm90IiwicGVuZGluZ1Byb3BzIiwicW4iLCJCbiIsIl9wZW5kaW5nVmlzaWJpbGl0eSIsIiRuIiwiVm4iLCJjYWNoZVBvb2wiLCJ3dCIsImt0IiwicGFyZW50IiwicHUiLCJwb29sIiwicHQiLCJZbiIsIkduIiwiTGEiLCJjb250ZXh0VHlwZSIsInVwZGF0ZXIiLCJfcmVhY3RJbnRlcm5hbHMiLCJyZWZzIiwiY29udGV4dCIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiSm4iLCJ4dCIsIktuIiwiUXUiLCJYbiIsImZhbGxiYWNrIiwiZXQiLCJhdSIsIlpuIiwibnQiLCJ3YSIsImRpZ2VzdCIsInNvIiwicmV0cnlMYW5lIiwicnUiLCJQciIsIkJyIiwieGEiLCJ0cmVlQ29udGV4dCIsInN1YnRyZWVGbGFncyIsIlhyIiwidHQiLCJmdCIsInJ0IiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwibHQiLCJ1dCIsInN0IiwiZHQiLCJXbCIsInBvb2xlZENhY2hlIiwicmVmQ291bnQiLCJwb29sZWRDYWNoZUxhbmVzIiwiaXQiLCJzdSIsIml1IiwidXUiLCJvdSIsImN0IiwiZmlyc3RDb250ZXh0IiwibWVtb2l6ZWRWYWx1ZSIsImJ0IiwiY29udHJvbGxlciIsImN1IiwiU3QiLCJmdSIsImR1IiwiYWJvcnQiLCJodSIsInp0IiwiQ3QiLCJFdCIsIlB0IiwiX3QiLCJwZW5kaW5nQ29udGV4dCIsImlzRGVoeWRyYXRlZCIsInlyIiwiRmwiLCJSYSIsIklsIiwiTWwiLCJLbCIsIlhsIiwienIiLCJSbyIsIl9vIiwiSGwiLCJWbCIsIld1IiwiR3IiLCJZdSIsInJldHJ5UXVldWUiLCJSdCIsIlR0IiwiTnQiLCJqciIsIkx0IiwiVXQiLCJEdCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiSXQiLCJUbCIsInJlZkNsZWFudXAiLCJGdCIsIk10IiwiaWEiLCJXdCIsIkh0IiwianQiLCJmYSIsIm9hIiwiQXQiLCJjYSIsImFhIiwiUXQiLCJLdCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiZ3UiLCJ5dSIsIlp0IiwiT3QiLCJKbCIsIkJ0IiwiVnQiLCJ3dSIsInh1IiwicGEiLCJkYSIsIkNhIiwiemEiLCIkdCIsInZ1IiwiX3JldHJ5Q2FjaGUiLCJWciIsImhhcyIsInF0IiwiWXQiLCJHdCIsIm1hIiwic2EiLCJidSIsIk9sIiwidWEiLCJKdCIsInF1IiwiX2N1cnJlbnQiLCJYdCIsIkVhIiwiaGEiLCJ5YSIsImdhIiwiYmEiLCJsYSIsImVyIiwibnIiLCJ0ciIsInJyIiwiaWQiLCJvblBvc3RDb21taXQiLCJwYXNzaXZlRWZmZWN0RHVyYXRpb24iLCJhciIsImxyIiwib3IiLCJDdSIsInVyIiwiX2EiLCJ6dSIsImVhIiwiaXIiLCJzciIsIlN1IiwiZHIiLCJjciIsImZyIiwiWWwiLCJpbyIsIndyIiwiU3IiLCJqdSIsIkNyIiwiRXIiLCJHdSIsIk51IiwiRHUiLCJVciIsIkxyIiwiUGEiLCJEciIsImtyIiwiVHIiLCJ4ciIsIl9yIiwidnIiLCJlcnJvclJlY292ZXJ5RGlzYWJsZWRMYW5lcyIsIkJ1IiwiQmwiLCJGdSIsIlZ1IiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsInRpbWVvdXRIYW5kbGUiLCJqbCIsImJyIiwiJHUiLCJPdSIsIkl1IiwiWmwiLCJuYSIsIkZyIiwiQXUiLCJRbCIsIkFsIiwiRXUiLCJSciIsIk5yIiwiamEiLCJBciIsInRyYW5zaXRpb25zIiwibWFya2VySW5zdGFuY2VzIiwiY2F1c2UiLCJJciIsIlh1IiwiS3UiLCJlaSIsIm5pIiwiVWwiLCJ2YSIsImt1IiwiRGwiLCJBYSIsIlp1IiwiTXIiLCJvblJlY292ZXJhYmxlRXJyb3IiLCJHYSIsIm9uUG9zdENvbW1pdEZpYmVyUm9vdCIsIkhyIiwicGluZ0NhY2hlIiwiX3UiLCJRciIsIk9yIiwiaXNSZWFjdENvbXBvbmVudCIsInhsIiwiaGwiLCJfcGVuZGluZ01hcmtlcnMiLCJfdHJhbnNpdGlvbnMiLCJkZXRhY2giLCJhdHRhY2giLCJwZW5kaW5nQ2hpbGRyZW4iLCJubCIsImlkZW50aWZpZXJQcmVmaXgiLCJmb3JtU3RhdGUiLCJpbmNvbXBsZXRlVHJhbnNpdGlvbnMiLCJ0bCIsImFsIiwib2wiLCJ1bCIsImFzc2lnbiIsIlN5bWJvbCIsImZvciIsIml0ZXJhdG9yIiwiX19DTElFTlRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfV0FSTl9VU0VSU19USEVZX0NBTk5PVF9VUEdSQURFIiwiaXNBcnJheSIsImdldFB1YmxpY0luc3RhbmNlIiwiZ2V0Um9vdEhvc3RDb250ZXh0IiwiZ2V0Q2hpbGRIb3N0Q29udGV4dCIsInByZXBhcmVGb3JDb21taXQiLCJyZXNldEFmdGVyQ29tbWl0IiwiY3JlYXRlSW5zdGFuY2UiLCJhcHBlbmRJbml0aWFsQ2hpbGQiLCJmaW5hbGl6ZUluaXRpYWxDaGlsZHJlbiIsInNob3VsZFNldFRleHRDb250ZW50IiwiY3JlYXRlVGV4dEluc3RhbmNlIiwibm9UaW1lb3V0Iiwic2V0Q3VycmVudFVwZGF0ZVByaW9yaXR5IiwiZ2V0Q3VycmVudFVwZGF0ZVByaW9yaXR5IiwicmVzb2x2ZVVwZGF0ZVByaW9yaXR5Iiwic2hvdWxkQXR0ZW1wdEVhZ2VyVHJhbnNpdGlvbiIsInJlcXVlc3RQb3N0UGFpbnRDYWxsYmFjayIsIm1heVN1c3BlbmRDb21taXQiLCJhcHBlbmRDaGlsZCIsImFwcGVuZENoaWxkVG9Db250YWluZXIiLCJjb21taXRUZXh0VXBkYXRlIiwiY29tbWl0VXBkYXRlIiwiaW5zZXJ0QmVmb3JlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVDaGlsZEZyb21Db250YWluZXIiLCJyZXNldFRleHRDb250ZW50IiwiY2xlYXJDb250YWluZXIiLCJNYXRoIiwiY2x6MzIiLCJEYSIsIklhIiwibG9nIiwiTE4yIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJ1bnN0YWJsZV9ub3ciLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJ1bnN0YWJsZV9zZXREaXNhYmxlWWllbGRWYWx1ZSIsImlzIiwiV2Vha01hcCIsIkpvIiwicmVhZENvbnRleHQiLCJ1c2UiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlSW5zZXJ0aW9uRWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZSIsInVzZUlkIiwidXNlQ2FjaGVSZWZyZXNoIiwidXNlTWVtb0NhY2hlIiwidXNlSG9zdFRyYW5zaXRpb25TdGF0dXMiLCJ1c2VGb3JtU3RhdGUiLCJ1c2VBY3Rpb25TdGF0ZSIsInVzZU9wdGltaXN0aWMiLCJpc01vdW50ZWQiLCJlbnF1ZXVlU2V0U3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJyZXBvcnRFcnJvciIsIkFib3J0Q29udHJvbGxlciIsInNpZ25hbCIsImFib3J0ZWQiLCJhZGRFdmVudExpc3RlbmVyIiwiQ29uc3VtZXIiLCJQcm92aWRlciIsIl9jdXJyZW50VmFsdWUiLCJfdGhyZWFkQ291bnQiLCJtdSIsIldlYWtTZXQiLCJnZXRDYWNoZUZvclR5cGUiLCJQdSIsImNyZWF0ZUNvbnRhaW5lciIsImZsdXNoU3luY1dvcmsiLCJ1cGRhdGVDb250YWluZXIiLCJ1cGRhdGVDb250YWluZXJTeW5jIiwiY29uc29sZSIsImVycm9yIiwic29ydCIsIl9kZWJ1Z0luZm8iLCJpbmZvIiwid2FybiIsImdyb3VwIiwiZ3JvdXBDb2xsYXBzZWQiLCJncm91cEVuZCIsIndyaXRhYmxlIiwiZGVmaW5lUHJvcGVydGllcyIsImVudiIsImdldEN1cnJlbnRTdGFjayIsInBlbmRpbmdVcGRhdGVyc0xhbmVNYXAiLCJtZW1vaXplZFVwZGF0ZXJzIiwic2l6ZSIsImNsZWFyIiwiWWYiLCJxZiIsIlpmIiwiZWQiLCJHZiIsIlhmIiwiYWN0dWFsU3RhcnRUaW1lIiwiYWN0dWFsRHVyYXRpb24iLCJzZWxmQmFzZUR1cmF0aW9uIiwib2kiLCJhY3RRdWV1ZSIsImFpIiwibGkiLCJ1aSIsImRmIiwiY2YiLCJpaSIsIndmIiwiaGYiLCJzaSIsImZpIiwiY2kiLCJwaSIsImRpIiwibWkiLCJTaSIsInZpIiwic2YiLCJaYyIsIlhjIiwia2kiLCJiaSIsImhpIiwiUmMiLCJ5aSIsImdpIiwiX2YiLCJ3aSIsImRpZFVzZVByb21pc2UiLCJ0aGVuYWJsZXMiLCJkaWRXYXJuQWJvdXRVbmNhY2hlZFByb21pc2UiLCJNaSIsIldpIiwiRGkiLCJhcyIsImxzIiwicnMiLCJzcyIsIl9kZWJ1Z093bmVyIiwidHMiLCJfb3duZXIiLCJvcyIsImVudHJpZXMiLCJVaSIsIkVmIiwibXMiLCJwcyIsInZzIiwieXMiLCJocyIsImdzIiwiQXMiLCJRcyIsIk9zIiwiVHMiLCJDcyIsIl9zIiwiQnMiLCJScyIsIl9kZWJ1Z0hvb2tUeXBlcyIsIlBzIiwiR3MiLCJZcyIsInFzIiwiSXMiLCJqaSIsIkRzIiwiV3MiLCJfZGVidWdUaGVuYWJsZVN0YXRlIiwiJHMiLCJOcyIsIkxzIiwiVXMiLCJNcyIsInBjIiwiRXMiLCJqcyIsIkpzIiwiRnMiLCJWcyIsImNzIiwia3MiLCJ6cyIsIl91cGRhdGVkRmliZXJzIiwieHMiLCJIcyIsIlhzIiwiY2MiLCJvYyIsIm5jIiwiZmMiLCJ0aHJvd25FcnJvcnMiLCJBZiIsIllpIiwiZHMiLCJmcyIsIlVjIiwibWMiLCJ4aSIsInJlY29yZExlZ2FjeUNvbnRleHRXYXJuaW5nIiwiY29udGV4dFR5cGVzIiwiZ2MiLCJzYyIsIl9yZWFjdEludGVybmFsSW5zdGFuY2UiLCJlYyIsInRjIiwiX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyIsImxjIiwiZ2V0SW5pdGlhbFN0YXRlIiwiaXNSZWFjdENsYXNzQXBwcm92ZWQiLCJnZXREZWZhdWx0UHJvcHMiLCJjaGlsZENvbnRleHRUeXBlcyIsImljIiwidWMiLCJjb21wb25lbnRTaG91bGRVcGRhdGUiLCJjb21wb25lbnREaWRVbm1vdW50IiwiY29tcG9uZW50RGlkUmVjZWl2ZVByb3BzIiwiY29tcG9uZW50V2lsbFJlY2lldmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjaWV2ZVByb3BzIiwicmMiLCJnZXRDaGlsZENvbnRleHQiLCJhYyIsInJlY29yZFVuc2FmZUxpZmVjeWNsZVdhcm5pbmdzIiwiUWkiLCJiYyIsInljIiwiaGMiLCJOZiIsImJzIiwia2MiLCJkYyIsInZjIiwidG9Mb3dlckNhc2UiLCJTYyIsIl9kZWJ1Z05lZWRzUmVtb3VudCIsImVmZmVjdER1cmF0aW9uIiwid2MiLCJfYyIsIlBjIiwiRWMiLCJ4YyIsInpjIiwiX2N1cnJlbnRSZW5kZXJlcjIiLCJDYyIsIlRjIiwiTmMiLCJMYyIsIkljIiwidHJlZUJhc2VEdXJhdGlvbiIsIkZpIiwiSWkiLCJQZiIsIm5mIiwiV2YiLCJTcyIsIm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0TW91bnRTdGFydGVkIiwibWFya0NvbXBvbmVudExheW91dEVmZmVjdE1vdW50U3RhcnRlZCIsIndzIiwibmQiLCJYaSIsIm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0TW91bnRTdG9wcGVkIiwibWFya0NvbXBvbmVudExheW91dEVmZmVjdE1vdW50U3RvcHBlZCIsIm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0VW5tb3VudFN0YXJ0ZWQiLCJtYXJrQ29tcG9uZW50TGF5b3V0RWZmZWN0VW5tb3VudFN0YXJ0ZWQiLCJlcyIsIm1hcmtDb21wb25lbnRQYXNzaXZlRWZmZWN0VW5tb3VudFN0b3BwZWQiLCJtYXJrQ29tcG9uZW50TGF5b3V0RWZmZWN0VW5tb3VudFN0b3BwZWQiLCJGYyIsIkppIiwib25Db21taXQiLCJvblJlbmRlciIsIkJpIiwiJGkiLCJNYyIsIldjIiwiVmMiLCIkYyIsImpjIiwiUWMiLCJPYyIsIkhjIiwiRmYiLCJZYyIsInFjIiwiQWMiLCJJU19SRUFDVF9BQ1RfRU5WSVJPTk1FTlQiLCJKZiIsIktmIiwiZmYiLCJ1ZCIsIm9kIiwiUmYiLCJhZiIsImVmIiwiamYiLCJIZiIsInBmIiwieGYiLCJtZiIsIlNmIiwiZ2YiLCJ5ZiIsImJmIiwidmYiLCJrZiIsInVmIiwicmYiLCJVZiIsIkNmIiwiRGYiLCJ0ZiIsImxmIiwib2YiLCJJZiIsIk1mIiwiTGYiLCJ6ZiIsImxkIiwidGQiLCJyZCIsIlRmIiwiZGlzY2FyZFBlbmRpbmdXYXJuaW5ncyIsIkdjIiwiT2YiLCJmbHVzaExlZ2FjeUNvbnRleHRXYXJuaW5nIiwiZmx1c2hQZW5kaW5nVW5zYWZlTGlmZWN5Y2xlV2FybmluZ3MiLCJRZiIsIlZmIiwiJGYiLCJCYyIsIkJmIiwibWFya1Bhc3NpdmVFZmZlY3RzU3RhcnRlZCIsIm1hcmtQYXNzaXZlRWZmZWN0c1N0b3BwZWQiLCJLYyIsImFkIiwicHJldmVudEV4dGVuc2lvbnMiLCJfZGVidWdSb290VHlwZSIsImNkIiwiX19yZWFjdERpc2FibGVkTG9nIiwiZnJlZXplIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiemkiLCJDaSIsIkVpIiwiUGkiLCJfaSIsIlJpIiwiVGkiLCJOaSIsIkxpIiwiSGkiLCJBaSIsIk9pIiwiVmkiLCJxaSIsIkdpIiwiS2kiLCJaaSIsIm5zIiwidXMiLCJfc3RvcmUiLCJ2YWxpZGF0ZWQiLCJLcyIsIlpzIiwiX3dhcm5lZEFib3V0UmVmc0luUmVuZGVyIiwiX2N1cnJlbnRSZW5kZXJlciIsIkRjIiwiZ2V0T3duZXIiLCJKYyIsInNkIiwiQ29uY3VycmVudFJvb3QiLCJDb250aW51b3VzRXZlbnRQcmlvcml0eSIsIkRlZmF1bHRFdmVudFByaW9yaXR5IiwiRGlzY3JldGVFdmVudFByaW9yaXR5IiwiSWRsZUV2ZW50UHJpb3JpdHkiLCJMZWdhY3lSb290IiwiTm9FdmVudFByaW9yaXR5Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/reconciler/lib/reconciler-31.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/render/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@react-pdf/render/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/primitives */ \"(ssr)/./node_modules/@react-pdf/primitives/lib/index.js\");\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var abs_svg_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! abs-svg-path */ \"(ssr)/./node_modules/abs-svg-path/index.js\");\n/* harmony import */ var parse_svg_path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! parse-svg-path */ \"(ssr)/./node_modules/parse-svg-path/index.js\");\n/* harmony import */ var normalize_svg_path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! normalize-svg-path */ \"(ssr)/./node_modules/normalize-svg-path/index.mjs\");\n/* harmony import */ var color_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! color-string */ \"(ssr)/./node_modules/color-string/index.js\");\n\n\n\n\n\n\n\nconst renderPath = (ctx, node) => {\n    const d = node.props?.d;\n    if (d)\n        ctx.path(node.props.d);\n};\n\nconst KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst renderRect = (ctx, node) => {\n    const x = node.props?.x || 0;\n    const y = node.props?.y || 0;\n    const rx = node.props?.rx || 0;\n    const ry = node.props?.ry || 0;\n    const width = node.props?.width || 0;\n    const height = node.props?.height || 0;\n    if (!width || !height)\n        return;\n    if (rx && ry) {\n        const krx = rx * KAPPA$3;\n        const kry = ry * KAPPA$3;\n        ctx.moveTo(x + rx, y);\n        ctx.lineTo(x - rx + width, y);\n        ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n        ctx.lineTo(x + width, y + height - ry);\n        ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n        ctx.lineTo(x + rx, y + height);\n        ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n        ctx.lineTo(x, y + ry);\n        ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n    }\n    else {\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + width, y);\n        ctx.lineTo(x + width, y + height);\n        ctx.lineTo(x, y + height);\n    }\n    ctx.closePath();\n};\n\nconst renderLine$1 = (ctx, node) => {\n    const { x1, x2, y1, y2 } = node.props || {};\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n};\n\nconst renderGroup = () => {\n    // noop\n};\n\nconst KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst drawEllipse = (ctx, rx, ry, cx = 0, cy = 0) => {\n    const x = cx - rx;\n    const y = cy - ry;\n    const ox = rx * KAPPA$2;\n    const oy = ry * KAPPA$2;\n    const xe = x + rx * 2;\n    const ye = y + ry * 2;\n    const xm = x + rx;\n    const ym = y + ry;\n    ctx.moveTo(x, ym);\n    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n    ctx.closePath();\n};\nconst renderEllipse = (ctx, node) => {\n    const { cx, cy, rx, ry } = node.props || {};\n    drawEllipse(ctx, rx, ry, cx, cy);\n};\n\nconst renderCircle = (ctx, node) => {\n    const cx = node.props?.cx;\n    const cy = node.props?.cy;\n    const r = node.props?.r;\n    drawEllipse(ctx, r, r, cx, cy);\n};\n\n/* eslint-disable no-return-assign */\nconst number = (n) => {\n    if (n > -1e21 && n < 1e21) {\n        return Math.round(n * 1e6) / 1e6;\n    }\n    throw new Error(`unsupported number: ${n}`);\n};\nconst _renderGlyphs = (ctx, encoded, positions, x, y) => {\n    const commands = [];\n    const scale = ctx._fontSize / 1000;\n    let i;\n    let last = 0;\n    let hadOffset = false;\n    ctx.save();\n    // flip coordinate system\n    ctx.transform(1, 0, 0, -1, 0, ctx.page.height);\n    y = ctx.page.height - y;\n    // add current font to page if necessary\n    if (ctx.page.fonts[ctx._font.id] == null) {\n        ctx.page.fonts[ctx._font.id] = ctx._font.ref();\n    }\n    // begin the text object\n    ctx.addContent('BT');\n    // text position\n    ctx.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n    // font and font size\n    ctx.addContent(`/${ctx._font.id} ${number(ctx._fontSize)} Tf`);\n    // Adds a segment of text to the TJ command buffer\n    const addSegment = (cur) => {\n        if (last < cur) {\n            const hex = encoded.slice(last, cur).join('');\n            const advance = positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;\n            commands.push(`<${hex}> ${number(-advance)}`);\n        }\n        return (last = cur);\n    };\n    // Flushes the current TJ commands to the output stream\n    const flush = (s) => {\n        addSegment(s);\n        if (commands.length > 0) {\n            ctx.addContent(`[${commands.join(' ')}] TJ`);\n            return (commands.length = 0);\n        }\n    };\n    for (i = 0; i < positions.length; i += 1) {\n        // If we have an x or y offset, we have to break out of the current TJ command\n        // so we can move the text position.\n        const pos = positions[i];\n        if (pos.xOffset || pos.yOffset) {\n            // Flush the current buffer\n            flush(i);\n            // Move the text position and flush just the current character\n            ctx.addContent(`1 0 0 1 ${number(x + pos.xOffset * scale)} ${number(y + pos.yOffset * scale)} Tm`);\n            flush(i + 1);\n            hadOffset = true;\n        }\n        else {\n            // If the last character had an offset, reset the text position\n            if (hadOffset) {\n                ctx.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n                hadOffset = false;\n            }\n            // Group segments that don't have any advance adjustments\n            if (pos.xAdvance - pos.advanceWidth !== 0) {\n                addSegment(i + 1);\n            }\n        }\n        x += pos.xAdvance * scale;\n    }\n    // Flush any remaining commands\n    flush(i);\n    // end the text object\n    ctx.addContent('ET');\n    // restore flipped coordinate system\n    return ctx.restore();\n};\nconst renderGlyphs = (ctx, glyphs, positions, x, y) => {\n    const scale = 1000 / ctx._fontSize;\n    const unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n    const advanceWidthScale = 1000 / unitsPerEm;\n    // Glyph encoding and positioning\n    const encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n    const encodedPositions = positions.map((pos, i) => ({\n        xAdvance: pos.xAdvance * scale,\n        yAdvance: pos.yAdvance * scale,\n        xOffset: pos.xOffset,\n        yOffset: pos.yOffset,\n        advanceWidth: glyphs[i].advanceWidth * advanceWidthScale,\n    }));\n    return _renderGlyphs(ctx, encodedGlyphs, encodedPositions, x, y);\n};\n\nconst renderRun$1 = (ctx, run) => {\n    if (!run.glyphs)\n        return;\n    if (!run.positions)\n        return;\n    const runAdvanceWidth = run.xAdvance;\n    const font = run.attributes.font?.[0];\n    const { fontSize, color, opacity } = run.attributes;\n    if (color)\n        ctx.fillColor(color);\n    ctx.fillOpacity(opacity);\n    if (font) {\n        ctx.font(font.type === 'STANDARD' ? font.fullName : font, fontSize);\n    }\n    try {\n        renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    }\n    catch (error) {\n        console.log(error);\n    }\n    ctx.translate(runAdvanceWidth, 0);\n};\nconst renderSpan = (ctx, line, textAnchor, dominantBaseline) => {\n    ctx.save();\n    const x = line.box?.x || 0;\n    const y = line.box?.y || 0;\n    const font = line.runs[0]?.attributes.font?.[0];\n    const scale = line.runs[0]?.attributes?.scale || 1;\n    const width = line.xAdvance;\n    if (!font)\n        return;\n    const ascent = font.ascent * scale;\n    const xHeight = font.xHeight * scale;\n    const descent = font.descent * scale;\n    const capHeight = font.capHeight * scale;\n    let xTranslate = x;\n    let yTranslate = y;\n    switch (textAnchor) {\n        case 'middle':\n            xTranslate = x - width / 2;\n            break;\n        case 'end':\n            xTranslate = x - width;\n            break;\n        default:\n            xTranslate = x;\n            break;\n    }\n    switch (dominantBaseline) {\n        case 'middle':\n        case 'central':\n            yTranslate = y + capHeight / 2;\n            break;\n        case 'hanging':\n            yTranslate = y + capHeight;\n            break;\n        case 'mathematical':\n            yTranslate = y + xHeight;\n            break;\n        case 'text-after-edge':\n            yTranslate = y + descent;\n            break;\n        case 'text-before-edge':\n            yTranslate = y + ascent;\n            break;\n        default:\n            yTranslate = y;\n            break;\n    }\n    ctx.translate(xTranslate, yTranslate);\n    line.runs.forEach((run) => renderRun$1(ctx, run));\n    ctx.restore();\n};\nconst renderSvgText = (ctx, node) => {\n    const children = node.children;\n    children.forEach((span) => renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline));\n};\n\nconst pairs = (values) => {\n    const result = [];\n    for (let i = 0; i < values.length; i += 2) {\n        result.push([values[i], values[i + 1]]);\n    }\n    return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param points string ex. \"20,30 50,60\"\n * @returns points array ex. [[20, 30], [50, 60]]\n */\nconst parsePoints = (points) => {\n    let values = (points || '')\n        .trim()\n        .replace(/,/g, ' ')\n        .replace(/(\\d)-(\\d)/g, '$1 -$2')\n        .split(/\\s+/);\n    if (values.length % 2 !== 0) {\n        values = values.slice(0, -1);\n    }\n    const mappedValues = values.map(parseFloat);\n    return pairs(mappedValues);\n};\n\nconst drawPolyline = (ctx, points) => {\n    if (points.length > 0) {\n        ctx.moveTo(points[0][0], points[0][1]);\n        points.slice(1).forEach((p) => ctx.lineTo(p[0], p[1]));\n    }\n};\nconst renderPolyline = (ctx, node) => {\n    const points = parsePoints(node.props.points || '');\n    drawPolyline(ctx, points);\n};\n\nconst renderPolygon = (ctx, node) => {\n    const points = parsePoints(node.props.points || '');\n    drawPolyline(ctx, points);\n    ctx.closePath();\n};\n\nconst renderImage$1 = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.image?.data)\n        return;\n    const { x = 0, y = 0 } = node.props;\n    const { width, height, opacity } = node.style;\n    const paddingTop = node.box.paddingLeft || 0;\n    const paddingLeft = node.box.paddingLeft || 0;\n    if (width === 0 || height === 0) {\n        console.warn(`Image with src '${node.props.href}' skipped due to invalid dimensions`);\n        return;\n    }\n    if (typeof width === 'string' || typeof height === 'string') {\n        console.warn(`Image with src '${node.props.href}' skipped due to percentage width or height`);\n        return;\n    }\n    ctx.save();\n    ctx\n        .fillOpacity(opacity || 1)\n        .image(node.image.data, x + paddingLeft, y + paddingTop, {\n        width,\n        height,\n    });\n    ctx.restore();\n};\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst clipNode = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.style)\n        return;\n    const { top, left, width, height } = node.box;\n    const { borderTopLeftRadius = 0, borderTopRightRadius = 0, borderBottomRightRadius = 0, borderBottomLeftRadius = 0, } = node.style;\n    // Border top\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA$1);\n    ctx.moveTo(left + rtr, top);\n    ctx.lineTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr);\n    // Border right\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA$1);\n    ctx.lineTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height);\n    // Border bottom\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA$1);\n    ctx.lineTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl);\n    // Border left\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA$1);\n    ctx.lineTo(left, top + rtl);\n    ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n    ctx.closePath();\n    ctx.clip();\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n    const { operation, value } = transform;\n    switch (operation) {\n        case 'scale': {\n            const [scaleX, scaleY] = value;\n            ctx.scale(scaleX, scaleY, { origin });\n            break;\n        }\n        case 'rotate': {\n            const [angle] = value;\n            ctx.rotate(angle, { origin });\n            break;\n        }\n        case 'translate': {\n            const [x, y = 0] = value;\n            ctx.translate(x, y, { origin });\n            break;\n        }\n        case 'skew': {\n            const [xAngle = 0, yAngle = 0] = value;\n            const radx = (xAngle * Math.PI) / 180;\n            const rady = (yAngle * Math.PI) / 180;\n            const tanx = Math.tan(radx);\n            const tany = Math.tan(rady);\n            let x = 0;\n            let y = 0;\n            if (origin != null) {\n                [x, y] = Array.from(origin);\n                const x1 = x + tanx * y;\n                const y1 = y + tany * x;\n                x -= x1;\n                y -= y1;\n            }\n            ctx.transform(1, tany, tanx, 1, x, y);\n            break;\n        }\n        case 'matrix': {\n            ctx.transform(...value);\n            break;\n        }\n        default: {\n            console.error(`Transform operation: '${operation}' doesn't supported`);\n        }\n    }\n};\nconst applyTransformations = (ctx, node) => {\n    if (!node.origin)\n        return;\n    const { props, style } = node;\n    const origin = [node.origin.left, node.origin.top];\n    const propsTransform = 'transform' in props ? props.transform : undefined;\n    const operations = style?.transform || propsTransform || [];\n    operations.forEach((operation) => {\n        applySingleTransformation(ctx, operation, origin);\n    });\n};\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nconst getPathBoundingBox = (node) => {\n    const path = (0,normalize_svg_path__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(abs_svg_path__WEBPACK_IMPORTED_MODULE_2__(parse_svg_path__WEBPACK_IMPORTED_MODULE_3__(node.props?.d || '')));\n    if (!path.length)\n        return [0, 0, 0, 0];\n    const bounds = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = 0, l = path.length; i < l; i += 1) {\n        const points = path[i].slice(1);\n        for (let j = 0; j < points.length; j += 2) {\n            if (points[j + 0] < bounds[0])\n                bounds[0] = points[j + 0];\n            if (points[j + 1] < bounds[1])\n                bounds[1] = points[j + 1];\n            if (points[j + 0] > bounds[2])\n                bounds[2] = points[j + 0];\n            if (points[j + 1] > bounds[3])\n                bounds[3] = points[j + 1];\n        }\n    }\n    return bounds;\n};\nconst getCircleBoundingBox = (node) => {\n    const r = node.props?.r || 0;\n    const cx = node.props?.cx || 0;\n    const cy = node.props?.cy || 0;\n    return [cx - r, cy - r, cx + r, cy + r];\n};\nconst getEllipseBoundingBox = (node) => {\n    const cx = node.props?.cx || 0;\n    const cy = node.props?.cy || 0;\n    const rx = node.props?.rx || 0;\n    const ry = node.props?.ry || 0;\n    return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\nconst getLineBoundingBox = (node) => {\n    const x1 = node.props?.x1 || 0;\n    const y1 = node.props?.y1 || 0;\n    const x2 = node.props?.x2 || 0;\n    const y2 = node.props?.y2 || 0;\n    return [\n        Math.min(x1, x2),\n        Math.min(y1, y2),\n        Math.max(x1, x2),\n        Math.max(y1, y2),\n    ];\n};\nconst getRectBoundingBox = (node) => {\n    const x = node.props?.x || 0;\n    const y = node.props?.y || 0;\n    const width = node.props?.width || 0;\n    const height = node.props?.height || 0;\n    return [x, y, x + width, y + height];\n};\nconst max = (values) => Math.max(-Infinity, ...values);\nconst min = (values) => Math.min(Infinity, ...values);\nconst getPolylineBoundingBox = (node) => {\n    const points = parsePoints(node.props?.points);\n    const xValues = points.map((p) => p[0]);\n    const yValues = points.map((p) => p[1]);\n    return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\nconst boundingBoxFns = {\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Rect]: getRectBoundingBox,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Line]: getLineBoundingBox,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Path]: getPathBoundingBox,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Circle]: getCircleBoundingBox,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Ellipse]: getEllipseBoundingBox,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polygon]: getPolylineBoundingBox,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polyline]: getPolylineBoundingBox,\n};\nconst getBoundingBox = (node) => {\n    const boundingBoxFn = boundingBoxFns[node.type];\n    return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\n\nconst setStrokeWidth = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeWidth' in node.props))\n        return;\n    const lineWidth = node.props.strokeWidth;\n    if (lineWidth)\n        ctx.lineWidth(lineWidth);\n};\nconst setStrokeColor = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('stroke' in node.props))\n        return;\n    const strokeColor = node.props.stroke;\n    if (strokeColor)\n        ctx.strokeColor(strokeColor);\n};\nconst setOpacity = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('opacity' in node.props))\n        return;\n    const opacity = node.props.opacity;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(opacity))\n        ctx.opacity(opacity);\n};\nconst setFillOpacity = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fillOpacity' in node.props))\n        return;\n    const fillOpacity = node.props.fillOpacity || null;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(fillOpacity))\n        ctx.fillOpacity(fillOpacity);\n};\nconst setStrokeOpacity = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeOpacity' in node.props))\n        return;\n    const strokeOpacity = node.props?.strokeOpacity;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(strokeOpacity))\n        ctx.strokeOpacity(strokeOpacity);\n};\nconst setLineJoin = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeLinejoin' in node.props))\n        return;\n    const lineJoin = node.props.strokeLinejoin;\n    if (lineJoin)\n        ctx.lineJoin(lineJoin);\n};\nconst setLineCap = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeLinecap' in node.props))\n        return;\n    const lineCap = node.props?.strokeLinecap;\n    if (lineCap)\n        ctx.lineCap(lineCap);\n};\nconst setLineDash = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeDasharray' in node.props))\n        return;\n    const value = node.props?.strokeDasharray || null;\n    // @ts-expect-error check this works as expected\n    if (value)\n        ctx.dash(value.split(/[\\s,]+/).map(Number));\n};\nconst hasLinearGradientFill = (node) => {\n    if (!node.props)\n        return false;\n    if (!('fill' in node.props))\n        return false;\n    if (typeof node.props.fill === 'string')\n        return false;\n    return node.props.fill?.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.LinearGradient;\n};\nconst hasRadialGradientFill = (node) => {\n    if (!node.props)\n        return false;\n    if (!('fill' in node.props))\n        return false;\n    if (typeof node.props.fill === 'string')\n        return false;\n    return node.props.fill?.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.RadialGradient;\n};\nfunction multiplyMatrices(m1, m2) {\n    const a = m1[0] * m2[0] + m1[2] * m2[1];\n    const b = m1[1] * m2[0] + m1[3] * m2[1];\n    const c = m1[0] * m2[2] + m1[2] * m2[3];\n    const d = m1[1] * m2[2] + m1[3] * m2[3];\n    const e = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n    const f = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n    return [a, b, c, d, e, f];\n}\nconst transformGradient = (grad, transforms, bbox, units) => {\n    const matrices = transforms.map((transform) => {\n        switch (transform.operation) {\n            case 'scale': {\n                const value = transform.value;\n                return [value[0], 0, 0, value[1], 0, 0];\n            }\n            case 'translate': {\n                const value = transform.value;\n                let x = value[0] || 0;\n                let y = value[1] || 0;\n                if (units === 'objectBoundingBox') {\n                    x = (bbox[2] - bbox[0]) * x;\n                    y = (bbox[3] - bbox[1]) * y;\n                }\n                return [1, 0, 0, 1, x, y];\n            }\n            case 'rotate': {\n                const value = transform.value;\n                const cos = Math.cos(value[0]);\n                const sin = Math.sin(value[0]);\n                return [cos, sin, -sin, cos, 0, 0];\n            }\n            case 'skew': {\n                const value = transform.value;\n                return [1, Math.tan(value[0]), Math.tan(value[1]), 1, 0, 0];\n            }\n            case 'matrix': {\n                const value = transform.value;\n                let x = value[4] || 0;\n                let y = value[5] || 0;\n                if (units === 'objectBoundingBox') {\n                    x = (bbox[2] - bbox[0]) * x;\n                    y = (bbox[3] - bbox[1]) * y;\n                }\n                return [value[0], value[1], value[2], value[3], x, y];\n            }\n            default:\n                return [1, 0, 0, 1, 0, 0];\n        }\n    });\n    const matrix = matrices.reduce(multiplyMatrices, [1, 0, 0, 1, 0, 0]);\n    grad.setTransform(...matrix);\n};\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nconst setLinearGradientFill = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fill' in node.props))\n        return;\n    const bbox = getBoundingBox(node);\n    const gradient = node.props?.fill;\n    if (!gradient)\n        return;\n    const units = gradient.props.gradientUnits || 'objectBoundingBox';\n    const transforms = gradient.props.gradientTransform || [];\n    let x1 = gradient.props.x1 || 0;\n    let y1 = gradient.props.y1 || 0;\n    let x2 = gradient.props.x2 || 1;\n    let y2 = gradient.props.y2 || 0;\n    if (units === 'objectBoundingBox') {\n        const m0 = bbox[2] - bbox[0];\n        const m3 = bbox[3] - bbox[1];\n        const m4 = bbox[0];\n        const m5 = bbox[1];\n        x1 = m0 * x1 + m4;\n        y1 = m3 * y1 + m5;\n        x2 = m0 * x2 + m4;\n        y2 = m3 * y2 + m5;\n    }\n    const grad = ctx.linearGradient(x1, y1, x2, y2);\n    transformGradient(grad, transforms, bbox, units);\n    gradient.children?.forEach((stop) => {\n        grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n    });\n    ctx.fill(grad);\n};\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nconst setRadialGradientFill = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fill' in node.props))\n        return;\n    const bbox = getBoundingBox(node);\n    const gradient = node.props?.fill;\n    if (!gradient)\n        return;\n    const units = gradient.props.gradientUnits || 'objectBoundingBox';\n    const transforms = gradient.props.gradientTransform || [];\n    let r = gradient.props.r || 0.5;\n    let cx = gradient.props.cx || 0.5;\n    let cy = gradient.props.cy || 0.5;\n    let fx = gradient.props.fx || cx;\n    let fy = gradient.props.fy || cy;\n    if (units === 'objectBoundingBox') {\n        const m0 = bbox[2] - bbox[0];\n        const m3 = bbox[3] - bbox[1];\n        const m4 = bbox[0];\n        const m5 = bbox[1];\n        r = r * m0;\n        cx = m0 * cx + m4;\n        cy = m3 * cy + m5;\n        fx = m0 * fx + m4;\n        fy = m3 * fy + m5;\n    }\n    const grad = ctx.radialGradient(cx, cy, 0, fx, fy, r);\n    transformGradient(grad, transforms, bbox, units);\n    gradient.children?.forEach((stop) => {\n        grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n    });\n    ctx.fill(grad);\n};\nconst setFillColor = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fill' in node.props))\n        return;\n    const fillColor = node.props?.fill;\n    if (fillColor)\n        ctx.fillColor(fillColor);\n};\nconst setFill = (ctx, node) => {\n    if (hasLinearGradientFill(node))\n        return setLinearGradientFill(ctx, node);\n    if (hasRadialGradientFill(node))\n        return setRadialGradientFill(ctx, node);\n    return setFillColor(ctx, node);\n};\nconst draw = (ctx, node) => {\n    const props = node.props || {};\n    if ('fill' in props && 'stroke' in props && props.fill && props.stroke) {\n        ctx.fillAndStroke(props.fillRule);\n    }\n    else if ('fill' in props && props.fill) {\n        ctx.fill(props.fillRule);\n    }\n    else if ('stroke' in props && props.stroke) {\n        ctx.stroke();\n    }\n    else {\n        ctx.save();\n        ctx.opacity(0);\n        ctx.fill(null);\n        ctx.restore();\n    }\n};\nconst noop = () => { };\nconst renderFns$1 = {\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Tspan]: noop,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.TextInstance]: noop,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Path]: renderPath,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Rect]: renderRect,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Line]: renderLine$1,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.G]: renderGroup,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Text]: renderSvgText,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Circle]: renderCircle,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Image]: renderImage$1,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Ellipse]: renderEllipse,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polygon]: renderPolygon,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polyline]: renderPolyline,\n};\nconst renderNode$1 = (ctx, node) => {\n    const renderFn = renderFns$1[node.type];\n    if (renderFn) {\n        renderFn(ctx, node);\n    }\n    else {\n        console.warn(`SVG node of type ${node.type} is not currently supported`);\n    }\n};\nconst drawNode = (ctx, node) => {\n    setLineCap(ctx, node);\n    setLineDash(ctx, node);\n    setLineJoin(ctx, node);\n    setStrokeWidth(ctx, node);\n    setStrokeColor(ctx, node);\n    setFill(ctx, node);\n    setStrokeOpacity(ctx, node);\n    setFillOpacity(ctx, node);\n    setOpacity(ctx, node);\n    applyTransformations(ctx, node);\n    renderNode$1(ctx, node);\n    draw(ctx, node);\n};\nconst clipPath = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('clipPath' in node.props))\n        return;\n    const value = node.props.clipPath;\n    if (value) {\n        const children = value.children || [];\n        children.forEach((child) => renderNode$1(ctx, child));\n        ctx.clip();\n    }\n};\nconst drawChildren = (ctx, node) => {\n    const children = node.children || [];\n    children.forEach((child) => {\n        ctx.save();\n        clipPath(ctx, child);\n        drawNode(ctx, child);\n        drawChildren(ctx, child);\n        ctx.restore();\n    });\n};\nconst resolveAspectRatio = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { width, height } = node.box;\n    const { viewBox, preserveAspectRatio } = node.props;\n    const { meetOrSlice = 'meet', align = 'xMidYMid' } = preserveAspectRatio || {};\n    if (viewBox == null || width == null || height == null)\n        return;\n    const x = viewBox?.minX || 0;\n    const y = viewBox?.minY || 0;\n    const logicalWidth = viewBox?.maxX || width;\n    const logicalHeight = viewBox?.maxY || height;\n    const logicalRatio = logicalWidth / logicalHeight;\n    const physicalRatio = width / height;\n    const scaleX = width / logicalWidth;\n    const scaleY = height / logicalHeight;\n    if (align === 'none') {\n        ctx.scale(scaleX, scaleY);\n        ctx.translate(-x, -y);\n        return;\n    }\n    if ((logicalRatio < physicalRatio && meetOrSlice === 'meet') ||\n        (logicalRatio >= physicalRatio && meetOrSlice === 'slice')) {\n        ctx.scale(scaleY, scaleY);\n        switch (align) {\n            case 'xMinYMin':\n            case 'xMinYMid':\n            case 'xMinYMax':\n                ctx.translate(-x, -y);\n                break;\n            case 'xMidYMin':\n            case 'xMidYMid':\n            case 'xMidYMax':\n                ctx.translate(-x - (logicalWidth - (width * logicalHeight) / height) / 2, -y);\n                break;\n            default:\n                ctx.translate(-x - (logicalWidth - (width * logicalHeight) / height), -y);\n        }\n    }\n    else {\n        ctx.scale(scaleX, scaleX);\n        switch (align) {\n            case 'xMinYMin':\n            case 'xMidYMin':\n            case 'xMaxYMin':\n                ctx.translate(-x, -y);\n                break;\n            case 'xMinYMid':\n            case 'xMidYMid':\n            case 'xMaxYMid':\n                ctx.translate(-x, -y - (logicalHeight - (height * logicalWidth) / width) / 2);\n                break;\n            default:\n                ctx.translate(-x, -y - (logicalHeight - (height * logicalWidth) / width));\n        }\n    }\n};\nconst moveToOrigin = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left } = node.box;\n    const paddingLeft = node.box.paddingLeft || 0;\n    const paddingTop = node.box.paddingTop || 0;\n    ctx.translate(left + paddingLeft, top + paddingTop);\n};\nconst renderSvg = (ctx, node) => {\n    ctx.save();\n    clipNode(ctx, node);\n    moveToOrigin(ctx, node);\n    resolveAspectRatio(ctx, node);\n    drawChildren(ctx, node);\n    ctx.restore();\n};\n\nconst black = { value: '#000', opacity: 1 };\n// TODO: parse to number[] in layout to avoid this step\nconst parseColor = (hex) => {\n    if (!hex)\n        return black;\n    const parsed = color_string__WEBPACK_IMPORTED_MODULE_5__.get(hex);\n    if (!parsed)\n        return black;\n    const value = color_string__WEBPACK_IMPORTED_MODULE_5__.to.hex(parsed.value.slice(0, 3));\n    const opacity = parsed.value[3];\n    return { value, opacity };\n};\n\nconst DEST_REGEXP = /^#.+/;\nconst isSrcId$1 = (src) => src.match(DEST_REGEXP);\nconst renderAttachment = (ctx, attachment) => {\n    const { xOffset = 0, yOffset = 0, width, height, image } = attachment;\n    ctx.translate(-width + xOffset, -height + yOffset);\n    ctx.image(image, 0, 0, {\n        fit: [width, height],\n        align: 'center',\n        valign: 'bottom',\n    });\n};\nconst renderAttachments = (ctx, run) => {\n    if (!run.glyphs)\n        return;\n    if (!run.positions)\n        return;\n    const font = run.attributes.font?.[0];\n    if (!font)\n        return;\n    ctx.save();\n    const space = font.glyphForCodePoint(0x20);\n    const objectReplacement = font.glyphForCodePoint(0xfffc);\n    let attachmentAdvance = 0;\n    for (let i = 0; i < run.glyphs.length; i += 1) {\n        const position = run.positions[i];\n        const glyph = run.glyphs[i];\n        attachmentAdvance += position.xAdvance || 0;\n        if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n            ctx.translate(attachmentAdvance, position.yOffset || 0);\n            renderAttachment(ctx, run.attributes.attachment);\n            run.glyphs[i] = space;\n            attachmentAdvance = 0;\n        }\n    }\n    ctx.restore();\n};\nconst renderRun = (ctx, run) => {\n    if (!run.glyphs)\n        return;\n    if (!run.positions)\n        return;\n    const font = run.attributes.font?.[0];\n    if (!font)\n        return;\n    const { fontSize, link } = run.attributes;\n    const color = parseColor(run.attributes.color);\n    const opacity = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(run.attributes.opacity)\n        ? color.opacity\n        : run.attributes.opacity;\n    const { height = 0, descent = 0, xAdvance = 0 } = run;\n    ctx.fillColor(color.value);\n    ctx.fillOpacity(opacity);\n    if (link) {\n        if (isSrcId$1(link)) {\n            ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n        }\n        else {\n            ctx.link(0, -height - descent, xAdvance, height, link);\n        }\n    }\n    renderAttachments(ctx, run);\n    ctx.font(font.type === 'STANDARD' ? font.fullName : font, fontSize);\n    try {\n        renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    }\n    catch (error) {\n        console.log(error);\n    }\n    ctx.translate(xAdvance, 0);\n};\nconst renderBackground$1 = (ctx, rect, backgroundColor) => {\n    const color = parseColor(backgroundColor);\n    ctx.save();\n    ctx.fillOpacity(color.opacity);\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill(color.value);\n    ctx.restore();\n};\nconst renderDecorationLine = (ctx, decorationLine) => {\n    ctx.save();\n    ctx.lineWidth(decorationLine.rect.height);\n    ctx.strokeOpacity(decorationLine.opacity);\n    if (/dashed/.test(decorationLine.style)) {\n        ctx.dash(3 * decorationLine.rect.height, {});\n    }\n    else if (/dotted/.test(decorationLine.style)) {\n        ctx.dash(decorationLine.rect.height, {});\n    }\n    if (/wavy/.test(decorationLine.style)) {\n        const dist = Math.max(2, decorationLine.rect.height);\n        let step = 1.1 * dist;\n        const stepCount = Math.floor(decorationLine.rect.width / (2 * step));\n        // Adjust step to fill entire width\n        const remainingWidth = decorationLine.rect.width - stepCount * 2 * step;\n        const adjustment = remainingWidth / stepCount / 2;\n        step += adjustment;\n        const cp1y = decorationLine.rect.y + dist;\n        const cp2y = decorationLine.rect.y - dist;\n        let { x } = decorationLine.rect;\n        ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y);\n        for (let i = 0; i < stepCount; i += 1) {\n            ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, decorationLine.rect.y);\n            x += 2 * step;\n        }\n    }\n    else {\n        ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y);\n        ctx.lineTo(decorationLine.rect.x + decorationLine.rect.width, decorationLine.rect.y);\n        if (/double/.test(decorationLine.style)) {\n            ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y + decorationLine.rect.height * 2);\n            ctx.lineTo(decorationLine.rect.x + decorationLine.rect.width, decorationLine.rect.y + decorationLine.rect.height * 2);\n        }\n    }\n    ctx.stroke(decorationLine.color);\n    ctx.restore();\n};\nconst renderLine = (ctx, line) => {\n    if (!line.box)\n        return;\n    const lineAscent = line.ascent || 0;\n    ctx.save();\n    ctx.translate(line.box.x, line.box.y + lineAscent);\n    for (let i = 0; i < line.runs.length; i += 1) {\n        const run = line.runs[i];\n        const isLastRun = i === line.runs.length - 1;\n        if (run.attributes.backgroundColor) {\n            const xAdvance = run.xAdvance ?? 0;\n            const overflowRight = isLastRun ? line.overflowRight ?? 0 : 0;\n            const backgroundRect = {\n                x: 0,\n                y: -lineAscent,\n                height: line.box.height,\n                width: xAdvance - overflowRight,\n            };\n            renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n        }\n        renderRun(ctx, run);\n    }\n    ctx.restore();\n    ctx.save();\n    ctx.translate(line.box.x, line.box.y);\n    if (line.decorationLines) {\n        for (let i = 0; i < line.decorationLines.length; i += 1) {\n            const decorationLine = line.decorationLines[i];\n            renderDecorationLine(ctx, decorationLine);\n        }\n    }\n    ctx.restore();\n};\nconst renderBlock = (ctx, block) => {\n    block.forEach((line) => {\n        renderLine(ctx, line);\n    });\n};\nconst renderText = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.lines)\n        return;\n    const { top, left } = node.box;\n    const blocks = [node.lines];\n    const paddingTop = node.box?.paddingTop || 0;\n    const paddingLeft = node.box?.paddingLeft || 0;\n    const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n    const offsetX = node.alignOffset || 0;\n    ctx.save();\n    ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n    blocks.forEach((block) => {\n        renderBlock(ctx, block);\n    });\n    ctx.restore();\n};\n\nconst renderPage = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { width, height } = node.box;\n    const dpi = node.props?.dpi || 72;\n    const userUnit = dpi / 72;\n    ctx.addPage({ size: [width, height], margin: 0, userUnit });\n};\n\nconst renderNote = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left } = node.box;\n    const value = node?.children?.[0].value || '';\n    const color = node.style?.backgroundColor;\n    ctx.note(left, top, 0, 0, value, { color });\n};\n\nconst embedImage = (ctx, node) => {\n    const src = node.image.data;\n    let image;\n    if (typeof src === 'string') {\n        image = ctx._imageRegistry[src];\n    }\n    if (!image) {\n        image = ctx.openImage(src);\n    }\n    if (!image.obj) {\n        image.embed(ctx);\n    }\n    return image;\n};\n\nconst isNumeric = (n) => {\n    return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n    const cr = cw / ch;\n    const ir = iw / ih;\n    const pxp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px ?? null);\n    const pyp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py ?? null);\n    const pxv = pxp ? pxp.percent : 0.5;\n    const pyv = pyp ? pyp.percent : 0.5;\n    if (cr > ir) {\n        const height = ch;\n        const width = height * ir;\n        const yOffset = isNumeric(py) ? py : 0;\n        const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n        return { width, height, xOffset, yOffset };\n    }\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n};\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n    const width = iw;\n    const height = ih;\n    const pxp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px ?? null);\n    const pyp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py ?? null);\n    const pxv = pxp ? pxp.percent : 0.5;\n    const pyv = pyp ? pyp.percent : 0.5;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, xOffset, yOffset };\n};\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n    const ir = iw / ih;\n    const cr = cw / ch;\n    const pxp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px ?? null);\n    const pyp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py ?? null);\n    const pxv = pxp ? pxp.percent : 0.5;\n    const pyv = pyp ? pyp.percent : 0.5;\n    if (cr > ir) {\n        const width = cw;\n        const height = width / ir;\n        const xOffset = isNumeric(px) ? px : 0;\n        const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n        return { width, height, yOffset, xOffset };\n    }\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n};\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n    const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n    const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    return containDimension.width < noneDimension.width\n        ? containDimension\n        : noneDimension;\n};\nconst applyFillObjectFit = (cw, ch, px, py) => {\n    return {\n        width: cw,\n        height: ch,\n        xOffset: (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px ?? null) ? 0 : px || 0,\n        yOffset: (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py ?? null) ? 0 : py || 0,\n    };\n};\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n    switch (type) {\n        case 'contain':\n            return applyContainObjectFit(cw, ch, iw, ih, px, py);\n        case 'cover':\n            return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n        case 'none':\n            return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n        case 'scale-down':\n            return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n        default:\n            return applyFillObjectFit(cw, ch, px, py);\n    }\n};\n\nconst drawImage = (ctx, node, options) => {\n    if (!node.box)\n        return;\n    if (!node.image)\n        return;\n    const { left, top } = node.box;\n    const opacity = node.style?.opacity;\n    const objectFit = node.style?.objectFit;\n    const objectPositionX = node.style?.objectPositionX;\n    const objectPositionY = node.style?.objectPositionY;\n    const paddingTop = node.box.paddingTop || 0;\n    const paddingRight = node.box.paddingRight || 0;\n    const paddingBottom = node.box.paddingBottom || 0;\n    const paddingLeft = node.box.paddingLeft || 0;\n    const imageCache = options.imageCache || new Map();\n    const { width, height, xOffset, yOffset } = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY);\n    if (node.image.data) {\n        if (width !== 0 && height !== 0) {\n            const cacheKey = node.image.key;\n            const image = imageCache.get(cacheKey) || embedImage(ctx, node);\n            if (cacheKey)\n                imageCache.set(cacheKey, image);\n            const imageOpacity = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(opacity) ? 1 : opacity;\n            ctx\n                .fillOpacity(imageOpacity)\n                .image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n                width,\n                height,\n            });\n        }\n        else {\n            console.warn(`Image with src '${JSON.stringify(node.props.src || node.props.source)}' skipped due to invalid dimensions`);\n        }\n    }\n};\nconst renderImage = (ctx, node, options) => {\n    ctx.save();\n    clipNode(ctx, node);\n    drawImage(ctx, node, options);\n    ctx.restore();\n};\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n// TODO: Draw debug boxes using clipping to enhance quality\nconst debugContent = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height, paddingLeft = 0, paddingTop = 0, paddingRight = 0, paddingBottom = 0, borderLeftWidth = 0, borderTopWidth = 0, borderRightWidth = 0, borderBottomWidth = 0, } = node.box;\n    ctx\n        .fillColor(CONTENT_COLOR)\n        .opacity(0.5)\n        .rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth)\n        .fill();\n};\nconst debugPadding = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height, paddingLeft = 0, paddingTop = 0, paddingRight = 0, paddingBottom = 0, borderLeftWidth = 0, borderTopWidth = 0, borderRightWidth = 0, borderBottomWidth = 0, } = node.box;\n    ctx.fillColor(PADDING_COLOR).opacity(0.5);\n    // Padding top\n    ctx\n        .rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop)\n        .fill();\n    // Padding left\n    ctx\n        .rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth)\n        .fill();\n    // Padding right\n    ctx\n        .rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth)\n        .fill();\n    // Padding bottom\n    ctx\n        .rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom)\n        .fill();\n};\nconst debugMargin = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height } = node.box;\n    const { marginLeft = 0, marginTop = 0, marginRight = 0, marginBottom = 0, } = node.box;\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n    // Margin top\n    ctx.rect(left, top - marginTop, width, marginTop).fill();\n    // Margin left\n    ctx\n        .rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom)\n        .fill();\n    // Margin right\n    ctx\n        .rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom)\n        .fill();\n    // Margin bottom\n    ctx.rect(left, top + height, width, marginBottom).fill();\n};\nconst debugText = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height } = node.box;\n    const { marginLeft = 0, marginTop = 0, marginRight = 0, marginBottom = 0, } = node.box;\n    const roundedWidth = Math.round(width + marginLeft + marginRight);\n    const roundedHeight = Math.round(height + marginTop + marginBottom);\n    ctx\n        .fontSize(6)\n        .opacity(1)\n        .fillColor('black')\n        .text(`${roundedWidth} x ${roundedHeight}`, left - marginLeft, Math.max(top - marginTop - 4, 1), { width: Infinity });\n};\nconst debugOrigin = (ctx, node) => {\n    if (node.origin) {\n        ctx\n            .circle(node.origin.left, node.origin.top, 3)\n            .fill('red')\n            .circle(node.origin.left, node.origin.top, 5)\n            .stroke('red');\n    }\n};\nconst renderDebug = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('debug' in node.props) || !node.props.debug)\n        return;\n    ctx.save();\n    debugContent(ctx, node);\n    debugPadding(ctx, node);\n    debugMargin(ctx, node);\n    debugText(ctx, node);\n    debugOrigin(ctx, node);\n    ctx.restore();\n};\n\nconst availableMethods = [\n    'dash',\n    'clip',\n    'save',\n    'path',\n    'fill',\n    'font',\n    'text',\n    'rect',\n    'scale',\n    'moveTo',\n    'lineTo',\n    'stroke',\n    'rotate',\n    'circle',\n    'lineCap',\n    'opacity',\n    'ellipse',\n    'polygon',\n    'restore',\n    'lineJoin',\n    'fontSize',\n    'fillColor',\n    'lineWidth',\n    'translate',\n    'miterLimit',\n    'strokeColor',\n    'fillOpacity',\n    'roundedRect',\n    'fillAndStroke',\n    'strokeOpacity',\n    'bezierCurveTo',\n    'quadraticCurveTo',\n    'linearGradient',\n    'radialGradient',\n];\nconst painter = (ctx) => {\n    const p = availableMethods.reduce((acc, prop) => ({\n        ...acc,\n        [prop]: (...args) => {\n            // @ts-expect-error ctx[prop] is a function\n            ctx[prop](...args);\n            return p;\n        },\n    }), {});\n    return p;\n};\nconst renderCanvas = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    const paddingTop = node.box.paddingTop || 0;\n    const paddingLeft = node.box.paddingLeft || 0;\n    const paddingRight = node.box.paddingRight || 0;\n    const paddingBottom = node.box.paddingBottom || 0;\n    const availableWidth = width - paddingLeft - paddingRight;\n    const availableHeight = height - paddingTop - paddingBottom;\n    if (!availableWidth || !availableHeight) {\n        console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n    }\n    ctx.save().translate(left + paddingLeft, top + paddingTop);\n    if (node.props.paint) {\n        node.props.paint(painter(ctx), availableWidth, availableHeight);\n    }\n    ctx.restore();\n};\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n    const { top, left, width, height } = layout;\n    const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n    // Clip outer top border edge\n    ctx.moveTo(left + rtl, top);\n    ctx.lineTo(left + width - rtr, top);\n    // Ellipse coefficients outer top right cap\n    const c0 = rtr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr);\n    // Move down in case the margin exceedes the radius\n    const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n    ctx.lineTo(left + width, topRightYCoord);\n    // Clip inner top right cap\n    ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n    // Ellipse coefficients inner top right cap\n    const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n    const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n    const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n    const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth);\n    // Clip inner top border edge\n    ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n    // Ellipse coefficients inner top left cap\n    const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n    const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n    const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n    const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n    const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n    ctx.lineTo(left, topLeftYCoord);\n    // Move down in case the margin exceedes the radius\n    ctx.lineTo(left, top + rtl);\n    // Ellipse coefficients outer top left cap\n    const c5 = rtl * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border top cap joins\n    if (borderRightWidth) {\n        const trSlope = -borderTopWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderLeftWidth) {\n        const trSlope = -borderTopWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left + width, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n    const { top, left, width } = layout;\n    const { borderTopColor, borderTopWidth, borderTopStyle, borderRightWidth, borderLeftWidth, } = style;\n    const c0 = rtl * (1.0 - KAPPA);\n    const c1 = rtr * (1.0 - KAPPA);\n    ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n    ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n    ctx.lineTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n    ctx.strokeColor(borderTopColor);\n    ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n    if (borderTopStyle === 'dashed') {\n        ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n    }\n    else if (borderTopStyle === 'dotted') {\n        ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n    // Clip outer right border edge\n    ctx.moveTo(left + width, top + rtr);\n    ctx.lineTo(left + width, top + height - rbr);\n    // Ellipse coefficients outer bottom right cap\n    const c0 = rbr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n    // Move left in case the margin exceedes the radius\n    const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n    ctx.lineTo(topBottomXCoord, top + height);\n    // Clip inner bottom right cap\n    ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n    // Ellipse coefficients inner bottom right cap\n    const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n    const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n    const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n    const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth));\n    // Clip inner right border edge\n    ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth));\n    // Ellipse coefficients inner top right cap\n    const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n    const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n    const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n    const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n    const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n    ctx.lineTo(topRightXCoord, top);\n    // Move right in case the margin exceedes the radius\n    ctx.lineTo(left + width - rtr, top);\n    // Ellipse coefficients outer top right cap\n    const c5 = rtr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border right cap joins\n    if (borderTopWidth) {\n        const trSlope = -borderTopWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderBottomWidth) {\n        const brSlope = borderBottomWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderRightColor, borderRightStyle, borderRightWidth, borderTopWidth, borderBottomWidth, } = style;\n    const c0 = rbr * (1.0 - KAPPA);\n    const c1 = rtr * (1.0 - KAPPA);\n    ctx.moveTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n    ctx.lineTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n    ctx.strokeColor(borderRightColor);\n    ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n    if (borderRightStyle === 'dashed') {\n        ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n    }\n    else if (borderRightStyle === 'dotted') {\n        ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n    // Clip outer top border edge\n    ctx.moveTo(left + width - rbr, top + height);\n    ctx.lineTo(left + rbl, top + height);\n    // Ellipse coefficients outer top right cap\n    const c0 = rbl * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    // Move up in case the margin exceedes the radius\n    const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n    ctx.lineTo(left, bottomLeftYCoord);\n    // Clip inner bottom left cap\n    ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n    // Ellipse coefficients inner top right cap\n    const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n    const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n    const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n    const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n    // Clip inner bottom left cap\n    ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth);\n    // Clip inner bottom border edge\n    ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth);\n    // Ellipse coefficients inner top left cap\n    const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n    const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n    const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n    const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n    const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n    ctx.lineTo(left + width, bottomRightYCoord);\n    // Move down in case the margin exceedes the radius\n    ctx.lineTo(left + width, top + height - rbr);\n    // Ellipse coefficients outer top left cap\n    const c5 = rbr * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border bottom cap joins\n    if (borderRightWidth) {\n        const brSlope = borderBottomWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderLeftWidth) {\n        const trSlope = -borderBottomWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left + width, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderBottomColor, borderBottomStyle, borderBottomWidth, borderRightWidth, borderLeftWidth, } = style;\n    const c0 = rbl * (1.0 - KAPPA);\n    const c1 = rbr * (1.0 - KAPPA);\n    ctx.moveTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n    ctx.lineTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    ctx.strokeColor(borderBottomColor);\n    ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n    if (borderBottomStyle === 'dashed') {\n        ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n    }\n    else if (borderBottomStyle === 'dotted') {\n        ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n    const { top, left, width, height } = layout;\n    const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n    // Clip outer left border edge\n    ctx.moveTo(left, top + height - rbl);\n    ctx.lineTo(left, top + rtl);\n    // Ellipse coefficients outer top left cap\n    const c0 = rtl * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n    // Move right in case the margin exceedes the radius\n    const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n    ctx.lineTo(topLeftCoordX, top);\n    // Clip inner top left cap\n    ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n    // Ellipse coefficients inner top left cap\n    const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n    const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n    const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n    const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth));\n    // Clip inner left border edge\n    ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth));\n    // Ellipse coefficients inner bottom left cap\n    const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n    const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n    const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n    const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n    const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n    ctx.lineTo(bottomLeftXCoord, top + height);\n    // Move left in case the margin exceedes the radius\n    ctx.lineTo(left + rbl, top + height);\n    // Ellipse coefficients outer top right cap\n    const c5 = rbl * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border right cap joins\n    if (borderBottomWidth) {\n        const trSlope = -borderBottomWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderBottomWidth) {\n        const trSlope = -borderTopWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n    const { top, left, height } = layout;\n    const { borderLeftColor, borderLeftStyle, borderLeftWidth, borderTopWidth, borderBottomWidth, } = style;\n    const c0 = rbl * (1.0 - KAPPA);\n    const c1 = rtl * (1.0 - KAPPA);\n    ctx.moveTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    ctx.lineTo(left, top + rtl);\n    ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n    ctx.strokeColor(borderLeftColor);\n    ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n    if (borderLeftStyle === 'dashed') {\n        ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n    }\n    else if (borderLeftStyle === 'dotted') {\n        ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst shouldRenderBorders = (node) => node.box &&\n    (node.box.borderTopWidth ||\n        node.box.borderRightWidth ||\n        node.box.borderBottomWidth ||\n        node.box.borderLeftWidth);\nconst renderBorders = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!shouldRenderBorders(node))\n        return;\n    const { width, height, borderTopWidth = 0, borderLeftWidth = 0, borderRightWidth = 0, borderBottomWidth = 0, } = node.box;\n    const { opacity = 1, borderTopColor = 'black', borderTopStyle = 'solid', borderLeftColor = 'black', borderLeftStyle = 'solid', borderRightColor = 'black', borderRightStyle = 'solid', borderBottomColor = 'black', borderBottomStyle = 'solid', } = node.style;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderTopLeftRadius = node.style.borderTopLeftRadius || 0;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderTopRightRadius = node.style.borderTopRightRadius || 0;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderBottomLeftRadius = node.style.borderBottomLeftRadius || 0;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderBottomRightRadius = node.style.borderBottomRightRadius || 0;\n    const style = {\n        borderTopColor,\n        borderTopWidth,\n        borderTopStyle,\n        borderLeftColor,\n        borderLeftWidth,\n        borderLeftStyle,\n        borderRightColor,\n        borderRightWidth,\n        borderRightStyle,\n        borderBottomColor,\n        borderBottomWidth,\n        borderBottomStyle};\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    ctx.save();\n    ctx.strokeOpacity(opacity);\n    if (borderTopWidth) {\n        ctx.save();\n        clipBorderTop(ctx, node.box, style, rtr, rtl);\n        fillBorderTop(ctx, node.box, style, rtr, rtl);\n        ctx.restore();\n    }\n    if (borderRightWidth) {\n        ctx.save();\n        clipBorderRight(ctx, node.box, style, rtr, rbr);\n        fillBorderRight(ctx, node.box, style, rtr, rbr);\n        ctx.restore();\n    }\n    if (borderBottomWidth) {\n        ctx.save();\n        clipBorderBottom(ctx, node.box, style, rbl, rbr);\n        fillBorderBottom(ctx, node.box, style, rbl, rbr);\n        ctx.restore();\n    }\n    if (borderLeftWidth) {\n        ctx.save();\n        clipBorderLeft(ctx, node.box, style, rbl, rtl);\n        fillBorderLeft(ctx, node.box, style, rbl, rtl);\n        ctx.restore();\n    }\n    ctx.restore();\n};\n\nconst drawBackground = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    const color = parseColor(node.style.backgroundColor);\n    const nodeOpacity = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(node.style?.opacity) ? 1 : node.style.opacity;\n    const opacity = Math.min(color.opacity, nodeOpacity);\n    ctx\n        .fillOpacity(opacity)\n        .fillColor(color.value)\n        .rect(left, top, width, height)\n        .fill();\n};\nconst renderBackground = (ctx, node) => {\n    const hasBackground = !!node.box && !!node.style?.backgroundColor;\n    if (hasBackground) {\n        ctx.save();\n        clipNode(ctx, node);\n        drawBackground(ctx, node);\n        ctx.restore();\n    }\n};\n\nconst isString = (value) => typeof value === 'string';\nconst isSrcId = (value) => /^#.+/.test(value);\nconst renderLink = (ctx, node, src) => {\n    if (!src || !node.box)\n        return;\n    const isId = isSrcId(src);\n    const method = isId ? 'goTo' : 'link';\n    const value = isId ? src.slice(1) : src;\n    const { top, left, width, height } = node.box;\n    ctx[method](left, top, width, height, value);\n};\nconst setLink = (ctx, node) => {\n    const props = node.props || {};\n    if ('src' in props && isString(props.src))\n        return renderLink(ctx, node, props.src);\n    if ('href' in props && isString(props.href))\n        return renderLink(ctx, node, props.href);\n};\n\nconst setDestination = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.props)\n        return;\n    if ('id' in node.props) {\n        ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n    }\n};\n\nconst clean = (options) => {\n    const opt = { ...options };\n    // We need to ensure the elements are no present if not true\n    Object.entries(opt).forEach((pair) => {\n        if (!pair[1]) {\n            delete opt[pair[0]];\n        }\n    });\n    return opt;\n};\nconst parseCommonFormOptions = (node) => {\n    // Common Options\n    return {\n        required: node.props?.required || false,\n        noExport: node.props?.noExport || false,\n        readOnly: node.props?.readOnly || false,\n        value: node.props?.value || undefined,\n        defaultValue: node.props?.defaultValue || undefined,\n    };\n};\nconst parseTextInputOptions = (node, fieldSet) => {\n    return clean({\n        ...parseCommonFormOptions(node),\n        parent: fieldSet || undefined,\n        align: node.props?.align || 'left',\n        multiline: node.props?.multiline || undefined,\n        password: node.props?.password || false,\n        noSpell: node.props?.noSpell || false,\n        format: node.props?.format || undefined,\n        fontSize: node.props?.fontSize || undefined,\n        MaxLen: node.props?.maxLength || undefined,\n    });\n};\nconst parseSelectAndListFieldOptions = (node) => {\n    return clean({\n        ...parseCommonFormOptions(node),\n        sort: node.props?.sort || false,\n        edit: node.props?.edit || false,\n        multiSelect: node.props?.multiSelect || false,\n        noSpell: node.props?.noSpell || false,\n        select: node.props?.select || [''],\n    });\n};\nconst getAppearance = (ctx, codepoint, width, height) => {\n    const appearance = ctx.ref({\n        Type: 'XObject',\n        Subtype: 'Form',\n        BBox: [0, 0, width, height],\n        Resources: {\n            ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n            Font: {\n                ZaDi: ctx._acroform.fonts.ZaDi,\n            },\n        },\n    });\n    appearance.initDeflate();\n    appearance.write(`/Tx BMC\\nq\\n/ZaDi ${height * 0.8} Tf\\nBT\\n${width * 0.45} ${height / 4} Td (${codepoint}) Tj\\nET\\nQ\\nEMC`);\n    appearance.end(null);\n    return appearance;\n};\nconst parseCheckboxOptions = (ctx, node, fieldSet) => {\n    const { width, height } = node.box || {};\n    const onOption = node.props?.onState || 'Yes';\n    const offOption = node.props?.offState || 'Off';\n    const xMark = node.props?.xMark || false;\n    if (!Object.prototype.hasOwnProperty.call(ctx._acroform.fonts, 'ZaDi')) {\n        const ref = ctx.ref({\n            Type: 'Font',\n            Subtype: 'Type1',\n            BaseFont: 'ZapfDingbats',\n        });\n        ctx._acroform.fonts.ZaDi = ref;\n        ref.end(null);\n    }\n    const normalAppearance = {\n        [onOption]: getAppearance(ctx, xMark ? '8' : '4', width, height),\n        [offOption]: getAppearance(ctx, xMark ? ' ' : '8', width, height),\n    };\n    return clean({\n        ...parseCommonFormOptions(node),\n        backgroundColor: node.props?.backgroundColor || undefined,\n        borderColor: node.props?.borderColor || undefined,\n        parent: fieldSet || undefined,\n        value: `/${node.props?.checked === true ? onOption : offOption}`,\n        defaultValue: `/${node.props?.checked === true ? onOption : offOption}`,\n        AS: node.props?.checked === true ? onOption : offOption,\n        AP: { N: normalAppearance, D: normalAppearance },\n    });\n};\n\nconst renderTextInput = (ctx, node, options) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    // Element's name\n    const name = node.props?.name || '';\n    const fieldSetOptions = options.fieldSets?.at(0);\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formText(name, left, top, width, height, parseTextInputOptions(node, fieldSetOptions));\n};\n\nconst renderSelect = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    // Element's name\n    const name = node.props?.name || '';\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formCombo(name, left, top, width, height, parseSelectAndListFieldOptions(node));\n};\n\nconst renderFieldSet = (ctx, node, options) => {\n    const name = node.props?.name || '';\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    const formField = ctx.formField(name);\n    const option = options;\n    if (!option.fieldSets) {\n        option.fieldSets = [formField];\n    }\n    else {\n        option.fieldSets.push(formField);\n    }\n};\nconst cleanUpFieldSet = (_ctx, _node, options) => {\n    options.fieldSets.pop();\n};\n\nconst renderList = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box || {};\n    // Element's name\n    const name = ('name' in node.props ? node.props.name || '' : '');\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formList(name, left, top, width, height, parseSelectAndListFieldOptions(node));\n};\n\nconst renderCheckbox = (ctx, node, options) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    // Element's name\n    const name = node.props?.name || '';\n    const fieldSetOptions = options.fieldSets?.at(0);\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formCheckbox(name, left, top, width, height, parseCheckboxOptions(ctx, node, fieldSetOptions));\n};\n\nconst isRecursiveNode = (node) => node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Text && node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Svg;\nconst renderChildren = (ctx, node, options) => {\n    ctx.save();\n    if (node.box) {\n        ctx.translate(node.box.left, node.box.top);\n    }\n    const children = node.children || [];\n    const renderChild = (child) => renderNode(ctx, child, options);\n    children.forEach(renderChild);\n    ctx.restore();\n};\nconst renderFns = {\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Text]: renderText,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Note]: renderNote,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Image]: renderImage,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.FieldSet]: renderFieldSet,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.TextInput]: renderTextInput,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Select]: renderSelect,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Checkbox]: renderCheckbox,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.List]: renderList,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Canvas]: renderCanvas,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Svg]: renderSvg,\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Link]: setLink,\n};\nconst cleanUpFns = {\n    [_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.FieldSet]: cleanUpFieldSet,\n};\nconst renderNode = (ctx, node, options) => {\n    const overflowHidden = node.style?.overflow === 'hidden';\n    const shouldRenderChildren = isRecursiveNode(node);\n    if (node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Page)\n        renderPage(ctx, node);\n    ctx.save();\n    if (overflowHidden)\n        clipNode(ctx, node);\n    applyTransformations(ctx, node);\n    renderBackground(ctx, node);\n    renderBorders(ctx, node);\n    const renderFn = renderFns[node.type];\n    if (renderFn)\n        renderFn(ctx, node, options);\n    if (shouldRenderChildren)\n        renderChildren(ctx, node, options);\n    const cleanUpFn = cleanUpFns[node.type];\n    if (cleanUpFn)\n        cleanUpFn(ctx, node, options);\n    setDestination(ctx, node);\n    renderDebug(ctx, node);\n    ctx.restore();\n};\n\nconst addNodeBookmark = (ctx, node, pageNumber, registry) => {\n    if (!node.box)\n        return;\n    if (!node.props)\n        return;\n    if ('bookmark' in node.props && node.props.bookmark) {\n        const bookmark = node.props.bookmark;\n        const { title, parent, expanded, zoom, fit } = bookmark;\n        const outline = registry[parent] || ctx.outline;\n        const top = bookmark.top || node.box.top;\n        const left = bookmark.left || node.box.left;\n        const instance = outline.addItem(title, {\n            pageNumber,\n            expanded,\n            top,\n            left,\n            zoom,\n            fit,\n        });\n        registry[bookmark.ref] = instance;\n    }\n    if (!node.children)\n        return;\n    node.children.forEach((child) => addNodeBookmark(ctx, child, pageNumber, registry));\n};\nconst addBookmarks = (ctx, root) => {\n    const registry = {};\n    const pages = root.children || [];\n    pages.forEach((page, i) => {\n        addNodeBookmark(ctx, page, i, registry);\n    });\n};\n\nconst render = (ctx, doc) => {\n    const pages = doc.children || [];\n    const options = { imageCache: new Map(), fieldSets: [] };\n    pages.forEach((page) => renderNode(ctx, page, options));\n    addBookmarks(ctx, doc);\n    ctx.end();\n    return ctx;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9yZW5kZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkM7QUFDVTtBQUNsQjtBQUNJO0FBQ1E7QUFDUjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksaUJBQWlCO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpQkFBaUI7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxFQUFFO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixXQUFXLEVBQUUsV0FBVztBQUN0RDtBQUNBLHVCQUF1QixjQUFjLEVBQUUsdUJBQXVCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsSUFBSSxJQUFJLGlCQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixtQkFBbUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNCQUFzQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHND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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx3REFBTztBQUNaLEtBQUssK0RBQWM7QUFDbkIsS0FBSyx1REFBTTtBQUNYLEtBQUssdURBQU07QUFDWCxLQUFLLHVEQUFNO0FBQ1gsS0FBSyxvREFBRztBQUNSLEtBQUssdURBQU07QUFDWCxLQUFLLHlEQUFRO0FBQ2IsS0FBSyx3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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnREFBZ0QsdURBQU0sa0JBQWtCLHNEQUFLO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLHVEQUFNO0FBQ1gsS0FBSyx1REFBTTtBQUNYLEtBQUssd0RBQU87QUFDWixLQUFLLDJEQUFVO0FBQ2YsS0FBSyw0REFBVztBQUNoQixLQUFLLHlEQUFRO0FBQ2IsS0FBSywyREFBVTtBQUNmLEtBQUssdURBQU07QUFDWCxLQUFLLHlEQUFRO0FBQ2IsS0FBSyxzREFBSztBQUNWLEtBQUssdURBQU07QUFDWDtBQUNBO0FBQ0EsS0FBSywyREFBVTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHVEQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFDQUFxQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy96aW1pbi93ZWJEZXYvcXVpY2tpbnZvaWNlL25vZGVfbW9kdWxlcy9AcmVhY3QtcGRmL3JlbmRlci9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUCBmcm9tICdAcmVhY3QtcGRmL3ByaW1pdGl2ZXMnO1xuaW1wb3J0IHsgaXNOaWwsIG1hdGNoUGVyY2VudCB9IGZyb20gJ0ByZWFjdC1wZGYvZm5zJztcbmltcG9ydCBhYnNQYXRoIGZyb20gJ2Ficy1zdmctcGF0aCc7XG5pbXBvcnQgcGFyc2VQYXRoIGZyb20gJ3BhcnNlLXN2Zy1wYXRoJztcbmltcG9ydCBub3JtYWxpemVQYXRoIGZyb20gJ25vcm1hbGl6ZS1zdmctcGF0aCc7XG5pbXBvcnQgY29sb3JTdHJpbmcgZnJvbSAnY29sb3Itc3RyaW5nJztcblxuY29uc3QgcmVuZGVyUGF0aCA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBjb25zdCBkID0gbm9kZS5wcm9wcz8uZDtcbiAgICBpZiAoZClcbiAgICAgICAgY3R4LnBhdGgobm9kZS5wcm9wcy5kKTtcbn07XG5cbmNvbnN0IEtBUFBBJDMgPSA0LjAgKiAoKE1hdGguc3FydCgyKSAtIDEuMCkgLyAzLjApO1xuY29uc3QgcmVuZGVyUmVjdCA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBjb25zdCB4ID0gbm9kZS5wcm9wcz8ueCB8fCAwO1xuICAgIGNvbnN0IHkgPSBub2RlLnByb3BzPy55IHx8IDA7XG4gICAgY29uc3QgcnggPSBub2RlLnByb3BzPy5yeCB8fCAwO1xuICAgIGNvbnN0IHJ5ID0gbm9kZS5wcm9wcz8ucnkgfHwgMDtcbiAgICBjb25zdCB3aWR0aCA9IG5vZGUucHJvcHM/LndpZHRoIHx8IDA7XG4gICAgY29uc3QgaGVpZ2h0ID0gbm9kZS5wcm9wcz8uaGVpZ2h0IHx8IDA7XG4gICAgaWYgKCF3aWR0aCB8fCAhaGVpZ2h0KVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKHJ4ICYmIHJ5KSB7XG4gICAgICAgIGNvbnN0IGtyeCA9IHJ4ICogS0FQUEEkMztcbiAgICAgICAgY29uc3Qga3J5ID0gcnkgKiBLQVBQQSQzO1xuICAgICAgICBjdHgubW92ZVRvKHggKyByeCwgeSk7XG4gICAgICAgIGN0eC5saW5lVG8oeCAtIHJ4ICsgd2lkdGgsIHkpO1xuICAgICAgICBjdHguYmV6aWVyQ3VydmVUbyh4IC0gcnggKyB3aWR0aCArIGtyeCwgeSwgeCArIHdpZHRoLCB5ICsgcnkgLSBrcnksIHggKyB3aWR0aCwgeSArIHJ5KTtcbiAgICAgICAgY3R4LmxpbmVUbyh4ICsgd2lkdGgsIHkgKyBoZWlnaHQgLSByeSk7XG4gICAgICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHggKyB3aWR0aCwgeSArIGhlaWdodCAtIHJ5ICsga3J5LCB4IC0gcnggKyB3aWR0aCArIGtyeCwgeSArIGhlaWdodCwgeCAtIHJ4ICsgd2lkdGgsIHkgKyBoZWlnaHQpO1xuICAgICAgICBjdHgubGluZVRvKHggKyByeCwgeSArIGhlaWdodCk7XG4gICAgICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHggKyByeCAtIGtyeCwgeSArIGhlaWdodCwgeCwgeSArIGhlaWdodCAtIHJ5ICsga3J5LCB4LCB5ICsgaGVpZ2h0IC0gcnkpO1xuICAgICAgICBjdHgubGluZVRvKHgsIHkgKyByeSk7XG4gICAgICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHgsIHkgKyByeSAtIGtyeSwgeCArIHJ4IC0ga3J4LCB5LCB4ICsgcngsIHkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY3R4Lm1vdmVUbyh4LCB5KTtcbiAgICAgICAgY3R4LmxpbmVUbyh4ICsgd2lkdGgsIHkpO1xuICAgICAgICBjdHgubGluZVRvKHggKyB3aWR0aCwgeSArIGhlaWdodCk7XG4gICAgICAgIGN0eC5saW5lVG8oeCwgeSArIGhlaWdodCk7XG4gICAgfVxuICAgIGN0eC5jbG9zZVBhdGgoKTtcbn07XG5cbmNvbnN0IHJlbmRlckxpbmUkMSA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBjb25zdCB7IHgxLCB4MiwgeTEsIHkyIH0gPSBub2RlLnByb3BzIHx8IHt9O1xuICAgIGN0eC5tb3ZlVG8oeDEsIHkxKTtcbiAgICBjdHgubGluZVRvKHgyLCB5Mik7XG59O1xuXG5jb25zdCByZW5kZXJHcm91cCA9ICgpID0+IHtcbiAgICAvLyBub29wXG59O1xuXG5jb25zdCBLQVBQQSQyID0gNC4wICogKChNYXRoLnNxcnQoMikgLSAxLjApIC8gMy4wKTtcbmNvbnN0IGRyYXdFbGxpcHNlID0gKGN0eCwgcngsIHJ5LCBjeCA9IDAsIGN5ID0gMCkgPT4ge1xuICAgIGNvbnN0IHggPSBjeCAtIHJ4O1xuICAgIGNvbnN0IHkgPSBjeSAtIHJ5O1xuICAgIGNvbnN0IG94ID0gcnggKiBLQVBQQSQyO1xuICAgIGNvbnN0IG95ID0gcnkgKiBLQVBQQSQyO1xuICAgIGNvbnN0IHhlID0geCArIHJ4ICogMjtcbiAgICBjb25zdCB5ZSA9IHkgKyByeSAqIDI7XG4gICAgY29uc3QgeG0gPSB4ICsgcng7XG4gICAgY29uc3QgeW0gPSB5ICsgcnk7XG4gICAgY3R4Lm1vdmVUbyh4LCB5bSk7XG4gICAgY3R4LmJlemllckN1cnZlVG8oeCwgeW0gLSBveSwgeG0gLSBveCwgeSwgeG0sIHkpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHhtICsgb3gsIHksIHhlLCB5bSAtIG95LCB4ZSwgeW0pO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHhlLCB5bSArIG95LCB4bSArIG94LCB5ZSwgeG0sIHllKTtcbiAgICBjdHguYmV6aWVyQ3VydmVUbyh4bSAtIG94LCB5ZSwgeCwgeW0gKyBveSwgeCwgeW0pO1xuICAgIGN0eC5jbG9zZVBhdGgoKTtcbn07XG5jb25zdCByZW5kZXJFbGxpcHNlID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGNvbnN0IHsgY3gsIGN5LCByeCwgcnkgfSA9IG5vZGUucHJvcHMgfHwge307XG4gICAgZHJhd0VsbGlwc2UoY3R4LCByeCwgcnksIGN4LCBjeSk7XG59O1xuXG5jb25zdCByZW5kZXJDaXJjbGUgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgY29uc3QgY3ggPSBub2RlLnByb3BzPy5jeDtcbiAgICBjb25zdCBjeSA9IG5vZGUucHJvcHM/LmN5O1xuICAgIGNvbnN0IHIgPSBub2RlLnByb3BzPy5yO1xuICAgIGRyYXdFbGxpcHNlKGN0eCwgciwgciwgY3gsIGN5KTtcbn07XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXJldHVybi1hc3NpZ24gKi9cbmNvbnN0IG51bWJlciA9IChuKSA9PiB7XG4gICAgaWYgKG4gPiAtMWUyMSAmJiBuIDwgMWUyMSkge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChuICogMWU2KSAvIDFlNjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGB1bnN1cHBvcnRlZCBudW1iZXI6ICR7bn1gKTtcbn07XG5jb25zdCBfcmVuZGVyR2x5cGhzID0gKGN0eCwgZW5jb2RlZCwgcG9zaXRpb25zLCB4LCB5KSA9PiB7XG4gICAgY29uc3QgY29tbWFuZHMgPSBbXTtcbiAgICBjb25zdCBzY2FsZSA9IGN0eC5fZm9udFNpemUgLyAxMDAwO1xuICAgIGxldCBpO1xuICAgIGxldCBsYXN0ID0gMDtcbiAgICBsZXQgaGFkT2Zmc2V0ID0gZmFsc2U7XG4gICAgY3R4LnNhdmUoKTtcbiAgICAvLyBmbGlwIGNvb3JkaW5hdGUgc3lzdGVtXG4gICAgY3R4LnRyYW5zZm9ybSgxLCAwLCAwLCAtMSwgMCwgY3R4LnBhZ2UuaGVpZ2h0KTtcbiAgICB5ID0gY3R4LnBhZ2UuaGVpZ2h0IC0geTtcbiAgICAvLyBhZGQgY3VycmVudCBmb250IHRvIHBhZ2UgaWYgbmVjZXNzYXJ5XG4gICAgaWYgKGN0eC5wYWdlLmZvbnRzW2N0eC5fZm9udC5pZF0gPT0gbnVsbCkge1xuICAgICAgICBjdHgucGFnZS5mb250c1tjdHguX2ZvbnQuaWRdID0gY3R4Ll9mb250LnJlZigpO1xuICAgIH1cbiAgICAvLyBiZWdpbiB0aGUgdGV4dCBvYmplY3RcbiAgICBjdHguYWRkQ29udGVudCgnQlQnKTtcbiAgICAvLyB0ZXh0IHBvc2l0aW9uXG4gICAgY3R4LmFkZENvbnRlbnQoYDEgMCAwIDEgJHtudW1iZXIoeCl9ICR7bnVtYmVyKHkpfSBUbWApO1xuICAgIC8vIGZvbnQgYW5kIGZvbnQgc2l6ZVxuICAgIGN0eC5hZGRDb250ZW50KGAvJHtjdHguX2ZvbnQuaWR9ICR7bnVtYmVyKGN0eC5fZm9udFNpemUpfSBUZmApO1xuICAgIC8vIEFkZHMgYSBzZWdtZW50IG9mIHRleHQgdG8gdGhlIFRKIGNvbW1hbmQgYnVmZmVyXG4gICAgY29uc3QgYWRkU2VnbWVudCA9IChjdXIpID0+IHtcbiAgICAgICAgaWYgKGxhc3QgPCBjdXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGhleCA9IGVuY29kZWQuc2xpY2UobGFzdCwgY3VyKS5qb2luKCcnKTtcbiAgICAgICAgICAgIGNvbnN0IGFkdmFuY2UgPSBwb3NpdGlvbnNbY3VyIC0gMV0ueEFkdmFuY2UgLSBwb3NpdGlvbnNbY3VyIC0gMV0uYWR2YW5jZVdpZHRoO1xuICAgICAgICAgICAgY29tbWFuZHMucHVzaChgPCR7aGV4fT4gJHtudW1iZXIoLWFkdmFuY2UpfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAobGFzdCA9IGN1cik7XG4gICAgfTtcbiAgICAvLyBGbHVzaGVzIHRoZSBjdXJyZW50IFRKIGNvbW1hbmRzIHRvIHRoZSBvdXRwdXQgc3RyZWFtXG4gICAgY29uc3QgZmx1c2ggPSAocykgPT4ge1xuICAgICAgICBhZGRTZWdtZW50KHMpO1xuICAgICAgICBpZiAoY29tbWFuZHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY3R4LmFkZENvbnRlbnQoYFske2NvbW1hbmRzLmpvaW4oJyAnKX1dIFRKYCk7XG4gICAgICAgICAgICByZXR1cm4gKGNvbW1hbmRzLmxlbmd0aCA9IDApO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgcG9zaXRpb25zLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIC8vIElmIHdlIGhhdmUgYW4geCBvciB5IG9mZnNldCwgd2UgaGF2ZSB0byBicmVhayBvdXQgb2YgdGhlIGN1cnJlbnQgVEogY29tbWFuZFxuICAgICAgICAvLyBzbyB3ZSBjYW4gbW92ZSB0aGUgdGV4dCBwb3NpdGlvbi5cbiAgICAgICAgY29uc3QgcG9zID0gcG9zaXRpb25zW2ldO1xuICAgICAgICBpZiAocG9zLnhPZmZzZXQgfHwgcG9zLnlPZmZzZXQpIHtcbiAgICAgICAgICAgIC8vIEZsdXNoIHRoZSBjdXJyZW50IGJ1ZmZlclxuICAgICAgICAgICAgZmx1c2goaSk7XG4gICAgICAgICAgICAvLyBNb3ZlIHRoZSB0ZXh0IHBvc2l0aW9uIGFuZCBmbHVzaCBqdXN0IHRoZSBjdXJyZW50IGNoYXJhY3RlclxuICAgICAgICAgICAgY3R4LmFkZENvbnRlbnQoYDEgMCAwIDEgJHtudW1iZXIoeCArIHBvcy54T2Zmc2V0ICogc2NhbGUpfSAke251bWJlcih5ICsgcG9zLnlPZmZzZXQgKiBzY2FsZSl9IFRtYCk7XG4gICAgICAgICAgICBmbHVzaChpICsgMSk7XG4gICAgICAgICAgICBoYWRPZmZzZXQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gSWYgdGhlIGxhc3QgY2hhcmFjdGVyIGhhZCBhbiBvZmZzZXQsIHJlc2V0IHRoZSB0ZXh0IHBvc2l0aW9uXG4gICAgICAgICAgICBpZiAoaGFkT2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgY3R4LmFkZENvbnRlbnQoYDEgMCAwIDEgJHtudW1iZXIoeCl9ICR7bnVtYmVyKHkpfSBUbWApO1xuICAgICAgICAgICAgICAgIGhhZE9mZnNldCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gR3JvdXAgc2VnbWVudHMgdGhhdCBkb24ndCBoYXZlIGFueSBhZHZhbmNlIGFkanVzdG1lbnRzXG4gICAgICAgICAgICBpZiAocG9zLnhBZHZhbmNlIC0gcG9zLmFkdmFuY2VXaWR0aCAhPT0gMCkge1xuICAgICAgICAgICAgICAgIGFkZFNlZ21lbnQoaSArIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHggKz0gcG9zLnhBZHZhbmNlICogc2NhbGU7XG4gICAgfVxuICAgIC8vIEZsdXNoIGFueSByZW1haW5pbmcgY29tbWFuZHNcbiAgICBmbHVzaChpKTtcbiAgICAvLyBlbmQgdGhlIHRleHQgb2JqZWN0XG4gICAgY3R4LmFkZENvbnRlbnQoJ0VUJyk7XG4gICAgLy8gcmVzdG9yZSBmbGlwcGVkIGNvb3JkaW5hdGUgc3lzdGVtXG4gICAgcmV0dXJuIGN0eC5yZXN0b3JlKCk7XG59O1xuY29uc3QgcmVuZGVyR2x5cGhzID0gKGN0eCwgZ2x5cGhzLCBwb3NpdGlvbnMsIHgsIHkpID0+IHtcbiAgICBjb25zdCBzY2FsZSA9IDEwMDAgLyBjdHguX2ZvbnRTaXplO1xuICAgIGNvbnN0IHVuaXRzUGVyRW0gPSBjdHguX2ZvbnQuZm9udC51bml0c1BlckVtIHx8IDEwMDA7XG4gICAgY29uc3QgYWR2YW5jZVdpZHRoU2NhbGUgPSAxMDAwIC8gdW5pdHNQZXJFbTtcbiAgICAvLyBHbHlwaCBlbmNvZGluZyBhbmQgcG9zaXRpb25pbmdcbiAgICBjb25zdCBlbmNvZGVkR2x5cGhzID0gY3R4Ll9mb250LmVuY29kZUdseXBocyhnbHlwaHMpO1xuICAgIGNvbnN0IGVuY29kZWRQb3NpdGlvbnMgPSBwb3NpdGlvbnMubWFwKChwb3MsIGkpID0+ICh7XG4gICAgICAgIHhBZHZhbmNlOiBwb3MueEFkdmFuY2UgKiBzY2FsZSxcbiAgICAgICAgeUFkdmFuY2U6IHBvcy55QWR2YW5jZSAqIHNjYWxlLFxuICAgICAgICB4T2Zmc2V0OiBwb3MueE9mZnNldCxcbiAgICAgICAgeU9mZnNldDogcG9zLnlPZmZzZXQsXG4gICAgICAgIGFkdmFuY2VXaWR0aDogZ2x5cGhzW2ldLmFkdmFuY2VXaWR0aCAqIGFkdmFuY2VXaWR0aFNjYWxlLFxuICAgIH0pKTtcbiAgICByZXR1cm4gX3JlbmRlckdseXBocyhjdHgsIGVuY29kZWRHbHlwaHMsIGVuY29kZWRQb3NpdGlvbnMsIHgsIHkpO1xufTtcblxuY29uc3QgcmVuZGVyUnVuJDEgPSAoY3R4LCBydW4pID0+IHtcbiAgICBpZiAoIXJ1bi5nbHlwaHMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoIXJ1bi5wb3NpdGlvbnMpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBydW5BZHZhbmNlV2lkdGggPSBydW4ueEFkdmFuY2U7XG4gICAgY29uc3QgZm9udCA9IHJ1bi5hdHRyaWJ1dGVzLmZvbnQ/LlswXTtcbiAgICBjb25zdCB7IGZvbnRTaXplLCBjb2xvciwgb3BhY2l0eSB9ID0gcnVuLmF0dHJpYnV0ZXM7XG4gICAgaWYgKGNvbG9yKVxuICAgICAgICBjdHguZmlsbENvbG9yKGNvbG9yKTtcbiAgICBjdHguZmlsbE9wYWNpdHkob3BhY2l0eSk7XG4gICAgaWYgKGZvbnQpIHtcbiAgICAgICAgY3R4LmZvbnQoZm9udC50eXBlID09PSAnU1RBTkRBUkQnID8gZm9udC5mdWxsTmFtZSA6IGZvbnQsIGZvbnRTaXplKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcmVuZGVyR2x5cGhzKGN0eCwgcnVuLmdseXBocywgcnVuLnBvc2l0aW9ucywgMCwgMCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfVxuICAgIGN0eC50cmFuc2xhdGUocnVuQWR2YW5jZVdpZHRoLCAwKTtcbn07XG5jb25zdCByZW5kZXJTcGFuID0gKGN0eCwgbGluZSwgdGV4dEFuY2hvciwgZG9taW5hbnRCYXNlbGluZSkgPT4ge1xuICAgIGN0eC5zYXZlKCk7XG4gICAgY29uc3QgeCA9IGxpbmUuYm94Py54IHx8IDA7XG4gICAgY29uc3QgeSA9IGxpbmUuYm94Py55IHx8IDA7XG4gICAgY29uc3QgZm9udCA9IGxpbmUucnVuc1swXT8uYXR0cmlidXRlcy5mb250Py5bMF07XG4gICAgY29uc3Qgc2NhbGUgPSBsaW5lLnJ1bnNbMF0/LmF0dHJpYnV0ZXM/LnNjYWxlIHx8IDE7XG4gICAgY29uc3Qgd2lkdGggPSBsaW5lLnhBZHZhbmNlO1xuICAgIGlmICghZm9udClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGFzY2VudCA9IGZvbnQuYXNjZW50ICogc2NhbGU7XG4gICAgY29uc3QgeEhlaWdodCA9IGZvbnQueEhlaWdodCAqIHNjYWxlO1xuICAgIGNvbnN0IGRlc2NlbnQgPSBmb250LmRlc2NlbnQgKiBzY2FsZTtcbiAgICBjb25zdCBjYXBIZWlnaHQgPSBmb250LmNhcEhlaWdodCAqIHNjYWxlO1xuICAgIGxldCB4VHJhbnNsYXRlID0geDtcbiAgICBsZXQgeVRyYW5zbGF0ZSA9IHk7XG4gICAgc3dpdGNoICh0ZXh0QW5jaG9yKSB7XG4gICAgICAgIGNhc2UgJ21pZGRsZSc6XG4gICAgICAgICAgICB4VHJhbnNsYXRlID0geCAtIHdpZHRoIC8gMjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdlbmQnOlxuICAgICAgICAgICAgeFRyYW5zbGF0ZSA9IHggLSB3aWR0aDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgeFRyYW5zbGF0ZSA9IHg7XG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG4gICAgc3dpdGNoIChkb21pbmFudEJhc2VsaW5lKSB7XG4gICAgICAgIGNhc2UgJ21pZGRsZSc6XG4gICAgICAgIGNhc2UgJ2NlbnRyYWwnOlxuICAgICAgICAgICAgeVRyYW5zbGF0ZSA9IHkgKyBjYXBIZWlnaHQgLyAyO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2hhbmdpbmcnOlxuICAgICAgICAgICAgeVRyYW5zbGF0ZSA9IHkgKyBjYXBIZWlnaHQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbWF0aGVtYXRpY2FsJzpcbiAgICAgICAgICAgIHlUcmFuc2xhdGUgPSB5ICsgeEhlaWdodDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICd0ZXh0LWFmdGVyLWVkZ2UnOlxuICAgICAgICAgICAgeVRyYW5zbGF0ZSA9IHkgKyBkZXNjZW50O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3RleHQtYmVmb3JlLWVkZ2UnOlxuICAgICAgICAgICAgeVRyYW5zbGF0ZSA9IHkgKyBhc2NlbnQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHlUcmFuc2xhdGUgPSB5O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGN0eC50cmFuc2xhdGUoeFRyYW5zbGF0ZSwgeVRyYW5zbGF0ZSk7XG4gICAgbGluZS5ydW5zLmZvckVhY2goKHJ1bikgPT4gcmVuZGVyUnVuJDEoY3R4LCBydW4pKTtcbiAgICBjdHgucmVzdG9yZSgpO1xufTtcbmNvbnN0IHJlbmRlclN2Z1RleHQgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIGNoaWxkcmVuLmZvckVhY2goKHNwYW4pID0+IHJlbmRlclNwYW4oY3R4LCBzcGFuLmxpbmVzWzBdLCBzcGFuLnByb3BzLnRleHRBbmNob3IsIHNwYW4ucHJvcHMuZG9taW5hbnRCYXNlbGluZSkpO1xufTtcblxuY29uc3QgcGFpcnMgPSAodmFsdWVzKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZXMubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goW3ZhbHVlc1tpXSwgdmFsdWVzW2kgKyAxXV0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbi8qKlxuICogUGFyc2Ugc3ZnLWxpa2UgcG9pbnRzIGludG8gbnVtYmVyIGFycmF5c1xuICpcbiAqIEBwYXJhbSBwb2ludHMgc3RyaW5nIGV4LiBcIjIwLDMwIDUwLDYwXCJcbiAqIEByZXR1cm5zIHBvaW50cyBhcnJheSBleC4gW1syMCwgMzBdLCBbNTAsIDYwXV1cbiAqL1xuY29uc3QgcGFyc2VQb2ludHMgPSAocG9pbnRzKSA9PiB7XG4gICAgbGV0IHZhbHVlcyA9IChwb2ludHMgfHwgJycpXG4gICAgICAgIC50cmltKClcbiAgICAgICAgLnJlcGxhY2UoLywvZywgJyAnKVxuICAgICAgICAucmVwbGFjZSgvKFxcZCktKFxcZCkvZywgJyQxIC0kMicpXG4gICAgICAgIC5zcGxpdCgvXFxzKy8pO1xuICAgIGlmICh2YWx1ZXMubGVuZ3RoICUgMiAhPT0gMCkge1xuICAgICAgICB2YWx1ZXMgPSB2YWx1ZXMuc2xpY2UoMCwgLTEpO1xuICAgIH1cbiAgICBjb25zdCBtYXBwZWRWYWx1ZXMgPSB2YWx1ZXMubWFwKHBhcnNlRmxvYXQpO1xuICAgIHJldHVybiBwYWlycyhtYXBwZWRWYWx1ZXMpO1xufTtcblxuY29uc3QgZHJhd1BvbHlsaW5lID0gKGN0eCwgcG9pbnRzKSA9PiB7XG4gICAgaWYgKHBvaW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGN0eC5tb3ZlVG8ocG9pbnRzWzBdWzBdLCBwb2ludHNbMF1bMV0pO1xuICAgICAgICBwb2ludHMuc2xpY2UoMSkuZm9yRWFjaCgocCkgPT4gY3R4LmxpbmVUbyhwWzBdLCBwWzFdKSk7XG4gICAgfVxufTtcbmNvbnN0IHJlbmRlclBvbHlsaW5lID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGNvbnN0IHBvaW50cyA9IHBhcnNlUG9pbnRzKG5vZGUucHJvcHMucG9pbnRzIHx8ICcnKTtcbiAgICBkcmF3UG9seWxpbmUoY3R4LCBwb2ludHMpO1xufTtcblxuY29uc3QgcmVuZGVyUG9seWdvbiA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBjb25zdCBwb2ludHMgPSBwYXJzZVBvaW50cyhub2RlLnByb3BzLnBvaW50cyB8fCAnJyk7XG4gICAgZHJhd1BvbHlsaW5lKGN0eCwgcG9pbnRzKTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG59O1xuXG5jb25zdCByZW5kZXJJbWFnZSQxID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoIW5vZGUuaW1hZ2U/LmRhdGEpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IHggPSAwLCB5ID0gMCB9ID0gbm9kZS5wcm9wcztcbiAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQsIG9wYWNpdHkgfSA9IG5vZGUuc3R5bGU7XG4gICAgY29uc3QgcGFkZGluZ1RvcCA9IG5vZGUuYm94LnBhZGRpbmdMZWZ0IHx8IDA7XG4gICAgY29uc3QgcGFkZGluZ0xlZnQgPSBub2RlLmJveC5wYWRkaW5nTGVmdCB8fCAwO1xuICAgIGlmICh3aWR0aCA9PT0gMCB8fCBoZWlnaHQgPT09IDApIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBJbWFnZSB3aXRoIHNyYyAnJHtub2RlLnByb3BzLmhyZWZ9JyBza2lwcGVkIGR1ZSB0byBpbnZhbGlkIGRpbWVuc2lvbnNgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpZHRoID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgaGVpZ2h0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zb2xlLndhcm4oYEltYWdlIHdpdGggc3JjICcke25vZGUucHJvcHMuaHJlZn0nIHNraXBwZWQgZHVlIHRvIHBlcmNlbnRhZ2Ugd2lkdGggb3IgaGVpZ2h0YCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjdHhcbiAgICAgICAgLmZpbGxPcGFjaXR5KG9wYWNpdHkgfHwgMSlcbiAgICAgICAgLmltYWdlKG5vZGUuaW1hZ2UuZGF0YSwgeCArIHBhZGRpbmdMZWZ0LCB5ICsgcGFkZGluZ1RvcCwge1xuICAgICAgICB3aWR0aCxcbiAgICAgICAgaGVpZ2h0LFxuICAgIH0pO1xuICAgIGN0eC5yZXN0b3JlKCk7XG59O1xuXG4vLyBUaGlzIGNvbnN0YW50IGlzIHVzZWQgdG8gYXBwcm94aW1hdGUgYSBzeW1tZXRyaWNhbCBhcmMgdXNpbmcgYSBjdWJpY1xuLy8gQmV6aWVyIGN1cnZlLlxuY29uc3QgS0FQUEEkMSA9IDQuMCAqICgoTWF0aC5zcXJ0KDIpIC0gMS4wKSAvIDMuMCk7XG5jb25zdCBjbGlwTm9kZSA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCFub2RlLnN0eWxlKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgeyB0b3AsIGxlZnQsIHdpZHRoLCBoZWlnaHQgfSA9IG5vZGUuYm94O1xuICAgIGNvbnN0IHsgYm9yZGVyVG9wTGVmdFJhZGl1cyA9IDAsIGJvcmRlclRvcFJpZ2h0UmFkaXVzID0gMCwgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMgPSAwLCBib3JkZXJCb3R0b21MZWZ0UmFkaXVzID0gMCwgfSA9IG5vZGUuc3R5bGU7XG4gICAgLy8gQm9yZGVyIHRvcFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdGhpcyBpcyBhbHdheXMgYSBudW1iZXIgZHVlIHRvIHJlc29sdmUgYm9yZGVyIHJhZGl1cyBzdGVwXG4gICAgY29uc3QgcnRyID0gTWF0aC5taW4oYm9yZGVyVG9wUmlnaHRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICAgIGNvbnN0IGN0ciA9IHJ0ciAqICgxLjAgLSBLQVBQQSQxKTtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyBydHIsIHRvcCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGggLSBydHIsIHRvcCk7XG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIHdpZHRoIC0gY3RyLCB0b3AsIGxlZnQgKyB3aWR0aCwgdG9wICsgY3RyLCBsZWZ0ICsgd2lkdGgsIHRvcCArIHJ0cik7XG4gICAgLy8gQm9yZGVyIHJpZ2h0XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0aGlzIGlzIGFsd2F5cyBhIG51bWJlciBkdWUgdG8gcmVzb2x2ZSBib3JkZXIgcmFkaXVzIHN0ZXBcbiAgICBjb25zdCByYnIgPSBNYXRoLm1pbihib3JkZXJCb3R0b21SaWdodFJhZGl1cywgMC41ICogd2lkdGgsIDAuNSAqIGhlaWdodCk7XG4gICAgY29uc3QgY2JyID0gcmJyICogKDEuMCAtIEtBUFBBJDEpO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQgLSByYnIpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gY2JyLCBsZWZ0ICsgd2lkdGggLSBjYnIsIHRvcCArIGhlaWdodCwgbGVmdCArIHdpZHRoIC0gcmJyLCB0b3AgKyBoZWlnaHQpO1xuICAgIC8vIEJvcmRlciBib3R0b21cbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHRoaXMgaXMgYWx3YXlzIGEgbnVtYmVyIGR1ZSB0byByZXNvbHZlIGJvcmRlciByYWRpdXMgc3RlcFxuICAgIGNvbnN0IHJibCA9IE1hdGgubWluKGJvcmRlckJvdHRvbUxlZnRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICAgIGNvbnN0IGNibCA9IHJibCAqICgxLjAgLSBLQVBQQSQxKTtcbiAgICBjdHgubGluZVRvKGxlZnQgKyByYmwsIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGNibCwgdG9wICsgaGVpZ2h0LCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSBjYmwsIGxlZnQsIHRvcCArIGhlaWdodCAtIHJibCk7XG4gICAgLy8gQm9yZGVyIGxlZnRcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHRoaXMgaXMgYWx3YXlzIGEgbnVtYmVyIGR1ZSB0byByZXNvbHZlIGJvcmRlciByYWRpdXMgc3RlcFxuICAgIGNvbnN0IHJ0bCA9IE1hdGgubWluKGJvcmRlclRvcExlZnRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICAgIGNvbnN0IGN0bCA9IHJ0bCAqICgxLjAgLSBLQVBQQSQxKTtcbiAgICBjdHgubGluZVRvKGxlZnQsIHRvcCArIHJ0bCk7XG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCwgdG9wICsgY3RsLCBsZWZ0ICsgY3RsLCB0b3AsIGxlZnQgKyBydGwsIHRvcCk7XG4gICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgIGN0eC5jbGlwKCk7XG59O1xuXG5jb25zdCBhcHBseVNpbmdsZVRyYW5zZm9ybWF0aW9uID0gKGN0eCwgdHJhbnNmb3JtLCBvcmlnaW4pID0+IHtcbiAgICBjb25zdCB7IG9wZXJhdGlvbiwgdmFsdWUgfSA9IHRyYW5zZm9ybTtcbiAgICBzd2l0Y2ggKG9wZXJhdGlvbikge1xuICAgICAgICBjYXNlICdzY2FsZSc6IHtcbiAgICAgICAgICAgIGNvbnN0IFtzY2FsZVgsIHNjYWxlWV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGN0eC5zY2FsZShzY2FsZVgsIHNjYWxlWSwgeyBvcmlnaW4gfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdyb3RhdGUnOiB7XG4gICAgICAgICAgICBjb25zdCBbYW5nbGVdID0gdmFsdWU7XG4gICAgICAgICAgICBjdHgucm90YXRlKGFuZ2xlLCB7IG9yaWdpbiB9KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ3RyYW5zbGF0ZSc6IHtcbiAgICAgICAgICAgIGNvbnN0IFt4LCB5ID0gMF0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoeCwgeSwgeyBvcmlnaW4gfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdza2V3Jzoge1xuICAgICAgICAgICAgY29uc3QgW3hBbmdsZSA9IDAsIHlBbmdsZSA9IDBdID0gdmFsdWU7XG4gICAgICAgICAgICBjb25zdCByYWR4ID0gKHhBbmdsZSAqIE1hdGguUEkpIC8gMTgwO1xuICAgICAgICAgICAgY29uc3QgcmFkeSA9ICh5QW5nbGUgKiBNYXRoLlBJKSAvIDE4MDtcbiAgICAgICAgICAgIGNvbnN0IHRhbnggPSBNYXRoLnRhbihyYWR4KTtcbiAgICAgICAgICAgIGNvbnN0IHRhbnkgPSBNYXRoLnRhbihyYWR5KTtcbiAgICAgICAgICAgIGxldCB4ID0gMDtcbiAgICAgICAgICAgIGxldCB5ID0gMDtcbiAgICAgICAgICAgIGlmIChvcmlnaW4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIFt4LCB5XSA9IEFycmF5LmZyb20ob3JpZ2luKTtcbiAgICAgICAgICAgICAgICBjb25zdCB4MSA9IHggKyB0YW54ICogeTtcbiAgICAgICAgICAgICAgICBjb25zdCB5MSA9IHkgKyB0YW55ICogeDtcbiAgICAgICAgICAgICAgICB4IC09IHgxO1xuICAgICAgICAgICAgICAgIHkgLT0geTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjdHgudHJhbnNmb3JtKDEsIHRhbnksIHRhbngsIDEsIHgsIHkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnbWF0cml4Jzoge1xuICAgICAgICAgICAgY3R4LnRyYW5zZm9ybSguLi52YWx1ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBUcmFuc2Zvcm0gb3BlcmF0aW9uOiAnJHtvcGVyYXRpb259JyBkb2Vzbid0IHN1cHBvcnRlZGApO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IGFwcGx5VHJhbnNmb3JtYXRpb25zID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5vcmlnaW4pXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IHByb3BzLCBzdHlsZSB9ID0gbm9kZTtcbiAgICBjb25zdCBvcmlnaW4gPSBbbm9kZS5vcmlnaW4ubGVmdCwgbm9kZS5vcmlnaW4udG9wXTtcbiAgICBjb25zdCBwcm9wc1RyYW5zZm9ybSA9ICd0cmFuc2Zvcm0nIGluIHByb3BzID8gcHJvcHMudHJhbnNmb3JtIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IG9wZXJhdGlvbnMgPSBzdHlsZT8udHJhbnNmb3JtIHx8IHByb3BzVHJhbnNmb3JtIHx8IFtdO1xuICAgIG9wZXJhdGlvbnMuZm9yRWFjaCgob3BlcmF0aW9uKSA9PiB7XG4gICAgICAgIGFwcGx5U2luZ2xlVHJhbnNmb3JtYXRpb24oY3R4LCBvcGVyYXRpb24sIG9yaWdpbik7XG4gICAgfSk7XG59O1xuXG4vLyBGcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9keS9zdmctcGF0aC1ib3VuZHMvYmxvYi9tYXN0ZXIvaW5kZXguanNcbmNvbnN0IGdldFBhdGhCb3VuZGluZ0JveCA9IChub2RlKSA9PiB7XG4gICAgY29uc3QgcGF0aCA9IG5vcm1hbGl6ZVBhdGgoYWJzUGF0aChwYXJzZVBhdGgobm9kZS5wcm9wcz8uZCB8fCAnJykpKTtcbiAgICBpZiAoIXBhdGgubGVuZ3RoKVxuICAgICAgICByZXR1cm4gWzAsIDAsIDAsIDBdO1xuICAgIGNvbnN0IGJvdW5kcyA9IFtJbmZpbml0eSwgSW5maW5pdHksIC1JbmZpbml0eSwgLUluZmluaXR5XTtcbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IHBhdGgubGVuZ3RoOyBpIDwgbDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IHBvaW50cyA9IHBhdGhbaV0uc2xpY2UoMSk7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcG9pbnRzLmxlbmd0aDsgaiArPSAyKSB7XG4gICAgICAgICAgICBpZiAocG9pbnRzW2ogKyAwXSA8IGJvdW5kc1swXSlcbiAgICAgICAgICAgICAgICBib3VuZHNbMF0gPSBwb2ludHNbaiArIDBdO1xuICAgICAgICAgICAgaWYgKHBvaW50c1tqICsgMV0gPCBib3VuZHNbMV0pXG4gICAgICAgICAgICAgICAgYm91bmRzWzFdID0gcG9pbnRzW2ogKyAxXTtcbiAgICAgICAgICAgIGlmIChwb2ludHNbaiArIDBdID4gYm91bmRzWzJdKVxuICAgICAgICAgICAgICAgIGJvdW5kc1syXSA9IHBvaW50c1tqICsgMF07XG4gICAgICAgICAgICBpZiAocG9pbnRzW2ogKyAxXSA+IGJvdW5kc1szXSlcbiAgICAgICAgICAgICAgICBib3VuZHNbM10gPSBwb2ludHNbaiArIDFdO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBib3VuZHM7XG59O1xuY29uc3QgZ2V0Q2lyY2xlQm91bmRpbmdCb3ggPSAobm9kZSkgPT4ge1xuICAgIGNvbnN0IHIgPSBub2RlLnByb3BzPy5yIHx8IDA7XG4gICAgY29uc3QgY3ggPSBub2RlLnByb3BzPy5jeCB8fCAwO1xuICAgIGNvbnN0IGN5ID0gbm9kZS5wcm9wcz8uY3kgfHwgMDtcbiAgICByZXR1cm4gW2N4IC0gciwgY3kgLSByLCBjeCArIHIsIGN5ICsgcl07XG59O1xuY29uc3QgZ2V0RWxsaXBzZUJvdW5kaW5nQm94ID0gKG5vZGUpID0+IHtcbiAgICBjb25zdCBjeCA9IG5vZGUucHJvcHM/LmN4IHx8IDA7XG4gICAgY29uc3QgY3kgPSBub2RlLnByb3BzPy5jeSB8fCAwO1xuICAgIGNvbnN0IHJ4ID0gbm9kZS5wcm9wcz8ucnggfHwgMDtcbiAgICBjb25zdCByeSA9IG5vZGUucHJvcHM/LnJ5IHx8IDA7XG4gICAgcmV0dXJuIFtjeCAtIHJ4LCBjeSAtIHJ5LCBjeCArIHJ4LCBjeSArIHJ5XTtcbn07XG5jb25zdCBnZXRMaW5lQm91bmRpbmdCb3ggPSAobm9kZSkgPT4ge1xuICAgIGNvbnN0IHgxID0gbm9kZS5wcm9wcz8ueDEgfHwgMDtcbiAgICBjb25zdCB5MSA9IG5vZGUucHJvcHM/LnkxIHx8IDA7XG4gICAgY29uc3QgeDIgPSBub2RlLnByb3BzPy54MiB8fCAwO1xuICAgIGNvbnN0IHkyID0gbm9kZS5wcm9wcz8ueTIgfHwgMDtcbiAgICByZXR1cm4gW1xuICAgICAgICBNYXRoLm1pbih4MSwgeDIpLFxuICAgICAgICBNYXRoLm1pbih5MSwgeTIpLFxuICAgICAgICBNYXRoLm1heCh4MSwgeDIpLFxuICAgICAgICBNYXRoLm1heCh5MSwgeTIpLFxuICAgIF07XG59O1xuY29uc3QgZ2V0UmVjdEJvdW5kaW5nQm94ID0gKG5vZGUpID0+IHtcbiAgICBjb25zdCB4ID0gbm9kZS5wcm9wcz8ueCB8fCAwO1xuICAgIGNvbnN0IHkgPSBub2RlLnByb3BzPy55IHx8IDA7XG4gICAgY29uc3Qgd2lkdGggPSBub2RlLnByb3BzPy53aWR0aCB8fCAwO1xuICAgIGNvbnN0IGhlaWdodCA9IG5vZGUucHJvcHM/LmhlaWdodCB8fCAwO1xuICAgIHJldHVybiBbeCwgeSwgeCArIHdpZHRoLCB5ICsgaGVpZ2h0XTtcbn07XG5jb25zdCBtYXggPSAodmFsdWVzKSA9PiBNYXRoLm1heCgtSW5maW5pdHksIC4uLnZhbHVlcyk7XG5jb25zdCBtaW4gPSAodmFsdWVzKSA9PiBNYXRoLm1pbihJbmZpbml0eSwgLi4udmFsdWVzKTtcbmNvbnN0IGdldFBvbHlsaW5lQm91bmRpbmdCb3ggPSAobm9kZSkgPT4ge1xuICAgIGNvbnN0IHBvaW50cyA9IHBhcnNlUG9pbnRzKG5vZGUucHJvcHM/LnBvaW50cyk7XG4gICAgY29uc3QgeFZhbHVlcyA9IHBvaW50cy5tYXAoKHApID0+IHBbMF0pO1xuICAgIGNvbnN0IHlWYWx1ZXMgPSBwb2ludHMubWFwKChwKSA9PiBwWzFdKTtcbiAgICByZXR1cm4gW21pbih4VmFsdWVzKSwgbWluKHlWYWx1ZXMpLCBtYXgoeFZhbHVlcyksIG1heCh5VmFsdWVzKV07XG59O1xuY29uc3QgYm91bmRpbmdCb3hGbnMgPSB7XG4gICAgW1AuUmVjdF06IGdldFJlY3RCb3VuZGluZ0JveCxcbiAgICBbUC5MaW5lXTogZ2V0TGluZUJvdW5kaW5nQm94LFxuICAgIFtQLlBhdGhdOiBnZXRQYXRoQm91bmRpbmdCb3gsXG4gICAgW1AuQ2lyY2xlXTogZ2V0Q2lyY2xlQm91bmRpbmdCb3gsXG4gICAgW1AuRWxsaXBzZV06IGdldEVsbGlwc2VCb3VuZGluZ0JveCxcbiAgICBbUC5Qb2x5Z29uXTogZ2V0UG9seWxpbmVCb3VuZGluZ0JveCxcbiAgICBbUC5Qb2x5bGluZV06IGdldFBvbHlsaW5lQm91bmRpbmdCb3gsXG59O1xuY29uc3QgZ2V0Qm91bmRpbmdCb3ggPSAobm9kZSkgPT4ge1xuICAgIGNvbnN0IGJvdW5kaW5nQm94Rm4gPSBib3VuZGluZ0JveEZuc1tub2RlLnR5cGVdO1xuICAgIHJldHVybiBib3VuZGluZ0JveEZuID8gYm91bmRpbmdCb3hGbihub2RlKSA6IFswLCAwLCAwLCAwXTtcbn07XG5cbmNvbnN0IHNldFN0cm9rZVdpZHRoID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5wcm9wcylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghKCdzdHJva2VXaWR0aCcgaW4gbm9kZS5wcm9wcykpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBsaW5lV2lkdGggPSBub2RlLnByb3BzLnN0cm9rZVdpZHRoO1xuICAgIGlmIChsaW5lV2lkdGgpXG4gICAgICAgIGN0eC5saW5lV2lkdGgobGluZVdpZHRoKTtcbn07XG5jb25zdCBzZXRTdHJva2VDb2xvciA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUucHJvcHMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoISgnc3Ryb2tlJyBpbiBub2RlLnByb3BzKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHN0cm9rZUNvbG9yID0gbm9kZS5wcm9wcy5zdHJva2U7XG4gICAgaWYgKHN0cm9rZUNvbG9yKVxuICAgICAgICBjdHguc3Ryb2tlQ29sb3Ioc3Ryb2tlQ29sb3IpO1xufTtcbmNvbnN0IHNldE9wYWNpdHkgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlLnByb3BzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCEoJ29wYWNpdHknIGluIG5vZGUucHJvcHMpKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3Qgb3BhY2l0eSA9IG5vZGUucHJvcHMub3BhY2l0eTtcbiAgICBpZiAoIWlzTmlsKG9wYWNpdHkpKVxuICAgICAgICBjdHgub3BhY2l0eShvcGFjaXR5KTtcbn07XG5jb25zdCBzZXRGaWxsT3BhY2l0eSA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUucHJvcHMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoISgnZmlsbE9wYWNpdHknIGluIG5vZGUucHJvcHMpKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgZmlsbE9wYWNpdHkgPSBub2RlLnByb3BzLmZpbGxPcGFjaXR5IHx8IG51bGw7XG4gICAgaWYgKCFpc05pbChmaWxsT3BhY2l0eSkpXG4gICAgICAgIGN0eC5maWxsT3BhY2l0eShmaWxsT3BhY2l0eSk7XG59O1xuY29uc3Qgc2V0U3Ryb2tlT3BhY2l0eSA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUucHJvcHMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoISgnc3Ryb2tlT3BhY2l0eScgaW4gbm9kZS5wcm9wcykpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBzdHJva2VPcGFjaXR5ID0gbm9kZS5wcm9wcz8uc3Ryb2tlT3BhY2l0eTtcbiAgICBpZiAoIWlzTmlsKHN0cm9rZU9wYWNpdHkpKVxuICAgICAgICBjdHguc3Ryb2tlT3BhY2l0eShzdHJva2VPcGFjaXR5KTtcbn07XG5jb25zdCBzZXRMaW5lSm9pbiA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUucHJvcHMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoISgnc3Ryb2tlTGluZWpvaW4nIGluIG5vZGUucHJvcHMpKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgbGluZUpvaW4gPSBub2RlLnByb3BzLnN0cm9rZUxpbmVqb2luO1xuICAgIGlmIChsaW5lSm9pbilcbiAgICAgICAgY3R4LmxpbmVKb2luKGxpbmVKb2luKTtcbn07XG5jb25zdCBzZXRMaW5lQ2FwID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5wcm9wcylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghKCdzdHJva2VMaW5lY2FwJyBpbiBub2RlLnByb3BzKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGxpbmVDYXAgPSBub2RlLnByb3BzPy5zdHJva2VMaW5lY2FwO1xuICAgIGlmIChsaW5lQ2FwKVxuICAgICAgICBjdHgubGluZUNhcChsaW5lQ2FwKTtcbn07XG5jb25zdCBzZXRMaW5lRGFzaCA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUucHJvcHMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoISgnc3Ryb2tlRGFzaGFycmF5JyBpbiBub2RlLnByb3BzKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHZhbHVlID0gbm9kZS5wcm9wcz8uc3Ryb2tlRGFzaGFycmF5IHx8IG51bGw7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBjaGVjayB0aGlzIHdvcmtzIGFzIGV4cGVjdGVkXG4gICAgaWYgKHZhbHVlKVxuICAgICAgICBjdHguZGFzaCh2YWx1ZS5zcGxpdCgvW1xccyxdKy8pLm1hcChOdW1iZXIpKTtcbn07XG5jb25zdCBoYXNMaW5lYXJHcmFkaWVudEZpbGwgPSAobm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5wcm9wcylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdmaWxsJyBpbiBub2RlLnByb3BzKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2Ygbm9kZS5wcm9wcy5maWxsID09PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBub2RlLnByb3BzLmZpbGw/LnR5cGUgPT09IFAuTGluZWFyR3JhZGllbnQ7XG59O1xuY29uc3QgaGFzUmFkaWFsR3JhZGllbnRGaWxsID0gKG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUucHJvcHMpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnZmlsbCcgaW4gbm9kZS5wcm9wcykpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIG5vZGUucHJvcHMuZmlsbCA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gbm9kZS5wcm9wcy5maWxsPy50eXBlID09PSBQLlJhZGlhbEdyYWRpZW50O1xufTtcbmZ1bmN0aW9uIG11bHRpcGx5TWF0cmljZXMobTEsIG0yKSB7XG4gICAgY29uc3QgYSA9IG0xWzBdICogbTJbMF0gKyBtMVsyXSAqIG0yWzFdO1xuICAgIGNvbnN0IGIgPSBtMVsxXSAqIG0yWzBdICsgbTFbM10gKiBtMlsxXTtcbiAgICBjb25zdCBjID0gbTFbMF0gKiBtMlsyXSArIG0xWzJdICogbTJbM107XG4gICAgY29uc3QgZCA9IG0xWzFdICogbTJbMl0gKyBtMVszXSAqIG0yWzNdO1xuICAgIGNvbnN0IGUgPSBtMVswXSAqIG0yWzRdICsgbTFbMl0gKiBtMls1XSArIG0xWzRdO1xuICAgIGNvbnN0IGYgPSBtMVsxXSAqIG0yWzRdICsgbTFbM10gKiBtMls1XSArIG0xWzVdO1xuICAgIHJldHVybiBbYSwgYiwgYywgZCwgZSwgZl07XG59XG5jb25zdCB0cmFuc2Zvcm1HcmFkaWVudCA9IChncmFkLCB0cmFuc2Zvcm1zLCBiYm94LCB1bml0cykgPT4ge1xuICAgIGNvbnN0IG1hdHJpY2VzID0gdHJhbnNmb3Jtcy5tYXAoKHRyYW5zZm9ybSkgPT4ge1xuICAgICAgICBzd2l0Y2ggKHRyYW5zZm9ybS5vcGVyYXRpb24pIHtcbiAgICAgICAgICAgIGNhc2UgJ3NjYWxlJzoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdHJhbnNmb3JtLnZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBbdmFsdWVbMF0sIDAsIDAsIHZhbHVlWzFdLCAwLCAwXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ3RyYW5zbGF0ZSc6IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybS52YWx1ZTtcbiAgICAgICAgICAgICAgICBsZXQgeCA9IHZhbHVlWzBdIHx8IDA7XG4gICAgICAgICAgICAgICAgbGV0IHkgPSB2YWx1ZVsxXSB8fCAwO1xuICAgICAgICAgICAgICAgIGlmICh1bml0cyA9PT0gJ29iamVjdEJvdW5kaW5nQm94Jykge1xuICAgICAgICAgICAgICAgICAgICB4ID0gKGJib3hbMl0gLSBiYm94WzBdKSAqIHg7XG4gICAgICAgICAgICAgICAgICAgIHkgPSAoYmJveFszXSAtIGJib3hbMV0pICogeTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsxLCAwLCAwLCAxLCB4LCB5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ3JvdGF0ZSc6IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybS52YWx1ZTtcbiAgICAgICAgICAgICAgICBjb25zdCBjb3MgPSBNYXRoLmNvcyh2YWx1ZVswXSk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2luID0gTWF0aC5zaW4odmFsdWVbMF0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBbY29zLCBzaW4sIC1zaW4sIGNvcywgMCwgMF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXNlICdza2V3Jzoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdHJhbnNmb3JtLnZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBbMSwgTWF0aC50YW4odmFsdWVbMF0pLCBNYXRoLnRhbih2YWx1ZVsxXSksIDEsIDAsIDBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAnbWF0cml4Jzoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdHJhbnNmb3JtLnZhbHVlO1xuICAgICAgICAgICAgICAgIGxldCB4ID0gdmFsdWVbNF0gfHwgMDtcbiAgICAgICAgICAgICAgICBsZXQgeSA9IHZhbHVlWzVdIHx8IDA7XG4gICAgICAgICAgICAgICAgaWYgKHVuaXRzID09PSAnb2JqZWN0Qm91bmRpbmdCb3gnKSB7XG4gICAgICAgICAgICAgICAgICAgIHggPSAoYmJveFsyXSAtIGJib3hbMF0pICogeDtcbiAgICAgICAgICAgICAgICAgICAgeSA9IChiYm94WzNdIC0gYmJveFsxXSkgKiB5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gW3ZhbHVlWzBdLCB2YWx1ZVsxXSwgdmFsdWVbMl0sIHZhbHVlWzNdLCB4LCB5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsxLCAwLCAwLCAxLCAwLCAwXTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IG1hdHJpeCA9IG1hdHJpY2VzLnJlZHVjZShtdWx0aXBseU1hdHJpY2VzLCBbMSwgMCwgMCwgMSwgMCwgMF0pO1xuICAgIGdyYWQuc2V0VHJhbnNmb3JtKC4uLm1hdHJpeCk7XG59O1xuLy8gTWF0aCBzaW1wbGlmaWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2Rldm9uZ292ZXR0L3N2Z2tpdC9ibG9iL21hc3Rlci9zcmMvZWxlbWVudHMvU1ZHR3JhZGllbnQuanMjTDEwNFxuY29uc3Qgc2V0TGluZWFyR3JhZGllbnRGaWxsID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5wcm9wcylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghKCdmaWxsJyBpbiBub2RlLnByb3BzKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGJib3ggPSBnZXRCb3VuZGluZ0JveChub2RlKTtcbiAgICBjb25zdCBncmFkaWVudCA9IG5vZGUucHJvcHM/LmZpbGw7XG4gICAgaWYgKCFncmFkaWVudClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHVuaXRzID0gZ3JhZGllbnQucHJvcHMuZ3JhZGllbnRVbml0cyB8fCAnb2JqZWN0Qm91bmRpbmdCb3gnO1xuICAgIGNvbnN0IHRyYW5zZm9ybXMgPSBncmFkaWVudC5wcm9wcy5ncmFkaWVudFRyYW5zZm9ybSB8fCBbXTtcbiAgICBsZXQgeDEgPSBncmFkaWVudC5wcm9wcy54MSB8fCAwO1xuICAgIGxldCB5MSA9IGdyYWRpZW50LnByb3BzLnkxIHx8IDA7XG4gICAgbGV0IHgyID0gZ3JhZGllbnQucHJvcHMueDIgfHwgMTtcbiAgICBsZXQgeTIgPSBncmFkaWVudC5wcm9wcy55MiB8fCAwO1xuICAgIGlmICh1bml0cyA9PT0gJ29iamVjdEJvdW5kaW5nQm94Jykge1xuICAgICAgICBjb25zdCBtMCA9IGJib3hbMl0gLSBiYm94WzBdO1xuICAgICAgICBjb25zdCBtMyA9IGJib3hbM10gLSBiYm94WzFdO1xuICAgICAgICBjb25zdCBtNCA9IGJib3hbMF07XG4gICAgICAgIGNvbnN0IG01ID0gYmJveFsxXTtcbiAgICAgICAgeDEgPSBtMCAqIHgxICsgbTQ7XG4gICAgICAgIHkxID0gbTMgKiB5MSArIG01O1xuICAgICAgICB4MiA9IG0wICogeDIgKyBtNDtcbiAgICAgICAgeTIgPSBtMyAqIHkyICsgbTU7XG4gICAgfVxuICAgIGNvbnN0IGdyYWQgPSBjdHgubGluZWFyR3JhZGllbnQoeDEsIHkxLCB4MiwgeTIpO1xuICAgIHRyYW5zZm9ybUdyYWRpZW50KGdyYWQsIHRyYW5zZm9ybXMsIGJib3gsIHVuaXRzKTtcbiAgICBncmFkaWVudC5jaGlsZHJlbj8uZm9yRWFjaCgoc3RvcCkgPT4ge1xuICAgICAgICBncmFkLnN0b3Aoc3RvcC5wcm9wcy5vZmZzZXQsIHN0b3AucHJvcHMuc3RvcENvbG9yLCBzdG9wLnByb3BzLnN0b3BPcGFjaXR5KTtcbiAgICB9KTtcbiAgICBjdHguZmlsbChncmFkKTtcbn07XG4vLyBNYXRoIHNpbXBsaWZpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZGV2b25nb3ZldHQvc3Zna2l0L2Jsb2IvbWFzdGVyL3NyYy9lbGVtZW50cy9TVkdHcmFkaWVudC5qcyNMMTU1XG5jb25zdCBzZXRSYWRpYWxHcmFkaWVudEZpbGwgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlLnByb3BzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCEoJ2ZpbGwnIGluIG5vZGUucHJvcHMpKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgYmJveCA9IGdldEJvdW5kaW5nQm94KG5vZGUpO1xuICAgIGNvbnN0IGdyYWRpZW50ID0gbm9kZS5wcm9wcz8uZmlsbDtcbiAgICBpZiAoIWdyYWRpZW50KVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgdW5pdHMgPSBncmFkaWVudC5wcm9wcy5ncmFkaWVudFVuaXRzIHx8ICdvYmplY3RCb3VuZGluZ0JveCc7XG4gICAgY29uc3QgdHJhbnNmb3JtcyA9IGdyYWRpZW50LnByb3BzLmdyYWRpZW50VHJhbnNmb3JtIHx8IFtdO1xuICAgIGxldCByID0gZ3JhZGllbnQucHJvcHMuciB8fCAwLjU7XG4gICAgbGV0IGN4ID0gZ3JhZGllbnQucHJvcHMuY3ggfHwgMC41O1xuICAgIGxldCBjeSA9IGdyYWRpZW50LnByb3BzLmN5IHx8IDAuNTtcbiAgICBsZXQgZnggPSBncmFkaWVudC5wcm9wcy5meCB8fCBjeDtcbiAgICBsZXQgZnkgPSBncmFkaWVudC5wcm9wcy5meSB8fCBjeTtcbiAgICBpZiAodW5pdHMgPT09ICdvYmplY3RCb3VuZGluZ0JveCcpIHtcbiAgICAgICAgY29uc3QgbTAgPSBiYm94WzJdIC0gYmJveFswXTtcbiAgICAgICAgY29uc3QgbTMgPSBiYm94WzNdIC0gYmJveFsxXTtcbiAgICAgICAgY29uc3QgbTQgPSBiYm94WzBdO1xuICAgICAgICBjb25zdCBtNSA9IGJib3hbMV07XG4gICAgICAgIHIgPSByICogbTA7XG4gICAgICAgIGN4ID0gbTAgKiBjeCArIG00O1xuICAgICAgICBjeSA9IG0zICogY3kgKyBtNTtcbiAgICAgICAgZnggPSBtMCAqIGZ4ICsgbTQ7XG4gICAgICAgIGZ5ID0gbTMgKiBmeSArIG01O1xuICAgIH1cbiAgICBjb25zdCBncmFkID0gY3R4LnJhZGlhbEdyYWRpZW50KGN4LCBjeSwgMCwgZngsIGZ5LCByKTtcbiAgICB0cmFuc2Zvcm1HcmFkaWVudChncmFkLCB0cmFuc2Zvcm1zLCBiYm94LCB1bml0cyk7XG4gICAgZ3JhZGllbnQuY2hpbGRyZW4/LmZvckVhY2goKHN0b3ApID0+IHtcbiAgICAgICAgZ3JhZC5zdG9wKHN0b3AucHJvcHMub2Zmc2V0LCBzdG9wLnByb3BzLnN0b3BDb2xvciwgc3RvcC5wcm9wcy5zdG9wT3BhY2l0eSk7XG4gICAgfSk7XG4gICAgY3R4LmZpbGwoZ3JhZCk7XG59O1xuY29uc3Qgc2V0RmlsbENvbG9yID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5wcm9wcylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghKCdmaWxsJyBpbiBub2RlLnByb3BzKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGZpbGxDb2xvciA9IG5vZGUucHJvcHM/LmZpbGw7XG4gICAgaWYgKGZpbGxDb2xvcilcbiAgICAgICAgY3R4LmZpbGxDb2xvcihmaWxsQ29sb3IpO1xufTtcbmNvbnN0IHNldEZpbGwgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKGhhc0xpbmVhckdyYWRpZW50RmlsbChub2RlKSlcbiAgICAgICAgcmV0dXJuIHNldExpbmVhckdyYWRpZW50RmlsbChjdHgsIG5vZGUpO1xuICAgIGlmIChoYXNSYWRpYWxHcmFkaWVudEZpbGwobm9kZSkpXG4gICAgICAgIHJldHVybiBzZXRSYWRpYWxHcmFkaWVudEZpbGwoY3R4LCBub2RlKTtcbiAgICByZXR1cm4gc2V0RmlsbENvbG9yKGN0eCwgbm9kZSk7XG59O1xuY29uc3QgZHJhdyA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBjb25zdCBwcm9wcyA9IG5vZGUucHJvcHMgfHwge307XG4gICAgaWYgKCdmaWxsJyBpbiBwcm9wcyAmJiAnc3Ryb2tlJyBpbiBwcm9wcyAmJiBwcm9wcy5maWxsICYmIHByb3BzLnN0cm9rZSkge1xuICAgICAgICBjdHguZmlsbEFuZFN0cm9rZShwcm9wcy5maWxsUnVsZSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCdmaWxsJyBpbiBwcm9wcyAmJiBwcm9wcy5maWxsKSB7XG4gICAgICAgIGN0eC5maWxsKHByb3BzLmZpbGxSdWxlKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoJ3N0cm9rZScgaW4gcHJvcHMgJiYgcHJvcHMuc3Ryb2tlKSB7XG4gICAgICAgIGN0eC5zdHJva2UoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGN0eC5zYXZlKCk7XG4gICAgICAgIGN0eC5vcGFjaXR5KDApO1xuICAgICAgICBjdHguZmlsbChudWxsKTtcbiAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICB9XG59O1xuY29uc3Qgbm9vcCA9ICgpID0+IHsgfTtcbmNvbnN0IHJlbmRlckZucyQxID0ge1xuICAgIFtQLlRzcGFuXTogbm9vcCxcbiAgICBbUC5UZXh0SW5zdGFuY2VdOiBub29wLFxuICAgIFtQLlBhdGhdOiByZW5kZXJQYXRoLFxuICAgIFtQLlJlY3RdOiByZW5kZXJSZWN0LFxuICAgIFtQLkxpbmVdOiByZW5kZXJMaW5lJDEsXG4gICAgW1AuR106IHJlbmRlckdyb3VwLFxuICAgIFtQLlRleHRdOiByZW5kZXJTdmdUZXh0LFxuICAgIFtQLkNpcmNsZV06IHJlbmRlckNpcmNsZSxcbiAgICBbUC5JbWFnZV06IHJlbmRlckltYWdlJDEsXG4gICAgW1AuRWxsaXBzZV06IHJlbmRlckVsbGlwc2UsXG4gICAgW1AuUG9seWdvbl06IHJlbmRlclBvbHlnb24sXG4gICAgW1AuUG9seWxpbmVdOiByZW5kZXJQb2x5bGluZSxcbn07XG5jb25zdCByZW5kZXJOb2RlJDEgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgY29uc3QgcmVuZGVyRm4gPSByZW5kZXJGbnMkMVtub2RlLnR5cGVdO1xuICAgIGlmIChyZW5kZXJGbikge1xuICAgICAgICByZW5kZXJGbihjdHgsIG5vZGUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBTVkcgbm9kZSBvZiB0eXBlICR7bm9kZS50eXBlfSBpcyBub3QgY3VycmVudGx5IHN1cHBvcnRlZGApO1xuICAgIH1cbn07XG5jb25zdCBkcmF3Tm9kZSA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBzZXRMaW5lQ2FwKGN0eCwgbm9kZSk7XG4gICAgc2V0TGluZURhc2goY3R4LCBub2RlKTtcbiAgICBzZXRMaW5lSm9pbihjdHgsIG5vZGUpO1xuICAgIHNldFN0cm9rZVdpZHRoKGN0eCwgbm9kZSk7XG4gICAgc2V0U3Ryb2tlQ29sb3IoY3R4LCBub2RlKTtcbiAgICBzZXRGaWxsKGN0eCwgbm9kZSk7XG4gICAgc2V0U3Ryb2tlT3BhY2l0eShjdHgsIG5vZGUpO1xuICAgIHNldEZpbGxPcGFjaXR5KGN0eCwgbm9kZSk7XG4gICAgc2V0T3BhY2l0eShjdHgsIG5vZGUpO1xuICAgIGFwcGx5VHJhbnNmb3JtYXRpb25zKGN0eCwgbm9kZSk7XG4gICAgcmVuZGVyTm9kZSQxKGN0eCwgbm9kZSk7XG4gICAgZHJhdyhjdHgsIG5vZGUpO1xufTtcbmNvbnN0IGNsaXBQYXRoID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5wcm9wcylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghKCdjbGlwUGF0aCcgaW4gbm9kZS5wcm9wcykpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB2YWx1ZSA9IG5vZGUucHJvcHMuY2xpcFBhdGg7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkcmVuID0gdmFsdWUuY2hpbGRyZW4gfHwgW107XG4gICAgICAgIGNoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiByZW5kZXJOb2RlJDEoY3R4LCBjaGlsZCkpO1xuICAgICAgICBjdHguY2xpcCgpO1xuICAgIH1cbn07XG5jb25zdCBkcmF3Q2hpbGRyZW4gPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuIHx8IFtdO1xuICAgIGNoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICAgIGN0eC5zYXZlKCk7XG4gICAgICAgIGNsaXBQYXRoKGN0eCwgY2hpbGQpO1xuICAgICAgICBkcmF3Tm9kZShjdHgsIGNoaWxkKTtcbiAgICAgICAgZHJhd0NoaWxkcmVuKGN0eCwgY2hpbGQpO1xuICAgICAgICBjdHgucmVzdG9yZSgpO1xuICAgIH0pO1xufTtcbmNvbnN0IHJlc29sdmVBc3BlY3RSYXRpbyA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSBub2RlLmJveDtcbiAgICBjb25zdCB7IHZpZXdCb3gsIHByZXNlcnZlQXNwZWN0UmF0aW8gfSA9IG5vZGUucHJvcHM7XG4gICAgY29uc3QgeyBtZWV0T3JTbGljZSA9ICdtZWV0JywgYWxpZ24gPSAneE1pZFlNaWQnIH0gPSBwcmVzZXJ2ZUFzcGVjdFJhdGlvIHx8IHt9O1xuICAgIGlmICh2aWV3Qm94ID09IG51bGwgfHwgd2lkdGggPT0gbnVsbCB8fCBoZWlnaHQgPT0gbnVsbClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHggPSB2aWV3Qm94Py5taW5YIHx8IDA7XG4gICAgY29uc3QgeSA9IHZpZXdCb3g/Lm1pblkgfHwgMDtcbiAgICBjb25zdCBsb2dpY2FsV2lkdGggPSB2aWV3Qm94Py5tYXhYIHx8IHdpZHRoO1xuICAgIGNvbnN0IGxvZ2ljYWxIZWlnaHQgPSB2aWV3Qm94Py5tYXhZIHx8IGhlaWdodDtcbiAgICBjb25zdCBsb2dpY2FsUmF0aW8gPSBsb2dpY2FsV2lkdGggLyBsb2dpY2FsSGVpZ2h0O1xuICAgIGNvbnN0IHBoeXNpY2FsUmF0aW8gPSB3aWR0aCAvIGhlaWdodDtcbiAgICBjb25zdCBzY2FsZVggPSB3aWR0aCAvIGxvZ2ljYWxXaWR0aDtcbiAgICBjb25zdCBzY2FsZVkgPSBoZWlnaHQgLyBsb2dpY2FsSGVpZ2h0O1xuICAgIGlmIChhbGlnbiA9PT0gJ25vbmUnKSB7XG4gICAgICAgIGN0eC5zY2FsZShzY2FsZVgsIHNjYWxlWSk7XG4gICAgICAgIGN0eC50cmFuc2xhdGUoLXgsIC15KTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoKGxvZ2ljYWxSYXRpbyA8IHBoeXNpY2FsUmF0aW8gJiYgbWVldE9yU2xpY2UgPT09ICdtZWV0JykgfHxcbiAgICAgICAgKGxvZ2ljYWxSYXRpbyA+PSBwaHlzaWNhbFJhdGlvICYmIG1lZXRPclNsaWNlID09PSAnc2xpY2UnKSkge1xuICAgICAgICBjdHguc2NhbGUoc2NhbGVZLCBzY2FsZVkpO1xuICAgICAgICBzd2l0Y2ggKGFsaWduKSB7XG4gICAgICAgICAgICBjYXNlICd4TWluWU1pbic6XG4gICAgICAgICAgICBjYXNlICd4TWluWU1pZCc6XG4gICAgICAgICAgICBjYXNlICd4TWluWU1heCc6XG4gICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgteCwgLXkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAneE1pZFlNaW4nOlxuICAgICAgICAgICAgY2FzZSAneE1pZFlNaWQnOlxuICAgICAgICAgICAgY2FzZSAneE1pZFlNYXgnOlxuICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoLXggLSAobG9naWNhbFdpZHRoIC0gKHdpZHRoICogbG9naWNhbEhlaWdodCkgLyBoZWlnaHQpIC8gMiwgLXkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKC14IC0gKGxvZ2ljYWxXaWR0aCAtICh3aWR0aCAqIGxvZ2ljYWxIZWlnaHQpIC8gaGVpZ2h0KSwgLXkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjdHguc2NhbGUoc2NhbGVYLCBzY2FsZVgpO1xuICAgICAgICBzd2l0Y2ggKGFsaWduKSB7XG4gICAgICAgICAgICBjYXNlICd4TWluWU1pbic6XG4gICAgICAgICAgICBjYXNlICd4TWlkWU1pbic6XG4gICAgICAgICAgICBjYXNlICd4TWF4WU1pbic6XG4gICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgteCwgLXkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAneE1pbllNaWQnOlxuICAgICAgICAgICAgY2FzZSAneE1pZFlNaWQnOlxuICAgICAgICAgICAgY2FzZSAneE1heFlNaWQnOlxuICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoLXgsIC15IC0gKGxvZ2ljYWxIZWlnaHQgLSAoaGVpZ2h0ICogbG9naWNhbFdpZHRoKSAvIHdpZHRoKSAvIDIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKC14LCAteSAtIChsb2dpY2FsSGVpZ2h0IC0gKGhlaWdodCAqIGxvZ2ljYWxXaWR0aCkgLyB3aWR0aCkpO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IG1vdmVUb09yaWdpbiA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgeyB0b3AsIGxlZnQgfSA9IG5vZGUuYm94O1xuICAgIGNvbnN0IHBhZGRpbmdMZWZ0ID0gbm9kZS5ib3gucGFkZGluZ0xlZnQgfHwgMDtcbiAgICBjb25zdCBwYWRkaW5nVG9wID0gbm9kZS5ib3gucGFkZGluZ1RvcCB8fCAwO1xuICAgIGN0eC50cmFuc2xhdGUobGVmdCArIHBhZGRpbmdMZWZ0LCB0b3AgKyBwYWRkaW5nVG9wKTtcbn07XG5jb25zdCByZW5kZXJTdmcgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjbGlwTm9kZShjdHgsIG5vZGUpO1xuICAgIG1vdmVUb09yaWdpbihjdHgsIG5vZGUpO1xuICAgIHJlc29sdmVBc3BlY3RSYXRpbyhjdHgsIG5vZGUpO1xuICAgIGRyYXdDaGlsZHJlbihjdHgsIG5vZGUpO1xuICAgIGN0eC5yZXN0b3JlKCk7XG59O1xuXG5jb25zdCBibGFjayA9IHsgdmFsdWU6ICcjMDAwJywgb3BhY2l0eTogMSB9O1xuLy8gVE9ETzogcGFyc2UgdG8gbnVtYmVyW10gaW4gbGF5b3V0IHRvIGF2b2lkIHRoaXMgc3RlcFxuY29uc3QgcGFyc2VDb2xvciA9IChoZXgpID0+IHtcbiAgICBpZiAoIWhleClcbiAgICAgICAgcmV0dXJuIGJsYWNrO1xuICAgIGNvbnN0IHBhcnNlZCA9IGNvbG9yU3RyaW5nLmdldChoZXgpO1xuICAgIGlmICghcGFyc2VkKVxuICAgICAgICByZXR1cm4gYmxhY2s7XG4gICAgY29uc3QgdmFsdWUgPSBjb2xvclN0cmluZy50by5oZXgocGFyc2VkLnZhbHVlLnNsaWNlKDAsIDMpKTtcbiAgICBjb25zdCBvcGFjaXR5ID0gcGFyc2VkLnZhbHVlWzNdO1xuICAgIHJldHVybiB7IHZhbHVlLCBvcGFjaXR5IH07XG59O1xuXG5jb25zdCBERVNUX1JFR0VYUCA9IC9eIy4rLztcbmNvbnN0IGlzU3JjSWQkMSA9IChzcmMpID0+IHNyYy5tYXRjaChERVNUX1JFR0VYUCk7XG5jb25zdCByZW5kZXJBdHRhY2htZW50ID0gKGN0eCwgYXR0YWNobWVudCkgPT4ge1xuICAgIGNvbnN0IHsgeE9mZnNldCA9IDAsIHlPZmZzZXQgPSAwLCB3aWR0aCwgaGVpZ2h0LCBpbWFnZSB9ID0gYXR0YWNobWVudDtcbiAgICBjdHgudHJhbnNsYXRlKC13aWR0aCArIHhPZmZzZXQsIC1oZWlnaHQgKyB5T2Zmc2V0KTtcbiAgICBjdHguaW1hZ2UoaW1hZ2UsIDAsIDAsIHtcbiAgICAgICAgZml0OiBbd2lkdGgsIGhlaWdodF0sXG4gICAgICAgIGFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgdmFsaWduOiAnYm90dG9tJyxcbiAgICB9KTtcbn07XG5jb25zdCByZW5kZXJBdHRhY2htZW50cyA9IChjdHgsIHJ1bikgPT4ge1xuICAgIGlmICghcnVuLmdseXBocylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghcnVuLnBvc2l0aW9ucylcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGZvbnQgPSBydW4uYXR0cmlidXRlcy5mb250Py5bMF07XG4gICAgaWYgKCFmb250KVxuICAgICAgICByZXR1cm47XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjb25zdCBzcGFjZSA9IGZvbnQuZ2x5cGhGb3JDb2RlUG9pbnQoMHgyMCk7XG4gICAgY29uc3Qgb2JqZWN0UmVwbGFjZW1lbnQgPSBmb250LmdseXBoRm9yQ29kZVBvaW50KDB4ZmZmYyk7XG4gICAgbGV0IGF0dGFjaG1lbnRBZHZhbmNlID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJ1bi5nbHlwaHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3QgcG9zaXRpb24gPSBydW4ucG9zaXRpb25zW2ldO1xuICAgICAgICBjb25zdCBnbHlwaCA9IHJ1bi5nbHlwaHNbaV07XG4gICAgICAgIGF0dGFjaG1lbnRBZHZhbmNlICs9IHBvc2l0aW9uLnhBZHZhbmNlIHx8IDA7XG4gICAgICAgIGlmIChnbHlwaC5pZCA9PT0gb2JqZWN0UmVwbGFjZW1lbnQuaWQgJiYgcnVuLmF0dHJpYnV0ZXMuYXR0YWNobWVudCkge1xuICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZShhdHRhY2htZW50QWR2YW5jZSwgcG9zaXRpb24ueU9mZnNldCB8fCAwKTtcbiAgICAgICAgICAgIHJlbmRlckF0dGFjaG1lbnQoY3R4LCBydW4uYXR0cmlidXRlcy5hdHRhY2htZW50KTtcbiAgICAgICAgICAgIHJ1bi5nbHlwaHNbaV0gPSBzcGFjZTtcbiAgICAgICAgICAgIGF0dGFjaG1lbnRBZHZhbmNlID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjdHgucmVzdG9yZSgpO1xufTtcbmNvbnN0IHJlbmRlclJ1biA9IChjdHgsIHJ1bikgPT4ge1xuICAgIGlmICghcnVuLmdseXBocylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghcnVuLnBvc2l0aW9ucylcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGZvbnQgPSBydW4uYXR0cmlidXRlcy5mb250Py5bMF07XG4gICAgaWYgKCFmb250KVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgeyBmb250U2l6ZSwgbGluayB9ID0gcnVuLmF0dHJpYnV0ZXM7XG4gICAgY29uc3QgY29sb3IgPSBwYXJzZUNvbG9yKHJ1bi5hdHRyaWJ1dGVzLmNvbG9yKTtcbiAgICBjb25zdCBvcGFjaXR5ID0gaXNOaWwocnVuLmF0dHJpYnV0ZXMub3BhY2l0eSlcbiAgICAgICAgPyBjb2xvci5vcGFjaXR5XG4gICAgICAgIDogcnVuLmF0dHJpYnV0ZXMub3BhY2l0eTtcbiAgICBjb25zdCB7IGhlaWdodCA9IDAsIGRlc2NlbnQgPSAwLCB4QWR2YW5jZSA9IDAgfSA9IHJ1bjtcbiAgICBjdHguZmlsbENvbG9yKGNvbG9yLnZhbHVlKTtcbiAgICBjdHguZmlsbE9wYWNpdHkob3BhY2l0eSk7XG4gICAgaWYgKGxpbmspIHtcbiAgICAgICAgaWYgKGlzU3JjSWQkMShsaW5rKSkge1xuICAgICAgICAgICAgY3R4LmdvVG8oMCwgLWhlaWdodCAtIGRlc2NlbnQsIHhBZHZhbmNlLCBoZWlnaHQsIGxpbmsuc2xpY2UoMSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY3R4LmxpbmsoMCwgLWhlaWdodCAtIGRlc2NlbnQsIHhBZHZhbmNlLCBoZWlnaHQsIGxpbmspO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlckF0dGFjaG1lbnRzKGN0eCwgcnVuKTtcbiAgICBjdHguZm9udChmb250LnR5cGUgPT09ICdTVEFOREFSRCcgPyBmb250LmZ1bGxOYW1lIDogZm9udCwgZm9udFNpemUpO1xuICAgIHRyeSB7XG4gICAgICAgIHJlbmRlckdseXBocyhjdHgsIHJ1bi5nbHlwaHMsIHJ1bi5wb3NpdGlvbnMsIDAsIDApO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgICBjdHgudHJhbnNsYXRlKHhBZHZhbmNlLCAwKTtcbn07XG5jb25zdCByZW5kZXJCYWNrZ3JvdW5kJDEgPSAoY3R4LCByZWN0LCBiYWNrZ3JvdW5kQ29sb3IpID0+IHtcbiAgICBjb25zdCBjb2xvciA9IHBhcnNlQ29sb3IoYmFja2dyb3VuZENvbG9yKTtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGN0eC5maWxsT3BhY2l0eShjb2xvci5vcGFjaXR5KTtcbiAgICBjdHgucmVjdChyZWN0LngsIHJlY3QueSwgcmVjdC53aWR0aCwgcmVjdC5oZWlnaHQpO1xuICAgIGN0eC5maWxsKGNvbG9yLnZhbHVlKTtcbiAgICBjdHgucmVzdG9yZSgpO1xufTtcbmNvbnN0IHJlbmRlckRlY29yYXRpb25MaW5lID0gKGN0eCwgZGVjb3JhdGlvbkxpbmUpID0+IHtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGN0eC5saW5lV2lkdGgoZGVjb3JhdGlvbkxpbmUucmVjdC5oZWlnaHQpO1xuICAgIGN0eC5zdHJva2VPcGFjaXR5KGRlY29yYXRpb25MaW5lLm9wYWNpdHkpO1xuICAgIGlmICgvZGFzaGVkLy50ZXN0KGRlY29yYXRpb25MaW5lLnN0eWxlKSkge1xuICAgICAgICBjdHguZGFzaCgzICogZGVjb3JhdGlvbkxpbmUucmVjdC5oZWlnaHQsIHt9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoL2RvdHRlZC8udGVzdChkZWNvcmF0aW9uTGluZS5zdHlsZSkpIHtcbiAgICAgICAgY3R4LmRhc2goZGVjb3JhdGlvbkxpbmUucmVjdC5oZWlnaHQsIHt9KTtcbiAgICB9XG4gICAgaWYgKC93YXZ5Ly50ZXN0KGRlY29yYXRpb25MaW5lLnN0eWxlKSkge1xuICAgICAgICBjb25zdCBkaXN0ID0gTWF0aC5tYXgoMiwgZGVjb3JhdGlvbkxpbmUucmVjdC5oZWlnaHQpO1xuICAgICAgICBsZXQgc3RlcCA9IDEuMSAqIGRpc3Q7XG4gICAgICAgIGNvbnN0IHN0ZXBDb3VudCA9IE1hdGguZmxvb3IoZGVjb3JhdGlvbkxpbmUucmVjdC53aWR0aCAvICgyICogc3RlcCkpO1xuICAgICAgICAvLyBBZGp1c3Qgc3RlcCB0byBmaWxsIGVudGlyZSB3aWR0aFxuICAgICAgICBjb25zdCByZW1haW5pbmdXaWR0aCA9IGRlY29yYXRpb25MaW5lLnJlY3Qud2lkdGggLSBzdGVwQ291bnQgKiAyICogc3RlcDtcbiAgICAgICAgY29uc3QgYWRqdXN0bWVudCA9IHJlbWFpbmluZ1dpZHRoIC8gc3RlcENvdW50IC8gMjtcbiAgICAgICAgc3RlcCArPSBhZGp1c3RtZW50O1xuICAgICAgICBjb25zdCBjcDF5ID0gZGVjb3JhdGlvbkxpbmUucmVjdC55ICsgZGlzdDtcbiAgICAgICAgY29uc3QgY3AyeSA9IGRlY29yYXRpb25MaW5lLnJlY3QueSAtIGRpc3Q7XG4gICAgICAgIGxldCB7IHggfSA9IGRlY29yYXRpb25MaW5lLnJlY3Q7XG4gICAgICAgIGN0eC5tb3ZlVG8oZGVjb3JhdGlvbkxpbmUucmVjdC54LCBkZWNvcmF0aW9uTGluZS5yZWN0LnkpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ZXBDb3VudDsgaSArPSAxKSB7XG4gICAgICAgICAgICBjdHguYmV6aWVyQ3VydmVUbyh4ICsgc3RlcCwgY3AxeSwgeCArIHN0ZXAsIGNwMnksIHggKyAyICogc3RlcCwgZGVjb3JhdGlvbkxpbmUucmVjdC55KTtcbiAgICAgICAgICAgIHggKz0gMiAqIHN0ZXA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGN0eC5tb3ZlVG8oZGVjb3JhdGlvbkxpbmUucmVjdC54LCBkZWNvcmF0aW9uTGluZS5yZWN0LnkpO1xuICAgICAgICBjdHgubGluZVRvKGRlY29yYXRpb25MaW5lLnJlY3QueCArIGRlY29yYXRpb25MaW5lLnJlY3Qud2lkdGgsIGRlY29yYXRpb25MaW5lLnJlY3QueSk7XG4gICAgICAgIGlmICgvZG91YmxlLy50ZXN0KGRlY29yYXRpb25MaW5lLnN0eWxlKSkge1xuICAgICAgICAgICAgY3R4Lm1vdmVUbyhkZWNvcmF0aW9uTGluZS5yZWN0LngsIGRlY29yYXRpb25MaW5lLnJlY3QueSArIGRlY29yYXRpb25MaW5lLnJlY3QuaGVpZ2h0ICogMik7XG4gICAgICAgICAgICBjdHgubGluZVRvKGRlY29yYXRpb25MaW5lLnJlY3QueCArIGRlY29yYXRpb25MaW5lLnJlY3Qud2lkdGgsIGRlY29yYXRpb25MaW5lLnJlY3QueSArIGRlY29yYXRpb25MaW5lLnJlY3QuaGVpZ2h0ICogMik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY3R4LnN0cm9rZShkZWNvcmF0aW9uTGluZS5jb2xvcik7XG4gICAgY3R4LnJlc3RvcmUoKTtcbn07XG5jb25zdCByZW5kZXJMaW5lID0gKGN0eCwgbGluZSkgPT4ge1xuICAgIGlmICghbGluZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBsaW5lQXNjZW50ID0gbGluZS5hc2NlbnQgfHwgMDtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGN0eC50cmFuc2xhdGUobGluZS5ib3gueCwgbGluZS5ib3gueSArIGxpbmVBc2NlbnQpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZS5ydW5zLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IHJ1biA9IGxpbmUucnVuc1tpXTtcbiAgICAgICAgY29uc3QgaXNMYXN0UnVuID0gaSA9PT0gbGluZS5ydW5zLmxlbmd0aCAtIDE7XG4gICAgICAgIGlmIChydW4uYXR0cmlidXRlcy5iYWNrZ3JvdW5kQ29sb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IHhBZHZhbmNlID0gcnVuLnhBZHZhbmNlID8/IDA7XG4gICAgICAgICAgICBjb25zdCBvdmVyZmxvd1JpZ2h0ID0gaXNMYXN0UnVuID8gbGluZS5vdmVyZmxvd1JpZ2h0ID8/IDAgOiAwO1xuICAgICAgICAgICAgY29uc3QgYmFja2dyb3VuZFJlY3QgPSB7XG4gICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICB5OiAtbGluZUFzY2VudCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGxpbmUuYm94LmhlaWdodCxcbiAgICAgICAgICAgICAgICB3aWR0aDogeEFkdmFuY2UgLSBvdmVyZmxvd1JpZ2h0LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJlbmRlckJhY2tncm91bmQkMShjdHgsIGJhY2tncm91bmRSZWN0LCBydW4uYXR0cmlidXRlcy5iYWNrZ3JvdW5kQ29sb3IpO1xuICAgICAgICB9XG4gICAgICAgIHJlbmRlclJ1bihjdHgsIHJ1bik7XG4gICAgfVxuICAgIGN0eC5yZXN0b3JlKCk7XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjdHgudHJhbnNsYXRlKGxpbmUuYm94LngsIGxpbmUuYm94LnkpO1xuICAgIGlmIChsaW5lLmRlY29yYXRpb25MaW5lcykge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmUuZGVjb3JhdGlvbkxpbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBjb25zdCBkZWNvcmF0aW9uTGluZSA9IGxpbmUuZGVjb3JhdGlvbkxpbmVzW2ldO1xuICAgICAgICAgICAgcmVuZGVyRGVjb3JhdGlvbkxpbmUoY3R4LCBkZWNvcmF0aW9uTGluZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY3R4LnJlc3RvcmUoKTtcbn07XG5jb25zdCByZW5kZXJCbG9jayA9IChjdHgsIGJsb2NrKSA9PiB7XG4gICAgYmxvY2suZm9yRWFjaCgobGluZSkgPT4ge1xuICAgICAgICByZW5kZXJMaW5lKGN0eCwgbGluZSk7XG4gICAgfSk7XG59O1xuY29uc3QgcmVuZGVyVGV4dCA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCFub2RlLmxpbmVzKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgeyB0b3AsIGxlZnQgfSA9IG5vZGUuYm94O1xuICAgIGNvbnN0IGJsb2NrcyA9IFtub2RlLmxpbmVzXTtcbiAgICBjb25zdCBwYWRkaW5nVG9wID0gbm9kZS5ib3g/LnBhZGRpbmdUb3AgfHwgMDtcbiAgICBjb25zdCBwYWRkaW5nTGVmdCA9IG5vZGUuYm94Py5wYWRkaW5nTGVmdCB8fCAwO1xuICAgIGNvbnN0IGluaXRpYWxZID0gbm9kZS5saW5lc1swXSA/IG5vZGUubGluZXNbMF0uYm94LnkgOiAwO1xuICAgIGNvbnN0IG9mZnNldFggPSBub2RlLmFsaWduT2Zmc2V0IHx8IDA7XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjdHgudHJhbnNsYXRlKGxlZnQgKyBwYWRkaW5nTGVmdCAtIG9mZnNldFgsIHRvcCArIHBhZGRpbmdUb3AgLSBpbml0aWFsWSk7XG4gICAgYmxvY2tzLmZvckVhY2goKGJsb2NrKSA9PiB7XG4gICAgICAgIHJlbmRlckJsb2NrKGN0eCwgYmxvY2spO1xuICAgIH0pO1xuICAgIGN0eC5yZXN0b3JlKCk7XG59O1xuXG5jb25zdCByZW5kZXJQYWdlID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IG5vZGUuYm94O1xuICAgIGNvbnN0IGRwaSA9IG5vZGUucHJvcHM/LmRwaSB8fCA3MjtcbiAgICBjb25zdCB1c2VyVW5pdCA9IGRwaSAvIDcyO1xuICAgIGN0eC5hZGRQYWdlKHsgc2l6ZTogW3dpZHRoLCBoZWlnaHRdLCBtYXJnaW46IDAsIHVzZXJVbml0IH0pO1xufTtcblxuY29uc3QgcmVuZGVyTm90ZSA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgeyB0b3AsIGxlZnQgfSA9IG5vZGUuYm94O1xuICAgIGNvbnN0IHZhbHVlID0gbm9kZT8uY2hpbGRyZW4/LlswXS52YWx1ZSB8fCAnJztcbiAgICBjb25zdCBjb2xvciA9IG5vZGUuc3R5bGU/LmJhY2tncm91bmRDb2xvcjtcbiAgICBjdHgubm90ZShsZWZ0LCB0b3AsIDAsIDAsIHZhbHVlLCB7IGNvbG9yIH0pO1xufTtcblxuY29uc3QgZW1iZWRJbWFnZSA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBjb25zdCBzcmMgPSBub2RlLmltYWdlLmRhdGE7XG4gICAgbGV0IGltYWdlO1xuICAgIGlmICh0eXBlb2Ygc3JjID09PSAnc3RyaW5nJykge1xuICAgICAgICBpbWFnZSA9IGN0eC5faW1hZ2VSZWdpc3RyeVtzcmNdO1xuICAgIH1cbiAgICBpZiAoIWltYWdlKSB7XG4gICAgICAgIGltYWdlID0gY3R4Lm9wZW5JbWFnZShzcmMpO1xuICAgIH1cbiAgICBpZiAoIWltYWdlLm9iaikge1xuICAgICAgICBpbWFnZS5lbWJlZChjdHgpO1xuICAgIH1cbiAgICByZXR1cm4gaW1hZ2U7XG59O1xuXG5jb25zdCBpc051bWVyaWMgPSAobikgPT4ge1xuICAgIHJldHVybiAhTnVtYmVyLmlzTmFOKHBhcnNlRmxvYXQobikpICYmIE51bWJlci5pc0Zpbml0ZShuKTtcbn07XG5jb25zdCBhcHBseUNvbnRhaW5PYmplY3RGaXQgPSAoY3csIGNoLCBpdywgaWgsIHB4LCBweSkgPT4ge1xuICAgIGNvbnN0IGNyID0gY3cgLyBjaDtcbiAgICBjb25zdCBpciA9IGl3IC8gaWg7XG4gICAgY29uc3QgcHhwID0gbWF0Y2hQZXJjZW50KHB4ID8/IG51bGwpO1xuICAgIGNvbnN0IHB5cCA9IG1hdGNoUGVyY2VudChweSA/PyBudWxsKTtcbiAgICBjb25zdCBweHYgPSBweHAgPyBweHAucGVyY2VudCA6IDAuNTtcbiAgICBjb25zdCBweXYgPSBweXAgPyBweXAucGVyY2VudCA6IDAuNTtcbiAgICBpZiAoY3IgPiBpcikge1xuICAgICAgICBjb25zdCBoZWlnaHQgPSBjaDtcbiAgICAgICAgY29uc3Qgd2lkdGggPSBoZWlnaHQgKiBpcjtcbiAgICAgICAgY29uc3QgeU9mZnNldCA9IGlzTnVtZXJpYyhweSkgPyBweSA6IDA7XG4gICAgICAgIGNvbnN0IHhPZmZzZXQgPSBpc051bWVyaWMocHgpID8gcHggOiAoY3cgLSB3aWR0aCkgKiBweHY7XG4gICAgICAgIHJldHVybiB7IHdpZHRoLCBoZWlnaHQsIHhPZmZzZXQsIHlPZmZzZXQgfTtcbiAgICB9XG4gICAgY29uc3Qgd2lkdGggPSBjdztcbiAgICBjb25zdCBoZWlnaHQgPSB3aWR0aCAvIGlyO1xuICAgIGNvbnN0IHhPZmZzZXQgPSBpc051bWVyaWMocHgpID8gcHggOiAwO1xuICAgIGNvbnN0IHlPZmZzZXQgPSBpc051bWVyaWMocHkpID8gcHkgOiAoY2ggLSBoZWlnaHQpICogcHl2O1xuICAgIHJldHVybiB7IHdpZHRoLCBoZWlnaHQsIHlPZmZzZXQsIHhPZmZzZXQgfTtcbn07XG5jb25zdCBhcHBseU5vbmVPYmplY3RGaXQgPSAoY3csIGNoLCBpdywgaWgsIHB4LCBweSkgPT4ge1xuICAgIGNvbnN0IHdpZHRoID0gaXc7XG4gICAgY29uc3QgaGVpZ2h0ID0gaWg7XG4gICAgY29uc3QgcHhwID0gbWF0Y2hQZXJjZW50KHB4ID8/IG51bGwpO1xuICAgIGNvbnN0IHB5cCA9IG1hdGNoUGVyY2VudChweSA/PyBudWxsKTtcbiAgICBjb25zdCBweHYgPSBweHAgPyBweHAucGVyY2VudCA6IDAuNTtcbiAgICBjb25zdCBweXYgPSBweXAgPyBweXAucGVyY2VudCA6IDAuNTtcbiAgICBjb25zdCB4T2Zmc2V0ID0gaXNOdW1lcmljKHB4KSA/IHB4IDogKGN3IC0gd2lkdGgpICogcHh2O1xuICAgIGNvbnN0IHlPZmZzZXQgPSBpc051bWVyaWMocHkpID8gcHkgOiAoY2ggLSBoZWlnaHQpICogcHl2O1xuICAgIHJldHVybiB7IHdpZHRoLCBoZWlnaHQsIHhPZmZzZXQsIHlPZmZzZXQgfTtcbn07XG5jb25zdCBhcHBseUNvdmVyT2JqZWN0Rml0ID0gKGN3LCBjaCwgaXcsIGloLCBweCwgcHkpID0+IHtcbiAgICBjb25zdCBpciA9IGl3IC8gaWg7XG4gICAgY29uc3QgY3IgPSBjdyAvIGNoO1xuICAgIGNvbnN0IHB4cCA9IG1hdGNoUGVyY2VudChweCA/PyBudWxsKTtcbiAgICBjb25zdCBweXAgPSBtYXRjaFBlcmNlbnQocHkgPz8gbnVsbCk7XG4gICAgY29uc3QgcHh2ID0gcHhwID8gcHhwLnBlcmNlbnQgOiAwLjU7XG4gICAgY29uc3QgcHl2ID0gcHlwID8gcHlwLnBlcmNlbnQgOiAwLjU7XG4gICAgaWYgKGNyID4gaXIpIHtcbiAgICAgICAgY29uc3Qgd2lkdGggPSBjdztcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gd2lkdGggLyBpcjtcbiAgICAgICAgY29uc3QgeE9mZnNldCA9IGlzTnVtZXJpYyhweCkgPyBweCA6IDA7XG4gICAgICAgIGNvbnN0IHlPZmZzZXQgPSBpc051bWVyaWMocHkpID8gcHkgOiAoY2ggLSBoZWlnaHQpICogcHl2O1xuICAgICAgICByZXR1cm4geyB3aWR0aCwgaGVpZ2h0LCB5T2Zmc2V0LCB4T2Zmc2V0IH07XG4gICAgfVxuICAgIGNvbnN0IGhlaWdodCA9IGNoO1xuICAgIGNvbnN0IHdpZHRoID0gaGVpZ2h0ICogaXI7XG4gICAgY29uc3QgeE9mZnNldCA9IGlzTnVtZXJpYyhweCkgPyBweCA6IChjdyAtIHdpZHRoKSAqIHB4djtcbiAgICBjb25zdCB5T2Zmc2V0ID0gaXNOdW1lcmljKHB5KSA/IHB5IDogMDtcbiAgICByZXR1cm4geyB3aWR0aCwgaGVpZ2h0LCB4T2Zmc2V0LCB5T2Zmc2V0IH07XG59O1xuY29uc3QgYXBwbHlTY2FsZURvd25PYmplY3RGaXQgPSAoY3csIGNoLCBpdywgaWgsIHB4LCBweSkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5EaW1lbnNpb24gPSBhcHBseUNvbnRhaW5PYmplY3RGaXQoY3csIGNoLCBpdywgaWgsIHB4LCBweSk7XG4gICAgY29uc3Qgbm9uZURpbWVuc2lvbiA9IGFwcGx5Tm9uZU9iamVjdEZpdChjdywgY2gsIGl3LCBpaCwgcHgsIHB5KTtcbiAgICByZXR1cm4gY29udGFpbkRpbWVuc2lvbi53aWR0aCA8IG5vbmVEaW1lbnNpb24ud2lkdGhcbiAgICAgICAgPyBjb250YWluRGltZW5zaW9uXG4gICAgICAgIDogbm9uZURpbWVuc2lvbjtcbn07XG5jb25zdCBhcHBseUZpbGxPYmplY3RGaXQgPSAoY3csIGNoLCBweCwgcHkpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogY3csXG4gICAgICAgIGhlaWdodDogY2gsXG4gICAgICAgIHhPZmZzZXQ6IG1hdGNoUGVyY2VudChweCA/PyBudWxsKSA/IDAgOiBweCB8fCAwLFxuICAgICAgICB5T2Zmc2V0OiBtYXRjaFBlcmNlbnQocHkgPz8gbnVsbCkgPyAwIDogcHkgfHwgMCxcbiAgICB9O1xufTtcbmNvbnN0IHJlc29sdmVPYmplY3RGaXQgPSAodHlwZSA9ICdmaWxsJywgY3csIGNoLCBpdywgaWgsIHB4LCBweSkgPT4ge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlICdjb250YWluJzpcbiAgICAgICAgICAgIHJldHVybiBhcHBseUNvbnRhaW5PYmplY3RGaXQoY3csIGNoLCBpdywgaWgsIHB4LCBweSk7XG4gICAgICAgIGNhc2UgJ2NvdmVyJzpcbiAgICAgICAgICAgIHJldHVybiBhcHBseUNvdmVyT2JqZWN0Rml0KGN3LCBjaCwgaXcsIGloLCBweCwgcHkpO1xuICAgICAgICBjYXNlICdub25lJzpcbiAgICAgICAgICAgIHJldHVybiBhcHBseU5vbmVPYmplY3RGaXQoY3csIGNoLCBpdywgaWgsIHB4LCBweSk7XG4gICAgICAgIGNhc2UgJ3NjYWxlLWRvd24nOlxuICAgICAgICAgICAgcmV0dXJuIGFwcGx5U2NhbGVEb3duT2JqZWN0Rml0KGN3LCBjaCwgaXcsIGloLCBweCwgcHkpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGFwcGx5RmlsbE9iamVjdEZpdChjdywgY2gsIHB4LCBweSk7XG4gICAgfVxufTtcblxuY29uc3QgZHJhd0ltYWdlID0gKGN0eCwgbm9kZSwgb3B0aW9ucykgPT4ge1xuICAgIGlmICghbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoIW5vZGUuaW1hZ2UpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IGxlZnQsIHRvcCB9ID0gbm9kZS5ib3g7XG4gICAgY29uc3Qgb3BhY2l0eSA9IG5vZGUuc3R5bGU/Lm9wYWNpdHk7XG4gICAgY29uc3Qgb2JqZWN0Rml0ID0gbm9kZS5zdHlsZT8ub2JqZWN0Rml0O1xuICAgIGNvbnN0IG9iamVjdFBvc2l0aW9uWCA9IG5vZGUuc3R5bGU/Lm9iamVjdFBvc2l0aW9uWDtcbiAgICBjb25zdCBvYmplY3RQb3NpdGlvblkgPSBub2RlLnN0eWxlPy5vYmplY3RQb3NpdGlvblk7XG4gICAgY29uc3QgcGFkZGluZ1RvcCA9IG5vZGUuYm94LnBhZGRpbmdUb3AgfHwgMDtcbiAgICBjb25zdCBwYWRkaW5nUmlnaHQgPSBub2RlLmJveC5wYWRkaW5nUmlnaHQgfHwgMDtcbiAgICBjb25zdCBwYWRkaW5nQm90dG9tID0gbm9kZS5ib3gucGFkZGluZ0JvdHRvbSB8fCAwO1xuICAgIGNvbnN0IHBhZGRpbmdMZWZ0ID0gbm9kZS5ib3gucGFkZGluZ0xlZnQgfHwgMDtcbiAgICBjb25zdCBpbWFnZUNhY2hlID0gb3B0aW9ucy5pbWFnZUNhY2hlIHx8IG5ldyBNYXAoKTtcbiAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQsIHhPZmZzZXQsIHlPZmZzZXQgfSA9IHJlc29sdmVPYmplY3RGaXQob2JqZWN0Rml0LCBub2RlLmJveC53aWR0aCAtIHBhZGRpbmdMZWZ0IC0gcGFkZGluZ1JpZ2h0LCBub2RlLmJveC5oZWlnaHQgLSBwYWRkaW5nVG9wIC0gcGFkZGluZ0JvdHRvbSwgbm9kZS5pbWFnZS53aWR0aCwgbm9kZS5pbWFnZS5oZWlnaHQsIG9iamVjdFBvc2l0aW9uWCwgb2JqZWN0UG9zaXRpb25ZKTtcbiAgICBpZiAobm9kZS5pbWFnZS5kYXRhKSB7XG4gICAgICAgIGlmICh3aWR0aCAhPT0gMCAmJiBoZWlnaHQgIT09IDApIHtcbiAgICAgICAgICAgIGNvbnN0IGNhY2hlS2V5ID0gbm9kZS5pbWFnZS5rZXk7XG4gICAgICAgICAgICBjb25zdCBpbWFnZSA9IGltYWdlQ2FjaGUuZ2V0KGNhY2hlS2V5KSB8fCBlbWJlZEltYWdlKGN0eCwgbm9kZSk7XG4gICAgICAgICAgICBpZiAoY2FjaGVLZXkpXG4gICAgICAgICAgICAgICAgaW1hZ2VDYWNoZS5zZXQoY2FjaGVLZXksIGltYWdlKTtcbiAgICAgICAgICAgIGNvbnN0IGltYWdlT3BhY2l0eSA9IGlzTmlsKG9wYWNpdHkpID8gMSA6IG9wYWNpdHk7XG4gICAgICAgICAgICBjdHhcbiAgICAgICAgICAgICAgICAuZmlsbE9wYWNpdHkoaW1hZ2VPcGFjaXR5KVxuICAgICAgICAgICAgICAgIC5pbWFnZShpbWFnZSwgbGVmdCArIHBhZGRpbmdMZWZ0ICsgeE9mZnNldCwgdG9wICsgcGFkZGluZ1RvcCArIHlPZmZzZXQsIHtcbiAgICAgICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgSW1hZ2Ugd2l0aCBzcmMgJyR7SlNPTi5zdHJpbmdpZnkobm9kZS5wcm9wcy5zcmMgfHwgbm9kZS5wcm9wcy5zb3VyY2UpfScgc2tpcHBlZCBkdWUgdG8gaW52YWxpZCBkaW1lbnNpb25zYCk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgcmVuZGVySW1hZ2UgPSAoY3R4LCBub2RlLCBvcHRpb25zKSA9PiB7XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjbGlwTm9kZShjdHgsIG5vZGUpO1xuICAgIGRyYXdJbWFnZShjdHgsIG5vZGUsIG9wdGlvbnMpO1xuICAgIGN0eC5yZXN0b3JlKCk7XG59O1xuXG5jb25zdCBDT05URU5UX0NPTE9SID0gJyNhMWM2ZTcnO1xuY29uc3QgUEFERElOR19DT0xPUiA9ICcjYzRkZWI5JztcbmNvbnN0IE1BUkdJTl9DT0xPUiA9ICcjZjhjY2ExJztcbi8vIFRPRE86IERyYXcgZGVidWcgYm94ZXMgdXNpbmcgY2xpcHBpbmcgdG8gZW5oYW5jZSBxdWFsaXR5XG5jb25zdCBkZWJ1Z0NvbnRlbnQgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlLmJveClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHsgbGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0LCBwYWRkaW5nTGVmdCA9IDAsIHBhZGRpbmdUb3AgPSAwLCBwYWRkaW5nUmlnaHQgPSAwLCBwYWRkaW5nQm90dG9tID0gMCwgYm9yZGVyTGVmdFdpZHRoID0gMCwgYm9yZGVyVG9wV2lkdGggPSAwLCBib3JkZXJSaWdodFdpZHRoID0gMCwgYm9yZGVyQm90dG9tV2lkdGggPSAwLCB9ID0gbm9kZS5ib3g7XG4gICAgY3R4XG4gICAgICAgIC5maWxsQ29sb3IoQ09OVEVOVF9DT0xPUilcbiAgICAgICAgLm9wYWNpdHkoMC41KVxuICAgICAgICAucmVjdChsZWZ0ICsgcGFkZGluZ0xlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIHBhZGRpbmdUb3AgKyBib3JkZXJUb3BXaWR0aCwgd2lkdGggLSBwYWRkaW5nTGVmdCAtIHBhZGRpbmdSaWdodCAtIGJvcmRlclJpZ2h0V2lkdGggLSBib3JkZXJMZWZ0V2lkdGgsIGhlaWdodCAtIHBhZGRpbmdUb3AgLSBwYWRkaW5nQm90dG9tIC0gYm9yZGVyVG9wV2lkdGggLSBib3JkZXJCb3R0b21XaWR0aClcbiAgICAgICAgLmZpbGwoKTtcbn07XG5jb25zdCBkZWJ1Z1BhZGRpbmcgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlLmJveClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHsgbGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0LCBwYWRkaW5nTGVmdCA9IDAsIHBhZGRpbmdUb3AgPSAwLCBwYWRkaW5nUmlnaHQgPSAwLCBwYWRkaW5nQm90dG9tID0gMCwgYm9yZGVyTGVmdFdpZHRoID0gMCwgYm9yZGVyVG9wV2lkdGggPSAwLCBib3JkZXJSaWdodFdpZHRoID0gMCwgYm9yZGVyQm90dG9tV2lkdGggPSAwLCB9ID0gbm9kZS5ib3g7XG4gICAgY3R4LmZpbGxDb2xvcihQQURESU5HX0NPTE9SKS5vcGFjaXR5KDAuNSk7XG4gICAgLy8gUGFkZGluZyB0b3BcbiAgICBjdHhcbiAgICAgICAgLnJlY3QobGVmdCArIHBhZGRpbmdMZWZ0ICsgYm9yZGVyTGVmdFdpZHRoLCB0b3AgKyBib3JkZXJUb3BXaWR0aCwgd2lkdGggLSBwYWRkaW5nUmlnaHQgLSBwYWRkaW5nTGVmdCAtIGJvcmRlckxlZnRXaWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHBhZGRpbmdUb3ApXG4gICAgICAgIC5maWxsKCk7XG4gICAgLy8gUGFkZGluZyBsZWZ0XG4gICAgY3R4XG4gICAgICAgIC5yZWN0KGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIGJvcmRlclRvcFdpZHRoLCBwYWRkaW5nTGVmdCwgaGVpZ2h0IC0gYm9yZGVyVG9wV2lkdGggLSBib3JkZXJCb3R0b21XaWR0aClcbiAgICAgICAgLmZpbGwoKTtcbiAgICAvLyBQYWRkaW5nIHJpZ2h0XG4gICAgY3R4XG4gICAgICAgIC5yZWN0KGxlZnQgKyB3aWR0aCAtIHBhZGRpbmdSaWdodCAtIGJvcmRlclJpZ2h0V2lkdGgsIHRvcCArIGJvcmRlclRvcFdpZHRoLCBwYWRkaW5nUmlnaHQsIGhlaWdodCAtIGJvcmRlclRvcFdpZHRoIC0gYm9yZGVyQm90dG9tV2lkdGgpXG4gICAgICAgIC5maWxsKCk7XG4gICAgLy8gUGFkZGluZyBib3R0b21cbiAgICBjdHhcbiAgICAgICAgLnJlY3QobGVmdCArIHBhZGRpbmdMZWZ0ICsgYm9yZGVyTGVmdFdpZHRoLCB0b3AgKyBoZWlnaHQgLSBwYWRkaW5nQm90dG9tIC0gYm9yZGVyQm90dG9tV2lkdGgsIHdpZHRoIC0gcGFkZGluZ1JpZ2h0IC0gcGFkZGluZ0xlZnQgLSBib3JkZXJMZWZ0V2lkdGggLSBib3JkZXJSaWdodFdpZHRoLCBwYWRkaW5nQm90dG9tKVxuICAgICAgICAuZmlsbCgpO1xufTtcbmNvbnN0IGRlYnVnTWFyZ2luID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IGxlZnQsIHRvcCwgd2lkdGgsIGhlaWdodCB9ID0gbm9kZS5ib3g7XG4gICAgY29uc3QgeyBtYXJnaW5MZWZ0ID0gMCwgbWFyZ2luVG9wID0gMCwgbWFyZ2luUmlnaHQgPSAwLCBtYXJnaW5Cb3R0b20gPSAwLCB9ID0gbm9kZS5ib3g7XG4gICAgY3R4LmZpbGxDb2xvcihNQVJHSU5fQ09MT1IpLm9wYWNpdHkoMC41KTtcbiAgICAvLyBNYXJnaW4gdG9wXG4gICAgY3R4LnJlY3QobGVmdCwgdG9wIC0gbWFyZ2luVG9wLCB3aWR0aCwgbWFyZ2luVG9wKS5maWxsKCk7XG4gICAgLy8gTWFyZ2luIGxlZnRcbiAgICBjdHhcbiAgICAgICAgLnJlY3QobGVmdCAtIG1hcmdpbkxlZnQsIHRvcCAtIG1hcmdpblRvcCwgbWFyZ2luTGVmdCwgaGVpZ2h0ICsgbWFyZ2luVG9wICsgbWFyZ2luQm90dG9tKVxuICAgICAgICAuZmlsbCgpO1xuICAgIC8vIE1hcmdpbiByaWdodFxuICAgIGN0eFxuICAgICAgICAucmVjdChsZWZ0ICsgd2lkdGgsIHRvcCAtIG1hcmdpblRvcCwgbWFyZ2luUmlnaHQsIGhlaWdodCArIG1hcmdpblRvcCArIG1hcmdpbkJvdHRvbSlcbiAgICAgICAgLmZpbGwoKTtcbiAgICAvLyBNYXJnaW4gYm90dG9tXG4gICAgY3R4LnJlY3QobGVmdCwgdG9wICsgaGVpZ2h0LCB3aWR0aCwgbWFyZ2luQm90dG9tKS5maWxsKCk7XG59O1xuY29uc3QgZGVidWdUZXh0ID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IGxlZnQsIHRvcCwgd2lkdGgsIGhlaWdodCB9ID0gbm9kZS5ib3g7XG4gICAgY29uc3QgeyBtYXJnaW5MZWZ0ID0gMCwgbWFyZ2luVG9wID0gMCwgbWFyZ2luUmlnaHQgPSAwLCBtYXJnaW5Cb3R0b20gPSAwLCB9ID0gbm9kZS5ib3g7XG4gICAgY29uc3Qgcm91bmRlZFdpZHRoID0gTWF0aC5yb3VuZCh3aWR0aCArIG1hcmdpbkxlZnQgKyBtYXJnaW5SaWdodCk7XG4gICAgY29uc3Qgcm91bmRlZEhlaWdodCA9IE1hdGgucm91bmQoaGVpZ2h0ICsgbWFyZ2luVG9wICsgbWFyZ2luQm90dG9tKTtcbiAgICBjdHhcbiAgICAgICAgLmZvbnRTaXplKDYpXG4gICAgICAgIC5vcGFjaXR5KDEpXG4gICAgICAgIC5maWxsQ29sb3IoJ2JsYWNrJylcbiAgICAgICAgLnRleHQoYCR7cm91bmRlZFdpZHRofSB4ICR7cm91bmRlZEhlaWdodH1gLCBsZWZ0IC0gbWFyZ2luTGVmdCwgTWF0aC5tYXgodG9wIC0gbWFyZ2luVG9wIC0gNCwgMSksIHsgd2lkdGg6IEluZmluaXR5IH0pO1xufTtcbmNvbnN0IGRlYnVnT3JpZ2luID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmIChub2RlLm9yaWdpbikge1xuICAgICAgICBjdHhcbiAgICAgICAgICAgIC5jaXJjbGUobm9kZS5vcmlnaW4ubGVmdCwgbm9kZS5vcmlnaW4udG9wLCAzKVxuICAgICAgICAgICAgLmZpbGwoJ3JlZCcpXG4gICAgICAgICAgICAuY2lyY2xlKG5vZGUub3JpZ2luLmxlZnQsIG5vZGUub3JpZ2luLnRvcCwgNSlcbiAgICAgICAgICAgIC5zdHJva2UoJ3JlZCcpO1xuICAgIH1cbn07XG5jb25zdCByZW5kZXJEZWJ1ZyA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUucHJvcHMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoISgnZGVidWcnIGluIG5vZGUucHJvcHMpIHx8ICFub2RlLnByb3BzLmRlYnVnKVxuICAgICAgICByZXR1cm47XG4gICAgY3R4LnNhdmUoKTtcbiAgICBkZWJ1Z0NvbnRlbnQoY3R4LCBub2RlKTtcbiAgICBkZWJ1Z1BhZGRpbmcoY3R4LCBub2RlKTtcbiAgICBkZWJ1Z01hcmdpbihjdHgsIG5vZGUpO1xuICAgIGRlYnVnVGV4dChjdHgsIG5vZGUpO1xuICAgIGRlYnVnT3JpZ2luKGN0eCwgbm9kZSk7XG4gICAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbmNvbnN0IGF2YWlsYWJsZU1ldGhvZHMgPSBbXG4gICAgJ2Rhc2gnLFxuICAgICdjbGlwJyxcbiAgICAnc2F2ZScsXG4gICAgJ3BhdGgnLFxuICAgICdmaWxsJyxcbiAgICAnZm9udCcsXG4gICAgJ3RleHQnLFxuICAgICdyZWN0JyxcbiAgICAnc2NhbGUnLFxuICAgICdtb3ZlVG8nLFxuICAgICdsaW5lVG8nLFxuICAgICdzdHJva2UnLFxuICAgICdyb3RhdGUnLFxuICAgICdjaXJjbGUnLFxuICAgICdsaW5lQ2FwJyxcbiAgICAnb3BhY2l0eScsXG4gICAgJ2VsbGlwc2UnLFxuICAgICdwb2x5Z29uJyxcbiAgICAncmVzdG9yZScsXG4gICAgJ2xpbmVKb2luJyxcbiAgICAnZm9udFNpemUnLFxuICAgICdmaWxsQ29sb3InLFxuICAgICdsaW5lV2lkdGgnLFxuICAgICd0cmFuc2xhdGUnLFxuICAgICdtaXRlckxpbWl0JyxcbiAgICAnc3Ryb2tlQ29sb3InLFxuICAgICdmaWxsT3BhY2l0eScsXG4gICAgJ3JvdW5kZWRSZWN0JyxcbiAgICAnZmlsbEFuZFN0cm9rZScsXG4gICAgJ3N0cm9rZU9wYWNpdHknLFxuICAgICdiZXppZXJDdXJ2ZVRvJyxcbiAgICAncXVhZHJhdGljQ3VydmVUbycsXG4gICAgJ2xpbmVhckdyYWRpZW50JyxcbiAgICAncmFkaWFsR3JhZGllbnQnLFxuXTtcbmNvbnN0IHBhaW50ZXIgPSAoY3R4KSA9PiB7XG4gICAgY29uc3QgcCA9IGF2YWlsYWJsZU1ldGhvZHMucmVkdWNlKChhY2MsIHByb3ApID0+ICh7XG4gICAgICAgIC4uLmFjYyxcbiAgICAgICAgW3Byb3BdOiAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBjdHhbcHJvcF0gaXMgYSBmdW5jdGlvblxuICAgICAgICAgICAgY3R4W3Byb3BdKC4uLmFyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIHA7XG4gICAgICAgIH0sXG4gICAgfSksIHt9KTtcbiAgICByZXR1cm4gcDtcbn07XG5jb25zdCByZW5kZXJDYW52YXMgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlLmJveClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHsgdG9wLCBsZWZ0LCB3aWR0aCwgaGVpZ2h0IH0gPSBub2RlLmJveDtcbiAgICBjb25zdCBwYWRkaW5nVG9wID0gbm9kZS5ib3gucGFkZGluZ1RvcCB8fCAwO1xuICAgIGNvbnN0IHBhZGRpbmdMZWZ0ID0gbm9kZS5ib3gucGFkZGluZ0xlZnQgfHwgMDtcbiAgICBjb25zdCBwYWRkaW5nUmlnaHQgPSBub2RlLmJveC5wYWRkaW5nUmlnaHQgfHwgMDtcbiAgICBjb25zdCBwYWRkaW5nQm90dG9tID0gbm9kZS5ib3gucGFkZGluZ0JvdHRvbSB8fCAwO1xuICAgIGNvbnN0IGF2YWlsYWJsZVdpZHRoID0gd2lkdGggLSBwYWRkaW5nTGVmdCAtIHBhZGRpbmdSaWdodDtcbiAgICBjb25zdCBhdmFpbGFibGVIZWlnaHQgPSBoZWlnaHQgLSBwYWRkaW5nVG9wIC0gcGFkZGluZ0JvdHRvbTtcbiAgICBpZiAoIWF2YWlsYWJsZVdpZHRoIHx8ICFhdmFpbGFibGVIZWlnaHQpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdDYW52YXMgZWxlbWVudCBoYXMgbnVsbCB3aWR0aCBvciBoZWlnaHQuIFBsZWFzZSBwcm92aWRlIHZhbGlkIHZhbHVlcyB2aWEgdGhlIGBzdHlsZWAgcHJvcCBpbiBvcmRlciB0byBjb3JyZWN0bHkgcmVuZGVyIGl0LicpO1xuICAgIH1cbiAgICBjdHguc2F2ZSgpLnRyYW5zbGF0ZShsZWZ0ICsgcGFkZGluZ0xlZnQsIHRvcCArIHBhZGRpbmdUb3ApO1xuICAgIGlmIChub2RlLnByb3BzLnBhaW50KSB7XG4gICAgICAgIG5vZGUucHJvcHMucGFpbnQocGFpbnRlcihjdHgpLCBhdmFpbGFibGVXaWR0aCwgYXZhaWxhYmxlSGVpZ2h0KTtcbiAgICB9XG4gICAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbi8vIFJlZjogaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1iYWNrZ3JvdW5kcy0zLyNib3JkZXJzXG4vLyBUaGlzIGNvbnN0YW50IGlzIHVzZWQgdG8gYXBwcm94aW1hdGUgYSBzeW1tZXRyaWNhbCBhcmMgdXNpbmcgYSBjdWJpYyBCZXppZXIgY3VydmUuXG5jb25zdCBLQVBQQSA9IDQuMCAqICgoTWF0aC5zcXJ0KDIpIC0gMS4wKSAvIDMuMCk7XG5jb25zdCBjbGlwQm9yZGVyVG9wID0gKGN0eCwgbGF5b3V0LCBzdHlsZSwgcnRyLCBydGwpID0+IHtcbiAgICBjb25zdCB7IHRvcCwgbGVmdCwgd2lkdGgsIGhlaWdodCB9ID0gbGF5b3V0O1xuICAgIGNvbnN0IHsgYm9yZGVyVG9wV2lkdGgsIGJvcmRlclJpZ2h0V2lkdGgsIGJvcmRlckxlZnRXaWR0aCB9ID0gc3R5bGU7XG4gICAgLy8gQ2xpcCBvdXRlciB0b3AgYm9yZGVyIGVkZ2VcbiAgICBjdHgubW92ZVRvKGxlZnQgKyBydGwsIHRvcCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGggLSBydHIsIHRvcCk7XG4gICAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgb3V0ZXIgdG9wIHJpZ2h0IGNhcFxuICAgIGNvbnN0IGMwID0gcnRyICogKDEuMCAtIEtBUFBBKTtcbiAgICAvLyBDbGlwIG91dGVyIHRvcCByaWdodCBjYXBcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBjMCwgdG9wLCBsZWZ0ICsgd2lkdGgsIHRvcCArIGMwLCBsZWZ0ICsgd2lkdGgsIHRvcCArIHJ0cik7XG4gICAgLy8gTW92ZSBkb3duIGluIGNhc2UgdGhlIG1hcmdpbiBleGNlZWRlcyB0aGUgcmFkaXVzXG4gICAgY29uc3QgdG9wUmlnaHRZQ29vcmQgPSB0b3AgKyBNYXRoLm1heChib3JkZXJUb3BXaWR0aCwgcnRyKTtcbiAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wUmlnaHRZQ29vcmQpO1xuICAgIC8vIENsaXAgaW5uZXIgdG9wIHJpZ2h0IGNhcFxuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCwgdG9wUmlnaHRZQ29vcmQpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIGlubmVyIHRvcCByaWdodCBjYXBcbiAgICBjb25zdCBpbm5lclRvcFJpZ2h0UmFkaXVzWCA9IE1hdGgubWF4KHJ0ciAtIGJvcmRlclJpZ2h0V2lkdGgsIDApO1xuICAgIGNvbnN0IGlubmVyVG9wUmlnaHRSYWRpdXNZID0gTWF0aC5tYXgocnRyIC0gYm9yZGVyVG9wV2lkdGgsIDApO1xuICAgIGNvbnN0IGMxID0gaW5uZXJUb3BSaWdodFJhZGl1c1ggKiAoMS4wIC0gS0FQUEEpO1xuICAgIGNvbnN0IGMyID0gaW5uZXJUb3BSaWdodFJhZGl1c1kgKiAoMS4wIC0gS0FQUEEpO1xuICAgIC8vIENsaXAgaW5uZXIgdG9wIHJpZ2h0IGNhcFxuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHRvcCArIGJvcmRlclRvcFdpZHRoICsgYzIsIGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGggLSBjMSwgdG9wICsgYm9yZGVyVG9wV2lkdGgsIGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGggLSBpbm5lclRvcFJpZ2h0UmFkaXVzWCwgdG9wICsgYm9yZGVyVG9wV2lkdGgpO1xuICAgIC8vIENsaXAgaW5uZXIgdG9wIGJvcmRlciBlZGdlXG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgTWF0aC5tYXgocnRsLCBib3JkZXJMZWZ0V2lkdGgpLCB0b3AgKyBib3JkZXJUb3BXaWR0aCk7XG4gICAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgaW5uZXIgdG9wIGxlZnQgY2FwXG4gICAgY29uc3QgaW5uZXJUb3BMZWZ0UmFkaXVzWCA9IE1hdGgubWF4KHJ0bCAtIGJvcmRlckxlZnRXaWR0aCwgMCk7XG4gICAgY29uc3QgaW5uZXJUb3BMZWZ0UmFkaXVzWSA9IE1hdGgubWF4KHJ0bCAtIGJvcmRlclRvcFdpZHRoLCAwKTtcbiAgICBjb25zdCBjMyA9IGlubmVyVG9wTGVmdFJhZGl1c1ggKiAoMS4wIC0gS0FQUEEpO1xuICAgIGNvbnN0IGM0ID0gaW5uZXJUb3BMZWZ0UmFkaXVzWSAqICgxLjAgLSBLQVBQQSk7XG4gICAgY29uc3QgdG9wTGVmdFlDb29yZCA9IHRvcCArIE1hdGgubWF4KGJvcmRlclRvcFdpZHRoLCBydGwpO1xuICAgIC8vIENsaXAgaW5uZXIgdG9wIGxlZnQgY2FwXG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGJvcmRlckxlZnRXaWR0aCArIGMzLCB0b3AgKyBib3JkZXJUb3BXaWR0aCwgbGVmdCArIGJvcmRlckxlZnRXaWR0aCwgdG9wICsgYm9yZGVyVG9wV2lkdGggKyBjNCwgbGVmdCArIGJvcmRlckxlZnRXaWR0aCwgdG9wTGVmdFlDb29yZCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3BMZWZ0WUNvb3JkKTtcbiAgICAvLyBNb3ZlIGRvd24gaW4gY2FzZSB0aGUgbWFyZ2luIGV4Y2VlZGVzIHRoZSByYWRpdXNcbiAgICBjdHgubGluZVRvKGxlZnQsIHRvcCArIHJ0bCk7XG4gICAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgb3V0ZXIgdG9wIGxlZnQgY2FwXG4gICAgY29uc3QgYzUgPSBydGwgKiAoMS4wIC0gS0FQUEEpO1xuICAgIC8vIENsaXAgb3V0ZXIgdG9wIGxlZnQgY2FwXG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCwgdG9wICsgYzUsIGxlZnQgKyBjNSwgdG9wLCBsZWZ0ICsgcnRsLCB0b3ApO1xuICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICBjdHguY2xpcCgpO1xuICAgIC8vIENsaXAgYm9yZGVyIHRvcCBjYXAgam9pbnNcbiAgICBpZiAoYm9yZGVyUmlnaHRXaWR0aCkge1xuICAgICAgICBjb25zdCB0clNsb3BlID0gLWJvcmRlclRvcFdpZHRoIC8gYm9yZGVyUmlnaHRXaWR0aDtcbiAgICAgICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLyAyLCB0clNsb3BlICogKC13aWR0aCAvIDIpICsgdG9wKTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCk7XG4gICAgICAgIGN0eC5saW5lVG8obGVmdCwgdG9wKTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3AgKyBoZWlnaHQpO1xuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgICAgIGN0eC5jbGlwKCk7XG4gICAgfVxuICAgIGlmIChib3JkZXJMZWZ0V2lkdGgpIHtcbiAgICAgICAgY29uc3QgdHJTbG9wZSA9IC1ib3JkZXJUb3BXaWR0aCAvIGJvcmRlckxlZnRXaWR0aDtcbiAgICAgICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLyAyLCB0clNsb3BlICogKC13aWR0aCAvIDIpICsgdG9wKTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3ApO1xuICAgICAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wKTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCk7XG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICAgICAgY3R4LmNsaXAoKTtcbiAgICB9XG59O1xuY29uc3QgZmlsbEJvcmRlclRvcCA9IChjdHgsIGxheW91dCwgc3R5bGUsIHJ0ciwgcnRsKSA9PiB7XG4gICAgY29uc3QgeyB0b3AsIGxlZnQsIHdpZHRoIH0gPSBsYXlvdXQ7XG4gICAgY29uc3QgeyBib3JkZXJUb3BDb2xvciwgYm9yZGVyVG9wV2lkdGgsIGJvcmRlclRvcFN0eWxlLCBib3JkZXJSaWdodFdpZHRoLCBib3JkZXJMZWZ0V2lkdGgsIH0gPSBzdHlsZTtcbiAgICBjb25zdCBjMCA9IHJ0bCAqICgxLjAgLSBLQVBQQSk7XG4gICAgY29uc3QgYzEgPSBydHIgKiAoMS4wIC0gS0FQUEEpO1xuICAgIGN0eC5tb3ZlVG8obGVmdCwgdG9wICsgTWF0aC5tYXgocnRsLCBib3JkZXJUb3BXaWR0aCkpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQsIHRvcCArIGMwLCBsZWZ0ICsgYzAsIHRvcCwgbGVmdCArIHJ0bCwgdG9wKTtcbiAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCAtIHJ0ciwgdG9wKTtcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBjMSwgdG9wLCBsZWZ0ICsgd2lkdGgsIHRvcCArIGMxLCBsZWZ0ICsgd2lkdGgsIHRvcCArIHJ0cik7XG4gICAgY3R4LnN0cm9rZUNvbG9yKGJvcmRlclRvcENvbG9yKTtcbiAgICBjdHgubGluZVdpZHRoKE1hdGgubWF4KGJvcmRlclJpZ2h0V2lkdGgsIGJvcmRlclRvcFdpZHRoLCBib3JkZXJMZWZ0V2lkdGgpICogMik7XG4gICAgaWYgKGJvcmRlclRvcFN0eWxlID09PSAnZGFzaGVkJykge1xuICAgICAgICBjdHguZGFzaChib3JkZXJUb3BXaWR0aCAqIDIsIHsgc3BhY2U6IGJvcmRlclRvcFdpZHRoICogMS4yIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChib3JkZXJUb3BTdHlsZSA9PT0gJ2RvdHRlZCcpIHtcbiAgICAgICAgY3R4LmRhc2goYm9yZGVyVG9wV2lkdGgsIHsgc3BhY2U6IGJvcmRlclRvcFdpZHRoICogMS4yIH0pO1xuICAgIH1cbiAgICBjdHguc3Ryb2tlKCk7XG4gICAgY3R4LnVuZGFzaCgpO1xufTtcbmNvbnN0IGNsaXBCb3JkZXJSaWdodCA9IChjdHgsIGxheW91dCwgc3R5bGUsIHJ0ciwgcmJyKSA9PiB7XG4gICAgY29uc3QgeyB0b3AsIGxlZnQsIHdpZHRoLCBoZWlnaHQgfSA9IGxheW91dDtcbiAgICBjb25zdCB7IGJvcmRlclRvcFdpZHRoLCBib3JkZXJSaWdodFdpZHRoLCBib3JkZXJCb3R0b21XaWR0aCB9ID0gc3R5bGU7XG4gICAgLy8gQ2xpcCBvdXRlciByaWdodCBib3JkZXIgZWRnZVxuICAgIGN0eC5tb3ZlVG8obGVmdCArIHdpZHRoLCB0b3AgKyBydHIpO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQgLSByYnIpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIG91dGVyIGJvdHRvbSByaWdodCBjYXBcbiAgICBjb25zdCBjMCA9IHJiciAqICgxLjAgLSBLQVBQQSk7XG4gICAgLy8gQ2xpcCBvdXRlciB0b3AgcmlnaHQgY2FwXG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQgLSBjMCwgbGVmdCArIHdpZHRoIC0gYzAsIHRvcCArIGhlaWdodCwgbGVmdCArIHdpZHRoIC0gcmJyLCB0b3AgKyBoZWlnaHQpO1xuICAgIC8vIE1vdmUgbGVmdCBpbiBjYXNlIHRoZSBtYXJnaW4gZXhjZWVkZXMgdGhlIHJhZGl1c1xuICAgIGNvbnN0IHRvcEJvdHRvbVhDb29yZCA9IGxlZnQgKyB3aWR0aCAtIE1hdGgubWF4KGJvcmRlclJpZ2h0V2lkdGgsIHJicik7XG4gICAgY3R4LmxpbmVUbyh0b3BCb3R0b21YQ29vcmQsIHRvcCArIGhlaWdodCk7XG4gICAgLy8gQ2xpcCBpbm5lciBib3R0b20gcmlnaHQgY2FwXG4gICAgY3R4LmxpbmVUbyh0b3BCb3R0b21YQ29vcmQsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoKTtcbiAgICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBpbm5lciBib3R0b20gcmlnaHQgY2FwXG4gICAgY29uc3QgaW5uZXJCb3R0b21SaWdodFJhZGl1c1ggPSBNYXRoLm1heChyYnIgLSBib3JkZXJSaWdodFdpZHRoLCAwKTtcbiAgICBjb25zdCBpbm5lckJvdHRvbVJpZ2h0UmFkaXVzWSA9IE1hdGgubWF4KHJiciAtIGJvcmRlckJvdHRvbVdpZHRoLCAwKTtcbiAgICBjb25zdCBjMSA9IGlubmVyQm90dG9tUmlnaHRSYWRpdXNYICogKDEuMCAtIEtBUFBBKTtcbiAgICBjb25zdCBjMiA9IGlubmVyQm90dG9tUmlnaHRSYWRpdXNZICogKDEuMCAtIEtBUFBBKTtcbiAgICAvLyBDbGlwIGlubmVyIHRvcCByaWdodCBjYXBcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBib3JkZXJSaWdodFdpZHRoIC0gYzEsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoLCBsZWZ0ICsgd2lkdGggLSBib3JkZXJSaWdodFdpZHRoLCB0b3AgKyBoZWlnaHQgLSBib3JkZXJCb3R0b21XaWR0aCAtIGMyLCBsZWZ0ICsgd2lkdGggLSBib3JkZXJSaWdodFdpZHRoLCB0b3AgKyBoZWlnaHQgLSBNYXRoLm1heChyYnIsIGJvcmRlckJvdHRvbVdpZHRoKSk7XG4gICAgLy8gQ2xpcCBpbm5lciByaWdodCBib3JkZXIgZWRnZVxuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCwgdG9wICsgTWF0aC5tYXgocnRyLCBib3JkZXJUb3BXaWR0aCkpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIGlubmVyIHRvcCByaWdodCBjYXBcbiAgICBjb25zdCBpbm5lclRvcFJpZ2h0UmFkaXVzWCA9IE1hdGgubWF4KHJ0ciAtIGJvcmRlclJpZ2h0V2lkdGgsIDApO1xuICAgIGNvbnN0IGlubmVyVG9wUmlnaHRSYWRpdXNZID0gTWF0aC5tYXgocnRyIC0gYm9yZGVyVG9wV2lkdGgsIDApO1xuICAgIGNvbnN0IGMzID0gaW5uZXJUb3BSaWdodFJhZGl1c1ggKiAoMS4wIC0gS0FQUEEpO1xuICAgIGNvbnN0IGM0ID0gaW5uZXJUb3BSaWdodFJhZGl1c1kgKiAoMS4wIC0gS0FQUEEpO1xuICAgIGNvbnN0IHRvcFJpZ2h0WENvb3JkID0gbGVmdCArIHdpZHRoIC0gTWF0aC5tYXgocnRyLCBib3JkZXJSaWdodFdpZHRoKTtcbiAgICAvLyBDbGlwIGlubmVyIHRvcCBsZWZ0IGNhcFxuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHRvcCArIGJvcmRlclRvcFdpZHRoICsgYzQsIGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGggLSBjMywgdG9wICsgYm9yZGVyVG9wV2lkdGgsIHRvcFJpZ2h0WENvb3JkLCB0b3AgKyBib3JkZXJUb3BXaWR0aCk7XG4gICAgY3R4LmxpbmVUbyh0b3BSaWdodFhDb29yZCwgdG9wKTtcbiAgICAvLyBNb3ZlIHJpZ2h0IGluIGNhc2UgdGhlIG1hcmdpbiBleGNlZWRlcyB0aGUgcmFkaXVzXG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGggLSBydHIsIHRvcCk7XG4gICAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgb3V0ZXIgdG9wIHJpZ2h0IGNhcFxuICAgIGNvbnN0IGM1ID0gcnRyICogKDEuMCAtIEtBUFBBKTtcbiAgICAvLyBDbGlwIG91dGVyIHRvcCByaWdodCBjYXBcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBjNSwgdG9wLCBsZWZ0ICsgd2lkdGgsIHRvcCArIGM1LCBsZWZ0ICsgd2lkdGgsIHRvcCArIHJ0cik7XG4gICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgIGN0eC5jbGlwKCk7XG4gICAgLy8gQ2xpcCBib3JkZXIgcmlnaHQgY2FwIGpvaW5zXG4gICAgaWYgKGJvcmRlclRvcFdpZHRoKSB7XG4gICAgICAgIGNvbnN0IHRyU2xvcGUgPSAtYm9yZGVyVG9wV2lkdGggLyBib3JkZXJSaWdodFdpZHRoO1xuICAgICAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIHRyU2xvcGUgKiAoLXdpZHRoIC8gMikgKyB0b3ApO1xuICAgICAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wKTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCk7XG4gICAgICAgIGN0eC5saW5lVG8obGVmdCwgdG9wICsgaGVpZ2h0KTtcbiAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICBjdHguY2xpcCgpO1xuICAgIH1cbiAgICBpZiAoYm9yZGVyQm90dG9tV2lkdGgpIHtcbiAgICAgICAgY29uc3QgYnJTbG9wZSA9IGJvcmRlckJvdHRvbVdpZHRoIC8gYm9yZGVyUmlnaHRXaWR0aDtcbiAgICAgICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLyAyLCBiclNsb3BlICogKC13aWR0aCAvIDIpICsgdG9wICsgaGVpZ2h0KTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCk7XG4gICAgICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3ApO1xuICAgICAgICBjdHgubGluZVRvKGxlZnQsIHRvcCk7XG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICAgICAgY3R4LmNsaXAoKTtcbiAgICB9XG59O1xuY29uc3QgZmlsbEJvcmRlclJpZ2h0ID0gKGN0eCwgbGF5b3V0LCBzdHlsZSwgcnRyLCByYnIpID0+IHtcbiAgICBjb25zdCB7IHRvcCwgbGVmdCwgd2lkdGgsIGhlaWdodCB9ID0gbGF5b3V0O1xuICAgIGNvbnN0IHsgYm9yZGVyUmlnaHRDb2xvciwgYm9yZGVyUmlnaHRTdHlsZSwgYm9yZGVyUmlnaHRXaWR0aCwgYm9yZGVyVG9wV2lkdGgsIGJvcmRlckJvdHRvbVdpZHRoLCB9ID0gc3R5bGU7XG4gICAgY29uc3QgYzAgPSByYnIgKiAoMS4wIC0gS0FQUEEpO1xuICAgIGNvbnN0IGMxID0gcnRyICogKDEuMCAtIEtBUFBBKTtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAtIHJ0ciwgdG9wKTtcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBjMSwgdG9wLCBsZWZ0ICsgd2lkdGgsIHRvcCArIGMxLCBsZWZ0ICsgd2lkdGgsIHRvcCArIHJ0cik7XG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCAtIHJicik7XG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQgLSBjMCwgbGVmdCArIHdpZHRoIC0gYzAsIHRvcCArIGhlaWdodCwgbGVmdCArIHdpZHRoIC0gcmJyLCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5zdHJva2VDb2xvcihib3JkZXJSaWdodENvbG9yKTtcbiAgICBjdHgubGluZVdpZHRoKE1hdGgubWF4KGJvcmRlclJpZ2h0V2lkdGgsIGJvcmRlclRvcFdpZHRoLCBib3JkZXJCb3R0b21XaWR0aCkgKiAyKTtcbiAgICBpZiAoYm9yZGVyUmlnaHRTdHlsZSA9PT0gJ2Rhc2hlZCcpIHtcbiAgICAgICAgY3R4LmRhc2goYm9yZGVyUmlnaHRXaWR0aCAqIDIsIHsgc3BhY2U6IGJvcmRlclJpZ2h0V2lkdGggKiAxLjIgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGJvcmRlclJpZ2h0U3R5bGUgPT09ICdkb3R0ZWQnKSB7XG4gICAgICAgIGN0eC5kYXNoKGJvcmRlclJpZ2h0V2lkdGgsIHsgc3BhY2U6IGJvcmRlclJpZ2h0V2lkdGggKiAxLjIgfSk7XG4gICAgfVxuICAgIGN0eC5zdHJva2UoKTtcbiAgICBjdHgudW5kYXNoKCk7XG59O1xuY29uc3QgY2xpcEJvcmRlckJvdHRvbSA9IChjdHgsIGxheW91dCwgc3R5bGUsIHJibCwgcmJyKSA9PiB7XG4gICAgY29uc3QgeyB0b3AsIGxlZnQsIHdpZHRoLCBoZWlnaHQgfSA9IGxheW91dDtcbiAgICBjb25zdCB7IGJvcmRlckJvdHRvbVdpZHRoLCBib3JkZXJSaWdodFdpZHRoLCBib3JkZXJMZWZ0V2lkdGggfSA9IHN0eWxlO1xuICAgIC8vIENsaXAgb3V0ZXIgdG9wIGJvcmRlciBlZGdlXG4gICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLSByYnIsIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgcmJsLCB0b3AgKyBoZWlnaHQpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIG91dGVyIHRvcCByaWdodCBjYXBcbiAgICBjb25zdCBjMCA9IHJibCAqICgxLjAgLSBLQVBQQSk7XG4gICAgLy8gQ2xpcCBvdXRlciB0b3AgcmlnaHQgY2FwXG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGMwLCB0b3AgKyBoZWlnaHQsIGxlZnQsIHRvcCArIGhlaWdodCAtIGMwLCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSByYmwpO1xuICAgIC8vIE1vdmUgdXAgaW4gY2FzZSB0aGUgbWFyZ2luIGV4Y2VlZGVzIHRoZSByYWRpdXNcbiAgICBjb25zdCBib3R0b21MZWZ0WUNvb3JkID0gdG9wICsgaGVpZ2h0IC0gTWF0aC5tYXgoYm9yZGVyQm90dG9tV2lkdGgsIHJibCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0LCBib3R0b21MZWZ0WUNvb3JkKTtcbiAgICAvLyBDbGlwIGlubmVyIGJvdHRvbSBsZWZ0IGNhcFxuICAgIGN0eC5saW5lVG8obGVmdCArIGJvcmRlckxlZnRXaWR0aCwgYm90dG9tTGVmdFlDb29yZCk7XG4gICAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgaW5uZXIgdG9wIHJpZ2h0IGNhcFxuICAgIGNvbnN0IGlubmVyQm90dG9tTGVmdFJhZGl1c1ggPSBNYXRoLm1heChyYmwgLSBib3JkZXJMZWZ0V2lkdGgsIDApO1xuICAgIGNvbnN0IGlubmVyQm90dG9tTGVmdFJhZGl1c1kgPSBNYXRoLm1heChyYmwgLSBib3JkZXJCb3R0b21XaWR0aCwgMCk7XG4gICAgY29uc3QgYzEgPSBpbm5lckJvdHRvbUxlZnRSYWRpdXNYICogKDEuMCAtIEtBUFBBKTtcbiAgICBjb25zdCBjMiA9IGlubmVyQm90dG9tTGVmdFJhZGl1c1kgKiAoMS4wIC0gS0FQUEEpO1xuICAgIC8vIENsaXAgaW5uZXIgYm90dG9tIGxlZnQgY2FwXG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGJvcmRlckxlZnRXaWR0aCwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGggLSBjMiwgbGVmdCArIGJvcmRlckxlZnRXaWR0aCArIGMxLCB0b3AgKyBoZWlnaHQgLSBib3JkZXJCb3R0b21XaWR0aCwgbGVmdCArIGJvcmRlckxlZnRXaWR0aCArIGlubmVyQm90dG9tTGVmdFJhZGl1c1gsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoKTtcbiAgICAvLyBDbGlwIGlubmVyIGJvdHRvbSBib3JkZXIgZWRnZVxuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gTWF0aC5tYXgocmJyLCBib3JkZXJSaWdodFdpZHRoKSwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIGlubmVyIHRvcCBsZWZ0IGNhcFxuICAgIGNvbnN0IGlubmVyQm90dG9tUmlnaHRSYWRpdXNYID0gTWF0aC5tYXgocmJyIC0gYm9yZGVyUmlnaHRXaWR0aCwgMCk7XG4gICAgY29uc3QgaW5uZXJCb3R0b21SaWdodFJhZGl1c1kgPSBNYXRoLm1heChyYnIgLSBib3JkZXJCb3R0b21XaWR0aCwgMCk7XG4gICAgY29uc3QgYzMgPSBpbm5lckJvdHRvbVJpZ2h0UmFkaXVzWCAqICgxLjAgLSBLQVBQQSk7XG4gICAgY29uc3QgYzQgPSBpbm5lckJvdHRvbVJpZ2h0UmFkaXVzWSAqICgxLjAgLSBLQVBQQSk7XG4gICAgY29uc3QgYm90dG9tUmlnaHRZQ29vcmQgPSB0b3AgKyBoZWlnaHQgLSBNYXRoLm1heChib3JkZXJCb3R0b21XaWR0aCwgcmJyKTtcbiAgICAvLyBDbGlwIGlubmVyIHRvcCBsZWZ0IGNhcFxuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGggLSBjMywgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgsIGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoIC0gYzQsIGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIGJvdHRvbVJpZ2h0WUNvb3JkKTtcbiAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgYm90dG9tUmlnaHRZQ29vcmQpO1xuICAgIC8vIE1vdmUgZG93biBpbiBjYXNlIHRoZSBtYXJnaW4gZXhjZWVkZXMgdGhlIHJhZGl1c1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQgLSByYnIpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIG91dGVyIHRvcCBsZWZ0IGNhcFxuICAgIGNvbnN0IGM1ID0gcmJyICogKDEuMCAtIEtBUFBBKTtcbiAgICAvLyBDbGlwIG91dGVyIHRvcCBsZWZ0IGNhcFxuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gYzUsIGxlZnQgKyB3aWR0aCAtIGM1LCB0b3AgKyBoZWlnaHQsIGxlZnQgKyB3aWR0aCAtIHJiciwgdG9wICsgaGVpZ2h0KTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgY3R4LmNsaXAoKTtcbiAgICAvLyBDbGlwIGJvcmRlciBib3R0b20gY2FwIGpvaW5zXG4gICAgaWYgKGJvcmRlclJpZ2h0V2lkdGgpIHtcbiAgICAgICAgY29uc3QgYnJTbG9wZSA9IGJvcmRlckJvdHRvbVdpZHRoIC8gYm9yZGVyUmlnaHRXaWR0aDtcbiAgICAgICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLyAyLCBiclNsb3BlICogKC13aWR0aCAvIDIpICsgdG9wICsgaGVpZ2h0KTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCk7XG4gICAgICAgIGN0eC5saW5lVG8obGVmdCwgdG9wICsgaGVpZ2h0KTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3ApO1xuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgICAgIGN0eC5jbGlwKCk7XG4gICAgfVxuICAgIGlmIChib3JkZXJMZWZ0V2lkdGgpIHtcbiAgICAgICAgY29uc3QgdHJTbG9wZSA9IC1ib3JkZXJCb3R0b21XaWR0aCAvIGJvcmRlckxlZnRXaWR0aDtcbiAgICAgICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLyAyLCB0clNsb3BlICogKHdpZHRoIC8gMikgKyB0b3AgKyBoZWlnaHQpO1xuICAgICAgICBjdHgubGluZVRvKGxlZnQsIHRvcCArIGhlaWdodCk7XG4gICAgICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQpO1xuICAgICAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wKTtcbiAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICBjdHguY2xpcCgpO1xuICAgIH1cbn07XG5jb25zdCBmaWxsQm9yZGVyQm90dG9tID0gKGN0eCwgbGF5b3V0LCBzdHlsZSwgcmJsLCByYnIpID0+IHtcbiAgICBjb25zdCB7IHRvcCwgbGVmdCwgd2lkdGgsIGhlaWdodCB9ID0gbGF5b3V0O1xuICAgIGNvbnN0IHsgYm9yZGVyQm90dG9tQ29sb3IsIGJvcmRlckJvdHRvbVN0eWxlLCBib3JkZXJCb3R0b21XaWR0aCwgYm9yZGVyUmlnaHRXaWR0aCwgYm9yZGVyTGVmdFdpZHRoLCB9ID0gc3R5bGU7XG4gICAgY29uc3QgYzAgPSByYmwgKiAoMS4wIC0gS0FQUEEpO1xuICAgIGNvbnN0IGMxID0gcmJyICogKDEuMCAtIEtBUFBBKTtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gcmJyKTtcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCAtIGMxLCBsZWZ0ICsgd2lkdGggLSBjMSwgdG9wICsgaGVpZ2h0LCBsZWZ0ICsgd2lkdGggLSByYnIsIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgcmJsLCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyBjMCwgdG9wICsgaGVpZ2h0LCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSBjMCwgbGVmdCwgdG9wICsgaGVpZ2h0IC0gcmJsKTtcbiAgICBjdHguc3Ryb2tlQ29sb3IoYm9yZGVyQm90dG9tQ29sb3IpO1xuICAgIGN0eC5saW5lV2lkdGgoTWF0aC5tYXgoYm9yZGVyQm90dG9tV2lkdGgsIGJvcmRlclJpZ2h0V2lkdGgsIGJvcmRlckxlZnRXaWR0aCkgKiAyKTtcbiAgICBpZiAoYm9yZGVyQm90dG9tU3R5bGUgPT09ICdkYXNoZWQnKSB7XG4gICAgICAgIGN0eC5kYXNoKGJvcmRlckJvdHRvbVdpZHRoICogMiwgeyBzcGFjZTogYm9yZGVyQm90dG9tV2lkdGggKiAxLjIgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGJvcmRlckJvdHRvbVN0eWxlID09PSAnZG90dGVkJykge1xuICAgICAgICBjdHguZGFzaChib3JkZXJCb3R0b21XaWR0aCwgeyBzcGFjZTogYm9yZGVyQm90dG9tV2lkdGggKiAxLjIgfSk7XG4gICAgfVxuICAgIGN0eC5zdHJva2UoKTtcbiAgICBjdHgudW5kYXNoKCk7XG59O1xuY29uc3QgY2xpcEJvcmRlckxlZnQgPSAoY3R4LCBsYXlvdXQsIHN0eWxlLCByYmwsIHJ0bCkgPT4ge1xuICAgIGNvbnN0IHsgdG9wLCBsZWZ0LCB3aWR0aCwgaGVpZ2h0IH0gPSBsYXlvdXQ7XG4gICAgY29uc3QgeyBib3JkZXJUb3BXaWR0aCwgYm9yZGVyTGVmdFdpZHRoLCBib3JkZXJCb3R0b21XaWR0aCB9ID0gc3R5bGU7XG4gICAgLy8gQ2xpcCBvdXRlciBsZWZ0IGJvcmRlciBlZGdlXG4gICAgY3R4Lm1vdmVUbyhsZWZ0LCB0b3AgKyBoZWlnaHQgLSByYmwpO1xuICAgIGN0eC5saW5lVG8obGVmdCwgdG9wICsgcnRsKTtcbiAgICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBvdXRlciB0b3AgbGVmdCBjYXBcbiAgICBjb25zdCBjMCA9IHJ0bCAqICgxLjAgLSBLQVBQQSk7XG4gICAgLy8gQ2xpcCBvdXRlciB0b3AgbGVmdCBjYXBcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0LCB0b3AgKyBjMCwgbGVmdCArIGMwLCB0b3AsIGxlZnQgKyBydGwsIHRvcCk7XG4gICAgLy8gTW92ZSByaWdodCBpbiBjYXNlIHRoZSBtYXJnaW4gZXhjZWVkZXMgdGhlIHJhZGl1c1xuICAgIGNvbnN0IHRvcExlZnRDb29yZFggPSBsZWZ0ICsgTWF0aC5tYXgoYm9yZGVyTGVmdFdpZHRoLCBydGwpO1xuICAgIGN0eC5saW5lVG8odG9wTGVmdENvb3JkWCwgdG9wKTtcbiAgICAvLyBDbGlwIGlubmVyIHRvcCBsZWZ0IGNhcFxuICAgIGN0eC5saW5lVG8odG9wTGVmdENvb3JkWCwgdG9wICsgYm9yZGVyVG9wV2lkdGgpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIGlubmVyIHRvcCBsZWZ0IGNhcFxuICAgIGNvbnN0IGlubmVyVG9wTGVmdFJhZGl1c1ggPSBNYXRoLm1heChydGwgLSBib3JkZXJMZWZ0V2lkdGgsIDApO1xuICAgIGNvbnN0IGlubmVyVG9wTGVmdFJhZGl1c1kgPSBNYXRoLm1heChydGwgLSBib3JkZXJUb3BXaWR0aCwgMCk7XG4gICAgY29uc3QgYzEgPSBpbm5lclRvcExlZnRSYWRpdXNYICogKDEuMCAtIEtBUFBBKTtcbiAgICBjb25zdCBjMiA9IGlubmVyVG9wTGVmdFJhZGl1c1kgKiAoMS4wIC0gS0FQUEEpO1xuICAgIC8vIENsaXAgaW5uZXIgdG9wIHJpZ2h0IGNhcFxuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyBib3JkZXJMZWZ0V2lkdGggKyBjMSwgdG9wICsgYm9yZGVyVG9wV2lkdGgsIGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIGJvcmRlclRvcFdpZHRoICsgYzIsIGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIE1hdGgubWF4KHJ0bCwgYm9yZGVyVG9wV2lkdGgpKTtcbiAgICAvLyBDbGlwIGlubmVyIGxlZnQgYm9yZGVyIGVkZ2VcbiAgICBjdHgubGluZVRvKGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIGhlaWdodCAtIE1hdGgubWF4KHJibCwgYm9yZGVyQm90dG9tV2lkdGgpKTtcbiAgICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBpbm5lciBib3R0b20gbGVmdCBjYXBcbiAgICBjb25zdCBpbm5lckJvdHRvbUxlZnRSYWRpdXNYID0gTWF0aC5tYXgocmJsIC0gYm9yZGVyTGVmdFdpZHRoLCAwKTtcbiAgICBjb25zdCBpbm5lckJvdHRvbUxlZnRSYWRpdXNZID0gTWF0aC5tYXgocmJsIC0gYm9yZGVyQm90dG9tV2lkdGgsIDApO1xuICAgIGNvbnN0IGMzID0gaW5uZXJCb3R0b21MZWZ0UmFkaXVzWCAqICgxLjAgLSBLQVBQQSk7XG4gICAgY29uc3QgYzQgPSBpbm5lckJvdHRvbUxlZnRSYWRpdXNZICogKDEuMCAtIEtBUFBBKTtcbiAgICBjb25zdCBib3R0b21MZWZ0WENvb3JkID0gbGVmdCArIE1hdGgubWF4KHJibCwgYm9yZGVyTGVmdFdpZHRoKTtcbiAgICAvLyBDbGlwIGlubmVyIHRvcCBsZWZ0IGNhcFxuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoIC0gYzQsIGxlZnQgKyBib3JkZXJMZWZ0V2lkdGggKyBjMywgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgsIGJvdHRvbUxlZnRYQ29vcmQsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoKTtcbiAgICBjdHgubGluZVRvKGJvdHRvbUxlZnRYQ29vcmQsIHRvcCArIGhlaWdodCk7XG4gICAgLy8gTW92ZSBsZWZ0IGluIGNhc2UgdGhlIG1hcmdpbiBleGNlZWRlcyB0aGUgcmFkaXVzXG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgcmJsLCB0b3AgKyBoZWlnaHQpO1xuICAgIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIG91dGVyIHRvcCByaWdodCBjYXBcbiAgICBjb25zdCBjNSA9IHJibCAqICgxLjAgLSBLQVBQQSk7XG4gICAgLy8gQ2xpcCBvdXRlciB0b3AgcmlnaHQgY2FwXG4gICAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGM1LCB0b3AgKyBoZWlnaHQsIGxlZnQsIHRvcCArIGhlaWdodCAtIGM1LCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSByYmwpO1xuICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICBjdHguY2xpcCgpO1xuICAgIC8vIENsaXAgYm9yZGVyIHJpZ2h0IGNhcCBqb2luc1xuICAgIGlmIChib3JkZXJCb3R0b21XaWR0aCkge1xuICAgICAgICBjb25zdCB0clNsb3BlID0gLWJvcmRlckJvdHRvbVdpZHRoIC8gYm9yZGVyTGVmdFdpZHRoO1xuICAgICAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIHRyU2xvcGUgKiAod2lkdGggLyAyKSArIHRvcCArIGhlaWdodCk7XG4gICAgICAgIGN0eC5saW5lVG8obGVmdCwgdG9wICsgaGVpZ2h0KTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3ApO1xuICAgICAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wKTtcbiAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICBjdHguY2xpcCgpO1xuICAgIH1cbiAgICBpZiAoYm9yZGVyQm90dG9tV2lkdGgpIHtcbiAgICAgICAgY29uc3QgdHJTbG9wZSA9IC1ib3JkZXJUb3BXaWR0aCAvIGJvcmRlckxlZnRXaWR0aDtcbiAgICAgICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLyAyLCB0clNsb3BlICogKC13aWR0aCAvIDIpICsgdG9wKTtcbiAgICAgICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3ApO1xuICAgICAgICBjdHgubGluZVRvKGxlZnQsIHRvcCArIGhlaWdodCk7XG4gICAgICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQpO1xuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgICAgIGN0eC5jbGlwKCk7XG4gICAgfVxufTtcbmNvbnN0IGZpbGxCb3JkZXJMZWZ0ID0gKGN0eCwgbGF5b3V0LCBzdHlsZSwgcmJsLCBydGwpID0+IHtcbiAgICBjb25zdCB7IHRvcCwgbGVmdCwgaGVpZ2h0IH0gPSBsYXlvdXQ7XG4gICAgY29uc3QgeyBib3JkZXJMZWZ0Q29sb3IsIGJvcmRlckxlZnRTdHlsZSwgYm9yZGVyTGVmdFdpZHRoLCBib3JkZXJUb3BXaWR0aCwgYm9yZGVyQm90dG9tV2lkdGgsIH0gPSBzdHlsZTtcbiAgICBjb25zdCBjMCA9IHJibCAqICgxLjAgLSBLQVBQQSk7XG4gICAgY29uc3QgYzEgPSBydGwgKiAoMS4wIC0gS0FQUEEpO1xuICAgIGN0eC5tb3ZlVG8obGVmdCArIHJibCwgdG9wICsgaGVpZ2h0KTtcbiAgICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgYzAsIHRvcCArIGhlaWdodCwgbGVmdCwgdG9wICsgaGVpZ2h0IC0gYzAsIGxlZnQsIHRvcCArIGhlaWdodCAtIHJibCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3AgKyBydGwpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQsIHRvcCArIGMxLCBsZWZ0ICsgYzEsIHRvcCwgbGVmdCArIHJ0bCwgdG9wKTtcbiAgICBjdHguc3Ryb2tlQ29sb3IoYm9yZGVyTGVmdENvbG9yKTtcbiAgICBjdHgubGluZVdpZHRoKE1hdGgubWF4KGJvcmRlckxlZnRXaWR0aCwgYm9yZGVyVG9wV2lkdGgsIGJvcmRlckJvdHRvbVdpZHRoKSAqIDIpO1xuICAgIGlmIChib3JkZXJMZWZ0U3R5bGUgPT09ICdkYXNoZWQnKSB7XG4gICAgICAgIGN0eC5kYXNoKGJvcmRlckxlZnRXaWR0aCAqIDIsIHsgc3BhY2U6IGJvcmRlckxlZnRXaWR0aCAqIDEuMiB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYm9yZGVyTGVmdFN0eWxlID09PSAnZG90dGVkJykge1xuICAgICAgICBjdHguZGFzaChib3JkZXJMZWZ0V2lkdGgsIHsgc3BhY2U6IGJvcmRlckxlZnRXaWR0aCAqIDEuMiB9KTtcbiAgICB9XG4gICAgY3R4LnN0cm9rZSgpO1xuICAgIGN0eC51bmRhc2goKTtcbn07XG5jb25zdCBzaG91bGRSZW5kZXJCb3JkZXJzID0gKG5vZGUpID0+IG5vZGUuYm94ICYmXG4gICAgKG5vZGUuYm94LmJvcmRlclRvcFdpZHRoIHx8XG4gICAgICAgIG5vZGUuYm94LmJvcmRlclJpZ2h0V2lkdGggfHxcbiAgICAgICAgbm9kZS5ib3guYm9yZGVyQm90dG9tV2lkdGggfHxcbiAgICAgICAgbm9kZS5ib3guYm9yZGVyTGVmdFdpZHRoKTtcbmNvbnN0IHJlbmRlckJvcmRlcnMgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlLmJveClcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghc2hvdWxkUmVuZGVyQm9yZGVycyhub2RlKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgYm9yZGVyVG9wV2lkdGggPSAwLCBib3JkZXJMZWZ0V2lkdGggPSAwLCBib3JkZXJSaWdodFdpZHRoID0gMCwgYm9yZGVyQm90dG9tV2lkdGggPSAwLCB9ID0gbm9kZS5ib3g7XG4gICAgY29uc3QgeyBvcGFjaXR5ID0gMSwgYm9yZGVyVG9wQ29sb3IgPSAnYmxhY2snLCBib3JkZXJUb3BTdHlsZSA9ICdzb2xpZCcsIGJvcmRlckxlZnRDb2xvciA9ICdibGFjaycsIGJvcmRlckxlZnRTdHlsZSA9ICdzb2xpZCcsIGJvcmRlclJpZ2h0Q29sb3IgPSAnYmxhY2snLCBib3JkZXJSaWdodFN0eWxlID0gJ3NvbGlkJywgYm9yZGVyQm90dG9tQ29sb3IgPSAnYmxhY2snLCBib3JkZXJCb3R0b21TdHlsZSA9ICdzb2xpZCcsIH0gPSBub2RlLnN0eWxlO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdGhpcyBpcyBhbHdheXMgYSBudW1iZXIgZHVlIHRvIHJlc29sdmUgYm9yZGVyIHJhZGl1cyBzdGVwXG4gICAgY29uc3QgYm9yZGVyVG9wTGVmdFJhZGl1cyA9IG5vZGUuc3R5bGUuYm9yZGVyVG9wTGVmdFJhZGl1cyB8fCAwO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdGhpcyBpcyBhbHdheXMgYSBudW1iZXIgZHVlIHRvIHJlc29sdmUgYm9yZGVyIHJhZGl1cyBzdGVwXG4gICAgY29uc3QgYm9yZGVyVG9wUmlnaHRSYWRpdXMgPSBub2RlLnN0eWxlLmJvcmRlclRvcFJpZ2h0UmFkaXVzIHx8IDA7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0aGlzIGlzIGFsd2F5cyBhIG51bWJlciBkdWUgdG8gcmVzb2x2ZSBib3JkZXIgcmFkaXVzIHN0ZXBcbiAgICBjb25zdCBib3JkZXJCb3R0b21MZWZ0UmFkaXVzID0gbm9kZS5zdHlsZS5ib3JkZXJCb3R0b21MZWZ0UmFkaXVzIHx8IDA7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0aGlzIGlzIGFsd2F5cyBhIG51bWJlciBkdWUgdG8gcmVzb2x2ZSBib3JkZXIgcmFkaXVzIHN0ZXBcbiAgICBjb25zdCBib3JkZXJCb3R0b21SaWdodFJhZGl1cyA9IG5vZGUuc3R5bGUuYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMgfHwgMDtcbiAgICBjb25zdCBzdHlsZSA9IHtcbiAgICAgICAgYm9yZGVyVG9wQ29sb3IsXG4gICAgICAgIGJvcmRlclRvcFdpZHRoLFxuICAgICAgICBib3JkZXJUb3BTdHlsZSxcbiAgICAgICAgYm9yZGVyTGVmdENvbG9yLFxuICAgICAgICBib3JkZXJMZWZ0V2lkdGgsXG4gICAgICAgIGJvcmRlckxlZnRTdHlsZSxcbiAgICAgICAgYm9yZGVyUmlnaHRDb2xvcixcbiAgICAgICAgYm9yZGVyUmlnaHRXaWR0aCxcbiAgICAgICAgYm9yZGVyUmlnaHRTdHlsZSxcbiAgICAgICAgYm9yZGVyQm90dG9tQ29sb3IsXG4gICAgICAgIGJvcmRlckJvdHRvbVdpZHRoLFxuICAgICAgICBib3JkZXJCb3R0b21TdHlsZX07XG4gICAgY29uc3QgcnRyID0gTWF0aC5taW4oYm9yZGVyVG9wUmlnaHRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICAgIGNvbnN0IHJ0bCA9IE1hdGgubWluKGJvcmRlclRvcExlZnRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICAgIGNvbnN0IHJiciA9IE1hdGgubWluKGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzLCAwLjUgKiB3aWR0aCwgMC41ICogaGVpZ2h0KTtcbiAgICBjb25zdCByYmwgPSBNYXRoLm1pbihib3JkZXJCb3R0b21MZWZ0UmFkaXVzLCAwLjUgKiB3aWR0aCwgMC41ICogaGVpZ2h0KTtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGN0eC5zdHJva2VPcGFjaXR5KG9wYWNpdHkpO1xuICAgIGlmIChib3JkZXJUb3BXaWR0aCkge1xuICAgICAgICBjdHguc2F2ZSgpO1xuICAgICAgICBjbGlwQm9yZGVyVG9wKGN0eCwgbm9kZS5ib3gsIHN0eWxlLCBydHIsIHJ0bCk7XG4gICAgICAgIGZpbGxCb3JkZXJUb3AoY3R4LCBub2RlLmJveCwgc3R5bGUsIHJ0ciwgcnRsKTtcbiAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICB9XG4gICAgaWYgKGJvcmRlclJpZ2h0V2lkdGgpIHtcbiAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgY2xpcEJvcmRlclJpZ2h0KGN0eCwgbm9kZS5ib3gsIHN0eWxlLCBydHIsIHJicik7XG4gICAgICAgIGZpbGxCb3JkZXJSaWdodChjdHgsIG5vZGUuYm94LCBzdHlsZSwgcnRyLCByYnIpO1xuICAgICAgICBjdHgucmVzdG9yZSgpO1xuICAgIH1cbiAgICBpZiAoYm9yZGVyQm90dG9tV2lkdGgpIHtcbiAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgY2xpcEJvcmRlckJvdHRvbShjdHgsIG5vZGUuYm94LCBzdHlsZSwgcmJsLCByYnIpO1xuICAgICAgICBmaWxsQm9yZGVyQm90dG9tKGN0eCwgbm9kZS5ib3gsIHN0eWxlLCByYmwsIHJicik7XG4gICAgICAgIGN0eC5yZXN0b3JlKCk7XG4gICAgfVxuICAgIGlmIChib3JkZXJMZWZ0V2lkdGgpIHtcbiAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgY2xpcEJvcmRlckxlZnQoY3R4LCBub2RlLmJveCwgc3R5bGUsIHJibCwgcnRsKTtcbiAgICAgICAgZmlsbEJvcmRlckxlZnQoY3R4LCBub2RlLmJveCwgc3R5bGUsIHJibCwgcnRsKTtcbiAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICB9XG4gICAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbmNvbnN0IGRyYXdCYWNrZ3JvdW5kID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IHRvcCwgbGVmdCwgd2lkdGgsIGhlaWdodCB9ID0gbm9kZS5ib3g7XG4gICAgY29uc3QgY29sb3IgPSBwYXJzZUNvbG9yKG5vZGUuc3R5bGUuYmFja2dyb3VuZENvbG9yKTtcbiAgICBjb25zdCBub2RlT3BhY2l0eSA9IGlzTmlsKG5vZGUuc3R5bGU/Lm9wYWNpdHkpID8gMSA6IG5vZGUuc3R5bGUub3BhY2l0eTtcbiAgICBjb25zdCBvcGFjaXR5ID0gTWF0aC5taW4oY29sb3Iub3BhY2l0eSwgbm9kZU9wYWNpdHkpO1xuICAgIGN0eFxuICAgICAgICAuZmlsbE9wYWNpdHkob3BhY2l0eSlcbiAgICAgICAgLmZpbGxDb2xvcihjb2xvci52YWx1ZSlcbiAgICAgICAgLnJlY3QobGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0KVxuICAgICAgICAuZmlsbCgpO1xufTtcbmNvbnN0IHJlbmRlckJhY2tncm91bmQgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgY29uc3QgaGFzQmFja2dyb3VuZCA9ICEhbm9kZS5ib3ggJiYgISFub2RlLnN0eWxlPy5iYWNrZ3JvdW5kQ29sb3I7XG4gICAgaWYgKGhhc0JhY2tncm91bmQpIHtcbiAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgY2xpcE5vZGUoY3R4LCBub2RlKTtcbiAgICAgICAgZHJhd0JhY2tncm91bmQoY3R4LCBub2RlKTtcbiAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICB9XG59O1xuXG5jb25zdCBpc1N0cmluZyA9ICh2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJztcbmNvbnN0IGlzU3JjSWQgPSAodmFsdWUpID0+IC9eIy4rLy50ZXN0KHZhbHVlKTtcbmNvbnN0IHJlbmRlckxpbmsgPSAoY3R4LCBub2RlLCBzcmMpID0+IHtcbiAgICBpZiAoIXNyYyB8fCAhbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBpc0lkID0gaXNTcmNJZChzcmMpO1xuICAgIGNvbnN0IG1ldGhvZCA9IGlzSWQgPyAnZ29UbycgOiAnbGluayc7XG4gICAgY29uc3QgdmFsdWUgPSBpc0lkID8gc3JjLnNsaWNlKDEpIDogc3JjO1xuICAgIGNvbnN0IHsgdG9wLCBsZWZ0LCB3aWR0aCwgaGVpZ2h0IH0gPSBub2RlLmJveDtcbiAgICBjdHhbbWV0aG9kXShsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHQsIHZhbHVlKTtcbn07XG5jb25zdCBzZXRMaW5rID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGNvbnN0IHByb3BzID0gbm9kZS5wcm9wcyB8fCB7fTtcbiAgICBpZiAoJ3NyYycgaW4gcHJvcHMgJiYgaXNTdHJpbmcocHJvcHMuc3JjKSlcbiAgICAgICAgcmV0dXJuIHJlbmRlckxpbmsoY3R4LCBub2RlLCBwcm9wcy5zcmMpO1xuICAgIGlmICgnaHJlZicgaW4gcHJvcHMgJiYgaXNTdHJpbmcocHJvcHMuaHJlZikpXG4gICAgICAgIHJldHVybiByZW5kZXJMaW5rKGN0eCwgbm9kZSwgcHJvcHMuaHJlZik7XG59O1xuXG5jb25zdCBzZXREZXN0aW5hdGlvbiA9IChjdHgsIG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCFub2RlLnByb3BzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCdpZCcgaW4gbm9kZS5wcm9wcykge1xuICAgICAgICBjdHguYWRkTmFtZWREZXN0aW5hdGlvbihub2RlLnByb3BzLmlkLCAnWFlaJywgbnVsbCwgbm9kZS5ib3gudG9wLCBudWxsKTtcbiAgICB9XG59O1xuXG5jb25zdCBjbGVhbiA9IChvcHRpb25zKSA9PiB7XG4gICAgY29uc3Qgb3B0ID0geyAuLi5vcHRpb25zIH07XG4gICAgLy8gV2UgbmVlZCB0byBlbnN1cmUgdGhlIGVsZW1lbnRzIGFyZSBubyBwcmVzZW50IGlmIG5vdCB0cnVlXG4gICAgT2JqZWN0LmVudHJpZXMob3B0KS5mb3JFYWNoKChwYWlyKSA9PiB7XG4gICAgICAgIGlmICghcGFpclsxXSkge1xuICAgICAgICAgICAgZGVsZXRlIG9wdFtwYWlyWzBdXTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBvcHQ7XG59O1xuY29uc3QgcGFyc2VDb21tb25Gb3JtT3B0aW9ucyA9IChub2RlKSA9PiB7XG4gICAgLy8gQ29tbW9uIE9wdGlvbnNcbiAgICByZXR1cm4ge1xuICAgICAgICByZXF1aXJlZDogbm9kZS5wcm9wcz8ucmVxdWlyZWQgfHwgZmFsc2UsXG4gICAgICAgIG5vRXhwb3J0OiBub2RlLnByb3BzPy5ub0V4cG9ydCB8fCBmYWxzZSxcbiAgICAgICAgcmVhZE9ubHk6IG5vZGUucHJvcHM/LnJlYWRPbmx5IHx8IGZhbHNlLFxuICAgICAgICB2YWx1ZTogbm9kZS5wcm9wcz8udmFsdWUgfHwgdW5kZWZpbmVkLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IG5vZGUucHJvcHM/LmRlZmF1bHRWYWx1ZSB8fCB1bmRlZmluZWQsXG4gICAgfTtcbn07XG5jb25zdCBwYXJzZVRleHRJbnB1dE9wdGlvbnMgPSAobm9kZSwgZmllbGRTZXQpID0+IHtcbiAgICByZXR1cm4gY2xlYW4oe1xuICAgICAgICAuLi5wYXJzZUNvbW1vbkZvcm1PcHRpb25zKG5vZGUpLFxuICAgICAgICBwYXJlbnQ6IGZpZWxkU2V0IHx8IHVuZGVmaW5lZCxcbiAgICAgICAgYWxpZ246IG5vZGUucHJvcHM/LmFsaWduIHx8ICdsZWZ0JyxcbiAgICAgICAgbXVsdGlsaW5lOiBub2RlLnByb3BzPy5tdWx0aWxpbmUgfHwgdW5kZWZpbmVkLFxuICAgICAgICBwYXNzd29yZDogbm9kZS5wcm9wcz8ucGFzc3dvcmQgfHwgZmFsc2UsXG4gICAgICAgIG5vU3BlbGw6IG5vZGUucHJvcHM/Lm5vU3BlbGwgfHwgZmFsc2UsXG4gICAgICAgIGZvcm1hdDogbm9kZS5wcm9wcz8uZm9ybWF0IHx8IHVuZGVmaW5lZCxcbiAgICAgICAgZm9udFNpemU6IG5vZGUucHJvcHM/LmZvbnRTaXplIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgTWF4TGVuOiBub2RlLnByb3BzPy5tYXhMZW5ndGggfHwgdW5kZWZpbmVkLFxuICAgIH0pO1xufTtcbmNvbnN0IHBhcnNlU2VsZWN0QW5kTGlzdEZpZWxkT3B0aW9ucyA9IChub2RlKSA9PiB7XG4gICAgcmV0dXJuIGNsZWFuKHtcbiAgICAgICAgLi4ucGFyc2VDb21tb25Gb3JtT3B0aW9ucyhub2RlKSxcbiAgICAgICAgc29ydDogbm9kZS5wcm9wcz8uc29ydCB8fCBmYWxzZSxcbiAgICAgICAgZWRpdDogbm9kZS5wcm9wcz8uZWRpdCB8fCBmYWxzZSxcbiAgICAgICAgbXVsdGlTZWxlY3Q6IG5vZGUucHJvcHM/Lm11bHRpU2VsZWN0IHx8IGZhbHNlLFxuICAgICAgICBub1NwZWxsOiBub2RlLnByb3BzPy5ub1NwZWxsIHx8IGZhbHNlLFxuICAgICAgICBzZWxlY3Q6IG5vZGUucHJvcHM/LnNlbGVjdCB8fCBbJyddLFxuICAgIH0pO1xufTtcbmNvbnN0IGdldEFwcGVhcmFuY2UgPSAoY3R4LCBjb2RlcG9pbnQsIHdpZHRoLCBoZWlnaHQpID0+IHtcbiAgICBjb25zdCBhcHBlYXJhbmNlID0gY3R4LnJlZih7XG4gICAgICAgIFR5cGU6ICdYT2JqZWN0JyxcbiAgICAgICAgU3VidHlwZTogJ0Zvcm0nLFxuICAgICAgICBCQm94OiBbMCwgMCwgd2lkdGgsIGhlaWdodF0sXG4gICAgICAgIFJlc291cmNlczoge1xuICAgICAgICAgICAgUHJvY1NldDogWydQREYnLCAnVGV4dCcsICdJbWFnZUInLCAnSW1hZ2VDJywgJ0ltYWdlSSddLFxuICAgICAgICAgICAgRm9udDoge1xuICAgICAgICAgICAgICAgIFphRGk6IGN0eC5fYWNyb2Zvcm0uZm9udHMuWmFEaSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgYXBwZWFyYW5jZS5pbml0RGVmbGF0ZSgpO1xuICAgIGFwcGVhcmFuY2Uud3JpdGUoYC9UeCBCTUNcXG5xXFxuL1phRGkgJHtoZWlnaHQgKiAwLjh9IFRmXFxuQlRcXG4ke3dpZHRoICogMC40NX0gJHtoZWlnaHQgLyA0fSBUZCAoJHtjb2RlcG9pbnR9KSBUalxcbkVUXFxuUVxcbkVNQ2ApO1xuICAgIGFwcGVhcmFuY2UuZW5kKG51bGwpO1xuICAgIHJldHVybiBhcHBlYXJhbmNlO1xufTtcbmNvbnN0IHBhcnNlQ2hlY2tib3hPcHRpb25zID0gKGN0eCwgbm9kZSwgZmllbGRTZXQpID0+IHtcbiAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IG5vZGUuYm94IHx8IHt9O1xuICAgIGNvbnN0IG9uT3B0aW9uID0gbm9kZS5wcm9wcz8ub25TdGF0ZSB8fCAnWWVzJztcbiAgICBjb25zdCBvZmZPcHRpb24gPSBub2RlLnByb3BzPy5vZmZTdGF0ZSB8fCAnT2ZmJztcbiAgICBjb25zdCB4TWFyayA9IG5vZGUucHJvcHM/LnhNYXJrIHx8IGZhbHNlO1xuICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGN0eC5fYWNyb2Zvcm0uZm9udHMsICdaYURpJykpIHtcbiAgICAgICAgY29uc3QgcmVmID0gY3R4LnJlZih7XG4gICAgICAgICAgICBUeXBlOiAnRm9udCcsXG4gICAgICAgICAgICBTdWJ0eXBlOiAnVHlwZTEnLFxuICAgICAgICAgICAgQmFzZUZvbnQ6ICdaYXBmRGluZ2JhdHMnLFxuICAgICAgICB9KTtcbiAgICAgICAgY3R4Ll9hY3JvZm9ybS5mb250cy5aYURpID0gcmVmO1xuICAgICAgICByZWYuZW5kKG51bGwpO1xuICAgIH1cbiAgICBjb25zdCBub3JtYWxBcHBlYXJhbmNlID0ge1xuICAgICAgICBbb25PcHRpb25dOiBnZXRBcHBlYXJhbmNlKGN0eCwgeE1hcmsgPyAnOCcgOiAnNCcsIHdpZHRoLCBoZWlnaHQpLFxuICAgICAgICBbb2ZmT3B0aW9uXTogZ2V0QXBwZWFyYW5jZShjdHgsIHhNYXJrID8gJyAnIDogJzgnLCB3aWR0aCwgaGVpZ2h0KSxcbiAgICB9O1xuICAgIHJldHVybiBjbGVhbih7XG4gICAgICAgIC4uLnBhcnNlQ29tbW9uRm9ybU9wdGlvbnMobm9kZSksXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogbm9kZS5wcm9wcz8uYmFja2dyb3VuZENvbG9yIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgYm9yZGVyQ29sb3I6IG5vZGUucHJvcHM/LmJvcmRlckNvbG9yIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgcGFyZW50OiBmaWVsZFNldCB8fCB1bmRlZmluZWQsXG4gICAgICAgIHZhbHVlOiBgLyR7bm9kZS5wcm9wcz8uY2hlY2tlZCA9PT0gdHJ1ZSA/IG9uT3B0aW9uIDogb2ZmT3B0aW9ufWAsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogYC8ke25vZGUucHJvcHM/LmNoZWNrZWQgPT09IHRydWUgPyBvbk9wdGlvbiA6IG9mZk9wdGlvbn1gLFxuICAgICAgICBBUzogbm9kZS5wcm9wcz8uY2hlY2tlZCA9PT0gdHJ1ZSA/IG9uT3B0aW9uIDogb2ZmT3B0aW9uLFxuICAgICAgICBBUDogeyBOOiBub3JtYWxBcHBlYXJhbmNlLCBEOiBub3JtYWxBcHBlYXJhbmNlIH0sXG4gICAgfSk7XG59O1xuXG5jb25zdCByZW5kZXJUZXh0SW5wdXQgPSAoY3R4LCBub2RlLCBvcHRpb25zKSA9PiB7XG4gICAgaWYgKCFub2RlLmJveClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHsgdG9wLCBsZWZ0LCB3aWR0aCwgaGVpZ2h0IH0gPSBub2RlLmJveDtcbiAgICAvLyBFbGVtZW50J3MgbmFtZVxuICAgIGNvbnN0IG5hbWUgPSBub2RlLnByb3BzPy5uYW1lIHx8ICcnO1xuICAgIGNvbnN0IGZpZWxkU2V0T3B0aW9ucyA9IG9wdGlvbnMuZmllbGRTZXRzPy5hdCgwKTtcbiAgICBpZiAoIWN0eC5fcm9vdC5kYXRhLkFjcm9Gb3JtKSB7XG4gICAgICAgIGN0eC5pbml0Rm9ybSgpO1xuICAgIH1cbiAgICBjdHguZm9ybVRleHQobmFtZSwgbGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0LCBwYXJzZVRleHRJbnB1dE9wdGlvbnMobm9kZSwgZmllbGRTZXRPcHRpb25zKSk7XG59O1xuXG5jb25zdCByZW5kZXJTZWxlY3QgPSAoY3R4LCBub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlLmJveClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHsgdG9wLCBsZWZ0LCB3aWR0aCwgaGVpZ2h0IH0gPSBub2RlLmJveDtcbiAgICAvLyBFbGVtZW50J3MgbmFtZVxuICAgIGNvbnN0IG5hbWUgPSBub2RlLnByb3BzPy5uYW1lIHx8ICcnO1xuICAgIGlmICghY3R4Ll9yb290LmRhdGEuQWNyb0Zvcm0pIHtcbiAgICAgICAgY3R4LmluaXRGb3JtKCk7XG4gICAgfVxuICAgIGN0eC5mb3JtQ29tYm8obmFtZSwgbGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0LCBwYXJzZVNlbGVjdEFuZExpc3RGaWVsZE9wdGlvbnMobm9kZSkpO1xufTtcblxuY29uc3QgcmVuZGVyRmllbGRTZXQgPSAoY3R4LCBub2RlLCBvcHRpb25zKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IG5vZGUucHJvcHM/Lm5hbWUgfHwgJyc7XG4gICAgaWYgKCFjdHguX3Jvb3QuZGF0YS5BY3JvRm9ybSkge1xuICAgICAgICBjdHguaW5pdEZvcm0oKTtcbiAgICB9XG4gICAgY29uc3QgZm9ybUZpZWxkID0gY3R4LmZvcm1GaWVsZChuYW1lKTtcbiAgICBjb25zdCBvcHRpb24gPSBvcHRpb25zO1xuICAgIGlmICghb3B0aW9uLmZpZWxkU2V0cykge1xuICAgICAgICBvcHRpb24uZmllbGRTZXRzID0gW2Zvcm1GaWVsZF07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBvcHRpb24uZmllbGRTZXRzLnB1c2goZm9ybUZpZWxkKTtcbiAgICB9XG59O1xuY29uc3QgY2xlYW5VcEZpZWxkU2V0ID0gKF9jdHgsIF9ub2RlLCBvcHRpb25zKSA9PiB7XG4gICAgb3B0aW9ucy5maWVsZFNldHMucG9wKCk7XG59O1xuXG5jb25zdCByZW5kZXJMaXN0ID0gKGN0eCwgbm9kZSkgPT4ge1xuICAgIGlmICghbm9kZS5ib3gpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IHRvcCwgbGVmdCwgd2lkdGgsIGhlaWdodCB9ID0gbm9kZS5ib3ggfHwge307XG4gICAgLy8gRWxlbWVudCdzIG5hbWVcbiAgICBjb25zdCBuYW1lID0gKCduYW1lJyBpbiBub2RlLnByb3BzID8gbm9kZS5wcm9wcy5uYW1lIHx8ICcnIDogJycpO1xuICAgIGlmICghY3R4Ll9yb290LmRhdGEuQWNyb0Zvcm0pIHtcbiAgICAgICAgY3R4LmluaXRGb3JtKCk7XG4gICAgfVxuICAgIGN0eC5mb3JtTGlzdChuYW1lLCBsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHQsIHBhcnNlU2VsZWN0QW5kTGlzdEZpZWxkT3B0aW9ucyhub2RlKSk7XG59O1xuXG5jb25zdCByZW5kZXJDaGVja2JveCA9IChjdHgsIG5vZGUsIG9wdGlvbnMpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgeyB0b3AsIGxlZnQsIHdpZHRoLCBoZWlnaHQgfSA9IG5vZGUuYm94O1xuICAgIC8vIEVsZW1lbnQncyBuYW1lXG4gICAgY29uc3QgbmFtZSA9IG5vZGUucHJvcHM/Lm5hbWUgfHwgJyc7XG4gICAgY29uc3QgZmllbGRTZXRPcHRpb25zID0gb3B0aW9ucy5maWVsZFNldHM/LmF0KDApO1xuICAgIGlmICghY3R4Ll9yb290LmRhdGEuQWNyb0Zvcm0pIHtcbiAgICAgICAgY3R4LmluaXRGb3JtKCk7XG4gICAgfVxuICAgIGN0eC5mb3JtQ2hlY2tib3gobmFtZSwgbGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0LCBwYXJzZUNoZWNrYm94T3B0aW9ucyhjdHgsIG5vZGUsIGZpZWxkU2V0T3B0aW9ucykpO1xufTtcblxuY29uc3QgaXNSZWN1cnNpdmVOb2RlID0gKG5vZGUpID0+IG5vZGUudHlwZSAhPT0gUC5UZXh0ICYmIG5vZGUudHlwZSAhPT0gUC5Tdmc7XG5jb25zdCByZW5kZXJDaGlsZHJlbiA9IChjdHgsIG5vZGUsIG9wdGlvbnMpID0+IHtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGlmIChub2RlLmJveCkge1xuICAgICAgICBjdHgudHJhbnNsYXRlKG5vZGUuYm94LmxlZnQsIG5vZGUuYm94LnRvcCk7XG4gICAgfVxuICAgIGNvbnN0IGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbiB8fCBbXTtcbiAgICBjb25zdCByZW5kZXJDaGlsZCA9IChjaGlsZCkgPT4gcmVuZGVyTm9kZShjdHgsIGNoaWxkLCBvcHRpb25zKTtcbiAgICBjaGlsZHJlbi5mb3JFYWNoKHJlbmRlckNoaWxkKTtcbiAgICBjdHgucmVzdG9yZSgpO1xufTtcbmNvbnN0IHJlbmRlckZucyA9IHtcbiAgICBbUC5UZXh0XTogcmVuZGVyVGV4dCxcbiAgICBbUC5Ob3RlXTogcmVuZGVyTm90ZSxcbiAgICBbUC5JbWFnZV06IHJlbmRlckltYWdlLFxuICAgIFtQLkZpZWxkU2V0XTogcmVuZGVyRmllbGRTZXQsXG4gICAgW1AuVGV4dElucHV0XTogcmVuZGVyVGV4dElucHV0LFxuICAgIFtQLlNlbGVjdF06IHJlbmRlclNlbGVjdCxcbiAgICBbUC5DaGVja2JveF06IHJlbmRlckNoZWNrYm94LFxuICAgIFtQLkxpc3RdOiByZW5kZXJMaXN0LFxuICAgIFtQLkNhbnZhc106IHJlbmRlckNhbnZhcyxcbiAgICBbUC5TdmddOiByZW5kZXJTdmcsXG4gICAgW1AuTGlua106IHNldExpbmssXG59O1xuY29uc3QgY2xlYW5VcEZucyA9IHtcbiAgICBbUC5GaWVsZFNldF06IGNsZWFuVXBGaWVsZFNldCxcbn07XG5jb25zdCByZW5kZXJOb2RlID0gKGN0eCwgbm9kZSwgb3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IG92ZXJmbG93SGlkZGVuID0gbm9kZS5zdHlsZT8ub3ZlcmZsb3cgPT09ICdoaWRkZW4nO1xuICAgIGNvbnN0IHNob3VsZFJlbmRlckNoaWxkcmVuID0gaXNSZWN1cnNpdmVOb2RlKG5vZGUpO1xuICAgIGlmIChub2RlLnR5cGUgPT09IFAuUGFnZSlcbiAgICAgICAgcmVuZGVyUGFnZShjdHgsIG5vZGUpO1xuICAgIGN0eC5zYXZlKCk7XG4gICAgaWYgKG92ZXJmbG93SGlkZGVuKVxuICAgICAgICBjbGlwTm9kZShjdHgsIG5vZGUpO1xuICAgIGFwcGx5VHJhbnNmb3JtYXRpb25zKGN0eCwgbm9kZSk7XG4gICAgcmVuZGVyQmFja2dyb3VuZChjdHgsIG5vZGUpO1xuICAgIHJlbmRlckJvcmRlcnMoY3R4LCBub2RlKTtcbiAgICBjb25zdCByZW5kZXJGbiA9IHJlbmRlckZuc1tub2RlLnR5cGVdO1xuICAgIGlmIChyZW5kZXJGbilcbiAgICAgICAgcmVuZGVyRm4oY3R4LCBub2RlLCBvcHRpb25zKTtcbiAgICBpZiAoc2hvdWxkUmVuZGVyQ2hpbGRyZW4pXG4gICAgICAgIHJlbmRlckNoaWxkcmVuKGN0eCwgbm9kZSwgb3B0aW9ucyk7XG4gICAgY29uc3QgY2xlYW5VcEZuID0gY2xlYW5VcEZuc1tub2RlLnR5cGVdO1xuICAgIGlmIChjbGVhblVwRm4pXG4gICAgICAgIGNsZWFuVXBGbihjdHgsIG5vZGUsIG9wdGlvbnMpO1xuICAgIHNldERlc3RpbmF0aW9uKGN0eCwgbm9kZSk7XG4gICAgcmVuZGVyRGVidWcoY3R4LCBub2RlKTtcbiAgICBjdHgucmVzdG9yZSgpO1xufTtcblxuY29uc3QgYWRkTm9kZUJvb2ttYXJrID0gKGN0eCwgbm9kZSwgcGFnZU51bWJlciwgcmVnaXN0cnkpID0+IHtcbiAgICBpZiAoIW5vZGUuYm94KVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCFub2RlLnByb3BzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCdib29rbWFyaycgaW4gbm9kZS5wcm9wcyAmJiBub2RlLnByb3BzLmJvb2ttYXJrKSB7XG4gICAgICAgIGNvbnN0IGJvb2ttYXJrID0gbm9kZS5wcm9wcy5ib29rbWFyaztcbiAgICAgICAgY29uc3QgeyB0aXRsZSwgcGFyZW50LCBleHBhbmRlZCwgem9vbSwgZml0IH0gPSBib29rbWFyaztcbiAgICAgICAgY29uc3Qgb3V0bGluZSA9IHJlZ2lzdHJ5W3BhcmVudF0gfHwgY3R4Lm91dGxpbmU7XG4gICAgICAgIGNvbnN0IHRvcCA9IGJvb2ttYXJrLnRvcCB8fCBub2RlLmJveC50b3A7XG4gICAgICAgIGNvbnN0IGxlZnQgPSBib29rbWFyay5sZWZ0IHx8IG5vZGUuYm94LmxlZnQ7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gb3V0bGluZS5hZGRJdGVtKHRpdGxlLCB7XG4gICAgICAgICAgICBwYWdlTnVtYmVyLFxuICAgICAgICAgICAgZXhwYW5kZWQsXG4gICAgICAgICAgICB0b3AsXG4gICAgICAgICAgICBsZWZ0LFxuICAgICAgICAgICAgem9vbSxcbiAgICAgICAgICAgIGZpdCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJlZ2lzdHJ5W2Jvb2ttYXJrLnJlZl0gPSBpbnN0YW5jZTtcbiAgICB9XG4gICAgaWYgKCFub2RlLmNoaWxkcmVuKVxuICAgICAgICByZXR1cm47XG4gICAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKChjaGlsZCkgPT4gYWRkTm9kZUJvb2ttYXJrKGN0eCwgY2hpbGQsIHBhZ2VOdW1iZXIsIHJlZ2lzdHJ5KSk7XG59O1xuY29uc3QgYWRkQm9va21hcmtzID0gKGN0eCwgcm9vdCkgPT4ge1xuICAgIGNvbnN0IHJlZ2lzdHJ5ID0ge307XG4gICAgY29uc3QgcGFnZXMgPSByb290LmNoaWxkcmVuIHx8IFtdO1xuICAgIHBhZ2VzLmZvckVhY2goKHBhZ2UsIGkpID0+IHtcbiAgICAgICAgYWRkTm9kZUJvb2ttYXJrKGN0eCwgcGFnZSwgaSwgcmVnaXN0cnkpO1xuICAgIH0pO1xufTtcblxuY29uc3QgcmVuZGVyID0gKGN0eCwgZG9jKSA9PiB7XG4gICAgY29uc3QgcGFnZXMgPSBkb2MuY2hpbGRyZW4gfHwgW107XG4gICAgY29uc3Qgb3B0aW9ucyA9IHsgaW1hZ2VDYWNoZTogbmV3IE1hcCgpLCBmaWVsZFNldHM6IFtdIH07XG4gICAgcGFnZXMuZm9yRWFjaCgocGFnZSkgPT4gcmVuZGVyTm9kZShjdHgsIHBhZ2UsIG9wdGlvbnMpKTtcbiAgICBhZGRCb29rbWFya3MoY3R4LCBkb2MpO1xuICAgIGN0eC5lbmQoKTtcbiAgICByZXR1cm4gY3R4O1xufTtcblxuZXhwb3J0IHsgcmVuZGVyIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/render/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/renderer/lib/react-pdf.js":
/*!***********************************************************!*\
  !*** ./node_modules/@react-pdf/renderer/lib/react-pdf.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlobProvider: () => (/* binding */ BlobProvider),\n/* harmony export */   Canvas: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Canvas),\n/* harmony export */   Checkbox: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Checkbox),\n/* harmony export */   Circle: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Circle),\n/* harmony export */   ClipPath: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.ClipPath),\n/* harmony export */   Defs: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Defs),\n/* harmony export */   Document: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Document),\n/* harmony export */   Ellipse: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Ellipse),\n/* harmony export */   FieldSet: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.FieldSet),\n/* harmony export */   Font: () => (/* binding */ Font),\n/* harmony export */   G: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.G),\n/* harmony export */   Image: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Image),\n/* harmony export */   Line: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Line),\n/* harmony export */   LinearGradient: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.LinearGradient),\n/* harmony export */   Link: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Link),\n/* harmony export */   List: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.List),\n/* harmony export */   Note: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Note),\n/* harmony export */   PDFDownloadLink: () => (/* binding */ PDFDownloadLink),\n/* harmony export */   PDFViewer: () => (/* binding */ PDFViewer),\n/* harmony export */   Page: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Page),\n/* harmony export */   Path: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Path),\n/* harmony export */   Polygon: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polygon),\n/* harmony export */   Polyline: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polyline),\n/* harmony export */   RadialGradient: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.RadialGradient),\n/* harmony export */   Rect: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Rect),\n/* harmony export */   Select: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Select),\n/* harmony export */   Stop: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Stop),\n/* harmony export */   StyleSheet: () => (/* binding */ StyleSheet),\n/* harmony export */   Svg: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Svg),\n/* harmony export */   Text: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Text),\n/* harmony export */   TextInput: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.TextInput),\n/* harmony export */   TextInstance: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.TextInstance),\n/* harmony export */   Tspan: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Tspan),\n/* harmony export */   View: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.View),\n/* harmony export */   createRenderer: () => (/* binding */ createRenderer),\n/* harmony export */   \"default\": () => (/* binding */ index),\n/* harmony export */   pdf: () => (/* binding */ pdf),\n/* harmony export */   render: () => (/* binding */ render),\n/* harmony export */   renderToBuffer: () => (/* binding */ renderToBuffer),\n/* harmony export */   renderToFile: () => (/* binding */ renderToFile),\n/* harmony export */   renderToStream: () => (/* binding */ renderToStream),\n/* harmony export */   renderToString: () => (/* binding */ renderToString),\n/* harmony export */   usePDF: () => (/* binding */ usePDF),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/primitives */ \"(ssr)/./node_modules/@react-pdf/primitives/lib/index.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var _react_pdf_font__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-pdf/font */ \"(ssr)/./node_modules/@react-pdf/font/lib/index.js\");\n/* harmony import */ var _react_pdf_render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-pdf/render */ \"(ssr)/./node_modules/@react-pdf/render/lib/index.js\");\n/* harmony import */ var _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-pdf/pdfkit */ \"(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js\");\n/* harmony import */ var _react_pdf_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-pdf/layout */ \"(ssr)/./node_modules/@react-pdf/layout/lib/index.js\");\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var _react_pdf_reconciler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @react-pdf/reconciler */ \"(ssr)/./node_modules/@react-pdf/reconciler/lib/index.js\");\n\n\n\n\n\n\n\n\n\n\nconst omitNils = (object)=>Object.fromEntries(Object.entries(object).filter((_ref)=>{\n        let [, value] = _ref;\n        return value !== undefined;\n    }));\nconst createInstance = (type, _ref)=>{\n    let { style, children, ...props } = _ref;\n    return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: []\n    };\n};\nconst createTextInstance = (text)=>({\n        type: 'TEXT_INSTANCE',\n        value: text\n    });\nconst appendChild = (parent, child)=>{\n    const isParentText = parent.type === 'TEXT' || parent.type === 'LINK' || parent.type === 'TSPAN' || parent.type === 'NOTE';\n    const isChildTextInstance = child.type === 'TEXT_INSTANCE';\n    const isOrphanTextInstance = isChildTextInstance && !isParentText;\n    // Ignore orphan text instances.\n    // Caused by cases such as <>{name && <Text>{name}</Text>}</>\n    if (isOrphanTextInstance) {\n        console.warn(`Invalid '${child.value}' string child outside <Text> component`);\n        return;\n    }\n    parent.children.push(child);\n};\nconst appendChildToContainer = (parentInstance, child)=>{\n    if (parentInstance.type === 'ROOT') {\n        parentInstance.document = child;\n    } else {\n        appendChild(parentInstance, child);\n    }\n};\nconst insertBefore = (parentInstance, child, beforeChild)=>{\n    var _parentInstance$child;\n    const index = (_parentInstance$child = parentInstance.children) === null || _parentInstance$child === void 0 ? void 0 : _parentInstance$child.indexOf(beforeChild);\n    if (index === undefined) return;\n    if (index !== -1 && child) parentInstance.children.splice(index, 0, child);\n};\nconst removeChild = (parentInstance, child)=>{\n    var _parentInstance$child2;\n    const index = (_parentInstance$child2 = parentInstance.children) === null || _parentInstance$child2 === void 0 ? void 0 : _parentInstance$child2.indexOf(child);\n    if (index === undefined) return;\n    if (index !== -1) parentInstance.children.splice(index, 1);\n};\nconst removeChildFromContainer = (parentInstance, child)=>{\n    var _parentInstance$child3;\n    const index = (_parentInstance$child3 = parentInstance.children) === null || _parentInstance$child3 === void 0 ? void 0 : _parentInstance$child3.indexOf(child);\n    if (index === undefined) return;\n    if (index !== -1) parentInstance.children.splice(index, 1);\n};\nconst commitTextUpdate = (textInstance, oldText, newText)=>{\n    textInstance.value = newText;\n};\nconst commitUpdate = (instance, updatePayload, type, oldProps, newProps)=>{\n    const { style, ...props } = newProps;\n    instance.props = props;\n    instance.style = style;\n};\nconst createRenderer = (_ref2)=>{\n    let { onChange = ()=>{} } = _ref2;\n    return (0,_react_pdf_reconciler__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({\n        appendChild,\n        appendChildToContainer,\n        commitTextUpdate,\n        commitUpdate,\n        createInstance,\n        createTextInstance,\n        insertBefore,\n        removeChild,\n        removeChildFromContainer,\n        resetAfterCommit: onChange\n    });\n};\nvar version$1 = \"4.3.0\";\nvar packageJson = {\n    version: version$1\n};\nconst { version } = packageJson;\nconst fontStore = new _react_pdf_font__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n// We must keep a single renderer instance, otherwise React will complain\nlet renderer;\n// The pdf instance acts as an event emitter for DOM usage.\n// We only want to trigger an update when PDF content changes\nconst events = {};\nconst pdf = (initialValue)=>{\n    const onChange = ()=>{\n        var _events$change;\n        const listeners = ((_events$change = events.change) === null || _events$change === void 0 ? void 0 : _events$change.slice()) || [];\n        for(let i = 0; i < listeners.length; i += 1)listeners[i]();\n    };\n    const container = {\n        type: 'ROOT',\n        document: null\n    };\n    renderer = renderer || createRenderer({\n        onChange\n    });\n    const mountNode = renderer.createContainer(container);\n    const updateContainer = (doc, callback)=>{\n        renderer.updateContainer(doc, mountNode, null, callback);\n    };\n    if (initialValue) updateContainer(initialValue);\n    const render = async function(compress) {\n        if (compress === void 0) {\n            compress = true;\n        }\n        const props = container.document.props || {};\n        const { pdfVersion, language, pageLayout, pageMode, title, author, subject, keyboards, creator = 'react-pdf', producer = 'react-pdf', creationDate = new Date(), modificationDate } = props;\n        const ctx = new _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n            compress,\n            pdfVersion,\n            lang: language,\n            displayTitle: true,\n            autoFirstPage: false,\n            info: omitNils({\n                Title: title,\n                Author: author,\n                Subject: subject,\n                Keywords: keyboards,\n                Creator: creator,\n                Producer: producer,\n                CreationDate: creationDate,\n                ModificationDate: modificationDate\n            })\n        });\n        if (pageLayout) {\n            ctx._root.data.PageLayout = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_7__.upperFirst)(pageLayout);\n        }\n        if (pageMode) {\n            ctx._root.data.PageMode = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_7__.upperFirst)(pageMode);\n        }\n        const layout = await (0,_react_pdf_layout__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(container.document, fontStore);\n        const fileStream = (0,_react_pdf_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(ctx, layout);\n        return {\n            layout,\n            fileStream\n        };\n    };\n    const callOnRender = function(params) {\n        if (params === void 0) {\n            params = {};\n        }\n        if (container.document.props.onRender) {\n            container.document.props.onRender(params);\n        }\n    };\n    const toBlob = async ()=>{\n        const chunks = [];\n        const { layout: _INTERNAL__LAYOUT__DATA_, fileStream: instance } = await render();\n        return new Promise((resolve, reject)=>{\n            instance.on('data', (chunk)=>{\n                chunks.push(chunk instanceof Uint8Array ? chunk : new Uint8Array(chunk));\n            });\n            instance.on('end', ()=>{\n                try {\n                    const blob = new Blob(chunks, {\n                        type: 'application/pdf'\n                    });\n                    callOnRender({\n                        blob,\n                        _INTERNAL__LAYOUT__DATA_\n                    });\n                    resolve(blob);\n                } catch (error) {\n                    reject(error);\n                }\n            });\n        });\n    };\n    // TODO: rename this method to `toStream` in next major release, because it return stream not a buffer\n    const toBuffer = async ()=>{\n        const { layout: _INTERNAL__LAYOUT__DATA_, fileStream } = await render();\n        callOnRender({\n            _INTERNAL__LAYOUT__DATA_\n        });\n        return fileStream;\n    };\n    /*\n   * TODO: remove this method in next major release. it is buggy\n   * see\n   * - https://github.com/diegomura/react-pdf/issues/2112\n   * - https://github.com/diegomura/react-pdf/issues/2095\n   */ const toString = async ()=>{\n        if (true) {\n            console.warn('`toString` is deprecated and will be removed in next major release');\n        }\n        let result = '';\n        const { fileStream: instance } = await render(false); // For some reason, when rendering to string if compress=true the document is blank\n        return new Promise((resolve, reject)=>{\n            try {\n                instance.on('data', (buffer)=>{\n                    result += buffer;\n                });\n                instance.on('end', ()=>{\n                    callOnRender();\n                    resolve(result);\n                });\n            } catch (error) {\n                reject(error);\n            }\n        });\n    };\n    const on = (event, listener)=>{\n        if (!events[event]) events[event] = [];\n        events[event].push(listener);\n    };\n    const removeListener = (event, listener)=>{\n        if (!events[event]) return;\n        const idx = events[event].indexOf(listener);\n        if (idx > -1) events[event].splice(idx, 1);\n    };\n    return {\n        on,\n        container,\n        toBlob,\n        toBuffer,\n        toString,\n        removeListener,\n        updateContainer\n    };\n};\nconst Font = fontStore;\nconst StyleSheet = {\n    create: (s)=>s\n};\n/**\n * @param {React.ReactElement} element\n * @returns {Promise<NodeJS.ReadableStream>}\n */ const renderToStream = async (element)=>{\n    const instance = pdf(element);\n    const stream = await instance.toBuffer();\n    return stream;\n};\n/**\n * @param {React.ReactElement} element\n * @param {string} filePath\n * @param {Function} [callback]\n */ const renderToFile = async (element, filePath, callback)=>{\n    const output = await renderToStream(element);\n    const stream = fs__WEBPACK_IMPORTED_MODULE_1__.createWriteStream(filePath);\n    output.pipe(stream);\n    return new Promise((resolve, reject)=>{\n        stream.on('finish', ()=>{\n            if (callback) callback(output, filePath);\n            resolve(output);\n        });\n        stream.on('error', reject);\n    });\n};\n/**\n * @param {React.ReactElement} element\n * @returns {Promise<Buffer>}\n */ const renderToBuffer = (element)=>renderToStream(element).then((stream)=>new Promise((resolve, reject)=>{\n            const chunks = [];\n            stream.on('data', (chunk)=>chunks.push(chunk));\n            stream.on('end', ()=>resolve(buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer.concat(chunks)));\n            stream.on('error', (error)=>reject(error));\n        }));\nconst renderToString = (element)=>{\n    if (true) {\n        console.warn('`renderToString` is deprecated and will be removed in next major release, use `renderToBuffer` instead');\n    }\n    return renderToBuffer(element).then((buffer)=>buffer.toString());\n};\nconst throwEnvironmentError = (name)=>{\n    throw new Error(`${name} is a web specific API. You're either using this component on Node, or your bundler is not loading react-pdf from the appropriate web build.`);\n};\nconst usePDF = ()=>{\n    throwEnvironmentError('usePDF');\n};\nconst PDFViewer = ()=>{\n    throwEnvironmentError('PDFViewer');\n};\nconst PDFDownloadLink = ()=>{\n    throwEnvironmentError('PDFDownloadLink');\n};\nconst BlobProvider = ()=>{\n    throwEnvironmentError('BlobProvider');\n};\nconst render = renderToFile;\n// TODO: remove this default export in next major release because it breaks tree-shacking\nvar index = {\n    pdf,\n    Font,\n    version,\n    StyleSheet,\n    usePDF,\n    PDFViewer,\n    BlobProvider,\n    PDFDownloadLink,\n    renderToStream,\n    renderToString,\n    renderToFile,\n    render,\n    ..._react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__\n};\n //# sourceMappingURL=react-pdf.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/renderer/lib/react-pdf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/stylesheet/lib/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@react-pdf/stylesheet/lib/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ resolveStyles),\n/* harmony export */   flatten: () => (/* binding */ flatten),\n/* harmony export */   transformColor: () => (/* binding */ transformColor)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var media_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! media-engine */ \"(ssr)/./node_modules/media-engine/src/index.js\");\n/* harmony import */ var hsl_to_hex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hsl-to-hex */ \"(ssr)/./node_modules/hsl-to-hex/index.js\");\n/* harmony import */ var color_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! color-string */ \"(ssr)/./node_modules/color-string/index.js\");\n/* harmony import */ var postcss_value_parser_lib_parse_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! postcss-value-parser/lib/parse.js */ \"(ssr)/./node_modules/postcss-value-parser/lib/parse.js\");\n/* harmony import */ var postcss_value_parser_lib_unit_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! postcss-value-parser/lib/unit.js */ \"(ssr)/./node_modules/postcss-value-parser/lib/unit.js\");\n\n\n\n\n\n\n\n/**\n * Remove nil values from array\n *\n * @param array - Style array\n * @returns Style array without nils\n */\nconst compact = (array) => array.filter(Boolean);\n/**\n * Merges style objects array\n *\n * @param styles - Style array\n * @returns Merged style object\n */\nconst mergeStyles = (styles) => styles.reduce((acc, style) => {\n    const s = Array.isArray(style) ? flatten(style) : style;\n    Object.keys(s).forEach((key) => {\n        if (s[key] !== null && s[key] !== undefined) {\n            acc[key] = s[key];\n        }\n    });\n    return acc;\n}, {});\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param styles - Style or style array\n * @returns Flattened style object\n */\nconst flatten = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(mergeStyles, compact, (_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.castArray));\n\n/**\n * Resolves media queries in styles object\n *\n * @param container - Container for which styles are resolved\n * @param style - Style description\n * @returns Resolved style object\n */\nconst resolveMediaQueries = (container, style) => {\n    return Object.keys(style).reduce((acc, key) => {\n        if (/@media/.test(key)) {\n            return {\n                ...acc,\n                ...media_engine__WEBPACK_IMPORTED_MODULE_1__({ [key]: style[key] }, container),\n            };\n        }\n        return { ...acc, [key]: style[key] };\n    }, {});\n};\n\nconst isRgb = (value) => /rgba?/g.test(value);\nconst isHsl = (value) => /hsla?/g.test(value);\n/**\n * Transform rgb color to hexa\n *\n * @param value - Styles value\n * @returns Transformed value\n */\nconst parseRgb = (value) => {\n    const rgb = color_string__WEBPACK_IMPORTED_MODULE_3__.get.rgb(value);\n    return color_string__WEBPACK_IMPORTED_MODULE_3__.to.hex(rgb);\n};\n/**\n * Transform Hsl color to hexa\n *\n * @param value - Styles value\n * @returns Transformed value\n */\nconst parseHsl = (value) => {\n    const hsl = color_string__WEBPACK_IMPORTED_MODULE_3__.get.hsl(value).map(Math.round);\n    const hex = hsl_to_hex__WEBPACK_IMPORTED_MODULE_2__(...hsl);\n    return hex.toUpperCase();\n};\n/**\n * Transform given color to hexa\n *\n * @param value - Styles value\n * @returns Transformed value\n */\nconst transformColor = (value) => {\n    if (isRgb(value))\n        return parseRgb(value);\n    if (isHsl(value))\n        return parseHsl(value);\n    return value;\n};\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param value - Scalar value\n * @returns Parsed value\n */\nconst parseValue = (value) => {\n    if (typeof value === 'number')\n        return { value, unit: undefined };\n    const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px|rem)?$/g.exec(value);\n    return match\n        ? { value: parseFloat(match[1]), unit: match[2] || 'pt' }\n        : { value, unit: undefined };\n};\n/**\n * Transform given scalar value\n *\n * @param container\n * @param value - Styles value\n * @returns Transformed value\n */\nconst transformUnit = (container, value) => {\n    const scalar = parseValue(value);\n    const outputDpi = 72;\n    const inputDpi = container.dpi || 72;\n    const mmFactor = (1 / 25.4) * outputDpi;\n    const cmFactor = (1 / 2.54) * outputDpi;\n    if (typeof scalar.value !== 'number')\n        return scalar.value;\n    switch (scalar.unit) {\n        case 'rem':\n            return scalar.value * (container.remBase || 18);\n        case 'in':\n            return scalar.value * outputDpi;\n        case 'mm':\n            return scalar.value * mmFactor;\n        case 'cm':\n            return scalar.value * cmFactor;\n        case 'vh':\n            return scalar.value * (container.height / 100);\n        case 'vw':\n            return scalar.value * (container.width / 100);\n        case 'px':\n            return Math.round(scalar.value * (outputDpi / inputDpi));\n        default:\n            return scalar.value;\n    }\n};\n\nconst processNumberValue = (key, value) => ({\n    [key]: (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat)(value),\n});\nconst processUnitValue = (key, value, container) => ({\n    [key]: transformUnit(container, value),\n});\nconst processColorValue = (key, value) => {\n    const result = { [key]: transformColor(value) };\n    return result;\n};\nconst processNoopValue = (key, value) => ({\n    [key]: value,\n});\n\nconst BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(in|mm|cm|pt|vw|vh|px|rem)?)\\s(\\S+)\\s(.+)/;\nconst matchBorderShorthand = (value) => value.match(BORDER_SHORTHAND_REGEX) || [];\nconst resolveBorderShorthand = (key, value, container) => {\n    const match = matchBorderShorthand(`${value}`);\n    if (match) {\n        const widthMatch = match[1] || value;\n        const styleMatch = match[4] || value;\n        const colorMatch = match[5] || value;\n        const style = styleMatch;\n        const color = colorMatch ? transformColor(colorMatch) : undefined;\n        const width = widthMatch ? transformUnit(container, widthMatch) : undefined;\n        if (key.match(/(Top|Right|Bottom|Left)$/)) {\n            return {\n                [`${key}Color`]: color,\n                [`${key}Style`]: style,\n                [`${key}Width`]: width,\n            };\n        }\n        if (key.match(/Color$/)) {\n            return {\n                borderTopColor: color,\n                borderRightColor: color,\n                borderBottomColor: color,\n                borderLeftColor: color,\n            };\n        }\n        if (key.match(/Style$/)) {\n            if (typeof style === 'number')\n                throw new Error(`Invalid border style: ${style}`);\n            return {\n                borderTopStyle: style,\n                borderRightStyle: style,\n                borderBottomStyle: style,\n                borderLeftStyle: style,\n            };\n        }\n        if (key.match(/Width$/)) {\n            if (typeof width !== 'number')\n                throw new Error(`Invalid border width: ${width}`);\n            return {\n                borderTopWidth: width,\n                borderRightWidth: width,\n                borderBottomWidth: width,\n                borderLeftWidth: width,\n            };\n        }\n        if (key.match(/Radius$/)) {\n            const radius = value ? transformUnit(container, value) : undefined;\n            if (typeof radius !== 'number')\n                throw new Error(`Invalid border radius: ${radius}`);\n            return {\n                borderTopLeftRadius: radius,\n                borderTopRightRadius: radius,\n                borderBottomRightRadius: radius,\n                borderBottomLeftRadius: radius,\n            };\n        }\n        if (typeof width !== 'number')\n            throw new Error(`Invalid border width: ${width}`);\n        if (typeof style === 'number')\n            throw new Error(`Invalid border style: ${style}`);\n        return {\n            borderTopColor: color,\n            borderTopStyle: style,\n            borderTopWidth: width,\n            borderRightColor: color,\n            borderRightStyle: style,\n            borderRightWidth: width,\n            borderBottomColor: color,\n            borderBottomStyle: style,\n            borderBottomWidth: width,\n            borderLeftColor: color,\n            borderLeftStyle: style,\n            borderLeftWidth: width,\n        };\n    }\n    return { [key]: value };\n};\nconst handlers$b = {\n    border: (resolveBorderShorthand),\n    borderBottom: (resolveBorderShorthand),\n    borderBottomColor: (processColorValue),\n    borderBottomLeftRadius: (processUnitValue),\n    borderBottomRightRadius: (processUnitValue),\n    borderBottomStyle: (processNoopValue),\n    borderBottomWidth: (processUnitValue),\n    borderColor: (resolveBorderShorthand),\n    borderLeft: (resolveBorderShorthand),\n    borderLeftColor: (processColorValue),\n    borderLeftStyle: (processNoopValue),\n    borderLeftWidth: (processUnitValue),\n    borderRadius: (resolveBorderShorthand),\n    borderRight: (resolveBorderShorthand),\n    borderRightColor: (processColorValue),\n    borderRightStyle: (processNoopValue),\n    borderRightWidth: (processUnitValue),\n    borderStyle: (resolveBorderShorthand),\n    borderTop: (resolveBorderShorthand),\n    borderTopColor: (processColorValue),\n    borderTopLeftRadius: (processUnitValue),\n    borderTopRightRadius: (processUnitValue),\n    borderTopStyle: (processNoopValue),\n    borderTopWidth: (processUnitValue),\n    borderWidth: (resolveBorderShorthand),\n};\n\nconst handlers$a = {\n    backgroundColor: (processColorValue),\n    color: (processColorValue),\n    opacity: (processNumberValue),\n};\n\nconst handlers$9 = {\n    height: (processUnitValue),\n    maxHeight: (processUnitValue),\n    maxWidth: (processUnitValue),\n    minHeight: (processUnitValue),\n    minWidth: (processUnitValue),\n    width: (processUnitValue),\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/flex#values\n// TODO: change flex defaults to [0, 1, 'auto'] as in spec in next major release\nconst flexDefaults = [1, 1, 0];\nconst flexAuto = [1, 1, 'auto'];\nconst processFlexShorthand = (key, value, container) => {\n    let defaults = flexDefaults;\n    let matches = [];\n    if (value === 'auto') {\n        defaults = flexAuto;\n    }\n    else {\n        matches = `${value}`.split(' ');\n    }\n    const flexGrow = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat)(matches[0] || defaults[0]);\n    const flexShrink = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.parseFloat)(matches[1] || defaults[1]);\n    const flexBasis = transformUnit(container, matches[2] || defaults[2]);\n    return { flexGrow, flexShrink, flexBasis };\n};\nconst handlers$8 = {\n    alignContent: (processNoopValue),\n    alignItems: (processNoopValue),\n    alignSelf: (processNoopValue),\n    flex: (processFlexShorthand),\n    flexBasis: (processUnitValue),\n    flexDirection: (processNoopValue),\n    flexFlow: (processNoopValue),\n    flexGrow: (processNumberValue),\n    flexShrink: (processNumberValue),\n    flexWrap: (processNoopValue),\n    justifyContent: (processNoopValue),\n    justifySelf: (processNoopValue),\n};\n\nconst processGapShorthand = (key, value, container) => {\n    const match = `${value}`.split(' ');\n    const rowGap = transformUnit(container, match?.[0] || value);\n    const columnGap = transformUnit(container, match?.[1] || value);\n    return { rowGap, columnGap };\n};\nconst handlers$7 = {\n    gap: (processGapShorthand),\n    columnGap: (processUnitValue),\n    rowGap: (processUnitValue),\n};\n\nconst handlers$6 = {\n    aspectRatio: (processNumberValue),\n    bottom: (processUnitValue),\n    display: (processNoopValue),\n    left: (processUnitValue),\n    position: (processNoopValue),\n    right: (processUnitValue),\n    top: (processUnitValue),\n    overflow: (processNoopValue),\n    zIndex: (processNumberValue),\n};\n\nconst BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\nconst logError = (style, value) => {\n    const name = style.toString();\n    // eslint-disable-next-line no-console\n    console.error(`\n    @react-pdf/stylesheet parsing error:\n    ${name}: ${value},\n    ${' '.repeat(name.length + 2)}^\n    Unsupported ${name} value format\n  `);\n};\n/**\n * @param options\n * @param [options.expandsTo]\n * @param [options.maxValues]\n * @param [options.autoSupported]\n */\nconst expandBoxModel = ({ expandsTo, maxValues = 1, autoSupported = false, } = {}) => (model, value, container) => {\n    const nodes = postcss_value_parser_lib_parse_js__WEBPACK_IMPORTED_MODULE_4__(`${value}`);\n    const parts = [];\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        // value contains `calc`, `url` or other css function\n        // `,`, `/` or strings that unsupported by margin and padding\n        if (node.type === 'function' ||\n            node.type === 'string' ||\n            node.type === 'div') {\n            logError(model, value);\n            return {};\n        }\n        if (node.type === 'word') {\n            if (node.value === 'auto' && autoSupported) {\n                parts.push(node.value);\n            }\n            else {\n                const result = postcss_value_parser_lib_unit_js__WEBPACK_IMPORTED_MODULE_5__(node.value);\n                // when unit isn't specified this condition is true\n                if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n                    parts.push(node.value);\n                }\n                else {\n                    logError(model, value);\n                    return {};\n                }\n            }\n        }\n    }\n    // checks that we have enough parsed values\n    if (parts.length > maxValues) {\n        logError(model, value);\n        return {};\n    }\n    const first = transformUnit(container, parts[0]);\n    if (expandsTo) {\n        const second = transformUnit(container, parts[1] || parts[0]);\n        const third = transformUnit(container, parts[2] || parts[0]);\n        const fourth = transformUnit(container, parts[3] || parts[1] || parts[0]);\n        return expandsTo({ first, second, third, fourth });\n    }\n    return {\n        [model]: first,\n    };\n};\n\nconst processMargin = expandBoxModel({\n    expandsTo: ({ first, second, third, fourth }) => ({\n        marginTop: first,\n        marginRight: second,\n        marginBottom: third,\n        marginLeft: fourth,\n    }),\n    maxValues: 4,\n    autoSupported: true,\n});\nconst processMarginVertical = expandBoxModel({\n    expandsTo: ({ first, second }) => ({\n        marginTop: first,\n        marginBottom: second,\n    }),\n    maxValues: 2,\n    autoSupported: true,\n});\nconst processMarginHorizontal = expandBoxModel({\n    expandsTo: ({ first, second }) => ({\n        marginRight: first,\n        marginLeft: second,\n    }),\n    maxValues: 2,\n    autoSupported: true,\n});\nconst processMarginSingle = expandBoxModel({\n    autoSupported: true,\n});\nconst handlers$5 = {\n    margin: (processMargin),\n    marginBottom: (processMarginSingle),\n    marginHorizontal: (processMarginHorizontal),\n    marginLeft: (processMarginSingle),\n    marginRight: (processMarginSingle),\n    marginTop: (processMarginSingle),\n    marginVertical: (processMarginVertical),\n};\n\nconst processPadding = expandBoxModel({\n    expandsTo: ({ first, second, third, fourth }) => ({\n        paddingTop: first,\n        paddingRight: second,\n        paddingBottom: third,\n        paddingLeft: fourth,\n    }),\n    maxValues: 4,\n});\nconst processPaddingVertical = expandBoxModel({\n    expandsTo: ({ first, second }) => ({\n        paddingTop: first,\n        paddingBottom: second,\n    }),\n    maxValues: 2,\n});\nconst processPaddingHorizontal = expandBoxModel({\n    expandsTo: ({ first, second }) => ({\n        paddingRight: first,\n        paddingLeft: second,\n    }),\n    maxValues: 2,\n});\nconst processPaddingSingle = expandBoxModel();\nconst handlers$4 = {\n    padding: (processPadding),\n    paddingBottom: (processPaddingSingle),\n    paddingHorizontal: (processPaddingHorizontal),\n    paddingLeft: (processPaddingSingle),\n    paddingRight: (processPaddingSingle),\n    paddingTop: (processPaddingSingle),\n    paddingVertical: (processPaddingVertical),\n};\n\nconst offsetKeyword = (value) => {\n    switch (value) {\n        case 'top':\n        case 'left':\n            return '0%';\n        case 'right':\n        case 'bottom':\n            return '100%';\n        case 'center':\n            return '50%';\n        default:\n            return value;\n    }\n};\n\nconst processObjectPosition = (key, value, container) => {\n    const match = `${value}`.split(' ');\n    const objectPositionX = offsetKeyword(transformUnit(container, match?.[0] || value));\n    const objectPositionY = offsetKeyword(transformUnit(container, match?.[1] || value));\n    return { objectPositionX, objectPositionY };\n};\nconst processObjectPositionValue = (key, value, container) => ({\n    [key]: offsetKeyword(transformUnit(container, value)),\n});\nconst handlers$3 = {\n    objectPosition: (processObjectPosition),\n    objectPositionX: (processObjectPositionValue),\n    objectPositionY: (processObjectPositionValue),\n    objectFit: (processNoopValue),\n};\n\nconst castInt = (value) => {\n    if (typeof value === 'number')\n        return value;\n    return parseInt(value, 10);\n};\n\nconst FONT_WEIGHTS = {\n    thin: 100,\n    hairline: 100,\n    ultralight: 200,\n    extralight: 200,\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    demibold: 600,\n    bold: 700,\n    ultrabold: 800,\n    extrabold: 800,\n    heavy: 900,\n    black: 900,\n};\nconst transformFontWeight = (value) => {\n    if (!value)\n        return FONT_WEIGHTS.normal;\n    if (typeof value === 'number')\n        return value;\n    const lv = value.toLowerCase();\n    if (FONT_WEIGHTS[lv])\n        return FONT_WEIGHTS[lv];\n    return castInt(value);\n};\nconst processFontWeight = (key, value) => {\n    return { [key]: transformFontWeight(value) };\n};\nconst transformLineHeight = (value, styles, container) => {\n    if (value === '')\n        return value;\n    const fontSize = transformUnit(container, styles.fontSize || 18);\n    const lineHeight = transformUnit(container, value);\n    // Percent values: use this number multiplied by the element's font size\n    const { percent } = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(lineHeight) || {};\n    if (percent)\n        return percent * fontSize;\n    // Unitless values: use this number multiplied by the element's font size\n    return isNaN(value) ? lineHeight : lineHeight * fontSize;\n};\nconst processLineHeight = (key, value, container, styles) => {\n    return {\n        [key]: transformLineHeight(value, styles, container),\n    };\n};\nconst handlers$2 = {\n    direction: (processNoopValue),\n    fontFamily: (processNoopValue),\n    fontSize: (processUnitValue),\n    fontStyle: (processNoopValue),\n    fontWeight: (processFontWeight),\n    letterSpacing: (processUnitValue),\n    lineHeight: (processLineHeight),\n    maxLines: (processNumberValue),\n    textAlign: (processNoopValue),\n    textDecoration: (processNoopValue),\n    textDecorationColor: (processColorValue),\n    textDecorationStyle: (processNoopValue),\n    textIndent: (processNoopValue),\n    textOverflow: (processNoopValue),\n    textTransform: (processNoopValue),\n    verticalAlign: (processNoopValue),\n};\n\nconst matchNumber = (value) => typeof value === 'string' && /^-?\\d*\\.?\\d*$/.test(value);\nconst castFloat = (value) => {\n    if (typeof value !== 'string')\n        return value;\n    if (matchNumber(value))\n        return parseFloat(value);\n    return value;\n};\n\nconst parse = (transformString) => {\n    const transforms = transformString.trim().split(/\\)[ ,]|\\)/);\n    // Handle \"initial\", \"inherit\", \"unset\".\n    if (transforms.length === 1) {\n        return [[transforms[0], true]];\n    }\n    const parsed = [];\n    for (let i = 0; i < transforms.length; i += 1) {\n        const transform = transforms[i];\n        if (transform) {\n            const [name, rawValue] = transform.split('(');\n            const splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n            const value = rawValue.split(splitChar).map((val) => val.trim());\n            parsed.push({ operation: name.trim(), value });\n        }\n    }\n    return parsed;\n};\nconst parseAngle = (value) => {\n    const unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n    const [, angle, unit] = unitsRegexp.exec(value);\n    const number = Number.parseFloat(angle);\n    return unit === 'rad' ? (number * 180) / Math.PI : number;\n};\nconst normalizeTransformOperation = ({ operation, value }) => {\n    switch (operation) {\n        case 'scale': {\n            const [scaleX, scaleY = scaleX] = value.map((num) => Number.parseFloat(num));\n            return { operation: 'scale', value: [scaleX, scaleY] };\n        }\n        case 'scaleX': {\n            return { operation: 'scale', value: [Number.parseFloat(value), 1] };\n        }\n        case 'scaleY': {\n            return { operation: 'scale', value: [1, Number.parseFloat(value)] };\n        }\n        case 'rotate': {\n            return { operation: 'rotate', value: [parseAngle(value)] };\n        }\n        case 'translate': {\n            return {\n                operation: 'translate',\n                value: value.map((num) => Number.parseFloat(num)),\n            };\n        }\n        case 'translateX': {\n            return {\n                operation: 'translate',\n                value: [Number.parseFloat(value), 0],\n            };\n        }\n        case 'translateY': {\n            return { operation: 'translate', value: [0, Number.parseFloat(value)] };\n        }\n        case 'skew': {\n            return { operation: 'skew', value: value.map(parseAngle) };\n        }\n        case 'skewX': {\n            return { operation: 'skew', value: [parseAngle(value), 0] };\n        }\n        case 'skewY': {\n            return { operation: 'skew', value: [0, parseAngle(value)] };\n        }\n        default: {\n            return { operation, value: value.map((num) => Number.parseFloat(num)) };\n        }\n    }\n};\nconst normalize = (operations) => {\n    return operations.map((operation) => normalizeTransformOperation(operation));\n};\nconst processTransform = (key, value) => {\n    if (typeof value !== 'string')\n        return { [key]: value };\n    return { [key]: normalize(parse(value)) };\n};\nconst Y_AXIS_SHORTHANDS = { top: true, bottom: true };\nconst sortTransformOriginPair = (a, b) => {\n    if (Y_AXIS_SHORTHANDS[a])\n        return 1;\n    if (Y_AXIS_SHORTHANDS[b])\n        return -1;\n    return 0;\n};\nconst getTransformOriginPair = (values) => {\n    if (!values || values.length === 0)\n        return ['center', 'center'];\n    const pair = values.length === 1 ? [values[0], 'center'] : values;\n    return pair.sort(sortTransformOriginPair);\n};\n// Transforms shorthand transformOrigin values\nconst processTransformOriginShorthand = (key, value, container) => {\n    const match = `${value}`.split(' ');\n    const pair = getTransformOriginPair(match);\n    const transformOriginX = transformUnit(container, pair[0]);\n    const transformOriginY = transformUnit(container, pair[1]);\n    return {\n        transformOriginX: offsetKeyword(transformOriginX) || castFloat(transformOriginX),\n        transformOriginY: offsetKeyword(transformOriginY) || castFloat(transformOriginY),\n    };\n};\nconst processTransformOriginValue = (key, value, container) => {\n    const v = transformUnit(container, value);\n    return { [key]: offsetKeyword(v) || castFloat(v) };\n};\nconst handlers$1 = {\n    transform: processTransform,\n    gradientTransform: processTransform,\n    transformOrigin: (processTransformOriginShorthand),\n    transformOriginX: (processTransformOriginValue),\n    transformOriginY: (processTransformOriginValue),\n};\n\nconst handlers = {\n    fill: (processColorValue),\n    stroke: (processColorValue),\n    strokeDasharray: (processNoopValue),\n    strokeWidth: (processUnitValue),\n    fillOpacity: (processNumberValue),\n    strokeOpacity: (processNumberValue),\n    fillRule: (processNoopValue),\n    textAnchor: (processNoopValue),\n    strokeLinecap: (processNoopValue),\n    strokeLinejoin: (processNoopValue),\n    visibility: (processNoopValue),\n    clipPath: (processNoopValue),\n    dominantBaseline: (processNoopValue),\n};\n\nconst shorthands = {\n    ...handlers$b,\n    ...handlers$a,\n    ...handlers$9,\n    ...handlers$8,\n    ...handlers$7,\n    ...handlers$6,\n    ...handlers$5,\n    ...handlers$4,\n    ...handlers$3,\n    ...handlers$2,\n    ...handlers$1,\n    ...handlers,\n};\n/**\n * Expand the shorthand properties.\n *\n * @param style - Style object\n * @returns Expanded style object\n */\nconst resolve = (container) => (style) => {\n    const propsArray = Object.keys(style);\n    const resolvedStyle = {};\n    for (let i = 0; i < propsArray.length; i += 1) {\n        const key = propsArray[i];\n        const value = style[key];\n        if (!shorthands[key]) {\n            resolvedStyle[key] = value;\n            continue;\n        }\n        const resolved = shorthands[key](key, value, container, style);\n        const keys = Object.keys(resolved);\n        for (let j = 0; j < keys.length; j += 1) {\n            const propName = keys[j];\n            const propValue = resolved[propName];\n            resolvedStyle[propName] = propValue;\n        }\n    }\n    return resolvedStyle;\n};\n\n/**\n * Resolves styles\n *\n * @param container\n * @param style - Style\n * @returns Resolved style\n */\nconst resolveStyles = (container, style) => {\n    const computeMediaQueries = (value) => resolveMediaQueries(container, value);\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolve(container), computeMediaQueries, flatten)(style);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/stylesheet/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/textkit/lib/textkit.js":
/*!********************************************************!*\
  !*** ./node_modules/@react-pdf/textkit/lib/textkit.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bidi: () => (/* binding */ bidiEngine),\n/* harmony export */   \"default\": () => (/* binding */ layoutEngine),\n/* harmony export */   fontSubstitution: () => (/* binding */ fontSubstitution),\n/* harmony export */   fromFragments: () => (/* binding */ fromFragments),\n/* harmony export */   justification: () => (/* binding */ justification),\n/* harmony export */   linebreaker: () => (/* binding */ linebreaker),\n/* harmony export */   scriptItemizer: () => (/* binding */ scriptItemizer),\n/* harmony export */   textDecoration: () => (/* binding */ textDecoration),\n/* harmony export */   wordHyphenation: () => (/* binding */ wordHyphenation)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var bidi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bidi-js */ \"(ssr)/./node_modules/bidi-js/dist/bidi.mjs\");\n/* harmony import */ var unicode_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unicode-properties */ \"(ssr)/./node_modules/unicode-properties/dist/module.mjs\");\n/* harmony import */ var hyphen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hyphen */ \"(ssr)/./node_modules/hyphen/index.js\");\n/* harmony import */ var hyphen_patterns_en_us_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! hyphen/patterns/en-us.js */ \"(ssr)/./node_modules/hyphen/patterns/en-us.js\");\n\n\n\n\n\n\n/**\n * Create attributed string from text fragments\n *\n * @param fragments - Fragments\n * @returns Attributed string\n */\nconst fromFragments = (fragments) => {\n    let offset = 0;\n    let string = '';\n    const runs = [];\n    fragments.forEach((fragment) => {\n        string += fragment.string;\n        runs.push({\n            ...fragment,\n            start: offset,\n            end: offset + fragment.string.length,\n            attributes: fragment.attributes || {},\n        });\n        offset += fragment.string.length;\n    });\n    return { string, runs };\n};\n\n/**\n * Default word hyphenation engine used when no one provided.\n * Does not perform word hyphenation at all\n *\n * @param word\n * @returns Same word\n */\nconst defaultHyphenationEngine = (word) => [word];\n/**\n * Wrap words of attribute string\n *\n * @param engines layout engines\n * @param options layout options\n */\nconst wrapWords = (engines = {}, options = {}) => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string including syllables\n     */\n    return (attributedString) => {\n        const syllables = [];\n        const fragments = [];\n        const hyphenateWord = options.hyphenationCallback ||\n            engines.wordHyphenation?.() ||\n            defaultHyphenationEngine;\n        for (let i = 0; i < attributedString.runs.length; i += 1) {\n            let string = '';\n            const run = attributedString.runs[i];\n            const words = attributedString.string\n                .slice(run.start, run.end)\n                .split(/([ ]+)/g)\n                .filter(Boolean);\n            for (let j = 0; j < words.length; j += 1) {\n                const word = words[j];\n                const parts = hyphenateWord(word);\n                syllables.push(...parts);\n                string += parts.join('');\n            }\n            fragments.push({ ...run, string });\n        }\n        const result = { ...fromFragments(fragments), syllables };\n        return result;\n    };\n};\n\n/**\n * Clone rect\n *\n * @param rect - Rect\n * @returns Cloned rect\n */\nconst copy = (rect) => {\n    return Object.assign({}, rect);\n};\n\n/**\n * Partition rect in two in the vertical direction\n *\n * @param rect - Rect\n * @param height - Height\n * @returns Partitioned rects\n */\nconst partition = (rect, height) => {\n    const a = Object.assign({}, rect, { height });\n    const b = Object.assign({}, rect, {\n        y: rect.y + height,\n        height: rect.height - height,\n    });\n    return [a, b];\n};\n\n/**\n * Crop upper section of rect\n *\n * @param height - Height\n * @param rect - Rect\n * @returns Cropped rect\n */\nconst crop = (height, rect) => {\n    const [, result] = partition(rect, height);\n    return result;\n};\n\n/**\n * Get paragraph block height\n *\n * @param paragraph - Paragraph\n * @returns Paragraph block height\n */\nconst height$2 = (paragraph) => {\n    return paragraph.reduce((acc, block) => acc + block.box.height, 0);\n};\n\n/**\n * Calculate run scale\n *\n * @param run - Run\n * @returns Scale\n */\nconst calculateScale = (run) => {\n    const attributes = run.attributes || {};\n    const fontSize = attributes.fontSize || 12;\n    const font = attributes.font;\n    const unitsPerEm = typeof font === 'string' ? null : font?.[0]?.unitsPerEm;\n    return unitsPerEm ? fontSize / unitsPerEm : 0;\n};\n/**\n * Get run scale\n *\n * @param  run\n * @returns Scale\n */\nconst scale = (run) => {\n    return run.attributes?.scale || calculateScale(run);\n};\n\n/**\n * Get ligature offset by index\n *\n * Ex. ffi ligature\n *\n *   glyphs:         l  o  f  f  i  m\n *   glyphIndices:   0  1  2  2  2  3\n *   offset:         0  0  0  1  2  0\n *\n * @param index\n * @param run - Run\n * @returns Ligature offset\n */\nconst offset = (index, run) => {\n    if (!run)\n        return 0;\n    const glyphIndices = run.glyphIndices || [];\n    const value = glyphIndices[index];\n    return glyphIndices.slice(0, index).filter((i) => i === value).length;\n};\n\n/**\n * Get run font\n *\n * @param run - Run\n * @returns Font\n */\nconst getFont = (run) => {\n    return run.attributes?.font?.[0] || null;\n};\n\n/**\n * Slice glyph between codePoints range\n * Util for breaking ligatures\n *\n * @param start - Start code point index\n * @param end - End code point index\n * @param font - Font to generate new glyph\n * @param glyph - Glyph to be sliced\n * @returns Sliced glyph parts\n */\nconst slice$2 = (start, end, font, glyph) => {\n    if (!glyph)\n        return [];\n    if (start === end)\n        return [];\n    if (start === 0 && end === glyph.codePoints.length)\n        return [glyph];\n    const codePoints = glyph.codePoints.slice(start, end);\n    const string = String.fromCodePoint(...codePoints);\n    // passing LTR To force fontkit to not reverse the string\n    return font\n        ? font.layout(string, undefined, undefined, undefined, 'ltr').glyphs\n        : [glyph];\n};\n\n/**\n * Return glyph index at string index, if glyph indices present.\n * Otherwise return string index\n *\n * @param index - Index\n * @param run - Run\n * @returns Glyph index\n */\nconst glyphIndexAt = (index, run) => {\n    const result = run?.glyphIndices?.[index];\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(result) ? index : result;\n};\n\n/**\n * Returns new array starting with zero, and keeping same relation between consecutive values\n *\n * @param array - List\n * @returns Normalized array\n */\nconst normalize = (array) => {\n    const head = array[0];\n    return array.map((value) => value - head);\n};\n\n/**\n * Slice run between glyph indices range\n *\n * @param start - Glyph index\n * @param end - Glyph index\n * @param run - Run\n * @returns Sliced run\n */\nconst slice$1 = (start, end, run) => {\n    const runScale = scale(run);\n    const font = getFont(run);\n    // Get glyph start and end indices\n    const startIndex = glyphIndexAt(start, run);\n    const endIndex = glyphIndexAt(end, run);\n    // Get start and end glyph\n    const startGlyph = run.glyphs?.[startIndex];\n    const endGlyph = run.glyphs?.[endIndex];\n    // Get start ligature chunks (if any)\n    const startOffset = offset(start, run);\n    const startGlyphs = startOffset > 0 ? slice$2(startOffset, Infinity, font, startGlyph) : [];\n    // Get end ligature chunks (if any)\n    const endOffset = offset(end, run);\n    const endGlyphs = slice$2(0, endOffset, font, endGlyph);\n    // Compute new glyphs\n    const sliceStart = startIndex + Math.min(1, startOffset);\n    const glyphs = (run.glyphs || []).slice(sliceStart, endIndex);\n    // Compute new positions\n    const glyphPosition = (g) => ({\n        xAdvance: g.advanceWidth * runScale,\n        yAdvance: 0,\n        xOffset: 0,\n        yOffset: 0,\n    });\n    const startPositions = startGlyphs.map(glyphPosition);\n    const positions = (run.positions || []).slice(sliceStart, endIndex);\n    const endPositions = endGlyphs.map(glyphPosition);\n    return Object.assign({}, run, {\n        start: run.start + start,\n        end: Math.min(run.end, run.start + end),\n        glyphIndices: normalize((run.glyphIndices || []).slice(start, end)),\n        glyphs: [startGlyphs, glyphs, endGlyphs].flat(),\n        positions: [startPositions, positions, endPositions].flat(),\n    });\n};\n\n/**\n * Get run index that contains passed index\n *\n * @param index - Index\n * @param runs - Runs\n * @returns Run index\n */\nconst runIndexAt$1 = (index, runs) => {\n    if (!runs)\n        return -1;\n    return runs.findIndex((run) => run.start <= index && index < run.end);\n};\n\n/**\n * Filter runs contained between start and end\n *\n * @param start\n * @param end\n * @param runs\n * @returns Filtered runs\n */\nconst filter = (start, end, runs) => {\n    const startIndex = runIndexAt$1(start, runs);\n    const endIndex = Math.max(runIndexAt$1(end - 1, runs), startIndex);\n    return runs.slice(startIndex, endIndex + 1);\n};\n\n/**\n * Subtract scalar to run\n *\n * @param index - Scalar\n * @param run - Run\n * @returns Subtracted run\n */\nconst subtract = (index, run) => {\n    const start = run.start - index;\n    const end = run.end - index;\n    return Object.assign({}, run, { start, end });\n};\n\n/**\n * Slice array of runs\n *\n * @param start - Offset\n * @param end - Offset\n * @param runs\n * @returns Sliced runs\n */\nconst sliceRuns = (start, end, runs) => {\n    const sliceFirstRun = (a) => slice$1(start - a.start, end - a.start, a);\n    const sliceLastRun = (a) => slice$1(0, end - a.start, a);\n    return runs.map((run, i) => {\n        let result = run;\n        const isFirst = i === 0;\n        const isLast = !isFirst && i === runs.length - 1;\n        if (isFirst)\n            result = sliceFirstRun(run);\n        if (isLast)\n            result = sliceLastRun(run);\n        return subtract(start, result);\n    });\n};\n/**\n * Slice attributed string between two indices\n *\n * @param start - Offset\n * @param end - Offset\n * @param attributedString - Attributed string\n * @returns Attributed string\n */\nconst slice = (start, end, attributedString) => {\n    if (attributedString.string.length === 0)\n        return attributedString;\n    const string = attributedString.string.slice(start, end);\n    const filteredRuns = filter(start, end, attributedString.runs);\n    const slicedRuns = sliceRuns(start, end, filteredRuns);\n    return Object.assign({}, attributedString, { string, runs: slicedRuns });\n};\n\nconst findCharIndex = (string) => {\n    return string.search(/\\S/g);\n};\nconst findLastCharIndex = (string) => {\n    const match = string.match(/\\S/g);\n    return match ? string.lastIndexOf(match[match.length - 1]) : -1;\n};\n/**\n * Removes (strips) whitespace from both ends of the attributted string.\n *\n * @param attributedString - Attributed string\n * @returns Attributed string\n */\nconst trim = (attributedString) => {\n    const start = findCharIndex(attributedString.string);\n    const end = findLastCharIndex(attributedString.string);\n    return slice(start, end + 1, attributedString);\n};\n\n/**\n * Returns empty run\n *\n * @returns Empty run\n */\nconst empty$1 = () => {\n    return {\n        start: 0,\n        end: 0,\n        glyphIndices: [],\n        glyphs: [],\n        positions: [],\n        attributes: {},\n    };\n};\n\n/**\n * Check if value is a number\n *\n * @param value - Value to check\n * @returns Whether value is a number\n */\nconst isNumber = (value) => {\n    return typeof value === 'number';\n};\n\n/**\n * Append glyph indices with given length\n *\n * Ex. appendIndices(3, [0, 1, 2, 2]) => [0, 1, 2, 2, 3, 3, 3]\n *\n * @param length - Length\n * @param indices - Glyph indices\n * @returns Extended glyph indices\n */\nconst appendIndices = (length, indices) => {\n    const lastIndex = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(indices);\n    const value = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(lastIndex) ? 0 : lastIndex + 1;\n    const newIndices = Array(length).fill(value);\n    return indices.concat(newIndices);\n};\n\n/**\n * Get glyph for a given code point\n *\n * @param value - CodePoint\n * @param font - Font\n * @returns Glyph\n * */\nconst fromCodePoint = (value, font) => {\n    if (typeof font === 'string')\n        return null;\n    return font && value ? font.glyphForCodePoint(value) : null;\n};\n\n/**\n * Append glyph to run\n *\n * @param glyph - Glyph\n * @param run - Run\n * @returns Run with glyph\n */\nconst appendGlyph = (glyph, run) => {\n    const glyphLength = glyph.codePoints?.length || 0;\n    const end = run.end + glyphLength;\n    const glyphs = run.glyphs.concat(glyph);\n    const glyphIndices = appendIndices(glyphLength, run.glyphIndices);\n    if (!run.positions)\n        return Object.assign({}, run, { end, glyphs, glyphIndices });\n    const positions = run.positions.concat({\n        xAdvance: glyph.advanceWidth * scale(run),\n        yAdvance: 0,\n        xOffset: 0,\n        yOffset: 0,\n    });\n    return Object.assign({}, run, { end, glyphs, glyphIndices, positions });\n};\n/**\n * Append glyph or code point to run\n *\n * @param value - Glyph or codePoint\n * @param run - Run\n * @returns Run with glyph\n */\nconst append$1 = (value, run) => {\n    if (!value)\n        return run;\n    const font = getFont(run);\n    const glyph = isNumber(value) ? fromCodePoint(value, font) : value;\n    return appendGlyph(glyph, run);\n};\n\n/**\n * Get string from array of code points\n *\n * @param codePoints - Points\n * @returns String\n */\nconst stringFromCodePoints = (codePoints) => {\n    return String.fromCodePoint(...(codePoints || []));\n};\n\n/**\n * Append glyph into last run of attributed string\n *\n * @param glyph - Glyph or code point\n * @param attributedString - Attributed string\n * @returns Attributed string with new glyph\n */\nconst append = (glyph, attributedString) => {\n    const codePoints = typeof glyph === 'number' ? [glyph] : glyph?.codePoints;\n    const codePointsString = stringFromCodePoints(codePoints || []);\n    const string = attributedString.string + codePointsString;\n    const firstRuns = attributedString.runs.slice(0, -1);\n    const lastRun = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(attributedString.runs) || empty$1();\n    const runs = firstRuns.concat(append$1(glyph, lastRun));\n    return Object.assign({}, attributedString, { string, runs });\n};\n\nconst ELLIPSIS_UNICODE = 8230;\nconst ELLIPSIS_STRING = String.fromCharCode(ELLIPSIS_UNICODE);\n/**\n * Get ellipsis codepoint. This may be different in standard and embedded fonts\n *\n * @param font\n * @returns Ellipsis codepoint\n */\nconst getEllipsisCodePoint = (font) => {\n    if (!font.encode)\n        return ELLIPSIS_UNICODE;\n    const [codePoints] = font.encode(ELLIPSIS_STRING);\n    return parseInt(codePoints[0], 16);\n};\n/**\n * Trucante block with ellipsis\n *\n * @param paragraph - Paragraph\n * @returns Sliced paragraph\n */\nconst truncate = (paragraph) => {\n    const runs = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(paragraph)?.runs || [];\n    const font = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs)?.attributes?.font[0];\n    if (font) {\n        const index = paragraph.length - 1;\n        const codePoint = getEllipsisCodePoint(font);\n        const glyph = font.glyphForCodePoint(codePoint);\n        const lastBlock = append(glyph, trim(paragraph[index]));\n        return Object.assign([], paragraph, { [index]: lastBlock });\n    }\n    return paragraph;\n};\n\n/**\n * Omit attribute from run\n *\n * @param value - Attribute key\n * @param run - Run\n * @returns Run without ommited attribute\n */\nconst omit = (value, run) => {\n    const attributes = Object.assign({}, run.attributes);\n    delete attributes[value];\n    return Object.assign({}, run, { attributes });\n};\n\n/**\n * Get run ascent\n *\n * @param run - Run\n * @returns Ascent\n */\nconst ascent$1 = (run) => {\n    const { font, attachment } = run.attributes;\n    const attachmentHeight = attachment?.height || 0;\n    const fontAscent = typeof font === 'string' ? 0 : font?.[0]?.ascent || 0;\n    return Math.max(attachmentHeight, fontAscent * scale(run));\n};\n\n/**\n * Get run descent\n *\n * @param run - Run\n * @returns Descent\n */\nconst descent = (run) => {\n    const font = run.attributes?.font;\n    const fontDescent = typeof font === 'string' ? 0 : font?.[0]?.descent || 0;\n    return scale(run) * fontDescent;\n};\n\n/**\n * Get run lineGap\n *\n * @param run - Run\n * @returns LineGap\n */\nconst lineGap = (run) => {\n    const font = run.attributes?.font;\n    const lineGap = typeof font === 'string' ? 0 : font?.[0]?.lineGap || 0;\n    return lineGap * scale(run);\n};\n\n/**\n * Get run height\n *\n * @param run - Run\n * @returns Height\n */\nconst height$1 = (run) => {\n    const lineHeight = run.attributes?.lineHeight;\n    return lineHeight || lineGap(run) + ascent$1(run) - descent(run);\n};\n\n/**\n * Returns attributed string height\n *\n * @param attributedString - Attributed string\n * @returns Height\n */\nconst height = (attributedString) => {\n    const reducer = (acc, run) => Math.max(acc, height$1(run));\n    return attributedString.runs.reduce(reducer, 0);\n};\n\n/**\n * Checks if two rects intersect each other\n *\n * @param a - Rect A\n * @param b - Rect B\n * @returns Whether rects intersect\n */\nconst intersects = (a, b) => {\n    const x = Math.max(a.x, b.x);\n    const num1 = Math.min(a.x + a.width, b.x + b.width);\n    const y = Math.max(a.y, b.y);\n    const num2 = Math.min(a.y + a.height, b.y + b.height);\n    return num1 >= x && num2 >= y;\n};\n\nconst getLineFragment = (lineRect, excludeRect) => {\n    if (!intersects(excludeRect, lineRect))\n        return [lineRect];\n    const eStart = excludeRect.x;\n    const eEnd = excludeRect.x + excludeRect.width;\n    const lStart = lineRect.x;\n    const lEnd = lineRect.x + lineRect.width;\n    const a = Object.assign({}, lineRect, { width: eStart - lStart });\n    const b = Object.assign({}, lineRect, { x: eEnd, width: lEnd - eEnd });\n    return [a, b].filter((r) => r.width > 0);\n};\nconst getLineFragments = (rect, excludeRects) => {\n    let fragments = [rect];\n    for (let i = 0; i < excludeRects.length; i += 1) {\n        const excludeRect = excludeRects[i];\n        fragments = fragments.reduce((acc, fragment) => {\n            const pieces = getLineFragment(fragment, excludeRect);\n            return acc.concat(pieces);\n        }, []);\n    }\n    return fragments;\n};\nconst generateLineRects = (container, height) => {\n    const { excludeRects, ...rect } = container;\n    if (!excludeRects)\n        return [rect];\n    const lineRects = [];\n    const maxY = Math.max(...excludeRects.map((r) => r.y + r.height));\n    let currentRect = rect;\n    while (currentRect.y < maxY) {\n        const [lineRect, rest] = partition(currentRect, height);\n        const lineRectFragments = getLineFragments(lineRect, excludeRects);\n        currentRect = rest;\n        lineRects.push(...lineRectFragments);\n    }\n    return [...lineRects, currentRect];\n};\n\nconst ATTACHMENT_CODE$1 = '\\ufffc'; // 65532\n/**\n * Remove attachment attribute if no char present\n *\n * @param line - Line\n * @returns Line\n */\nconst purgeAttachments = (line) => {\n    const shouldPurge = !line.string.includes(ATTACHMENT_CODE$1);\n    if (!shouldPurge)\n        return line;\n    const runs = line.runs.map((run) => omit('attachment', run));\n    return Object.assign({}, line, { runs });\n};\n/**\n * Layout paragraphs inside rectangle\n *\n * @param rects - Rects\n * @param lines - Attributed strings\n * @param indent\n * @returns layout blocks\n */\nconst layoutLines = (rects, lines, indent) => {\n    let rect = rects.shift();\n    let currentY = rect.y;\n    return lines.map((line, i) => {\n        const lineIndent = i === 0 ? indent : 0;\n        const style = line.runs?.[0]?.attributes || {};\n        const height$1 = Math.max(height(line), style.lineHeight);\n        if (currentY + height$1 > rect.y + rect.height && rects.length > 0) {\n            rect = rects.shift();\n            currentY = rect.y;\n        }\n        const newLine = {\n            string: line.string,\n            runs: line.runs,\n            box: {\n                x: rect.x + lineIndent,\n                y: currentY,\n                width: rect.width - lineIndent,\n                height: height$1,\n            },\n        };\n        currentY += height$1;\n        return purgeAttachments(newLine);\n    });\n};\n/**\n * Performs line breaking and layout\n *\n * @param engines - Engines\n * @param options - Layout options\n */\nconst layoutParagraph = (engines, options = {}) => {\n    /**\n     * @param container - Container\n     * @param paragraph - Attributed string\n     * @returns Layout block\n     */\n    return (container, paragraph) => {\n        const height$1 = height(paragraph);\n        const indent = paragraph.runs?.[0]?.attributes?.indent || 0;\n        const rects = generateLineRects(container, height$1);\n        const availableWidths = rects.map((r) => r.width);\n        availableWidths.unshift(availableWidths[0] - indent);\n        const lines = engines.linebreaker(options)(paragraph, availableWidths);\n        return layoutLines(rects, lines, indent);\n    };\n};\n\n/**\n * Slice block at given height\n *\n * @param height - Height\n * @param paragraph - Paragraph\n * @returns Sliced paragraph\n */\nconst sliceAtHeight = (height, paragraph) => {\n    const newBlock = [];\n    let counter = 0;\n    for (let i = 0; i < paragraph.length; i += 1) {\n        const line = paragraph[i];\n        counter += line.box.height;\n        if (counter < height) {\n            newBlock.push(line);\n        }\n        else {\n            break;\n        }\n    }\n    return newBlock;\n};\n\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  engines - Engines\n * @param  options - Layout options\n * @param container - Container\n */\nconst typesetter = (engines, options, container) => {\n    /**\n     * @param attributedStrings - Attributed strings (paragraphs)\n     * @returns Paragraph blocks\n     */\n    return (attributedStrings) => {\n        const result = [];\n        const paragraphs = [...attributedStrings];\n        const layout = layoutParagraph(engines, options);\n        const maxLines = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(container.maxLines) ? Infinity : container.maxLines;\n        const truncateEllipsis = container.truncateMode === 'ellipsis';\n        let linesCount = maxLines;\n        let paragraphRect = copy(container);\n        let nextParagraph = paragraphs.shift();\n        while (linesCount > 0 && nextParagraph) {\n            const paragraph = layout(paragraphRect, nextParagraph);\n            const slicedBlock = paragraph.slice(0, linesCount);\n            const linesHeight = height$2(slicedBlock);\n            const shouldTruncate = truncateEllipsis && paragraph.length !== slicedBlock.length;\n            linesCount -= slicedBlock.length;\n            if (paragraphRect.height >= linesHeight) {\n                result.push(shouldTruncate ? truncate(slicedBlock) : slicedBlock);\n                paragraphRect = crop(linesHeight, paragraphRect);\n                nextParagraph = paragraphs.shift();\n            }\n            else {\n                result.push(truncate(sliceAtHeight(paragraphRect.height, slicedBlock)));\n                break;\n            }\n        }\n        return result;\n    };\n};\n\n/**\n * Get attributed string start value\n *\n * @param attributedString - Attributed string\n * @returns Start\n */\nconst start = (attributedString) => {\n    const { runs } = attributedString;\n    return runs.length === 0 ? 0 : runs[0].start;\n};\n\n/**\n * Get attributed string end value\n *\n * @param attributedString - Attributed string\n * @returns End\n */\nconst end = (attributedString) => {\n    const { runs } = attributedString;\n    return runs.length === 0 ? 0 : (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs).end;\n};\n\n/**\n * Get attributed string length\n *\n * @param attributedString - Attributed string\n * @returns End\n */\nconst length$1 = (attributedString) => {\n    return end(attributedString) - start(attributedString);\n};\n\nconst bidi$2 = (0,bidi_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\nconst getBidiLevels$1 = (runs) => {\n    return runs.reduce((acc, run) => {\n        const length = run.end - run.start;\n        const levels = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.repeat)(run.attributes.bidiLevel, length);\n        return acc.concat(levels);\n    }, []);\n};\nconst getReorderedIndices = (string, segments) => {\n    // Fill an array with indices\n    const indices = [];\n    for (let i = 0; i < string.length; i += 1) {\n        indices[i] = i;\n    }\n    // Reverse each segment in order\n    segments.forEach(([start, end]) => {\n        const slice = indices.slice(start, end + 1);\n        for (let i = slice.length - 1; i >= 0; i -= 1) {\n            indices[end - i] = slice[i];\n        }\n    });\n    return indices;\n};\nconst getItemAtIndex = (runs, objectName, index) => {\n    for (let i = 0; i < runs.length; i += 1) {\n        const run = runs[i];\n        const updatedIndex = run.glyphIndices[index - run.start];\n        if (index >= run.start && index < run.end) {\n            return run[objectName][updatedIndex];\n        }\n    }\n    throw new Error(`index ${index} out of range`);\n};\nconst reorderLine = (line) => {\n    const levels = getBidiLevels$1(line.runs);\n    const direction = line.runs[0]?.attributes.direction;\n    const level = direction === 'rtl' ? 1 : 0;\n    const end = length$1(line) - 1;\n    const paragraphs = [{ start: 0, end, level }];\n    const embeddingLevels = { paragraphs, levels };\n    const segments = bidi$2.getReorderSegments(line.string, embeddingLevels);\n    // No need for bidi reordering\n    if (segments.length === 0)\n        return line;\n    const indices = getReorderedIndices(line.string, segments);\n    const updatedString = bidi$2.getReorderedString(line.string, embeddingLevels);\n    const updatedRuns = line.runs.map((run) => {\n        const selectedIndices = indices.slice(run.start, run.end);\n        const updatedGlyphs = [];\n        const updatedPositions = [];\n        const addedGlyphs = new Set();\n        for (let i = 0; i < selectedIndices.length; i += 1) {\n            const index = selectedIndices[i];\n            const glyph = getItemAtIndex(line.runs, 'glyphs', index);\n            if (addedGlyphs.has(glyph.id))\n                continue;\n            updatedGlyphs.push(glyph);\n            updatedPositions.push(getItemAtIndex(line.runs, 'positions', index));\n            if (glyph.isLigature) {\n                addedGlyphs.add(glyph.id);\n            }\n        }\n        return {\n            ...run,\n            glyphs: updatedGlyphs,\n            positions: updatedPositions,\n        };\n    });\n    return {\n        box: line.box,\n        runs: updatedRuns,\n        string: updatedString,\n    };\n};\nconst reorderParagraph = (paragraph) => paragraph.map(reorderLine);\n/**\n * Perform bidi reordering\n *\n * @returns Reordered paragraphs\n */\nconst bidiReordering = () => {\n    /**\n     * @param paragraphs - Paragraphs\n     * @returns Reordered paragraphs\n     */\n    return (paragraphs) => paragraphs.map(reorderParagraph);\n};\n\nconst DUMMY_CODEPOINT = 123;\n/**\n * Resolve string indices based on glyphs code points\n *\n * @param glyphs\n * @returns Glyph indices\n */\nconst resolve = (glyphs = []) => {\n    return glyphs.reduce((acc, glyph) => {\n        const codePoints = glyph?.codePoints || [DUMMY_CODEPOINT];\n        if (acc.length === 0)\n            return codePoints.map(() => 0);\n        const last = acc[acc.length - 1];\n        const next = codePoints.map(() => last + 1);\n        return [...acc, ...next];\n    }, []);\n};\n\nconst getCharacterSpacing = (run) => {\n    return run.attributes?.characterSpacing || 0;\n};\n/**\n * Scale run positions\n *\n * @param  run\n * @param  positions\n * @returns Scaled positions\n */\nconst scalePositions = (run, positions) => {\n    const runScale = scale(run);\n    const characterSpacing = getCharacterSpacing(run);\n    return positions.map((position, i) => {\n        const isLast = i === positions.length;\n        const xSpacing = isLast ? 0 : characterSpacing;\n        return Object.assign({}, position, {\n            xAdvance: position.xAdvance * runScale + xSpacing,\n            yAdvance: position.yAdvance * runScale,\n            xOffset: position.xOffset * runScale,\n            yOffset: position.yOffset * runScale,\n        });\n    });\n};\n/**\n * Create glyph run\n *\n * @param string string\n */\nconst layoutRun = (string) => {\n    /**\n     * @param run - Run\n     * @returns Glyph run\n     */\n    return (run) => {\n        const { start, end, attributes = {} } = run;\n        const { font } = attributes;\n        if (!font)\n            return { ...run, glyphs: [], glyphIndices: [], positions: [] };\n        const runString = string.slice(start, end);\n        if (typeof font === 'string')\n            throw new Error('Invalid font');\n        // passing LTR To force fontkit to not reverse the string\n        const glyphRun = font[0].layout(runString, undefined, undefined, undefined, 'ltr');\n        const positions = scalePositions(run, glyphRun.positions);\n        const glyphIndices = resolve(glyphRun.glyphs);\n        const result = {\n            ...run,\n            positions,\n            glyphIndices,\n            glyphs: glyphRun.glyphs,\n        };\n        return result;\n    };\n};\n/**\n * Generate glyphs for single attributed string\n */\nconst generateGlyphs = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string with glyphs\n     */\n    return (attributedString) => {\n        const runs = attributedString.runs.map(layoutRun(attributedString.string));\n        const res = Object.assign({}, attributedString, { runs });\n        return res;\n    };\n};\n\n/**\n * Resolves yOffset for run\n *\n * @param run - Run\n * @returns Run\n */\nconst resolveRunYOffset = (run) => {\n    if (!run.positions)\n        return run;\n    const unitsPerEm = run.attributes?.font?.[0]?.unitsPerEm || 0;\n    const yOffset = (run.attributes?.yOffset || 0) * unitsPerEm;\n    const positions = run.positions.map((p) => Object.assign({}, p, { yOffset }));\n    return Object.assign({}, run, { positions });\n};\n/**\n * Resolves yOffset for multiple paragraphs\n */\nconst resolveYOffset = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string\n     */\n    return (attributedString) => {\n        const runs = attributedString.runs.map(resolveRunYOffset);\n        const res = Object.assign({}, attributedString, { runs });\n        return res;\n    };\n};\n\n/**\n * Sort runs in ascending order\n *\n * @param runs\n * @returns Sorted runs\n */\nconst sort = (runs) => {\n    return runs.sort((a, b) => a.start - b.start || a.end - b.end);\n};\n\n/**\n * Is run empty (start === end)\n *\n * @param run - Run\n * @returns Is run empty\n */\nconst isEmpty = (run) => {\n    return run.start === run.end;\n};\n\n/**\n * Sort points in ascending order\n * @param a - First point\n * @param b - Second point\n * @returns Sort order\n */\nconst sortPoints = (a, b) => {\n    return a[1] - b[1] || a[3] - b[3];\n};\n/**\n * @param runs\n * @returns Points\n */\nconst generatePoints = (runs) => {\n    const result = runs.reduce((acc, run, i) => {\n        return acc.concat([\n            ['start', run.start, run.attributes, i],\n            ['end', run.end, run.attributes, i],\n        ]);\n    }, []);\n    return result.sort(sortPoints);\n};\n/**\n * @param runs\n * @returns Merged runs\n */\nconst mergeRuns = (runs) => {\n    return runs.reduce((acc, run) => {\n        const attributes = Object.assign({}, acc.attributes, run.attributes);\n        return Object.assign({}, run, { attributes });\n    }, {});\n};\n/**\n * @param runs\n * @returns Grouped runs\n */\nconst groupEmptyRuns = (runs) => {\n    const groups = runs.reduce((acc, run) => {\n        if (!acc[run.start])\n            acc[run.start] = [];\n        acc[run.start].push(run);\n        return acc;\n    }, []);\n    return Object.values(groups);\n};\n/**\n * @param runs\n * @returns Flattened runs\n */\nconst flattenEmptyRuns = (runs) => {\n    return groupEmptyRuns(runs).map(mergeRuns);\n};\n/**\n * @param runs\n * @returns Flattened runs\n */\nconst flattenRegularRuns = (runs) => {\n    const res = [];\n    const points = generatePoints(runs);\n    let start = -1;\n    let attrs = {};\n    const stack = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const [type, offset, attributes] = points[i];\n        if (start !== -1 && start < offset) {\n            res.push({\n                start,\n                end: offset,\n                attributes: attrs,\n                glyphIndices: [],\n                glyphs: [],\n                positions: [],\n            });\n        }\n        if (type === 'start') {\n            stack.push(attributes);\n            attrs = Object.assign({}, attrs, attributes);\n        }\n        else {\n            attrs = {};\n            for (let j = 0; j < stack.length; j += 1) {\n                if (stack[j] === attributes) {\n                    stack.splice(j--, 1);\n                }\n                else {\n                    attrs = Object.assign({}, attrs, stack[j]);\n                }\n            }\n        }\n        start = offset;\n    }\n    return res;\n};\n/**\n * Flatten many runs\n *\n * @param runs\n * @returns Flattened runs\n */\nconst flatten = (runs = []) => {\n    const emptyRuns = flattenEmptyRuns(runs.filter((run) => isEmpty(run)));\n    const regularRuns = flattenRegularRuns(runs.filter((run) => !isEmpty(run)));\n    return sort(emptyRuns.concat(regularRuns));\n};\n\n/**\n * Returns empty attributed string\n *\n * @returns Empty attributed string\n */\nconst empty = () => ({ string: '', runs: [] });\n\n/**\n *\n * @param attributedString\n * @returns Attributed string without font\n */\nconst omitFont = (attributedString) => {\n    const runs = attributedString.runs.map((run) => omit('font', run));\n    return Object.assign({}, attributedString, { runs });\n};\n/**\n * Performs font substitution and script itemization on attributed string\n *\n * @param engines - engines\n */\nconst preprocessRuns = (engines) => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Processed attributed string\n     */\n    return (attributedString) => {\n        if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(attributedString))\n            return empty();\n        const { string } = attributedString;\n        const { fontSubstitution, scriptItemizer, bidi } = engines;\n        const { runs: omittedFontRuns } = omitFont(attributedString);\n        const { runs: itemizationRuns } = scriptItemizer()(attributedString);\n        const { runs: substitutedRuns } = fontSubstitution()(attributedString);\n        const { runs: bidiRuns } = bidi()(attributedString);\n        const runs = bidiRuns\n            .concat(substitutedRuns)\n            .concat(itemizationRuns)\n            .concat(omittedFontRuns);\n        return { string, runs: flatten(runs) };\n    };\n};\n\n/**\n * Breaks attributed string into paragraphs\n */\nconst splitParagraphs = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Paragraphs attributed strings\n     */\n    return (attributedString) => {\n        const paragraphs = [];\n        let start = 0;\n        let breakPoint = attributedString.string.indexOf('\\n') + 1;\n        while (breakPoint > 0) {\n            paragraphs.push(slice(start, breakPoint, attributedString));\n            start = breakPoint;\n            breakPoint = attributedString.string.indexOf('\\n', breakPoint) + 1;\n        }\n        if (start === 0) {\n            paragraphs.push(attributedString);\n        }\n        else if (start < attributedString.string.length) {\n            paragraphs.push(slice(start, length$1(attributedString), attributedString));\n        }\n        return paragraphs;\n    };\n};\n\n/**\n * Return positions advance width\n *\n * @param positions - Positions\n * @returns {number} advance width\n */\nconst advanceWidth$2 = (positions) => {\n    return positions.reduce((acc, pos) => acc + (pos.xAdvance || 0), 0);\n};\n\n/**\n * Return run advance width\n *\n * @param run - Run\n * @returns Advance width\n */\nconst advanceWidth$1 = (run) => {\n    return advanceWidth$2(run.positions || []);\n};\n\n/**\n * Returns attributed string advancewidth\n *\n * @param attributedString - Attributed string\n * @returns Advance width\n */\nconst advanceWidth = (attributedString) => {\n    const reducer = (acc, run) => acc + advanceWidth$1(run);\n    return attributedString.runs.reduce(reducer, 0);\n};\n\nconst WHITE_SPACES_CODE = 32;\n/**\n * Check if glyph is white space\n *\n * @param glyph - Glyph\n * @returns Whether glyph is white space\n * */\nconst isWhiteSpace = (glyph) => {\n    const codePoints = glyph?.codePoints || [];\n    return codePoints.includes(WHITE_SPACES_CODE);\n};\n\n/**\n * Get white space leading positions\n *\n * @param run - Run\n * @returns White space leading positions\n */\nconst leadingPositions = (run) => {\n    const glyphs = run.glyphs || [];\n    const positions = run.positions || [];\n    const leadingWhitespaces = glyphs.findIndex((g) => !isWhiteSpace(g));\n    return positions.slice(0, leadingWhitespaces);\n};\n/**\n * Get run leading white space offset\n *\n * @param run - Run\n * @returns Leading white space offset\n */\nconst leadingOffset$1 = (run) => {\n    const positions = leadingPositions(run);\n    return positions.reduce((acc, pos) => acc + (pos.xAdvance || 0), 0);\n};\n\n/**\n * Get attributed string leading white space offset\n *\n * @param attributedString - Attributed string\n * @returns Leading white space offset\n */\nconst leadingOffset = (attributedString) => {\n    const runs = attributedString.runs || [];\n    return leadingOffset$1(runs[0]);\n};\n\n/**\n * Get white space trailing positions\n *\n * @param run run\n * @returns White space trailing positions\n */\nconst trailingPositions = (run) => {\n    const glyphs = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.reverse)(run.glyphs || []);\n    const positions = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.reverse)(run.positions || []);\n    const leadingWhitespaces = glyphs.findIndex((g) => !isWhiteSpace(g));\n    return positions.slice(0, leadingWhitespaces);\n};\n/**\n * Get run trailing white space offset\n *\n * @param run - Run\n * @returns Trailing white space offset\n */\nconst trailingOffset$1 = (run) => {\n    const positions = trailingPositions(run);\n    return positions.reduce((acc, pos) => acc + (pos.xAdvance || 0), 0);\n};\n\n/**\n * Get attributed string trailing white space offset\n *\n * @param attributedString - Attributed string\n * @returns Trailing white space offset\n */\nconst trailingOffset = (attributedString) => {\n    const runs = attributedString.runs || [];\n    return trailingOffset$1((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs));\n};\n\n/**\n * Drop last char of run\n *\n * @param run - Run\n * @returns Run without last char\n */\nconst dropLast$1 = (run) => {\n    return slice$1(0, run.end - run.start - 1, run);\n};\n\n/**\n * Drop last glyph\n *\n * @param attributedString - Attributed string\n * @returns Attributed string with new glyph\n */\nconst dropLast = (attributedString) => {\n    const string = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.dropLast)(attributedString.string);\n    const runs = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.adjust)(-1, dropLast$1, attributedString.runs);\n    return Object.assign({}, attributedString, { string, runs });\n};\n\nconst ALIGNMENT_FACTORS = { center: 0.5, right: 1 };\n/**\n * Remove new line char at the end of line if present\n *\n * @param line\n * @returns Line\n */\nconst removeNewLine = (line) => {\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(line.string) === '\\n' ? dropLast(line) : line;\n};\nconst getOverflowLeft = (line) => {\n    return leadingOffset(line) + (line.overflowLeft || 0);\n};\nconst getOverflowRight = (line) => {\n    return trailingOffset(line) + (line.overflowRight || 0);\n};\n/**\n * Ignore whitespace at the start and end of a line for alignment\n *\n * @param line\n * @returns Line\n */\nconst adjustOverflow = (line) => {\n    const overflowLeft = getOverflowLeft(line);\n    const overflowRight = getOverflowRight(line);\n    const x = line.box.x - overflowLeft;\n    const width = line.box.width + overflowLeft + overflowRight;\n    const box = Object.assign({}, line.box, { x, width });\n    return Object.assign({}, line, { box, overflowLeft, overflowRight });\n};\n/**\n * Performs line justification by calling appropiate engine\n *\n * @param engines - Engines\n * @param options - Layout options\n * @param align - Text align\n */\nconst justifyLine$1 = (engines, options, align) => {\n    /**\n     * @param line - Line\n     * @returns Line\n     */\n    return (line) => {\n        const lineWidth = advanceWidth(line);\n        const alignFactor = ALIGNMENT_FACTORS[align] || 0;\n        const remainingWidth = Math.max(0, line.box.width - lineWidth);\n        const shouldJustify = align === 'justify' || lineWidth > line.box.width;\n        const x = line.box.x + remainingWidth * alignFactor;\n        const box = Object.assign({}, line.box, { x });\n        const newLine = Object.assign({}, line, { box });\n        return shouldJustify ? engines.justification(options)(newLine) : newLine;\n    };\n};\nconst finalizeLine = (line) => {\n    let lineAscent = 0;\n    let lineDescent = 0;\n    let lineHeight = 0;\n    let lineXAdvance = 0;\n    const runs = line.runs.map((run) => {\n        const height = height$1(run);\n        const ascent = ascent$1(run);\n        const descent$1 = descent(run);\n        const xAdvance = advanceWidth$1(run);\n        lineHeight = Math.max(lineHeight, height);\n        lineAscent = Math.max(lineAscent, ascent);\n        lineDescent = Math.max(lineDescent, descent$1);\n        lineXAdvance += xAdvance;\n        return Object.assign({}, run, { height, ascent, descent: descent$1, xAdvance });\n    });\n    return Object.assign({}, line, {\n        runs,\n        height: lineHeight,\n        ascent: lineAscent,\n        descent: lineDescent,\n        xAdvance: lineXAdvance,\n    });\n};\n/**\n * Finalize line by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param engines - Engines\n * @param options - Layout options\n */\nconst finalizeBlock = (engines, options) => {\n    /**\n     * @param line - Line\n     * @param i - Line index\n     * @param lines - Total lines\n     * @returns Line\n     */\n    return (line, index, lines) => {\n        const isLastFragment = index === lines.length - 1;\n        const style = line.runs?.[0]?.attributes || {};\n        const align = isLastFragment ? style.alignLastLine : style.align;\n        return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(finalizeLine, engines.textDecoration(), justifyLine$1(engines, options, align), adjustOverflow, removeNewLine)(line);\n    };\n};\n/**\n * Finalize line block by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param engines - Engines\n * @param options - Layout options\n */\nconst finalizeFragments = (engines, options) => {\n    /**\n     * @param paragraphs - Paragraphs\n     * @returns Paragraphs\n     */\n    return (paragraphs) => {\n        const blockFinalizer = finalizeBlock(engines, options);\n        return paragraphs.map((paragraph) => paragraph.map(blockFinalizer));\n    };\n};\n\nconst ATTACHMENT_CODE = 0xfffc; // 65532\nconst isReplaceGlyph = (glyph) => glyph.codePoints.includes(ATTACHMENT_CODE);\n/**\n * Resolve attachments of run\n *\n * @param run\n * @returns Run\n */\nconst resolveRunAttachments = (run) => {\n    if (!run.positions)\n        return run;\n    const glyphs = run.glyphs || [];\n    const attachment = run.attributes?.attachment;\n    if (!attachment)\n        return run;\n    const positions = run.positions.map((position, i) => {\n        const glyph = glyphs[i];\n        if (attachment.width && isReplaceGlyph(glyph)) {\n            return Object.assign({}, position, { xAdvance: attachment.width });\n        }\n        return Object.assign({}, position);\n    });\n    return Object.assign({}, run, { positions });\n};\n/**\n * Resolve attachments for multiple paragraphs\n */\nconst resolveAttachments = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string\n     */\n    return (attributedString) => {\n        const runs = attributedString.runs.map(resolveRunAttachments);\n        const res = Object.assign({}, attributedString, { runs });\n        return res;\n    };\n};\n\n/**\n * @param attributes - Attributes\n * @returns Attributes with defaults\n */\nconst applyAttributes = (a) => {\n    return {\n        align: a.align || (a.direction === 'rtl' ? 'right' : 'left'),\n        alignLastLine: a.alignLastLine || (a.align === 'justify' ? 'left' : a.align || 'left'),\n        attachment: a.attachment || null,\n        backgroundColor: a.backgroundColor || null,\n        bullet: a.bullet || null,\n        characterSpacing: a.characterSpacing || 0,\n        color: a.color || 'black',\n        direction: a.direction || 'ltr',\n        features: a.features || [],\n        fill: a.fill !== false,\n        font: a.font || [],\n        fontSize: a.fontSize || 12,\n        hangingPunctuation: a.hangingPunctuation || false,\n        hyphenationFactor: a.hyphenationFactor || 0,\n        indent: a.indent || 0,\n        justificationFactor: a.justificationFactor || 1,\n        lineHeight: a.lineHeight || null,\n        lineSpacing: a.lineSpacing || 0,\n        link: a.link || null,\n        marginLeft: a.marginLeft || a.margin || 0,\n        marginRight: a.marginRight || a.margin || 0,\n        opacity: a.opacity,\n        paddingTop: a.paddingTop || a.padding || 0,\n        paragraphSpacing: a.paragraphSpacing || 0,\n        script: a.script || null,\n        shrinkFactor: a.shrinkFactor || 0,\n        strike: a.strike || false,\n        strikeColor: a.strikeColor || a.color || 'black',\n        strikeStyle: a.strikeStyle || 'solid',\n        stroke: a.stroke || false,\n        underline: a.underline || false,\n        underlineColor: a.underlineColor || a.color || 'black',\n        underlineStyle: a.underlineStyle || 'solid',\n        verticalAlign: a.verticalAlign || null,\n        wordSpacing: a.wordSpacing || 0,\n        yOffset: a.yOffset || 0,\n    };\n};\n/**\n * Apply default style to run\n *\n * @param run - Run\n * @returns Run with default styles\n */\nconst applyRunStyles = (run) => {\n    const attributes = applyAttributes(run.attributes);\n    return Object.assign({}, run, { attributes });\n};\n/**\n * Apply default attributes for an attributed string\n */\nconst applyDefaultStyles = () => {\n    return (attributedString) => {\n        const string = attributedString.string || '';\n        const runs = (attributedString.runs || []).map(applyRunStyles);\n        return { string, runs };\n    };\n};\n\n/**\n * Apply scaling and yOffset for verticalAlign 'sub' and 'super'.\n */\nconst verticalAlignment = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string\n     */\n    return (attributedString) => {\n        attributedString.runs.forEach((run) => {\n            const { attributes } = run;\n            const { verticalAlign } = attributes;\n            if (verticalAlign === 'sub') {\n                attributes.yOffset = -0.2;\n            }\n            else if (verticalAlign === 'super') {\n                attributes.yOffset = 0.4;\n            }\n        });\n        return attributedString;\n    };\n};\n\nconst bidi$1 = (0,bidi_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n/**\n * @param runs\n * @returns Bidi levels\n */\nconst getBidiLevels = (runs) => {\n    return runs.reduce((acc, run) => {\n        const length = run.end - run.start;\n        const levels = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.repeat)(run.attributes.bidiLevel, length);\n        return acc.concat(levels);\n    }, []);\n};\n/**\n * Perform bidi mirroring\n */\nconst mirrorString = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string\n     */\n    return (attributedString) => {\n        const levels = getBidiLevels(attributedString.runs);\n        let updatedString = '';\n        attributedString.string.split('').forEach((char, index) => {\n            const isRTL = levels[index] % 2 === 1;\n            const mirroredChar = isRTL\n                ? bidi$1.getMirroredCharacter(attributedString.string.charAt(index))\n                : null;\n            updatedString += mirroredChar || char;\n        });\n        const result = {\n            ...attributedString,\n            string: updatedString,\n        };\n        return result;\n    };\n};\n\n/**\n * A LayoutEngine is the main object that performs text layout.\n * It accepts an AttributedString and a Container object\n * to layout text into, and uses several helper objects to perform\n * various layout tasks. These objects can be overridden to customize\n * layout behavior.\n */\nconst layoutEngine = (engines) => {\n    return (attributedString, container, options = {}) => {\n        const processParagraph = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveYOffset(), resolveAttachments(), verticalAlignment(), wrapWords(engines, options), generateGlyphs(), mirrorString(), preprocessRuns(engines));\n        const processParagraphs = (paragraphs) => paragraphs.map(processParagraph);\n        return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(finalizeFragments(engines, options), bidiReordering(), typesetter(engines, options, container), processParagraphs, splitParagraphs(), applyDefaultStyles())(attributedString);\n    };\n};\n\nconst bidi = (0,bidi_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\nconst bidiEngine = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string\n     */\n    return (attributedString) => {\n        const { string } = attributedString;\n        const direction = attributedString.runs[0]?.attributes.direction;\n        const { levels } = bidi.getEmbeddingLevels(string, direction);\n        let lastLevel = null;\n        let lastIndex = 0;\n        let index = 0;\n        const runs = [];\n        for (let i = 0; i < levels.length; i += 1) {\n            const level = levels[i];\n            if (level !== lastLevel) {\n                if (lastLevel !== null) {\n                    runs.push({\n                        start: lastIndex,\n                        end: index,\n                        attributes: { bidiLevel: lastLevel },\n                    });\n                }\n                lastIndex = index;\n                lastLevel = level;\n            }\n            index += 1;\n        }\n        if (lastIndex < string.length) {\n            runs.push({\n                start: lastIndex,\n                end: string.length,\n                attributes: { bidiLevel: lastLevel },\n            });\n        }\n        const result = { string, runs };\n        return result;\n    };\n};\n\nconst INFINITY = 10000;\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n    let position = null;\n    let minimumBadness = Infinity;\n    const sum = { width: 0, stretch: 0, shrink: 0 };\n    const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n    const calculateRatio = (node) => {\n        const stretch = 'stretch' in node ? node.stretch : null;\n        if (sum.width < lineLength) {\n            if (!stretch)\n                return INFINITY;\n            return sum.stretch - stretch > 0\n                ? (lineLength - sum.width) / sum.stretch\n                : INFINITY;\n        }\n        const shrink = 'shrink' in node ? node.shrink : null;\n        if (sum.width > lineLength) {\n            if (!shrink)\n                return INFINITY;\n            return sum.shrink - shrink > 0\n                ? (lineLength - sum.width) / sum.shrink\n                : INFINITY;\n        }\n        return 0;\n    };\n    for (let i = 0; i < subnodes.length; i += 1) {\n        const node = subnodes[i];\n        if (node.type === 'box') {\n            sum.width += node.width;\n        }\n        if (node.type === 'glue') {\n            sum.width += node.width;\n            sum.stretch += node.stretch;\n            sum.shrink += node.shrink;\n        }\n        if (sum.width - sum.shrink > lineLength) {\n            if (position === null) {\n                let j = i === 0 ? i + 1 : i;\n                while (j < subnodes.length &&\n                    (subnodes[j].type === 'glue' || subnodes[j].type === 'penalty')) {\n                    j++;\n                }\n                position = j - 1;\n            }\n            break;\n        }\n        if (node.type === 'penalty' || node.type === 'glue') {\n            const ratio = calculateRatio(node);\n            const penalty = node.type === 'penalty' ? node.penalty : 0;\n            const badness = 100 * Math.abs(ratio) ** 3 + penalty;\n            if (minimumBadness >= badness) {\n                position = i;\n                minimumBadness = badness;\n            }\n        }\n    }\n    return sum.width - sum.shrink > lineLength ? position : null;\n};\nconst applyBestFit = (nodes, widths) => {\n    let count = 0;\n    let lineNumber = 0;\n    let subnodes = nodes;\n    const breakpoints = [0];\n    while (subnodes.length > 0) {\n        const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n        if (breakpoint !== null) {\n            count += breakpoint;\n            breakpoints.push(count);\n            subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n            count++;\n            lineNumber++;\n        }\n        else {\n            subnodes = [];\n        }\n    }\n    return breakpoints;\n};\n\n/* eslint-disable max-classes-per-file */\nclass LinkedListNode {\n    data;\n    prev;\n    next;\n    constructor(data) {\n        this.data = data;\n        this.prev = null;\n        this.next = null;\n    }\n}\nclass LinkedList {\n    static Node = LinkedListNode;\n    head;\n    tail;\n    listSize;\n    listLength;\n    constructor() {\n        this.head = null;\n        this.tail = null;\n        this.listSize = 0;\n        this.listLength = 0;\n    }\n    isLinked(node) {\n        return !((node &&\n            node.prev === null &&\n            node.next === null &&\n            this.tail !== node &&\n            this.head !== node) ||\n            this.isEmpty());\n    }\n    size() {\n        return this.listSize;\n    }\n    isEmpty() {\n        return this.listSize === 0;\n    }\n    first() {\n        return this.head;\n    }\n    last() {\n        return this.last;\n    }\n    forEach(callback) {\n        let node = this.head;\n        while (node !== null) {\n            callback(node);\n            node = node.next;\n        }\n    }\n    at(i) {\n        let node = this.head;\n        let index = 0;\n        if (i >= this.listLength || i < 0) {\n            return null;\n        }\n        while (node !== null) {\n            if (i === index) {\n                return node;\n            }\n            node = node.next;\n            index += 1;\n        }\n        return null;\n    }\n    insertAfter(node, newNode) {\n        if (!this.isLinked(node))\n            return this;\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next === null) {\n            this.tail = newNode;\n        }\n        else {\n            node.next.prev = newNode;\n        }\n        node.next = newNode;\n        this.listSize += 1;\n        return this;\n    }\n    insertBefore(node, newNode) {\n        if (!this.isLinked(node))\n            return this;\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev === null) {\n            this.head = newNode;\n        }\n        else {\n            node.prev.next = newNode;\n        }\n        node.prev = newNode;\n        this.listSize += 1;\n        return this;\n    }\n    push(node) {\n        if (this.head === null) {\n            this.unshift(node);\n        }\n        else {\n            this.insertAfter(this.tail, node);\n        }\n        return this;\n    }\n    unshift(node) {\n        if (this.head === null) {\n            this.head = node;\n            this.tail = node;\n            node.prev = null;\n            node.next = null;\n            this.listSize += 1;\n        }\n        else {\n            this.insertBefore(this.head, node);\n        }\n        return this;\n    }\n    remove(node) {\n        if (!this.isLinked(node))\n            return this;\n        if (node.prev === null) {\n            this.head = node.next;\n        }\n        else {\n            node.prev.next = node.next;\n        }\n        if (node.next === null) {\n            this.tail = node.prev;\n        }\n        else {\n            node.next.prev = node.prev;\n        }\n        this.listSize -= 1;\n        return this;\n    }\n}\n\n/**\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nfunction breakpoint(position, demerits, line, fitnessClass, totals, previous) {\n    return {\n        position,\n        demerits,\n        line,\n        fitnessClass,\n        totals: totals || {\n            width: 0,\n            stretch: 0,\n            shrink: 0,\n        },\n        previous,\n    };\n}\nfunction computeCost(nodes, lineLengths, sum, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength = currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n    if (nodes[end].type === 'penalty') {\n        width += nodes[end].width;\n    }\n    // Calculate the stretch ratio\n    if (width < lineLength) {\n        stretch = sum.stretch - active.totals.stretch;\n        if (stretch > 0) {\n            return (lineLength - width) / stretch;\n        }\n        return linebreak.infinity;\n    }\n    // Calculate the shrink ratio\n    if (width > lineLength) {\n        shrink = sum.shrink - active.totals.shrink;\n        if (shrink > 0) {\n            return (lineLength - width) / shrink;\n        }\n        return linebreak.infinity;\n    }\n    // perfect match\n    return 0;\n}\n// Add width, stretch and shrink values from the current\n// break point up to the next box or forced penalty.\nfunction computeSum(nodes, sum, breakPointIndex) {\n    const result = {\n        width: sum.width,\n        stretch: sum.stretch,\n        shrink: sum.shrink,\n    };\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.type === 'glue') {\n            result.width += node.width;\n            result.stretch += node.stretch;\n            result.shrink += node.shrink;\n        }\n        else if (node.type === 'box' ||\n            (node.type === 'penalty' &&\n                node.penalty === -linebreak.infinity &&\n                i > breakPointIndex)) {\n            break;\n        }\n    }\n    return result;\n}\nfunction findBestBreakpoints(activeNodes) {\n    const breakpoints = [];\n    if (activeNodes.size() === 0)\n        return [];\n    let tmp = { data: { demerits: Infinity } };\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach((node) => {\n        if (node.data.demerits < tmp.data.demerits) {\n            tmp = node;\n        }\n    });\n    while (tmp !== null) {\n        breakpoints.push(tmp.data.position);\n        tmp = tmp.data.previous;\n    }\n    return breakpoints.reverse();\n}\n/**\n * @param nodes\n * @param availableWidths\n * @param tolerance\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n */\nconst linebreak = (nodes, availableWidths, tolerance) => {\n    // Demerits are used as a way to penalize bad line breaks\n    //  - line: applied to each line, depending on how much spaces need to stretch or shrink\n    //  - flagged: applied when consecutive lines end in hyphenation\n    //  - fitness: algorithm groups lines into fitness classes based on how loose or tight the spacing is.\n    //             if a paragraph has consecutive lines from different fitness classes,\n    //             a fitness demerit is applied to maintain visual consistency.\n    const options = {\n        demerits: { line: 10, flagged: 100, fitness: 3000 },\n        tolerance: tolerance || 3,\n    };\n    const activeNodes = new LinkedList();\n    const sum = { width: 0, stretch: 0, shrink: 0 };\n    const lineLengths = availableWidths;\n    // Add an active node for the start of the paragraph.\n    activeNodes.push(new LinkedList.Node(breakpoint(0, 0, 0, 0, undefined, null)));\n    // The main loop of the algorithm\n    function mainLoop(node, index, nodes) {\n        let active = activeNodes.first();\n        // The inner loop iterates through all the active nodes with line < currentLine and then\n        // breaks out to insert the new active node candidates before looking at the next active\n        // nodes for the next lines. The result of this is that the active node list is always\n        // sorted by line number.\n        while (active !== null) {\n            let currentLine = 0;\n            // Candidates fo each fitness class\n            const candidates = [\n                { active: undefined, demerits: Infinity },\n                { active: undefined, demerits: Infinity },\n                { active: undefined, demerits: Infinity },\n                { active: undefined, demerits: Infinity },\n            ];\n            // Iterate through the linked list of active nodes to find new potential active nodes and deactivate current active nodes.\n            while (active !== null) {\n                currentLine = active.data.line + 1;\n                const ratio = computeCost(nodes, lineLengths, sum, index, active.data, currentLine);\n                // Deactive nodes when the distance between the current active node and the\n                // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n                // ratio becomes negative) or when the current node is a forced break (i.e. the end\n                // of the paragraph when we want to remove all active nodes, but possibly have a final\n                // candidate active node---if the paragraph can be set using the given tolerance value.)\n                if (ratio < -1 ||\n                    (node.type === 'penalty' && node.penalty === -linebreak.infinity)) {\n                    activeNodes.remove(active);\n                }\n                // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n                // total demerits and record a candidate active node.\n                if (ratio >= -1 && ratio <= options.tolerance) {\n                    const badness = 100 * Math.pow(Math.abs(ratio), 3);\n                    let demerits = 0;\n                    // Positive penalty\n                    if (node.type === 'penalty' && node.penalty >= 0) {\n                        demerits =\n                            Math.pow(options.demerits.line + badness, 2) +\n                                Math.pow(node.penalty, 2);\n                        // Negative penalty but not a forced break\n                    }\n                    else if (node.type === 'penalty' &&\n                        node.penalty !== -linebreak.infinity) {\n                        demerits =\n                            Math.pow(options.demerits.line + badness, 2) -\n                                Math.pow(node.penalty, 2);\n                        // All other cases\n                    }\n                    else {\n                        demerits = Math.pow(options.demerits.line + badness, 2);\n                    }\n                    if (node.type === 'penalty' &&\n                        nodes[active.data.position].type === 'penalty') {\n                        demerits +=\n                            options.demerits.flagged *\n                                node.flagged *\n                                // @ts-expect-error node is penalty here\n                                nodes[active.data.position].flagged;\n                    }\n                    // Calculate the fitness class for this candidate active node.\n                    let currentClass;\n                    if (ratio < -0.5) {\n                        currentClass = 0;\n                    }\n                    else if (ratio <= 0.5) {\n                        currentClass = 1;\n                    }\n                    else if (ratio <= 1) {\n                        currentClass = 2;\n                    }\n                    else {\n                        currentClass = 3;\n                    }\n                    // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines differ too much.\n                    if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n                        demerits += options.demerits.fitness;\n                    }\n                    // Add the total demerits of the active node to get the total demerits of this candidate node.\n                    demerits += active.data.demerits;\n                    // Only store the best candidate for each fitness class\n                    if (demerits < candidates[currentClass].demerits) {\n                        candidates[currentClass] = { active, demerits };\n                    }\n                }\n                active = active.next;\n                // Stop iterating through active nodes to insert new candidate active nodes in the active list\n                // before moving on to the active nodes for the next line.\n                // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n                // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n                // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n                // list sorted has a higher priority.\n                if (active !== null && active.data.line >= currentLine) {\n                    break;\n                }\n            }\n            const tmpSum = computeSum(nodes, sum, index);\n            for (let fitnessClass = 0; fitnessClass < candidates.length; fitnessClass += 1) {\n                const candidate = candidates[fitnessClass];\n                if (candidate.demerits === Infinity)\n                    continue;\n                const newNode = new LinkedList.Node(breakpoint(index, candidate.demerits, candidate.active.data.line + 1, fitnessClass, tmpSum, candidate.active));\n                if (active !== null) {\n                    activeNodes.insertBefore(active, newNode);\n                }\n                else {\n                    activeNodes.push(newNode);\n                }\n            }\n        }\n    }\n    nodes.forEach((node, index, nodes) => {\n        if (node.type === 'box') {\n            sum.width += node.width;\n            return;\n        }\n        if (node.type === 'glue') {\n            const precedesBox = index > 0 && nodes[index - 1].type === 'box';\n            if (precedesBox)\n                mainLoop(node, index, nodes);\n            sum.width += node.width;\n            sum.stretch += node.stretch;\n            sum.shrink += node.shrink;\n            return;\n        }\n        if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n            mainLoop(node, index, nodes);\n        }\n    });\n    return findBestBreakpoints(activeNodes);\n};\nlinebreak.infinity = 10000;\nlinebreak.glue = (width, start, end, stretch, shrink) => ({\n    type: 'glue',\n    start,\n    end,\n    width,\n    stretch,\n    shrink,\n});\nlinebreak.box = (width, start, end, hyphenated = false) => ({\n    type: 'box',\n    width,\n    start,\n    end,\n    hyphenated,\n});\nlinebreak.penalty = (width, penalty, flagged) => ({\n    type: 'penalty',\n    width,\n    penalty,\n    flagged,\n});\n\n/**\n * Add scalar to run\n *\n * @param index - Scalar\n * @param run - Run\n * @returns Added run\n */\nconst add = (index, run) => {\n    const start = run.start + index;\n    const end = run.end + index;\n    return Object.assign({}, run, { start, end });\n};\n\n/**\n * Get run length\n *\n * @param run - Run\n * @returns Length\n */\nconst length = (run) => {\n    return run.end - run.start;\n};\n\n/**\n * Concats two runs into one\n *\n * @param runA - First run\n * @param runB - Second run\n * @returns Concatenated run\n */\nconst concat = (runA, runB) => {\n    const end = runA.end + length(runB);\n    const glyphs = (runA.glyphs || []).concat(runB.glyphs || []);\n    const positions = (runA.positions || []).concat(runB.positions || []);\n    const attributes = Object.assign({}, runA.attributes, runB.attributes);\n    const runAIndices = runA.glyphIndices || [];\n    const runALastIndex = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runAIndices) || 0;\n    const runBIndices = (runB.glyphIndices || []).map((i) => i + runALastIndex + 1);\n    const glyphIndices = normalize(runAIndices.concat(runBIndices));\n    return Object.assign({}, runA, {\n        end,\n        glyphs,\n        positions,\n        attributes,\n        glyphIndices,\n    });\n};\n\n/**\n * Insert glyph to run in the given index\n *\n * @param index - Index\n * @param glyph - Glyph\n * @param run - Run\n * @returns Run with glyph\n */\nconst insertGlyph$1 = (index, glyph, run) => {\n    if (!glyph)\n        return run;\n    // Split resolves ligature splitting in case new glyph breaks some\n    const leadingRun = slice$1(0, index, run);\n    const trailingRun = slice$1(index, Infinity, run);\n    return concat(append$1(glyph, leadingRun), trailingRun);\n};\n/**\n * Insert either glyph or code point to run in the given index\n *\n * @param index - Index\n * @param value - Glyph or codePoint\n * @param run - Run\n * @returns Run with glyph\n */\nconst insert = (index, value, run) => {\n    const font = getFont(run);\n    const glyph = isNumber(value) ? fromCodePoint(value, font) : value;\n    return insertGlyph$1(index, glyph, run);\n};\n\n/**\n * Get run index at char index\n *\n * @param index - Char index\n * @param attributedString - Attributed string\n * @returns Run index\n */\nconst runIndexAt = (index, attributedString) => {\n    return runIndexAt$1(index, attributedString.runs);\n};\n\n/**\n * Insert glyph into attributed string\n *\n * @param index - Index\n * @param glyph - Glyph or code point\n * @param attributedString - Attributed string\n * @returns Attributed string with new glyph\n */\nconst insertGlyph = (index, glyph, attributedString) => {\n    const runIndex = runIndexAt(index, attributedString);\n    // Add glyph to the end if run index invalid\n    if (runIndex === -1)\n        return append(glyph, attributedString);\n    const codePoints = [glyph] ;\n    const string = attributedString.string.slice(0, index) +\n        stringFromCodePoints(codePoints) +\n        attributedString.string.slice(index);\n    const runs = attributedString.runs.map((run, i) => {\n        if (i === runIndex)\n            return insert(index - run.start, glyph, run);\n        if (i > runIndex)\n            return add(codePoints.length, run);\n        return run;\n    });\n    return Object.assign({}, attributedString, { string, runs });\n};\n\n/**\n * Advance width between two string indices\n *\n * @param start - Glyph index\n * @param end - Glyph index\n * @param run - Run\n * @returns Advanced width run\n */\nconst advanceWidthBetween$1 = (start, end, run) => {\n    const runStart = run.start || 0;\n    const glyphStartIndex = Math.max(0, glyphIndexAt(start - runStart, run));\n    const glyphEndIndex = Math.max(0, glyphIndexAt(end - runStart, run));\n    const positions = (run.positions || []).slice(glyphStartIndex, glyphEndIndex);\n    return advanceWidth$2(positions);\n};\n\n/**\n * Advance width between start and end\n * Does not consider ligature splitting for the moment.\n * Check performance impact on supporting this\n *\n * @param start - Start offset\n * @param end - End offset\n * @param attributedString\n * @returns Advance width\n */\nconst advanceWidthBetween = (start, end, attributedString) => {\n    const runs = filter(start, end, attributedString.runs);\n    return runs.reduce((acc, run) => acc + advanceWidthBetween$1(start, end, run), 0);\n};\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\nconst opts = {\n    width: 3,\n    stretch: 6,\n    shrink: 9,\n};\n/**\n * Slice attributed string to many lines\n *\n * @param attributedString - Attributed string\n * @param nodes\n * @param breaks\n * @returns Attributed strings\n */\nconst breakLines = (attributedString, nodes, breaks) => {\n    let start = 0;\n    let end = null;\n    const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint];\n        const prevNode = nodes[breakPoint - 1];\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint === nodes.length - 1)\n            return acc;\n        let line;\n        if (node.type === 'penalty') {\n            // @ts-expect-error penalty node will always preceed box or glue node\n            end = prevNode.end;\n            line = slice(start, end, attributedString);\n            line = insertGlyph(line.string.length, HYPHEN, line);\n        }\n        else {\n            end = node.end;\n            line = slice(start, end, attributedString);\n        }\n        start = end;\n        return [...acc, line];\n    }, []);\n    // Last line\n    lines.push(slice(start, attributedString.string.length, attributedString));\n    return lines;\n};\n/**\n * Return Knuth & Plass nodes based on line and previously calculated syllables\n *\n * @param attributedString - Attributed string\n * @param attributes - Attributes\n * @param options - Layout options\n * @returns ?\n */\nconst getNodes = (attributedString, { align }, options) => {\n    let start = 0;\n    const hyphenWidth = 5;\n    const { syllables } = attributedString;\n    const hyphenPenalty = options.hyphenationPenalty || (align === 'justify' ? 100 : 600);\n    const result = syllables.reduce((acc, s, index) => {\n        const width = advanceWidthBetween(start, start + s.length, attributedString);\n        if (s.trim() === '') {\n            const stretch = (width * opts.width) / opts.stretch;\n            const shrink = (width * opts.width) / opts.shrink;\n            const end = start + s.length;\n            // Add glue node. Glue nodes are used to fill the space between words.\n            acc.push(linebreak.glue(width, start, end, stretch, shrink));\n        }\n        else {\n            const hyphenated = syllables[index + 1] !== ' ';\n            const end = start + s.length;\n            // Add box node. Box nodes are used to represent words.\n            acc.push(linebreak.box(width, start, end, hyphenated));\n            if (syllables[index + 1] && hyphenated) {\n                // Add penalty node. Penalty nodes are used to represent hyphenation points.\n                acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n            }\n        }\n        start += s.length;\n        return acc;\n    }, []);\n    // Add mandatory final glue\n    result.push(linebreak.glue(0, start, start, linebreak.infinity, 0));\n    result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n    return result;\n};\n/**\n * @param attributedString - Attributed string\n * @returns Attributes\n */\nconst getAttributes = (attributedString) => {\n    return attributedString.runs?.[0]?.attributes || {};\n};\n/**\n * Performs Knuth & Plass line breaking algorithm\n * Fallbacks to best fit algorithm if latter not successful\n *\n * @param options - Layout options\n */\nconst linebreaker = (options) => {\n    /**\n     * @param attributedString - Attributed string\n     * @param availableWidths - Available widths\n     * @returns Attributed string\n     */\n    return (attributedString, availableWidths) => {\n        let tolerance = options.tolerance || 4;\n        const attributes = getAttributes(attributedString);\n        const nodes = getNodes(attributedString, attributes, options);\n        let breaks = linebreak(nodes, availableWidths, tolerance);\n        // Try again with a higher tolerance if the line breaking failed.\n        while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n            tolerance += TOLERANCE_STEPS;\n            breaks = linebreak(nodes, availableWidths, tolerance);\n        }\n        if (breaks.length === 0 || (breaks.length === 1 && breaks[0] === 0)) {\n            breaks = applyBestFit(nodes, availableWidths);\n        }\n        return breakLines(attributedString, nodes, breaks.slice(1));\n    };\n};\n\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"GROW\"] = 0] = \"GROW\";\n    Direction[Direction[\"SHRINK\"] = 1] = \"SHRINK\";\n})(Direction || (Direction = {}));\nconst WHITESPACE_PRIORITY = 1;\nconst LETTER_PRIORITY = 2;\nconst EXPAND_WHITESPACE_FACTOR = {\n    before: 0.5,\n    after: 0.5,\n    priority: WHITESPACE_PRIORITY,\n    unconstrained: false,\n};\nconst EXPAND_CHAR_FACTOR = {\n    before: 0.14453125, // 37/256\n    after: 0.14453125,\n    priority: LETTER_PRIORITY,\n    unconstrained: false,\n};\nconst SHRINK_WHITESPACE_FACTOR = {\n    before: -0.04296875, // -11/256\n    after: -0.04296875,\n    priority: WHITESPACE_PRIORITY,\n    unconstrained: false,\n};\nconst SHRINK_CHAR_FACTOR = {\n    before: -0.04296875,\n    after: -0.04296875,\n    priority: LETTER_PRIORITY,\n    unconstrained: false,\n};\nconst getCharFactor = (direction, options) => {\n    const expandCharFactor = options.expandCharFactor || {};\n    const shrinkCharFactor = options.shrinkCharFactor || {};\n    return direction === Direction.GROW\n        ? Object.assign({}, EXPAND_CHAR_FACTOR, expandCharFactor)\n        : Object.assign({}, SHRINK_CHAR_FACTOR, shrinkCharFactor);\n};\nconst getWhitespaceFactor = (direction, options) => {\n    const expandWhitespaceFactor = options.expandWhitespaceFactor || {};\n    const shrinkWhitespaceFactor = options.shrinkWhitespaceFactor || {};\n    return direction === Direction.GROW\n        ? Object.assign({}, EXPAND_WHITESPACE_FACTOR, expandWhitespaceFactor)\n        : Object.assign({}, SHRINK_WHITESPACE_FACTOR, shrinkWhitespaceFactor);\n};\nconst factor = (direction, options) => (glyphs) => {\n    const charFactor = getCharFactor(direction, options);\n    const whitespaceFactor = getWhitespaceFactor(direction, options);\n    const factors = [];\n    for (let index = 0; index < glyphs.length; index += 1) {\n        let f;\n        const glyph = glyphs[index];\n        if (isWhiteSpace(glyph)) {\n            f = Object.assign({}, whitespaceFactor);\n            if (index === glyphs.length - 1) {\n                f.before = 0;\n                if (index > 0) {\n                    factors[index - 1].after = 0;\n                }\n            }\n        }\n        else if (glyph.isMark && index > 0) {\n            f = Object.assign({}, factors[index - 1]);\n            f.before = 0;\n            factors[index - 1].after = 0;\n        }\n        else {\n            f = Object.assign({}, charFactor);\n        }\n        factors.push(f);\n    }\n    return factors;\n};\nconst getFactors = (gap, line, options) => {\n    const direction = gap > 0 ? Direction.GROW : Direction.SHRINK;\n    const getFactor = factor(direction, options);\n    const factors = line.runs.reduce((acc, run) => {\n        return acc.concat(getFactor(run.glyphs));\n    }, []);\n    factors[0].before = 0;\n    factors[factors.length - 1].after = 0;\n    return factors;\n};\n\nconst KASHIDA_PRIORITY = 0;\nconst NULL_PRIORITY = 3;\nconst getDistances = (gap, factors) => {\n    let total = 0;\n    const priorities = [];\n    const unconstrained = [];\n    for (let priority = KASHIDA_PRIORITY; priority <= NULL_PRIORITY; priority += 1) {\n        priorities[priority] = unconstrained[priority] = 0;\n    }\n    // sum the factors at each priority\n    for (let j = 0; j < factors.length; j += 1) {\n        const f = factors[j];\n        const sum = f.before + f.after;\n        total += sum;\n        priorities[f.priority] += sum;\n        if (f.unconstrained) {\n            unconstrained[f.priority] += sum;\n        }\n    }\n    // choose the priorities that need to be applied\n    let highestPriority = -1;\n    let highestPrioritySum = 0;\n    let remainingGap = gap;\n    let priority;\n    for (priority = KASHIDA_PRIORITY; priority <= NULL_PRIORITY; priority += 1) {\n        const prioritySum = priorities[priority];\n        if (prioritySum !== 0) {\n            if (highestPriority === -1) {\n                highestPriority = priority;\n                highestPrioritySum = prioritySum;\n            }\n            // if this priority covers the remaining gap, we're done\n            if (Math.abs(remainingGap) <= Math.abs(prioritySum)) {\n                priorities[priority] = remainingGap / prioritySum;\n                unconstrained[priority] = 0;\n                remainingGap = 0;\n                break;\n            }\n            // mark that we need to use 100% of the adjustment from\n            // this priority, and subtract the space that it consumes\n            priorities[priority] = 1;\n            remainingGap -= prioritySum;\n            // if this priority has unconstrained glyphs, let them consume the remaining space\n            if (unconstrained[priority] !== 0) {\n                unconstrained[priority] = remainingGap / unconstrained[priority];\n                remainingGap = 0;\n                break;\n            }\n        }\n    }\n    // zero out remaining priorities (if any)\n    for (let p = priority + 1; p <= NULL_PRIORITY; p += 1) {\n        priorities[p] = 0;\n        unconstrained[p] = 0;\n    }\n    // if there is still space left over, assign it to the highest priority that we saw.\n    // this violates their factors, but it only happens in extreme cases\n    if (remainingGap > 0 && highestPriority > -1) {\n        priorities[highestPriority] =\n            (highestPrioritySum + (gap - total)) / highestPrioritySum;\n    }\n    // create and return an array of distances to add to each glyph's advance\n    const distances = [];\n    for (let index = 0; index < factors.length; index += 1) {\n        // the distance to add to this glyph is the sum of the space to add\n        // after this glyph, and the space to add before the next glyph\n        const f = factors[index];\n        const next = factors[index + 1];\n        let dist = f.after * priorities[f.priority];\n        if (next) {\n            dist += next.before * priorities[next.priority];\n        }\n        // if this glyph is unconstrained, add the unconstrained distance as well\n        if (f.unconstrained) {\n            dist += f.after * unconstrained[f.priority];\n            if (next) {\n                dist += next.before * unconstrained[next.priority];\n            }\n        }\n        distances.push(dist);\n    }\n    return distances;\n};\n\n/**\n * Adjust run positions by given distances\n *\n * @param distances\n * @param line\n * @returns Line\n */\nconst justifyLine = (distances, line) => {\n    let index = 0;\n    for (const run of line.runs) {\n        for (const position of run.positions) {\n            position.xAdvance += distances[index++];\n        }\n    }\n    return line;\n};\n/**\n * A JustificationEngine is used by a Typesetter to perform line fragment\n * justification. This implementation is based on a description of Apple's\n * justification algorithm from a PDF in the Apple Font Tools package.\n *\n * @param options - Layout options\n */\nconst justification = (options) => {\n    /**\n     * @param line\n     * @returns Line\n     */\n    return (line) => {\n        const gap = line.box.width - advanceWidth(line);\n        if (gap === 0)\n            return line; // Exact fit\n        const factors = getFactors(gap, line, options);\n        const distances = getDistances(gap, factors);\n        return justifyLine(distances, line);\n    };\n};\n\n/**\n * Returns attributed string ascent\n *\n * @param attributedString - Attributed string\n * @returns Ascent\n */\nconst ascent = (attributedString) => {\n    const reducer = (acc, run) => Math.max(acc, ascent$1(run));\n    return attributedString.runs.reduce(reducer, 0);\n};\n\n// The base font size used for calculating underline thickness.\nconst BASE_FONT_SIZE = 12;\n/**\n * A TextDecorationEngine is used by a Typesetter to generate\n * DecorationLines for a line fragment, including underlines\n * and strikes.\n */\nconst textDecoration = () => (line) => {\n    let x = line.overflowLeft || 0;\n    const overflowRight = line.overflowRight || 0;\n    const maxX = advanceWidth(line) - overflowRight;\n    line.decorationLines = [];\n    for (let i = 0; i < line.runs.length; i += 1) {\n        const run = line.runs[i];\n        const width = Math.min(maxX - x, advanceWidth$1(run));\n        const thickness = Math.max(0.5, Math.floor(run.attributes.fontSize / BASE_FONT_SIZE));\n        if (run.attributes.underline) {\n            const rect = {\n                x,\n                y: ascent(line) + thickness * 2,\n                width,\n                height: thickness,\n            };\n            const decorationLine = {\n                rect,\n                opacity: run.attributes.opacity,\n                color: run.attributes.underlineColor || 'black',\n                style: run.attributes.underlineStyle || 'solid',\n            };\n            line.decorationLines.push(decorationLine);\n        }\n        if (run.attributes.strike) {\n            const y = ascent(line) - ascent$1(run) / 3;\n            const rect = { x, y, width, height: thickness };\n            const decorationLine = {\n                rect,\n                opacity: run.attributes.opacity,\n                color: run.attributes.strikeColor || 'black',\n                style: run.attributes.strikeStyle || 'solid',\n            };\n            line.decorationLines.push(decorationLine);\n        }\n        x += width;\n    }\n    return line;\n};\n\nconst ignoredScripts = ['Common', 'Inherited', 'Unknown'];\n/**\n * Resolves unicode script in runs, grouping equal runs together\n */\nconst scriptItemizer = () => {\n    /**\n     * @param attributedString - Attributed string\n     * @returns Attributed string\n     */\n    return (attributedString) => {\n        const { string } = attributedString;\n        let lastScript = 'Unknown';\n        let lastIndex = 0;\n        let index = 0;\n        const runs = [];\n        if (!string)\n            return empty();\n        for (let i = 0; i < string.length; i += 1) {\n            const char = string[i];\n            const codePoint = char.codePointAt(0);\n            const script = unicode_properties__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getScript(codePoint);\n            if (script !== lastScript && !ignoredScripts.includes(script)) {\n                if (lastScript !== 'Unknown') {\n                    runs.push({\n                        start: lastIndex,\n                        end: index,\n                        attributes: { script: lastScript },\n                    });\n                }\n                lastIndex = index;\n                lastScript = script;\n            }\n            index += char.length;\n        }\n        if (lastIndex < string.length) {\n            runs.push({\n                start: lastIndex,\n                end: string.length,\n                attributes: { script: lastScript },\n            });\n        }\n        const result = { string, runs: runs };\n        return result;\n    };\n};\n\nconst SOFT_HYPHEN = '\\u00ad';\nconst hyphenator = hyphen__WEBPACK_IMPORTED_MODULE_3__(hyphen_patterns_en_us_js__WEBPACK_IMPORTED_MODULE_4__);\n/**\n * @param word\n * @returns Word parts\n */\nconst splitHyphen = (word) => {\n    return word.split(SOFT_HYPHEN);\n};\nconst cache = {};\n/**\n * @param word\n * @returns Word parts\n */\nconst getParts = (word) => {\n    const base = word.includes(SOFT_HYPHEN) ? word : hyphenator(word);\n    return splitHyphen(base);\n};\nconst wordHyphenation = () => {\n    /**\n     * @param word - Word\n     * @returns Word parts\n     */\n    return (word) => {\n        const cacheKey = `_${word}`;\n        if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(word))\n            return [];\n        if (cache[cacheKey])\n            return cache[cacheKey];\n        cache[cacheKey] = getParts(word);\n        return cache[cacheKey];\n    };\n};\n\nconst IGNORED_CODE_POINTS = [173];\nconst getFontSize = (run) => run.attributes.fontSize || 12;\nconst pickFontFromFontStack = (codePoint, fontStack, lastFont) => {\n    const fontStackWithFallback = [...fontStack, lastFont];\n    for (let i = 0; i < fontStackWithFallback.length; i += 1) {\n        const font = fontStackWithFallback[i];\n        if (!IGNORED_CODE_POINTS.includes(codePoint) &&\n            font &&\n            font.hasGlyphForCodePoint &&\n            font.hasGlyphForCodePoint(codePoint)) {\n            return font;\n        }\n    }\n    return fontStack.at(-1);\n};\nconst fontSubstitution = () => ({ string, runs }) => {\n    let lastFont = null;\n    let lastFontSize = null;\n    let lastIndex = 0;\n    let index = 0;\n    const res = [];\n    for (let i = 0; i < runs.length; i += 1) {\n        const run = runs[i];\n        if (string.length === 0) {\n            res.push({\n                start: 0,\n                end: 0,\n                attributes: { font: run.attributes.font },\n            });\n            break;\n        }\n        const chars = string.slice(run.start, run.end);\n        for (let j = 0; j < chars.length; j += 1) {\n            const char = chars[j];\n            const codePoint = char.codePointAt(0);\n            // If the default font does not have a glyph and the fallback font does, we use it\n            const font = pickFontFromFontStack(codePoint, run.attributes.font, lastFont);\n            const fontSize = getFontSize(run);\n            // If anything that would impact res has changed, update it\n            if (font !== lastFont ||\n                fontSize !== lastFontSize ||\n                font.unitsPerEm !== lastFont.unitsPerEm) {\n                if (lastFont) {\n                    res.push({\n                        start: lastIndex,\n                        end: index,\n                        attributes: {\n                            font: [lastFont],\n                            scale: lastFontSize / lastFont.unitsPerEm,\n                        },\n                    });\n                }\n                lastFont = font;\n                lastFontSize = fontSize;\n                lastIndex = index;\n            }\n            index += char.length;\n        }\n    }\n    if (lastIndex < string.length) {\n        const fontSize = getFontSize((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs));\n        res.push({\n            start: lastIndex,\n            end: string.length,\n            attributes: {\n                font: [lastFont],\n                scale: fontSize / lastFont.unitsPerEm,\n            },\n        });\n    }\n    return { string, runs: res };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/textkit/lib/textkit.js\n");

/***/ })

};
;